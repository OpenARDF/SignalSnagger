
SignalSnagger.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000033c  00804000  0000abb8  0000ac6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000abb8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000047c  0080433c  0080433c  0000afa8  2**0
                  ALLOC
  3 .eeprom       00000112  00810000  00810000  0000afa8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  0000b0ba  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000b118  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000b90  00000000  00000000  0000b158  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00018633  00000000  00000000  0000bce8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00006c65  00000000  00000000  0002431b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000a63b  00000000  00000000  0002af80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002424  00000000  00000000  000355bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00007698  00000000  00000000  000379e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000e5be  00000000  00000000  0003f078  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000e58  00000000  00000000  0004d636  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5b 01 	jmp	0x2b6	; 0x2b6 <__dtors_end>
       4:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
       8:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
       c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      10:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      14:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      18:	0c 94 dc 0a 	jmp	0x15b8	; 0x15b8 <__vector_6>
      1c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      20:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      24:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      28:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      2c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      30:	0c 94 e2 0c 	jmp	0x19c4	; 0x19c4 <__vector_12>
      34:	0c 94 2e 48 	jmp	0x905c	; 0x905c <__vector_13>
      38:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      3c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      40:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      44:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      48:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      4c:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__vector_19>
      50:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__vector_20>
      54:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      58:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__vector_22>
      5c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      60:	0c 94 28 26 	jmp	0x4c50	; 0x4c50 <__vector_24>
      64:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      68:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      6c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      70:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      74:	0c 94 ff 11 	jmp	0x23fe	; 0x23fe <__vector_29>
      78:	0c 94 ec 47 	jmp	0x8fd8	; 0x8fd8 <__vector_30>
      7c:	0c 94 1b 0a 	jmp	0x1436	; 0x1436 <__vector_31>
      80:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__vector_32>
      84:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      88:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      8c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      90:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      94:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      98:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      9c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      a0:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      a4:	0c 94 aa 36 	jmp	0x6d54	; 0x6d54 <__vector_41>
      a8:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      ac:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      b0:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      b4:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      b8:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      bc:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      c0:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      c4:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      c8:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      cc:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      d0:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      d4:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      d8:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>
      dc:	0c 94 e9 09 	jmp	0x13d2	; 0x13d2 <__vector_55>
      e0:	0c 94 ef 07 	jmp	0xfde	; 0xfde <__vector_56>
      e4:	0c 94 85 01 	jmp	0x30a	; 0x30a <__bad_interrupt>

000000e8 <__trampolines_end>:
      e8:	00 40       	sbci	r16, 0x00	; 0
      ea:	7a 10       	cpse	r7, r10
      ec:	f3 5a       	subi	r31, 0xA3	; 163
      ee:	00 a0       	ldd	r0, Z+32	; 0x20
      f0:	72 4e       	sbci	r23, 0xE2	; 226
      f2:	18 09       	sbc	r17, r8
      f4:	00 10       	cpse	r0, r0
      f6:	a5 d4       	rcall	.+2378   	; 0xa42 <strftime+0x5d6>
      f8:	e8 00       	.word	0x00e8	; ????
      fa:	00 e8       	ldi	r16, 0x80	; 128
      fc:	76 48       	sbci	r23, 0x86	; 134
      fe:	17 00       	.word	0x0017	; ????
     100:	00 e4       	ldi	r16, 0x40	; 64
     102:	0b 54       	subi	r16, 0x4B	; 75
     104:	02 00       	.word	0x0002	; ????
     106:	00 ca       	rjmp	.-3072   	; 0xfffff508 <__eeprom_end+0xff7ef3f6>
     108:	9a 3b       	cpi	r25, 0xBA	; 186
     10a:	00 00       	nop
     10c:	00 e1       	ldi	r16, 0x10	; 16
     10e:	f5 05       	cpc	r31, r5
     110:	00 00       	nop
     112:	80 96       	adiw	r24, 0x20	; 32
     114:	98 00       	.word	0x0098	; ????
     116:	00 00       	nop
     118:	40 42       	sbci	r20, 0x20	; 32
     11a:	0f 00       	.word	0x000f	; ????
     11c:	00 00       	nop
     11e:	a0 86       	std	Z+8, r10	; 0x08
     120:	01 00       	.word	0x0001	; ????
     122:	00 00       	nop
     124:	10 27       	eor	r17, r16
     126:	00 00       	nop
     128:	00 00       	nop
     12a:	e8 03       	fmulsu	r22, r16
     12c:	00 00       	nop
     12e:	00 00       	nop
     130:	64 00       	.word	0x0064	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	0a 00       	.word	0x000a	; ????
     138:	00 00       	nop
     13a:	00 00       	nop
     13c:	01 00       	.word	0x0001	; ????
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	2c 76       	andi	r18, 0x6C	; 108
     144:	d8 88       	ldd	r13, Y+16	; 0x10
     146:	dc 67       	ori	r29, 0x7C	; 124
     148:	4f 08       	sbc	r4, r15
     14a:	23 df       	rcall	.-442    	; 0xffffff92 <__eeprom_end+0xff7efe80>
     14c:	c1 df       	rcall	.-126    	; 0xd0 <__SREG__+0x91>
     14e:	ae 59       	subi	r26, 0x9E	; 158
     150:	e1 b1       	in	r30, 0x01	; 1
     152:	b7 96       	adiw	r30, 0x27	; 39
     154:	e5 e3       	ldi	r30, 0x35	; 53
     156:	e4 53       	subi	r30, 0x34	; 52
     158:	c6 3a       	cpi	r28, 0xA6	; 166
     15a:	e6 51       	subi	r30, 0x16	; 22
     15c:	99 76       	andi	r25, 0x69	; 105
     15e:	96 e8       	ldi	r25, 0x86	; 134
     160:	e6 c2       	rjmp	.+1484   	; 0x72e <strftime+0x2c2>
     162:	84 26       	eor	r8, r20
     164:	eb 89       	ldd	r30, Y+19	; 0x13
     166:	8c 9b       	sbis	0x11, 4	; 17
     168:	62 ed       	ldi	r22, 0xD2	; 210
     16a:	40 7c       	andi	r20, 0xC0	; 192
     16c:	6f fc       	.word	0xfc6f	; ????
     16e:	ef bc       	out	0x2f, r14	; 47
     170:	9c 9f       	mul	r25, r28
     172:	40 f2       	brcs	.-112    	; 0x104 <__trampolines_end+0x1c>
     174:	ba a5       	ldd	r27, Y+42	; 0x2a
     176:	6f a5       	ldd	r22, Y+47	; 0x2f
     178:	f4 90       	lpm	r15, Z
     17a:	05 5a       	subi	r16, 0xA5	; 165
     17c:	2a f7       	brpl	.-54     	; 0x148 <__trampolines_end+0x60>
     17e:	5c 93       	st	X, r21
     180:	6b 6c       	ori	r22, 0xCB	; 203
     182:	f9 67       	ori	r31, 0x79	; 121
     184:	6d c1       	rjmp	.+730    	; 0x460 <pgm_copystring+0x4a>
     186:	1b fc       	.word	0xfc1b	; ????
     188:	e0 e4       	ldi	r30, 0x40	; 64
     18a:	0d 47       	sbci	r16, 0x7D	; 125
     18c:	fe f5       	brtc	.+126    	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
     18e:	20 e6       	ldi	r18, 0x60	; 96
     190:	b5 00       	.word	0x00b5	; ????
     192:	d0 ed       	ldi	r29, 0xD0	; 208
     194:	90 2e       	mov	r9, r16
     196:	03 00       	.word	0x0003	; ????
     198:	94 35       	cpi	r25, 0x54	; 84
     19a:	77 05       	cpc	r23, r7
     19c:	00 80       	ld	r0, Z
     19e:	84 1e       	adc	r8, r20
     1a0:	08 00       	.word	0x0008	; ????
     1a2:	00 20       	and	r0, r0
     1a4:	4e 0a       	sbc	r4, r30
     1a6:	00 00       	nop
     1a8:	00 c8       	rjmp	.-4096   	; 0xfffff1aa <__eeprom_end+0xff7ef098>
     1aa:	0c 33       	cpi	r16, 0x3C	; 60
     1ac:	33 33       	cpi	r19, 0x33	; 51
     1ae:	33 0f       	add	r19, r19
     1b0:	98 6e       	ori	r25, 0xE8	; 232
     1b2:	12 83       	std	Z+2, r17	; 0x02
     1b4:	11 41       	sbci	r17, 0x11	; 17
     1b6:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1b8:	21 14       	cp	r2, r1
     1ba:	89 3b       	cpi	r24, 0xB9	; 185
     1bc:	e6 55       	subi	r30, 0x56	; 86
     1be:	16 cf       	rjmp	.-468    	; 0xffffffec <__eeprom_end+0xff7efeda>
     1c0:	fe e6       	ldi	r31, 0x6E	; 110
     1c2:	db 18       	sub	r13, r11
     1c4:	d1 84       	ldd	r13, Z+9	; 0x09
     1c6:	4b 38       	cpi	r20, 0x8B	; 139
     1c8:	1b f7       	brvc	.-58     	; 0x190 <__trampolines_end+0xa8>
     1ca:	7c 1d       	adc	r23, r12
     1cc:	90 1d       	adc	r25, r0
     1ce:	a4 bb       	out	0x14, r26	; 20
     1d0:	e4 24       	eor	r14, r4
     1d2:	20 32       	cpi	r18, 0x20	; 32
     1d4:	84 72       	andi	r24, 0x24	; 36
     1d6:	5e 22       	and	r5, r30
     1d8:	81 00       	.word	0x0081	; ????
     1da:	c9 f1       	breq	.+114    	; 0x24e <strfwkdays+0x15>
     1dc:	24 ec       	ldi	r18, 0xC4	; 196
     1de:	a1 e5       	ldi	r26, 0x51	; 81
     1e0:	3d 27       	eor	r19, r29

000001e2 <strfmonths>:
     1e2:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     1f2:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     202:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     212:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     222:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     232:	65 6d 62 65 72 20 00                                ember .

00000239 <strfwkdays>:
     239:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     249:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     259:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     269:	53 61 74 75 72 64 61 79 20 00                       Saturday .

00000273 <ascdays>:
     273:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     283:	72 69 53 61 74 00                                   riSat.

00000289 <ascmonths>:
     289:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     299:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     2a9:	76 44 65 63 00                                      vDec.

000002ae <__ctors_start>:
     2ae:	ea 24       	eor	r14, r10
     2b0:	59 26       	eor	r5, r25

000002b2 <__ctors_end>:
     2b2:	f9 24       	eor	r15, r9
     2b4:	6a 26       	eor	r6, r26

000002b6 <__dtors_end>:
     2b6:	11 24       	eor	r1, r1
     2b8:	1f be       	out	0x3f, r1	; 63
     2ba:	cf ef       	ldi	r28, 0xFF	; 255
     2bc:	cd bf       	out	0x3d, r28	; 61
     2be:	df e7       	ldi	r29, 0x7F	; 127
     2c0:	de bf       	out	0x3e, r29	; 62

000002c2 <__do_copy_data>:
     2c2:	13 e4       	ldi	r17, 0x43	; 67
     2c4:	a0 e0       	ldi	r26, 0x00	; 0
     2c6:	b0 e4       	ldi	r27, 0x40	; 64
     2c8:	e8 eb       	ldi	r30, 0xB8	; 184
     2ca:	fb ea       	ldi	r31, 0xAB	; 171
     2cc:	00 e0       	ldi	r16, 0x00	; 0
     2ce:	0b bf       	out	0x3b, r16	; 59
     2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <__do_copy_data+0x14>
     2d2:	07 90       	elpm	r0, Z+
     2d4:	0d 92       	st	X+, r0
     2d6:	ac 33       	cpi	r26, 0x3C	; 60
     2d8:	b1 07       	cpc	r27, r17
     2da:	d9 f7       	brne	.-10     	; 0x2d2 <__do_copy_data+0x10>

000002dc <__do_clear_bss>:
     2dc:	27 e4       	ldi	r18, 0x47	; 71
     2de:	ac e3       	ldi	r26, 0x3C	; 60
     2e0:	b3 e4       	ldi	r27, 0x43	; 67
     2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <.do_clear_bss_start>

000002e4 <.do_clear_bss_loop>:
     2e4:	1d 92       	st	X+, r1

000002e6 <.do_clear_bss_start>:
     2e6:	a8 3b       	cpi	r26, 0xB8	; 184
     2e8:	b2 07       	cpc	r27, r18
     2ea:	e1 f7       	brne	.-8      	; 0x2e4 <.do_clear_bss_loop>

000002ec <__do_global_ctors>:
     2ec:	11 e0       	ldi	r17, 0x01	; 1
     2ee:	c9 e5       	ldi	r28, 0x59	; 89
     2f0:	d1 e0       	ldi	r29, 0x01	; 1
     2f2:	04 c0       	rjmp	.+8      	; 0x2fc <__do_global_ctors+0x10>
     2f4:	21 97       	sbiw	r28, 0x01	; 1
     2f6:	fe 01       	movw	r30, r28
     2f8:	0e 94 53 4e 	call	0x9ca6	; 0x9ca6 <__tablejump2__>
     2fc:	c7 35       	cpi	r28, 0x57	; 87
     2fe:	d1 07       	cpc	r29, r17
     300:	c9 f7       	brne	.-14     	; 0x2f4 <__do_global_ctors+0x8>
     302:	0e 94 38 12 	call	0x2470	; 0x2470 <main>
     306:	0c 94 cf 55 	jmp	0xab9e	; 0xab9e <__do_global_dtors>

0000030a <__bad_interrupt>:
     30a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000030e <is_leap_year>:
     30e:	9c 01       	movw	r18, r24
     310:	23 70       	andi	r18, 0x03	; 3
     312:	33 27       	eor	r19, r19
     314:	23 2b       	or	r18, r19
     316:	59 f4       	brne	.+22     	; 0x32e <is_leap_year+0x20>
     318:	64 e6       	ldi	r22, 0x64	; 100
     31a:	70 e0       	ldi	r23, 0x00	; 0
     31c:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     320:	89 2b       	or	r24, r25
     322:	39 f4       	brne	.+14     	; 0x332 <is_leap_year+0x24>
     324:	63 70       	andi	r22, 0x03	; 3
     326:	77 27       	eor	r23, r23
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	67 2b       	or	r22, r23
     32c:	19 f0       	breq	.+6      	; 0x334 <is_leap_year+0x26>
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	08 95       	ret
     332:	81 e0       	ldi	r24, 0x01	; 1
     334:	08 95       	ret

00000336 <localtime>:
     336:	66 ea       	ldi	r22, 0xA6	; 166
     338:	77 e4       	ldi	r23, 0x47	; 71
     33a:	0e 94 a2 01 	call	0x344	; 0x344 <localtime_r>
     33e:	86 ea       	ldi	r24, 0xA6	; 166
     340:	97 e4       	ldi	r25, 0x47	; 71
     342:	08 95       	ret

00000344 <localtime_r>:
     344:	cf 92       	push	r12
     346:	df 92       	push	r13
     348:	ef 92       	push	r14
     34a:	ff 92       	push	r15
     34c:	0f 93       	push	r16
     34e:	1f 93       	push	r17
     350:	cf 93       	push	r28
     352:	df 93       	push	r29
     354:	00 d0       	rcall	.+0      	; 0x356 <localtime_r+0x12>
     356:	00 d0       	rcall	.+0      	; 0x358 <localtime_r+0x14>
     358:	cd b7       	in	r28, 0x3d	; 61
     35a:	de b7       	in	r29, 0x3e	; 62
     35c:	6c 01       	movw	r12, r24
     35e:	7b 01       	movw	r14, r22
     360:	e0 91 b6 47 	lds	r30, 0x47B6	; 0x8047b6 <__dst_ptr>
     364:	f0 91 b7 47 	lds	r31, 0x47B7	; 0x8047b7 <__dst_ptr+0x1>
     368:	0f ef       	ldi	r16, 0xFF	; 255
     36a:	1f ef       	ldi	r17, 0xFF	; 255
     36c:	30 97       	sbiw	r30, 0x00	; 0
     36e:	21 f0       	breq	.+8      	; 0x378 <localtime_r+0x34>
     370:	62 eb       	ldi	r22, 0xB2	; 178
     372:	77 e4       	ldi	r23, 0x47	; 71
     374:	09 95       	icall
     376:	8c 01       	movw	r16, r24
     378:	f6 01       	movw	r30, r12
     37a:	80 81       	ld	r24, Z
     37c:	91 81       	ldd	r25, Z+1	; 0x01
     37e:	a2 81       	ldd	r26, Z+2	; 0x02
     380:	b3 81       	ldd	r27, Z+3	; 0x03
     382:	40 91 b2 47 	lds	r20, 0x47B2	; 0x8047b2 <__utc_offset>
     386:	50 91 b3 47 	lds	r21, 0x47B3	; 0x8047b3 <__utc_offset+0x1>
     38a:	60 91 b4 47 	lds	r22, 0x47B4	; 0x8047b4 <__utc_offset+0x2>
     38e:	70 91 b5 47 	lds	r23, 0x47B5	; 0x8047b5 <__utc_offset+0x3>
     392:	84 0f       	add	r24, r20
     394:	95 1f       	adc	r25, r21
     396:	a6 1f       	adc	r26, r22
     398:	b7 1f       	adc	r27, r23
     39a:	10 16       	cp	r1, r16
     39c:	11 06       	cpc	r1, r17
     39e:	c4 f0       	brlt	.+48     	; 0x3d0 <localtime_r+0x8c>
     3a0:	89 83       	std	Y+1, r24	; 0x01
     3a2:	9a 83       	std	Y+2, r25	; 0x02
     3a4:	ab 83       	std	Y+3, r26	; 0x03
     3a6:	bc 83       	std	Y+4, r27	; 0x04
     3a8:	b7 01       	movw	r22, r14
     3aa:	ce 01       	movw	r24, r28
     3ac:	01 96       	adiw	r24, 0x01	; 1
     3ae:	0e 94 01 06 	call	0xc02	; 0xc02 <gmtime_r>
     3b2:	f7 01       	movw	r30, r14
     3b4:	02 87       	std	Z+10, r16	; 0x0a
     3b6:	13 87       	std	Z+11, r17	; 0x0b
     3b8:	24 96       	adiw	r28, 0x04	; 4
     3ba:	cd bf       	out	0x3d, r28	; 61
     3bc:	de bf       	out	0x3e, r29	; 62
     3be:	df 91       	pop	r29
     3c0:	cf 91       	pop	r28
     3c2:	1f 91       	pop	r17
     3c4:	0f 91       	pop	r16
     3c6:	ff 90       	pop	r15
     3c8:	ef 90       	pop	r14
     3ca:	df 90       	pop	r13
     3cc:	cf 90       	pop	r12
     3ce:	08 95       	ret
     3d0:	a8 01       	movw	r20, r16
     3d2:	01 2e       	mov	r0, r17
     3d4:	00 0c       	add	r0, r0
     3d6:	66 0b       	sbc	r22, r22
     3d8:	77 0b       	sbc	r23, r23
     3da:	84 0f       	add	r24, r20
     3dc:	95 1f       	adc	r25, r21
     3de:	a6 1f       	adc	r26, r22
     3e0:	b7 1f       	adc	r27, r23
     3e2:	de cf       	rjmp	.-68     	; 0x3a0 <localtime_r+0x5c>

000003e4 <month_length>:
     3e4:	62 30       	cpi	r22, 0x02	; 2
     3e6:	21 f4       	brne	.+8      	; 0x3f0 <month_length+0xc>
     3e8:	0e 94 87 01 	call	0x30e	; 0x30e <is_leap_year>
     3ec:	84 5e       	subi	r24, 0xE4	; 228
     3ee:	08 95       	ret
     3f0:	68 30       	cpi	r22, 0x08	; 8
     3f2:	08 f0       	brcs	.+2      	; 0x3f6 <month_length+0x12>
     3f4:	6f 5f       	subi	r22, 0xFF	; 255
     3f6:	61 70       	andi	r22, 0x01	; 1
     3f8:	8e e1       	ldi	r24, 0x1E	; 30
     3fa:	86 0f       	add	r24, r22
     3fc:	08 95       	ret

000003fe <set_system_time>:
     3fe:	0f b6       	in	r0, 0x3f	; 63
     400:	f8 94       	cli
     402:	60 93 a2 47 	sts	0x47A2, r22	; 0x8047a2 <__system_time>
     406:	70 93 a3 47 	sts	0x47A3, r23	; 0x8047a3 <__system_time+0x1>
     40a:	80 93 a4 47 	sts	0x47A4, r24	; 0x8047a4 <__system_time+0x2>
     40e:	90 93 a5 47 	sts	0x47A5, r25	; 0x8047a5 <__system_time+0x3>
     412:	0f be       	out	0x3f, r0	; 63
     414:	08 95       	ret

00000416 <pgm_copystring>:
     416:	cf 92       	push	r12
     418:	df 92       	push	r13
     41a:	ef 92       	push	r14
     41c:	0f 93       	push	r16
     41e:	6b 01       	movw	r12, r22
     420:	e8 2e       	mov	r14, r24
     422:	84 2f       	mov	r24, r20
     424:	f6 01       	movw	r30, r12
     426:	5e 2d       	mov	r21, r14
     428:	0e 94 bc 55 	call	0xab78	; 0xab78 <__xload_1>
     42c:	9f ef       	ldi	r25, 0xFF	; 255
     42e:	c9 1a       	sub	r12, r25
     430:	d9 0a       	sbc	r13, r25
     432:	e9 0a       	sbc	r14, r25
     434:	81 11       	cpse	r24, r1
     436:	0b c0       	rjmp	.+22     	; 0x44e <pgm_copystring+0x38>
     438:	d9 01       	movw	r26, r18
     43a:	60 32       	cpi	r22, 0x20	; 32
     43c:	11 f0       	breq	.+4      	; 0x442 <pgm_copystring+0x2c>
     43e:	80 13       	cpse	r24, r16
     440:	0a c0       	rjmp	.+20     	; 0x456 <pgm_copystring+0x40>
     442:	1c 92       	st	X, r1
     444:	0f 91       	pop	r16
     446:	ef 90       	pop	r14
     448:	df 90       	pop	r13
     44a:	cf 90       	pop	r12
     44c:	08 95       	ret
     44e:	60 32       	cpi	r22, 0x20	; 32
     450:	49 f7       	brne	.-46     	; 0x424 <pgm_copystring+0xe>
     452:	81 50       	subi	r24, 0x01	; 1
     454:	e7 cf       	rjmp	.-50     	; 0x424 <pgm_copystring+0xe>
     456:	6d 93       	st	X+, r22
     458:	8f 5f       	subi	r24, 0xFF	; 255
     45a:	f6 01       	movw	r30, r12
     45c:	5e 2d       	mov	r21, r14
     45e:	0e 94 bc 55 	call	0xab78	; 0xab78 <__xload_1>
     462:	9f ef       	ldi	r25, 0xFF	; 255
     464:	c9 1a       	sub	r12, r25
     466:	d9 0a       	sbc	r13, r25
     468:	e9 0a       	sbc	r14, r25
     46a:	e7 cf       	rjmp	.-50     	; 0x43a <pgm_copystring+0x24>

0000046c <strftime>:
     46c:	2f 92       	push	r2
     46e:	3f 92       	push	r3
     470:	4f 92       	push	r4
     472:	5f 92       	push	r5
     474:	6f 92       	push	r6
     476:	7f 92       	push	r7
     478:	8f 92       	push	r8
     47a:	9f 92       	push	r9
     47c:	af 92       	push	r10
     47e:	bf 92       	push	r11
     480:	cf 92       	push	r12
     482:	df 92       	push	r13
     484:	ef 92       	push	r14
     486:	ff 92       	push	r15
     488:	0f 93       	push	r16
     48a:	1f 93       	push	r17
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	cd b7       	in	r28, 0x3d	; 61
     492:	de b7       	in	r29, 0x3e	; 62
     494:	a2 97       	sbiw	r28, 0x22	; 34
     496:	cd bf       	out	0x3d, r28	; 61
     498:	de bf       	out	0x3e, r29	; 62
     49a:	4c 01       	movw	r8, r24
     49c:	69 a3       	std	Y+33, r22	; 0x21
     49e:	7a a3       	std	Y+34, r23	; 0x22
     4a0:	fa 01       	movw	r30, r20
     4a2:	79 01       	movw	r14, r18
     4a4:	71 2c       	mov	r7, r1
     4a6:	61 2c       	mov	r6, r1
     4a8:	9e 01       	movw	r18, r28
     4aa:	2f 5f       	subi	r18, 0xFF	; 255
     4ac:	3f 4f       	sbci	r19, 0xFF	; 255
     4ae:	69 01       	movw	r12, r18
     4b0:	84 e6       	ldi	r24, 0x64	; 100
     4b2:	48 2e       	mov	r4, r24
     4b4:	51 2c       	mov	r5, r1
     4b6:	9a ed       	ldi	r25, 0xDA	; 218
     4b8:	a9 2e       	mov	r10, r25
     4ba:	92 e4       	ldi	r25, 0x42	; 66
     4bc:	b9 2e       	mov	r11, r25
     4be:	29 a1       	ldd	r18, Y+33	; 0x21
     4c0:	3a a1       	ldd	r19, Y+34	; 0x22
     4c2:	62 16       	cp	r6, r18
     4c4:	73 06       	cpc	r7, r19
     4c6:	18 f0       	brcs	.+6      	; 0x4ce <strftime+0x62>
     4c8:	d4 01       	movw	r26, r8
     4ca:	1c 92       	st	X, r1
     4cc:	b2 c2       	rjmp	.+1380   	; 0xa32 <strftime+0x5c6>
     4ce:	1f 01       	movw	r2, r30
     4d0:	3f ef       	ldi	r19, 0xFF	; 255
     4d2:	23 1a       	sub	r2, r19
     4d4:	33 0a       	sbc	r3, r19
     4d6:	80 81       	ld	r24, Z
     4d8:	85 32       	cpi	r24, 0x25	; 37
     4da:	09 f0       	breq	.+2      	; 0x4de <strftime+0x72>
     4dc:	a2 c2       	rjmp	.+1348   	; 0xa22 <strftime+0x5b6>
     4de:	11 81       	ldd	r17, Z+1	; 0x01
     4e0:	1f 01       	movw	r2, r30
     4e2:	15 34       	cpi	r17, 0x45	; 69
     4e4:	f9 f0       	breq	.+62     	; 0x524 <strftime+0xb8>
     4e6:	1f 34       	cpi	r17, 0x4F	; 79
     4e8:	e9 f0       	breq	.+58     	; 0x524 <strftime+0xb8>
     4ea:	42 e0       	ldi	r20, 0x02	; 2
     4ec:	24 0e       	add	r2, r20
     4ee:	31 1c       	adc	r3, r1
     4f0:	19 35       	cpi	r17, 0x59	; 89
     4f2:	09 f4       	brne	.+2      	; 0x4f6 <strftime+0x8a>
     4f4:	8c c2       	rjmp	.+1304   	; 0xa0e <strftime+0x5a2>
     4f6:	0c f0       	brlt	.+2      	; 0x4fa <strftime+0x8e>
     4f8:	81 c0       	rjmp	.+258    	; 0x5fc <strftime+0x190>
     4fa:	19 34       	cpi	r17, 0x49	; 73
     4fc:	09 f4       	brne	.+2      	; 0x500 <strftime+0x94>
     4fe:	c9 c1       	rjmp	.+914    	; 0x892 <strftime+0x426>
     500:	0c f0       	brlt	.+2      	; 0x504 <strftime+0x98>
     502:	45 c0       	rjmp	.+138    	; 0x58e <strftime+0x122>
     504:	13 34       	cpi	r17, 0x43	; 67
     506:	09 f4       	brne	.+2      	; 0x50a <strftime+0x9e>
     508:	5f c1       	rjmp	.+702    	; 0x7c8 <strftime+0x35c>
     50a:	8c f4       	brge	.+34     	; 0x52e <strftime+0xc2>
     50c:	11 34       	cpi	r17, 0x41	; 65
     50e:	09 f4       	brne	.+2      	; 0x512 <strftime+0xa6>
     510:	3c c1       	rjmp	.+632    	; 0x78a <strftime+0x31e>
     512:	0c f0       	brlt	.+2      	; 0x516 <strftime+0xaa>
     514:	48 c1       	rjmp	.+656    	; 0x7a6 <strftime+0x33a>
     516:	15 32       	cpi	r17, 0x25	; 37
     518:	09 f4       	brne	.+2      	; 0x51c <strftime+0xb0>
     51a:	33 c1       	rjmp	.+614    	; 0x782 <strftime+0x316>
     51c:	8f e3       	ldi	r24, 0x3F	; 63
     51e:	89 83       	std	Y+1, r24	; 0x01
     520:	1a 82       	std	Y+2, r1	; 0x02
     522:	30 c1       	rjmp	.+608    	; 0x784 <strftime+0x318>
     524:	53 e0       	ldi	r21, 0x03	; 3
     526:	25 0e       	add	r2, r21
     528:	31 1c       	adc	r3, r1
     52a:	12 81       	ldd	r17, Z+2	; 0x02
     52c:	e1 cf       	rjmp	.-62     	; 0x4f0 <strftime+0x84>
     52e:	16 34       	cpi	r17, 0x46	; 70
     530:	09 f4       	brne	.+2      	; 0x534 <strftime+0xc8>
     532:	64 c1       	rjmp	.+712    	; 0x7fc <strftime+0x390>
     534:	1c f5       	brge	.+70     	; 0x57c <strftime+0x110>
     536:	14 34       	cpi	r17, 0x44	; 68
     538:	89 f7       	brne	.-30     	; 0x51c <strftime+0xb0>
     53a:	f7 01       	movw	r30, r14
     53c:	86 81       	ldd	r24, Z+6	; 0x06
     53e:	97 81       	ldd	r25, Z+7	; 0x07
     540:	b2 01       	movw	r22, r4
     542:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     546:	9f 93       	push	r25
     548:	8f 93       	push	r24
     54a:	83 81       	ldd	r24, Z+3	; 0x03
     54c:	28 2f       	mov	r18, r24
     54e:	08 2e       	mov	r0, r24
     550:	00 0c       	add	r0, r0
     552:	33 0b       	sbc	r19, r19
     554:	3f 93       	push	r19
     556:	8f 93       	push	r24
     558:	85 81       	ldd	r24, Z+5	; 0x05
     55a:	08 2e       	mov	r0, r24
     55c:	00 0c       	add	r0, r0
     55e:	99 0b       	sbc	r25, r25
     560:	01 96       	adiw	r24, 0x01	; 1
     562:	9f 93       	push	r25
     564:	8f 93       	push	r24
     566:	20 ed       	ldi	r18, 0xD0	; 208
     568:	32 e4       	ldi	r19, 0x42	; 66
     56a:	3f 93       	push	r19
     56c:	2f 93       	push	r18
     56e:	df 92       	push	r13
     570:	cf 92       	push	r12
     572:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
     576:	cd bf       	out	0x3d, r28	; 61
     578:	de bf       	out	0x3e, r29	; 62
     57a:	5c c0       	rjmp	.+184    	; 0x634 <strftime+0x1c8>
     57c:	17 34       	cpi	r17, 0x47	; 71
     57e:	09 f4       	brne	.+2      	; 0x582 <strftime+0x116>
     580:	5c c1       	rjmp	.+696    	; 0x83a <strftime+0x3ce>
     582:	18 34       	cpi	r17, 0x48	; 72
     584:	59 f6       	brne	.-106    	; 0x51c <strftime+0xb0>
     586:	d7 01       	movw	r26, r14
     588:	12 96       	adiw	r26, 0x02	; 2
     58a:	8c 91       	ld	r24, X
     58c:	30 c1       	rjmp	.+608    	; 0x7ee <strftime+0x382>
     58e:	14 35       	cpi	r17, 0x54	; 84
     590:	09 f4       	brne	.+2      	; 0x594 <strftime+0x128>
     592:	f2 c1       	rjmp	.+996    	; 0x978 <strftime+0x50c>
     594:	64 f4       	brge	.+24     	; 0x5ae <strftime+0x142>
     596:	12 35       	cpi	r17, 0x52	; 82
     598:	09 f4       	brne	.+2      	; 0x59c <strftime+0x130>
     59a:	d3 c1       	rjmp	.+934    	; 0x942 <strftime+0x4d6>
     59c:	0c f0       	brlt	.+2      	; 0x5a0 <strftime+0x134>
     59e:	e9 c1       	rjmp	.+978    	; 0x972 <strftime+0x506>
     5a0:	1d 34       	cpi	r17, 0x4D	; 77
     5a2:	09 f0       	breq	.+2      	; 0x5a6 <strftime+0x13a>
     5a4:	bb cf       	rjmp	.-138    	; 0x51c <strftime+0xb0>
     5a6:	d7 01       	movw	r26, r14
     5a8:	11 96       	adiw	r26, 0x01	; 1
     5aa:	8c 91       	ld	r24, X
     5ac:	20 c1       	rjmp	.+576    	; 0x7ee <strftime+0x382>
     5ae:	16 35       	cpi	r17, 0x56	; 86
     5b0:	09 f4       	brne	.+2      	; 0x5b4 <strftime+0x148>
     5b2:	10 c2       	rjmp	.+1056   	; 0x9d4 <strftime+0x568>
     5b4:	0c f4       	brge	.+2      	; 0x5b8 <strftime+0x14c>
     5b6:	08 c2       	rjmp	.+1040   	; 0x9c8 <strftime+0x55c>
     5b8:	17 35       	cpi	r17, 0x57	; 87
     5ba:	09 f4       	brne	.+2      	; 0x5be <strftime+0x152>
     5bc:	1e c2       	rjmp	.+1084   	; 0x9fa <strftime+0x58e>
     5be:	18 35       	cpi	r17, 0x58	; 88
     5c0:	09 f0       	breq	.+2      	; 0x5c4 <strftime+0x158>
     5c2:	ac cf       	rjmp	.-168    	; 0x51c <strftime+0xb0>
     5c4:	d7 01       	movw	r26, r14
     5c6:	8c 91       	ld	r24, X
     5c8:	28 2f       	mov	r18, r24
     5ca:	08 2e       	mov	r0, r24
     5cc:	00 0c       	add	r0, r0
     5ce:	33 0b       	sbc	r19, r19
     5d0:	3f 93       	push	r19
     5d2:	8f 93       	push	r24
     5d4:	11 96       	adiw	r26, 0x01	; 1
     5d6:	8c 91       	ld	r24, X
     5d8:	11 97       	sbiw	r26, 0x01	; 1
     5da:	28 2f       	mov	r18, r24
     5dc:	08 2e       	mov	r0, r24
     5de:	00 0c       	add	r0, r0
     5e0:	33 0b       	sbc	r19, r19
     5e2:	3f 93       	push	r19
     5e4:	8f 93       	push	r24
     5e6:	12 96       	adiw	r26, 0x02	; 2
     5e8:	8c 91       	ld	r24, X
     5ea:	28 2f       	mov	r18, r24
     5ec:	08 2e       	mov	r0, r24
     5ee:	00 0c       	add	r0, r0
     5f0:	33 0b       	sbc	r19, r19
     5f2:	3f 93       	push	r19
     5f4:	8f 93       	push	r24
     5f6:	82 e2       	ldi	r24, 0x22	; 34
     5f8:	93 e4       	ldi	r25, 0x43	; 67
     5fa:	1c c1       	rjmp	.+568    	; 0x834 <strftime+0x3c8>
     5fc:	1d 36       	cpi	r17, 0x6D	; 109
     5fe:	09 f4       	brne	.+2      	; 0x602 <strftime+0x196>
     600:	59 c1       	rjmp	.+690    	; 0x8b4 <strftime+0x448>
     602:	0c f0       	brlt	.+2      	; 0x606 <strftime+0x19a>
     604:	56 c0       	rjmp	.+172    	; 0x6b2 <strftime+0x246>
     606:	14 36       	cpi	r17, 0x64	; 100
     608:	09 f4       	brne	.+2      	; 0x60c <strftime+0x1a0>
     60a:	ee c0       	rjmp	.+476    	; 0x7e8 <strftime+0x37c>
     60c:	74 f5       	brge	.+92     	; 0x66a <strftime+0x1fe>
     60e:	12 36       	cpi	r17, 0x62	; 98
     610:	09 f4       	brne	.+2      	; 0x614 <strftime+0x1a8>
     612:	c0 c0       	rjmp	.+384    	; 0x794 <strftime+0x328>
     614:	0c f0       	brlt	.+2      	; 0x618 <strftime+0x1ac>
     616:	cc c0       	rjmp	.+408    	; 0x7b0 <strftime+0x344>
     618:	11 36       	cpi	r17, 0x61	; 97
     61a:	09 f0       	breq	.+2      	; 0x61e <strftime+0x1b2>
     61c:	7f cf       	rjmp	.-258    	; 0x51c <strftime+0xb0>
     61e:	03 e0       	ldi	r16, 0x03	; 3
     620:	96 01       	movw	r18, r12
     622:	d7 01       	movw	r26, r14
     624:	14 96       	adiw	r26, 0x04	; 4
     626:	4c 91       	ld	r20, X
     628:	69 e3       	ldi	r22, 0x39	; 57
     62a:	72 e0       	ldi	r23, 0x02	; 2
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	0e 94 0b 02 	call	0x416	; 0x416 <pgm_copystring>
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	93 01       	movw	r18, r6
     636:	28 0f       	add	r18, r24
     638:	39 1f       	adc	r19, r25
     63a:	49 a1       	ldd	r20, Y+33	; 0x21
     63c:	5a a1       	ldd	r21, Y+34	; 0x22
     63e:	d4 01       	movw	r26, r8
     640:	24 17       	cp	r18, r20
     642:	35 07       	cpc	r19, r21
     644:	08 f0       	brcs	.+2      	; 0x648 <strftime+0x1dc>
     646:	41 cf       	rjmp	.-382    	; 0x4ca <strftime+0x5e>
     648:	f6 01       	movw	r30, r12
     64a:	af 01       	movw	r20, r30
     64c:	4c 19       	sub	r20, r12
     64e:	5d 09       	sbc	r21, r13
     650:	48 17       	cp	r20, r24
     652:	59 07       	cpc	r21, r25
     654:	0c f4       	brge	.+2      	; 0x658 <strftime+0x1ec>
     656:	e2 c1       	rjmp	.+964    	; 0xa1c <strftime+0x5b0>
     658:	97 ff       	sbrs	r25, 7
     65a:	02 c0       	rjmp	.+4      	; 0x660 <strftime+0x1f4>
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	88 0e       	add	r8, r24
     662:	99 1e       	adc	r9, r25
     664:	39 01       	movw	r6, r18
     666:	f1 01       	movw	r30, r2
     668:	2a cf       	rjmp	.-428    	; 0x4be <strftime+0x52>
     66a:	17 36       	cpi	r17, 0x67	; 103
     66c:	09 f4       	brne	.+2      	; 0x670 <strftime+0x204>
     66e:	e5 c0       	rjmp	.+458    	; 0x83a <strftime+0x3ce>
     670:	84 f4       	brge	.+32     	; 0x692 <strftime+0x226>
     672:	15 36       	cpi	r17, 0x65	; 101
     674:	09 f0       	breq	.+2      	; 0x678 <strftime+0x20c>
     676:	52 cf       	rjmp	.-348    	; 0x51c <strftime+0xb0>
     678:	f7 01       	movw	r30, r14
     67a:	83 81       	ldd	r24, Z+3	; 0x03
     67c:	28 2f       	mov	r18, r24
     67e:	08 2e       	mov	r0, r24
     680:	00 0c       	add	r0, r0
     682:	33 0b       	sbc	r19, r19
     684:	3f 93       	push	r19
     686:	8f 93       	push	r24
     688:	8f ed       	ldi	r24, 0xDF	; 223
     68a:	92 e4       	ldi	r25, 0x42	; 66
     68c:	9f 93       	push	r25
     68e:	8f 93       	push	r24
     690:	f5 c0       	rjmp	.+490    	; 0x87c <strftime+0x410>
     692:	18 36       	cpi	r17, 0x68	; 104
     694:	09 f4       	brne	.+2      	; 0x698 <strftime+0x22c>
     696:	7e c0       	rjmp	.+252    	; 0x794 <strftime+0x328>
     698:	1a 36       	cpi	r17, 0x6A	; 106
     69a:	09 f0       	breq	.+2      	; 0x69e <strftime+0x232>
     69c:	3f cf       	rjmp	.-386    	; 0x51c <strftime+0xb0>
     69e:	d7 01       	movw	r26, r14
     6a0:	18 96       	adiw	r26, 0x08	; 8
     6a2:	8d 91       	ld	r24, X+
     6a4:	9c 91       	ld	r25, X
     6a6:	01 96       	adiw	r24, 0x01	; 1
     6a8:	9f 93       	push	r25
     6aa:	8f 93       	push	r24
     6ac:	85 ef       	ldi	r24, 0xF5	; 245
     6ae:	92 e4       	ldi	r25, 0x42	; 66
     6b0:	ed cf       	rjmp	.-38     	; 0x68c <strftime+0x220>
     6b2:	15 37       	cpi	r17, 0x75	; 117
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <strftime+0x24c>
     6b6:	79 c1       	rjmp	.+754    	; 0x9aa <strftime+0x53e>
     6b8:	b4 f4       	brge	.+44     	; 0x6e6 <strftime+0x27a>
     6ba:	10 37       	cpi	r17, 0x70	; 112
     6bc:	09 f4       	brne	.+2      	; 0x6c0 <strftime+0x254>
     6be:	02 c1       	rjmp	.+516    	; 0x8c4 <strftime+0x458>
     6c0:	34 f4       	brge	.+12     	; 0x6ce <strftime+0x262>
     6c2:	1e 36       	cpi	r17, 0x6E	; 110
     6c4:	09 f0       	breq	.+2      	; 0x6c8 <strftime+0x25c>
     6c6:	2a cf       	rjmp	.-428    	; 0x51c <strftime+0xb0>
     6c8:	8a e0       	ldi	r24, 0x0A	; 10
     6ca:	89 83       	std	Y+1, r24	; 0x01
     6cc:	5b c0       	rjmp	.+182    	; 0x784 <strftime+0x318>
     6ce:	12 37       	cpi	r17, 0x72	; 114
     6d0:	09 f4       	brne	.+2      	; 0x6d4 <strftime+0x268>
     6d2:	06 c1       	rjmp	.+524    	; 0x8e0 <strftime+0x474>
     6d4:	14 37       	cpi	r17, 0x74	; 116
     6d6:	09 f0       	breq	.+2      	; 0x6da <strftime+0x26e>
     6d8:	21 cf       	rjmp	.-446    	; 0x51c <strftime+0xb0>
     6da:	6b e0       	ldi	r22, 0x0B	; 11
     6dc:	73 e4       	ldi	r23, 0x43	; 67
     6de:	c6 01       	movw	r24, r12
     6e0:	0e 94 fa 54 	call	0xa9f4	; 0xa9f4 <strcpy>
     6e4:	4f c0       	rjmp	.+158    	; 0x784 <strftime+0x318>
     6e6:	18 37       	cpi	r17, 0x78	; 120
     6e8:	09 f4       	brne	.+2      	; 0x6ec <strftime+0x280>
     6ea:	27 cf       	rjmp	.-434    	; 0x53a <strftime+0xce>
     6ec:	84 f4       	brge	.+32     	; 0x70e <strftime+0x2a2>
     6ee:	17 37       	cpi	r17, 0x77	; 119
     6f0:	09 f0       	breq	.+2      	; 0x6f4 <strftime+0x288>
     6f2:	14 cf       	rjmp	.-472    	; 0x51c <strftime+0xb0>
     6f4:	f7 01       	movw	r30, r14
     6f6:	84 81       	ldd	r24, Z+4	; 0x04
     6f8:	28 2f       	mov	r18, r24
     6fa:	08 2e       	mov	r0, r24
     6fc:	00 0c       	add	r0, r0
     6fe:	33 0b       	sbc	r19, r19
     700:	3f 93       	push	r19
     702:	8f 93       	push	r24
     704:	2f e1       	ldi	r18, 0x1F	; 31
     706:	33 e4       	ldi	r19, 0x43	; 67
     708:	3f 93       	push	r19
     70a:	2f 93       	push	r18
     70c:	b7 c0       	rjmp	.+366    	; 0x87c <strftime+0x410>
     70e:	19 37       	cpi	r17, 0x79	; 121
     710:	09 f4       	brne	.+2      	; 0x714 <strftime+0x2a8>
     712:	75 c1       	rjmp	.+746    	; 0x9fe <strftime+0x592>
     714:	1a 37       	cpi	r17, 0x7A	; 122
     716:	09 f0       	breq	.+2      	; 0x71a <strftime+0x2ae>
     718:	01 cf       	rjmp	.-510    	; 0x51c <strftime+0xb0>
     71a:	60 91 b2 47 	lds	r22, 0x47B2	; 0x8047b2 <__utc_offset>
     71e:	70 91 b3 47 	lds	r23, 0x47B3	; 0x8047b3 <__utc_offset+0x1>
     722:	80 91 b4 47 	lds	r24, 0x47B4	; 0x8047b4 <__utc_offset+0x2>
     726:	90 91 b5 47 	lds	r25, 0x47B5	; 0x8047b5 <__utc_offset+0x3>
     72a:	2c e3       	ldi	r18, 0x3C	; 60
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	0e 94 34 4e 	call	0x9c68	; 0x9c68 <__divmodsi4>
     736:	89 01       	movw	r16, r18
     738:	f9 01       	movw	r30, r18
     73a:	d7 01       	movw	r26, r14
     73c:	1a 96       	adiw	r26, 0x0a	; 10
     73e:	8d 91       	ld	r24, X+
     740:	9c 91       	ld	r25, X
     742:	6c e3       	ldi	r22, 0x3C	; 60
     744:	70 e0       	ldi	r23, 0x00	; 0
     746:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     74a:	16 16       	cp	r1, r22
     74c:	17 06       	cpc	r1, r23
     74e:	1c f4       	brge	.+6      	; 0x756 <strftime+0x2ea>
     750:	fb 01       	movw	r30, r22
     752:	e0 0f       	add	r30, r16
     754:	f1 1f       	adc	r31, r17
     756:	cf 01       	movw	r24, r30
     758:	6c e3       	ldi	r22, 0x3C	; 60
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     760:	97 ff       	sbrs	r25, 7
     762:	03 c0       	rjmp	.+6      	; 0x76a <strftime+0x2fe>
     764:	91 95       	neg	r25
     766:	81 95       	neg	r24
     768:	91 09       	sbc	r25, r1
     76a:	9f 93       	push	r25
     76c:	8f 93       	push	r24
     76e:	cf 01       	movw	r24, r30
     770:	6c e3       	ldi	r22, 0x3C	; 60
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     778:	7f 93       	push	r23
     77a:	6f 93       	push	r22
     77c:	81 e3       	ldi	r24, 0x31	; 49
     77e:	93 e4       	ldi	r25, 0x43	; 67
     780:	f1 c0       	rjmp	.+482    	; 0x964 <strftime+0x4f8>
     782:	19 83       	std	Y+1, r17	; 0x01
     784:	81 e0       	ldi	r24, 0x01	; 1
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	55 cf       	rjmp	.-342    	; 0x634 <strftime+0x1c8>
     78a:	0f ef       	ldi	r16, 0xFF	; 255
     78c:	96 01       	movw	r18, r12
     78e:	f7 01       	movw	r30, r14
     790:	44 81       	ldd	r20, Z+4	; 0x04
     792:	4a cf       	rjmp	.-364    	; 0x628 <strftime+0x1bc>
     794:	03 e0       	ldi	r16, 0x03	; 3
     796:	96 01       	movw	r18, r12
     798:	d7 01       	movw	r26, r14
     79a:	15 96       	adiw	r26, 0x05	; 5
     79c:	4c 91       	ld	r20, X
     79e:	62 ee       	ldi	r22, 0xE2	; 226
     7a0:	71 e0       	ldi	r23, 0x01	; 1
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	44 cf       	rjmp	.-376    	; 0x62e <strftime+0x1c2>
     7a6:	0f ef       	ldi	r16, 0xFF	; 255
     7a8:	96 01       	movw	r18, r12
     7aa:	f7 01       	movw	r30, r14
     7ac:	45 81       	ldd	r20, Z+5	; 0x05
     7ae:	f7 cf       	rjmp	.-18     	; 0x79e <strftime+0x332>
     7b0:	b6 01       	movw	r22, r12
     7b2:	c7 01       	movw	r24, r14
     7b4:	0e 94 7e 05 	call	0xafc	; 0xafc <asctime_r>
     7b8:	f6 01       	movw	r30, r12
     7ba:	cf 01       	movw	r24, r30
     7bc:	8c 19       	sub	r24, r12
     7be:	9d 09       	sbc	r25, r13
     7c0:	21 91       	ld	r18, Z+
     7c2:	21 11       	cpse	r18, r1
     7c4:	fa cf       	rjmp	.-12     	; 0x7ba <strftime+0x34e>
     7c6:	36 cf       	rjmp	.-404    	; 0x634 <strftime+0x1c8>
     7c8:	d7 01       	movw	r26, r14
     7ca:	16 96       	adiw	r26, 0x06	; 6
     7cc:	8d 91       	ld	r24, X+
     7ce:	9c 91       	ld	r25, X
     7d0:	84 59       	subi	r24, 0x94	; 148
     7d2:	98 4f       	sbci	r25, 0xF8	; 248
     7d4:	b2 01       	movw	r22, r4
     7d6:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     7da:	7f 93       	push	r23
     7dc:	6f 93       	push	r22
     7de:	eb ee       	ldi	r30, 0xEB	; 235
     7e0:	f2 e4       	ldi	r31, 0x42	; 66
     7e2:	ff 93       	push	r31
     7e4:	ef 93       	push	r30
     7e6:	4a c0       	rjmp	.+148    	; 0x87c <strftime+0x410>
     7e8:	d7 01       	movw	r26, r14
     7ea:	13 96       	adiw	r26, 0x03	; 3
     7ec:	8c 91       	ld	r24, X
     7ee:	28 2f       	mov	r18, r24
     7f0:	08 2e       	mov	r0, r24
     7f2:	00 0c       	add	r0, r0
     7f4:	33 0b       	sbc	r19, r19
     7f6:	3f 93       	push	r19
     7f8:	8f 93       	push	r24
     7fa:	59 c0       	rjmp	.+178    	; 0x8ae <strftime+0x442>
     7fc:	d7 01       	movw	r26, r14
     7fe:	13 96       	adiw	r26, 0x03	; 3
     800:	8c 91       	ld	r24, X
     802:	13 97       	sbiw	r26, 0x03	; 3
     804:	28 2f       	mov	r18, r24
     806:	08 2e       	mov	r0, r24
     808:	00 0c       	add	r0, r0
     80a:	33 0b       	sbc	r19, r19
     80c:	3f 93       	push	r19
     80e:	8f 93       	push	r24
     810:	15 96       	adiw	r26, 0x05	; 5
     812:	8c 91       	ld	r24, X
     814:	15 97       	sbiw	r26, 0x05	; 5
     816:	08 2e       	mov	r0, r24
     818:	00 0c       	add	r0, r0
     81a:	99 0b       	sbc	r25, r25
     81c:	01 96       	adiw	r24, 0x01	; 1
     81e:	9f 93       	push	r25
     820:	8f 93       	push	r24
     822:	16 96       	adiw	r26, 0x06	; 6
     824:	8d 91       	ld	r24, X+
     826:	9c 91       	ld	r25, X
     828:	84 59       	subi	r24, 0x94	; 148
     82a:	98 4f       	sbci	r25, 0xF8	; 248
     82c:	9f 93       	push	r25
     82e:	8f 93       	push	r24
     830:	83 ee       	ldi	r24, 0xE3	; 227
     832:	92 e4       	ldi	r25, 0x42	; 66
     834:	9f 93       	push	r25
     836:	8f 93       	push	r24
     838:	9a ce       	rjmp	.-716    	; 0x56e <strftime+0x102>
     83a:	d7 01       	movw	r26, r14
     83c:	18 96       	adiw	r26, 0x08	; 8
     83e:	6d 91       	ld	r22, X+
     840:	7c 91       	ld	r23, X
     842:	19 97       	sbiw	r26, 0x09	; 9
     844:	16 96       	adiw	r26, 0x06	; 6
     846:	8d 91       	ld	r24, X+
     848:	9c 91       	ld	r25, X
     84a:	ae 01       	movw	r20, r28
     84c:	45 5e       	subi	r20, 0xE5	; 229
     84e:	5f 4f       	sbci	r21, 0xFF	; 255
     850:	84 59       	subi	r24, 0x94	; 148
     852:	98 4f       	sbci	r25, 0xF8	; 248
     854:	0e 94 d4 06 	call	0xda8	; 0xda8 <iso_week_date_r>
     858:	17 36       	cpi	r17, 0x67	; 103
     85a:	41 f4       	brne	.+16     	; 0x86c <strftime+0x400>
     85c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     85e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     860:	b2 01       	movw	r22, r4
     862:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     866:	9f 93       	push	r25
     868:	8f 93       	push	r24
     86a:	b9 cf       	rjmp	.-142    	; 0x7de <strftime+0x372>
     86c:	8c 8d       	ldd	r24, Y+28	; 0x1c
     86e:	8f 93       	push	r24
     870:	8b 8d       	ldd	r24, Y+27	; 0x1b
     872:	8f 93       	push	r24
     874:	40 ef       	ldi	r20, 0xF0	; 240
     876:	52 e4       	ldi	r21, 0x42	; 66
     878:	5f 93       	push	r21
     87a:	4f 93       	push	r20
     87c:	df 92       	push	r13
     87e:	cf 92       	push	r12
     880:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
     884:	0f 90       	pop	r0
     886:	0f 90       	pop	r0
     888:	0f 90       	pop	r0
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
     88e:	0f 90       	pop	r0
     890:	d1 ce       	rjmp	.-606    	; 0x634 <strftime+0x1c8>
     892:	f7 01       	movw	r30, r14
     894:	82 81       	ldd	r24, Z+2	; 0x02
     896:	6c e0       	ldi	r22, 0x0C	; 12
     898:	0e 94 ae 55 	call	0xab5c	; 0xab5c <__divmodqi4>
     89c:	91 11       	cpse	r25, r1
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <strftime+0x436>
     8a0:	9c e0       	ldi	r25, 0x0C	; 12
     8a2:	29 2f       	mov	r18, r25
     8a4:	09 2e       	mov	r0, r25
     8a6:	00 0c       	add	r0, r0
     8a8:	33 0b       	sbc	r19, r19
     8aa:	3f 93       	push	r19
     8ac:	9f 93       	push	r25
     8ae:	bf 92       	push	r11
     8b0:	af 92       	push	r10
     8b2:	e4 cf       	rjmp	.-56     	; 0x87c <strftime+0x410>
     8b4:	f7 01       	movw	r30, r14
     8b6:	85 81       	ldd	r24, Z+5	; 0x05
     8b8:	08 2e       	mov	r0, r24
     8ba:	00 0c       	add	r0, r0
     8bc:	99 0b       	sbc	r25, r25
     8be:	01 96       	adiw	r24, 0x01	; 1
     8c0:	9f 93       	push	r25
     8c2:	9a cf       	rjmp	.-204    	; 0x7f8 <strftime+0x38c>
     8c4:	81 e4       	ldi	r24, 0x41	; 65
     8c6:	89 83       	std	Y+1, r24	; 0x01
     8c8:	f7 01       	movw	r30, r14
     8ca:	82 81       	ldd	r24, Z+2	; 0x02
     8cc:	8c 30       	cpi	r24, 0x0C	; 12
     8ce:	14 f0       	brlt	.+4      	; 0x8d4 <strftime+0x468>
     8d0:	80 e5       	ldi	r24, 0x50	; 80
     8d2:	89 83       	std	Y+1, r24	; 0x01
     8d4:	8d e4       	ldi	r24, 0x4D	; 77
     8d6:	8a 83       	std	Y+2, r24	; 0x02
     8d8:	1b 82       	std	Y+3, r1	; 0x03
     8da:	82 e0       	ldi	r24, 0x02	; 2
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	aa ce       	rjmp	.-684    	; 0x634 <strftime+0x1c8>
     8e0:	d7 01       	movw	r26, r14
     8e2:	12 96       	adiw	r26, 0x02	; 2
     8e4:	8c 91       	ld	r24, X
     8e6:	6c e0       	ldi	r22, 0x0C	; 12
     8e8:	0e 94 ae 55 	call	0xab5c	; 0xab5c <__divmodqi4>
     8ec:	91 11       	cpse	r25, r1
     8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <strftime+0x486>
     8f0:	9c e0       	ldi	r25, 0x0C	; 12
     8f2:	f7 01       	movw	r30, r14
     8f4:	80 81       	ld	r24, Z
     8f6:	28 2f       	mov	r18, r24
     8f8:	08 2e       	mov	r0, r24
     8fa:	00 0c       	add	r0, r0
     8fc:	33 0b       	sbc	r19, r19
     8fe:	3f 93       	push	r19
     900:	8f 93       	push	r24
     902:	81 81       	ldd	r24, Z+1	; 0x01
     904:	28 2f       	mov	r18, r24
     906:	08 2e       	mov	r0, r24
     908:	00 0c       	add	r0, r0
     90a:	33 0b       	sbc	r19, r19
     90c:	3f 93       	push	r19
     90e:	8f 93       	push	r24
     910:	29 2f       	mov	r18, r25
     912:	09 2e       	mov	r0, r25
     914:	00 0c       	add	r0, r0
     916:	33 0b       	sbc	r19, r19
     918:	3f 93       	push	r19
     91a:	9f 93       	push	r25
     91c:	8a ef       	ldi	r24, 0xFA	; 250
     91e:	92 e4       	ldi	r25, 0x42	; 66
     920:	9f 93       	push	r25
     922:	8f 93       	push	r24
     924:	df 92       	push	r13
     926:	cf 92       	push	r12
     928:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
     92c:	cd bf       	out	0x3d, r28	; 61
     92e:	de bf       	out	0x3e, r29	; 62
     930:	d7 01       	movw	r26, r14
     932:	12 96       	adiw	r26, 0x02	; 2
     934:	2c 91       	ld	r18, X
     936:	2c 30       	cpi	r18, 0x0C	; 12
     938:	0c f4       	brge	.+2      	; 0x93c <strftime+0x4d0>
     93a:	7c ce       	rjmp	.-776    	; 0x634 <strftime+0x1c8>
     93c:	20 e5       	ldi	r18, 0x50	; 80
     93e:	2b 87       	std	Y+11, r18	; 0x0b
     940:	79 ce       	rjmp	.-782    	; 0x634 <strftime+0x1c8>
     942:	f7 01       	movw	r30, r14
     944:	81 81       	ldd	r24, Z+1	; 0x01
     946:	28 2f       	mov	r18, r24
     948:	08 2e       	mov	r0, r24
     94a:	00 0c       	add	r0, r0
     94c:	33 0b       	sbc	r19, r19
     94e:	3f 93       	push	r19
     950:	8f 93       	push	r24
     952:	82 81       	ldd	r24, Z+2	; 0x02
     954:	28 2f       	mov	r18, r24
     956:	08 2e       	mov	r0, r24
     958:	00 0c       	add	r0, r0
     95a:	33 0b       	sbc	r19, r19
     95c:	3f 93       	push	r19
     95e:	8f 93       	push	r24
     960:	82 e1       	ldi	r24, 0x12	; 18
     962:	93 e4       	ldi	r25, 0x43	; 67
     964:	9f 93       	push	r25
     966:	8f 93       	push	r24
     968:	df 92       	push	r13
     96a:	cf 92       	push	r12
     96c:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
     970:	02 ce       	rjmp	.-1020   	; 0x576 <strftime+0x10a>
     972:	d7 01       	movw	r26, r14
     974:	8c 91       	ld	r24, X
     976:	3b cf       	rjmp	.-394    	; 0x7ee <strftime+0x382>
     978:	f7 01       	movw	r30, r14
     97a:	80 81       	ld	r24, Z
     97c:	28 2f       	mov	r18, r24
     97e:	08 2e       	mov	r0, r24
     980:	00 0c       	add	r0, r0
     982:	33 0b       	sbc	r19, r19
     984:	3f 93       	push	r19
     986:	8f 93       	push	r24
     988:	81 81       	ldd	r24, Z+1	; 0x01
     98a:	28 2f       	mov	r18, r24
     98c:	08 2e       	mov	r0, r24
     98e:	00 0c       	add	r0, r0
     990:	33 0b       	sbc	r19, r19
     992:	3f 93       	push	r19
     994:	8f 93       	push	r24
     996:	82 81       	ldd	r24, Z+2	; 0x02
     998:	28 2f       	mov	r18, r24
     99a:	08 2e       	mov	r0, r24
     99c:	00 0c       	add	r0, r0
     99e:	33 0b       	sbc	r19, r19
     9a0:	3f 93       	push	r19
     9a2:	8f 93       	push	r24
     9a4:	8d e0       	ldi	r24, 0x0D	; 13
     9a6:	93 e4       	ldi	r25, 0x43	; 67
     9a8:	45 cf       	rjmp	.-374    	; 0x834 <strftime+0x3c8>
     9aa:	d7 01       	movw	r26, r14
     9ac:	14 96       	adiw	r26, 0x04	; 4
     9ae:	8c 91       	ld	r24, X
     9b0:	08 2e       	mov	r0, r24
     9b2:	00 0c       	add	r0, r0
     9b4:	99 0b       	sbc	r25, r25
     9b6:	00 97       	sbiw	r24, 0x00	; 0
     9b8:	11 f4       	brne	.+4      	; 0x9be <strftime+0x552>
     9ba:	87 e0       	ldi	r24, 0x07	; 7
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	9f 93       	push	r25
     9c0:	8f 93       	push	r24
     9c2:	ec e1       	ldi	r30, 0x1C	; 28
     9c4:	f3 e4       	ldi	r31, 0x43	; 67
     9c6:	0d cf       	rjmp	.-486    	; 0x7e2 <strftime+0x376>
     9c8:	60 e0       	ldi	r22, 0x00	; 0
     9ca:	c7 01       	movw	r24, r14
     9cc:	0e 94 43 05 	call	0xa86	; 0xa86 <week_of_year>
     9d0:	1f 92       	push	r1
     9d2:	12 cf       	rjmp	.-476    	; 0x7f8 <strftime+0x38c>
     9d4:	d7 01       	movw	r26, r14
     9d6:	18 96       	adiw	r26, 0x08	; 8
     9d8:	6d 91       	ld	r22, X+
     9da:	7c 91       	ld	r23, X
     9dc:	19 97       	sbiw	r26, 0x09	; 9
     9de:	16 96       	adiw	r26, 0x06	; 6
     9e0:	8d 91       	ld	r24, X+
     9e2:	9c 91       	ld	r25, X
     9e4:	ae 01       	movw	r20, r28
     9e6:	45 5e       	subi	r20, 0xE5	; 229
     9e8:	5f 4f       	sbci	r21, 0xFF	; 255
     9ea:	84 59       	subi	r24, 0x94	; 148
     9ec:	98 4f       	sbci	r25, 0xF8	; 248
     9ee:	0e 94 d4 06 	call	0xda8	; 0xda8 <iso_week_date_r>
     9f2:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9f4:	8f 93       	push	r24
     9f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9f8:	ff ce       	rjmp	.-514    	; 0x7f8 <strftime+0x38c>
     9fa:	61 e0       	ldi	r22, 0x01	; 1
     9fc:	e6 cf       	rjmp	.-52     	; 0x9ca <strftime+0x55e>
     9fe:	d7 01       	movw	r26, r14
     a00:	16 96       	adiw	r26, 0x06	; 6
     a02:	8d 91       	ld	r24, X+
     a04:	9c 91       	ld	r25, X
     a06:	b2 01       	movw	r22, r4
     a08:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     a0c:	59 cf       	rjmp	.-334    	; 0x8c0 <strftime+0x454>
     a0e:	f7 01       	movw	r30, r14
     a10:	86 81       	ldd	r24, Z+6	; 0x06
     a12:	97 81       	ldd	r25, Z+7	; 0x07
     a14:	84 59       	subi	r24, 0x94	; 148
     a16:	98 4f       	sbci	r25, 0xF8	; 248
     a18:	9f 93       	push	r25
     a1a:	73 ce       	rjmp	.-794    	; 0x702 <strftime+0x296>
     a1c:	41 91       	ld	r20, Z+
     a1e:	4d 93       	st	X+, r20
     a20:	14 ce       	rjmp	.-984    	; 0x64a <strftime+0x1de>
     a22:	f4 01       	movw	r30, r8
     a24:	81 93       	st	Z+, r24
     a26:	4f 01       	movw	r8, r30
     a28:	ff ef       	ldi	r31, 0xFF	; 255
     a2a:	6f 1a       	sub	r6, r31
     a2c:	7f 0a       	sbc	r7, r31
     a2e:	81 11       	cpse	r24, r1
     a30:	1a ce       	rjmp	.-972    	; 0x666 <strftime+0x1fa>
     a32:	c3 01       	movw	r24, r6
     a34:	a2 96       	adiw	r28, 0x22	; 34
     a36:	cd bf       	out	0x3d, r28	; 61
     a38:	de bf       	out	0x3e, r29	; 62
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	1f 91       	pop	r17
     a40:	0f 91       	pop	r16
     a42:	ff 90       	pop	r15
     a44:	ef 90       	pop	r14
     a46:	df 90       	pop	r13
     a48:	cf 90       	pop	r12
     a4a:	bf 90       	pop	r11
     a4c:	af 90       	pop	r10
     a4e:	9f 90       	pop	r9
     a50:	8f 90       	pop	r8
     a52:	7f 90       	pop	r7
     a54:	6f 90       	pop	r6
     a56:	5f 90       	pop	r5
     a58:	4f 90       	pop	r4
     a5a:	3f 90       	pop	r3
     a5c:	2f 90       	pop	r2
     a5e:	08 95       	ret

00000a60 <time>:
     a60:	fc 01       	movw	r30, r24
     a62:	0f b6       	in	r0, 0x3f	; 63
     a64:	f8 94       	cli
     a66:	60 91 a2 47 	lds	r22, 0x47A2	; 0x8047a2 <__system_time>
     a6a:	70 91 a3 47 	lds	r23, 0x47A3	; 0x8047a3 <__system_time+0x1>
     a6e:	80 91 a4 47 	lds	r24, 0x47A4	; 0x8047a4 <__system_time+0x2>
     a72:	90 91 a5 47 	lds	r25, 0x47A5	; 0x8047a5 <__system_time+0x3>
     a76:	0f be       	out	0x3f, r0	; 63
     a78:	30 97       	sbiw	r30, 0x00	; 0
     a7a:	21 f0       	breq	.+8      	; 0xa84 <time+0x24>
     a7c:	60 83       	st	Z, r22
     a7e:	71 83       	std	Z+1, r23	; 0x01
     a80:	82 83       	std	Z+2, r24	; 0x02
     a82:	93 83       	std	Z+3, r25	; 0x03
     a84:	08 95       	ret

00000a86 <week_of_year>:
     a86:	fc 01       	movw	r30, r24
     a88:	20 85       	ldd	r18, Z+8	; 0x08
     a8a:	31 85       	ldd	r19, Z+9	; 0x09
     a8c:	c9 01       	movw	r24, r18
     a8e:	07 96       	adiw	r24, 0x07	; 7
     a90:	44 81       	ldd	r20, Z+4	; 0x04
     a92:	84 1b       	sub	r24, r20
     a94:	91 09       	sbc	r25, r1
     a96:	47 fd       	sbrc	r20, 7
     a98:	93 95       	inc	r25
     a9a:	86 0f       	add	r24, r22
     a9c:	91 1d       	adc	r25, r1
     a9e:	e7 e0       	ldi	r30, 0x07	; 7
     aa0:	f0 e0       	ldi	r31, 0x00	; 0
     aa2:	bf 01       	movw	r22, r30
     aa4:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     aa8:	a9 01       	movw	r20, r18
     aaa:	48 1b       	sub	r20, r24
     aac:	59 0b       	sbc	r21, r25
     aae:	ca 01       	movw	r24, r20
     ab0:	57 fd       	sbrc	r21, 7
     ab2:	06 c0       	rjmp	.+12     	; 0xac0 <week_of_year+0x3a>
     ab4:	bf 01       	movw	r22, r30
     ab6:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     aba:	81 e0       	ldi	r24, 0x01	; 1
     abc:	86 0f       	add	r24, r22
     abe:	08 95       	ret
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	08 95       	ret

00000ac4 <system_tick>:
     ac4:	8f 93       	push	r24
     ac6:	8f b7       	in	r24, 0x3f	; 63
     ac8:	8f 93       	push	r24
     aca:	f8 94       	cli
     acc:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <__system_time>
     ad0:	8f 5f       	subi	r24, 0xFF	; 255
     ad2:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <__system_time>
     ad6:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <__system_time+0x1>
     ada:	8f 4f       	sbci	r24, 0xFF	; 255
     adc:	80 93 a3 47 	sts	0x47A3, r24	; 0x8047a3 <__system_time+0x1>
     ae0:	80 91 a4 47 	lds	r24, 0x47A4	; 0x8047a4 <__system_time+0x2>
     ae4:	8f 4f       	sbci	r24, 0xFF	; 255
     ae6:	80 93 a4 47 	sts	0x47A4, r24	; 0x8047a4 <__system_time+0x2>
     aea:	80 91 a5 47 	lds	r24, 0x47A5	; 0x8047a5 <__system_time+0x3>
     aee:	8f 4f       	sbci	r24, 0xFF	; 255
     af0:	80 93 a5 47 	sts	0x47A5, r24	; 0x8047a5 <__system_time+0x3>
     af4:	8f 91       	pop	r24
     af6:	8f bf       	out	0x3f, r24	; 63
     af8:	8f 91       	pop	r24
     afa:	08 95       	ret

00000afc <asctime_r>:
     afc:	cf 92       	push	r12
     afe:	df 92       	push	r13
     b00:	ef 92       	push	r14
     b02:	ff 92       	push	r15
     b04:	0f 93       	push	r16
     b06:	1f 93       	push	r17
     b08:	cf 93       	push	r28
     b0a:	df 93       	push	r29
     b0c:	8c 01       	movw	r16, r24
     b0e:	eb 01       	movw	r28, r22
     b10:	fc 01       	movw	r30, r24
     b12:	84 81       	ldd	r24, Z+4	; 0x04
     b14:	b8 2f       	mov	r27, r24
     b16:	bb 0f       	add	r27, r27
     b18:	b8 0f       	add	r27, r24
     b1a:	85 81       	ldd	r24, Z+5	; 0x05
     b1c:	78 2f       	mov	r23, r24
     b1e:	77 0f       	add	r23, r23
     b20:	78 0f       	add	r23, r24
     b22:	9e 01       	movw	r18, r28
     b24:	40 e0       	ldi	r20, 0x00	; 0
     b26:	8b 2f       	mov	r24, r27
     b28:	84 0f       	add	r24, r20
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	a0 e0       	ldi	r26, 0x00	; 0
     b2e:	8d 58       	subi	r24, 0x8D	; 141
     b30:	9d 4f       	sbci	r25, 0xFD	; 253
     b32:	af 4f       	sbci	r26, 0xFF	; 255
     b34:	fc 01       	movw	r30, r24
     b36:	5a 2f       	mov	r21, r26
     b38:	0e 94 bc 55 	call	0xab78	; 0xab78 <__xload_1>
     b3c:	f9 01       	movw	r30, r18
     b3e:	61 93       	st	Z+, r22
     b40:	9f 01       	movw	r18, r30
     b42:	87 2f       	mov	r24, r23
     b44:	84 0f       	add	r24, r20
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	a0 e0       	ldi	r26, 0x00	; 0
     b4a:	87 57       	subi	r24, 0x77	; 119
     b4c:	9d 4f       	sbci	r25, 0xFD	; 253
     b4e:	af 4f       	sbci	r26, 0xFF	; 255
     b50:	fc 01       	movw	r30, r24
     b52:	5a 2f       	mov	r21, r26
     b54:	0e 94 bc 55 	call	0xab78	; 0xab78 <__xload_1>
     b58:	f9 01       	movw	r30, r18
     b5a:	63 83       	std	Z+3, r22	; 0x03
     b5c:	4f 5f       	subi	r20, 0xFF	; 255
     b5e:	43 30       	cpi	r20, 0x03	; 3
     b60:	11 f7       	brne	.-60     	; 0xb26 <asctime_r+0x2a>
     b62:	80 e2       	ldi	r24, 0x20	; 32
     b64:	8f 83       	std	Y+7, r24	; 0x07
     b66:	8b 83       	std	Y+3, r24	; 0x03
     b68:	be 01       	movw	r22, r28
     b6a:	68 5f       	subi	r22, 0xF8	; 248
     b6c:	7f 4f       	sbci	r23, 0xFF	; 255
     b6e:	f8 01       	movw	r30, r16
     b70:	83 81       	ldd	r24, Z+3	; 0x03
     b72:	40 e2       	ldi	r20, 0x20	; 32
     b74:	08 2e       	mov	r0, r24
     b76:	00 0c       	add	r0, r0
     b78:	99 0b       	sbc	r25, r25
     b7a:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__print_lz>
     b7e:	be 01       	movw	r22, r28
     b80:	65 5f       	subi	r22, 0xF5	; 245
     b82:	7f 4f       	sbci	r23, 0xFF	; 255
     b84:	f8 01       	movw	r30, r16
     b86:	82 81       	ldd	r24, Z+2	; 0x02
     b88:	4a e3       	ldi	r20, 0x3A	; 58
     b8a:	08 2e       	mov	r0, r24
     b8c:	00 0c       	add	r0, r0
     b8e:	99 0b       	sbc	r25, r25
     b90:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__print_lz>
     b94:	be 01       	movw	r22, r28
     b96:	62 5f       	subi	r22, 0xF2	; 242
     b98:	7f 4f       	sbci	r23, 0xFF	; 255
     b9a:	f8 01       	movw	r30, r16
     b9c:	81 81       	ldd	r24, Z+1	; 0x01
     b9e:	4a e3       	ldi	r20, 0x3A	; 58
     ba0:	08 2e       	mov	r0, r24
     ba2:	00 0c       	add	r0, r0
     ba4:	99 0b       	sbc	r25, r25
     ba6:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__print_lz>
     baa:	be 01       	movw	r22, r28
     bac:	6f 5e       	subi	r22, 0xEF	; 239
     bae:	7f 4f       	sbci	r23, 0xFF	; 255
     bb0:	f8 01       	movw	r30, r16
     bb2:	80 81       	ld	r24, Z
     bb4:	40 e2       	ldi	r20, 0x20	; 32
     bb6:	08 2e       	mov	r0, r24
     bb8:	00 0c       	add	r0, r0
     bba:	99 0b       	sbc	r25, r25
     bbc:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__print_lz>
     bc0:	f8 01       	movw	r30, r16
     bc2:	86 81       	ldd	r24, Z+6	; 0x06
     bc4:	97 81       	ldd	r25, Z+7	; 0x07
     bc6:	64 e6       	ldi	r22, 0x64	; 100
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	84 59       	subi	r24, 0x94	; 148
     bcc:	98 4f       	sbci	r25, 0xF8	; 248
     bce:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     bd2:	6b 01       	movw	r12, r22
     bd4:	7c 01       	movw	r14, r24
     bd6:	be 01       	movw	r22, r28
     bd8:	6c 5e       	subi	r22, 0xEC	; 236
     bda:	7f 4f       	sbci	r23, 0xFF	; 255
     bdc:	40 e2       	ldi	r20, 0x20	; 32
     bde:	c6 01       	movw	r24, r12
     be0:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__print_lz>
     be4:	be 01       	movw	r22, r28
     be6:	6a 5e       	subi	r22, 0xEA	; 234
     be8:	7f 4f       	sbci	r23, 0xFF	; 255
     bea:	40 e0       	ldi	r20, 0x00	; 0
     bec:	c7 01       	movw	r24, r14
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	ff 90       	pop	r15
     bf8:	ef 90       	pop	r14
     bfa:	df 90       	pop	r13
     bfc:	cf 90       	pop	r12
     bfe:	0c 94 4e 07 	jmp	0xe9c	; 0xe9c <__print_lz>

00000c02 <gmtime_r>:
     c02:	cf 92       	push	r12
     c04:	df 92       	push	r13
     c06:	ef 92       	push	r14
     c08:	ff 92       	push	r15
     c0a:	0f 93       	push	r16
     c0c:	1f 93       	push	r17
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	cd b7       	in	r28, 0x3d	; 61
     c14:	de b7       	in	r29, 0x3e	; 62
     c16:	28 97       	sbiw	r28, 0x08	; 8
     c18:	cd bf       	out	0x3d, r28	; 61
     c1a:	de bf       	out	0x3e, r29	; 62
     c1c:	8b 01       	movw	r16, r22
     c1e:	fc 01       	movw	r30, r24
     c20:	60 81       	ld	r22, Z
     c22:	71 81       	ldd	r23, Z+1	; 0x01
     c24:	82 81       	ldd	r24, Z+2	; 0x02
     c26:	93 81       	ldd	r25, Z+3	; 0x03
     c28:	20 e8       	ldi	r18, 0x80	; 128
     c2a:	31 e5       	ldi	r19, 0x51	; 81
     c2c:	41 e0       	ldi	r20, 0x01	; 1
     c2e:	50 e0       	ldi	r21, 0x00	; 0
     c30:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
     c34:	69 01       	movw	r12, r18
     c36:	7a 01       	movw	r14, r20
     c38:	2c e3       	ldi	r18, 0x3C	; 60
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	40 e0       	ldi	r20, 0x00	; 0
     c3e:	50 e0       	ldi	r21, 0x00	; 0
     c40:	0e 94 34 4e 	call	0x9c68	; 0x9c68 <__divmodsi4>
     c44:	29 83       	std	Y+1, r18	; 0x01
     c46:	3a 83       	std	Y+2, r19	; 0x02
     c48:	4b 83       	std	Y+3, r20	; 0x03
     c4a:	5c 83       	std	Y+4, r21	; 0x04
     c4c:	89 81       	ldd	r24, Y+1	; 0x01
     c4e:	9a 81       	ldd	r25, Y+2	; 0x02
     c50:	ab 81       	ldd	r26, Y+3	; 0x03
     c52:	bc 81       	ldd	r27, Y+4	; 0x04
     c54:	f8 01       	movw	r30, r16
     c56:	60 83       	st	Z, r22
     c58:	6c e3       	ldi	r22, 0x3C	; 60
     c5a:	70 e0       	ldi	r23, 0x00	; 0
     c5c:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     c60:	dc 01       	movw	r26, r24
     c62:	f8 01       	movw	r30, r16
     c64:	a1 83       	std	Z+1, r26	; 0x01
     c66:	62 83       	std	Z+2, r22	; 0x02
     c68:	c6 01       	movw	r24, r12
     c6a:	06 96       	adiw	r24, 0x06	; 6
     c6c:	67 e0       	ldi	r22, 0x07	; 7
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	0e 94 ea 4d 	call	0x9bd4	; 0x9bd4 <__udivmodhi4>
     c74:	84 83       	std	Z+4, r24	; 0x04
     c76:	2d ea       	ldi	r18, 0xAD	; 173
     c78:	3e e8       	ldi	r19, 0x8E	; 142
     c7a:	40 e0       	ldi	r20, 0x00	; 0
     c7c:	50 e0       	ldi	r21, 0x00	; 0
     c7e:	c7 01       	movw	r24, r14
     c80:	b6 01       	movw	r22, r12
     c82:	0e 94 34 4e 	call	0x9c68	; 0x9c68 <__divmodsi4>
     c86:	29 83       	std	Y+1, r18	; 0x01
     c88:	3a 83       	std	Y+2, r19	; 0x02
     c8a:	6d 83       	std	Y+5, r22	; 0x05
     c8c:	7e 83       	std	Y+6, r23	; 0x06
     c8e:	8f 83       	std	Y+7, r24	; 0x07
     c90:	98 87       	std	Y+8, r25	; 0x08
     c92:	89 81       	ldd	r24, Y+1	; 0x01
     c94:	9a 81       	ldd	r25, Y+2	; 0x02
     c96:	24 e6       	ldi	r18, 0x64	; 100
     c98:	28 9f       	mul	r18, r24
     c9a:	60 01       	movw	r12, r0
     c9c:	29 9f       	mul	r18, r25
     c9e:	d0 0c       	add	r13, r0
     ca0:	11 24       	eor	r1, r1
     ca2:	6d 81       	ldd	r22, Y+5	; 0x05
     ca4:	7e 81       	ldd	r23, Y+6	; 0x06
     ca6:	8f 81       	ldd	r24, Y+7	; 0x07
     ca8:	98 85       	ldd	r25, Y+8	; 0x08
     caa:	25 eb       	ldi	r18, 0xB5	; 181
     cac:	35 e0       	ldi	r19, 0x05	; 5
     cae:	40 e0       	ldi	r20, 0x00	; 0
     cb0:	50 e0       	ldi	r21, 0x00	; 0
     cb2:	0e 94 34 4e 	call	0x9c68	; 0x9c68 <__divmodsi4>
     cb6:	29 83       	std	Y+1, r18	; 0x01
     cb8:	3a 83       	std	Y+2, r19	; 0x02
     cba:	6d 83       	std	Y+5, r22	; 0x05
     cbc:	7e 83       	std	Y+6, r23	; 0x06
     cbe:	e9 80       	ldd	r14, Y+1	; 0x01
     cc0:	fa 80       	ldd	r15, Y+2	; 0x02
     cc2:	ee 0c       	add	r14, r14
     cc4:	ff 1c       	adc	r15, r15
     cc6:	ee 0c       	add	r14, r14
     cc8:	ff 1c       	adc	r15, r15
     cca:	ec 0c       	add	r14, r12
     ccc:	fd 1c       	adc	r15, r13
     cce:	8d 81       	ldd	r24, Y+5	; 0x05
     cd0:	9e 81       	ldd	r25, Y+6	; 0x06
     cd2:	f5 e6       	ldi	r31, 0x65	; 101
     cd4:	ef 16       	cp	r14, r31
     cd6:	f1 04       	cpc	r15, r1
     cd8:	e0 f1       	brcs	.+120    	; 0xd52 <gmtime_r+0x150>
     cda:	01 96       	adiw	r24, 0x01	; 1
     cdc:	21 e0       	ldi	r18, 0x01	; 1
     cde:	30 e0       	ldi	r19, 0x00	; 0
     ce0:	a9 01       	movw	r20, r18
     ce2:	44 59       	subi	r20, 0x94	; 148
     ce4:	5e 4f       	sbci	r21, 0xFE	; 254
     ce6:	48 17       	cp	r20, r24
     ce8:	59 07       	cpc	r21, r25
     cea:	60 f4       	brcc	.+24     	; 0xd04 <gmtime_r+0x102>
     cec:	6d e6       	ldi	r22, 0x6D	; 109
     cee:	71 e0       	ldi	r23, 0x01	; 1
     cf0:	82 1b       	sub	r24, r18
     cf2:	93 0b       	sbc	r25, r19
     cf4:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     cf8:	dc 01       	movw	r26, r24
     cfa:	e6 0e       	add	r14, r22
     cfc:	f7 1e       	adc	r15, r23
     cfe:	cd 01       	movw	r24, r26
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	20 e0       	ldi	r18, 0x00	; 0
     d04:	44 e6       	ldi	r20, 0x64	; 100
     d06:	e4 0e       	add	r14, r20
     d08:	f1 1c       	adc	r15, r1
     d0a:	f8 01       	movw	r30, r16
     d0c:	e6 82       	std	Z+6, r14	; 0x06
     d0e:	f7 82       	std	Z+7, r15	; 0x07
     d10:	80 87       	std	Z+8, r24	; 0x08
     d12:	91 87       	std	Z+9, r25	; 0x09
     d14:	25 5c       	subi	r18, 0xC5	; 197
     d16:	3f 4f       	sbci	r19, 0xFF	; 255
     d18:	82 17       	cp	r24, r18
     d1a:	93 07       	cpc	r25, r19
     d1c:	20 f5       	brcc	.+72     	; 0xd66 <gmtime_r+0x164>
     d1e:	6f e1       	ldi	r22, 0x1F	; 31
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     d26:	dc 01       	movw	r26, r24
     d28:	f8 01       	movw	r30, r16
     d2a:	65 83       	std	Z+5, r22	; 0x05
     d2c:	a3 83       	std	Z+3, r26	; 0x03
     d2e:	f8 01       	movw	r30, r16
     d30:	12 86       	std	Z+10, r1	; 0x0a
     d32:	13 86       	std	Z+11, r1	; 0x0b
     d34:	83 81       	ldd	r24, Z+3	; 0x03
     d36:	8f 5f       	subi	r24, 0xFF	; 255
     d38:	83 83       	std	Z+3, r24	; 0x03
     d3a:	28 96       	adiw	r28, 0x08	; 8
     d3c:	cd bf       	out	0x3d, r28	; 61
     d3e:	de bf       	out	0x3e, r29	; 62
     d40:	df 91       	pop	r29
     d42:	cf 91       	pop	r28
     d44:	1f 91       	pop	r17
     d46:	0f 91       	pop	r16
     d48:	ff 90       	pop	r15
     d4a:	ef 90       	pop	r14
     d4c:	df 90       	pop	r13
     d4e:	cf 90       	pop	r12
     d50:	08 95       	ret
     d52:	51 e0       	ldi	r21, 0x01	; 1
     d54:	40 e0       	ldi	r20, 0x00	; 0
     d56:	24 e6       	ldi	r18, 0x64	; 100
     d58:	e2 16       	cp	r14, r18
     d5a:	f1 04       	cpc	r15, r1
     d5c:	09 f4       	brne	.+2      	; 0xd60 <gmtime_r+0x15e>
     d5e:	50 e0       	ldi	r21, 0x00	; 0
     d60:	25 2f       	mov	r18, r21
     d62:	34 2f       	mov	r19, r20
     d64:	bd cf       	rjmp	.-134    	; 0xce0 <gmtime_r+0xde>
     d66:	69 e9       	ldi	r22, 0x99	; 153
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	82 1b       	sub	r24, r18
     d6c:	93 0b       	sbc	r25, r19
     d6e:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     d72:	dc 01       	movw	r26, r24
     d74:	26 2f       	mov	r18, r22
     d76:	22 0f       	add	r18, r18
     d78:	22 0f       	add	r18, r18
     d7a:	f2 2e       	mov	r15, r18
     d7c:	f6 0e       	add	r15, r22
     d7e:	6d e3       	ldi	r22, 0x3D	; 61
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	cd 01       	movw	r24, r26
     d84:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     d88:	dc 01       	movw	r26, r24
     d8a:	e6 2e       	mov	r14, r22
     d8c:	ee 0c       	add	r14, r14
     d8e:	6f e1       	ldi	r22, 0x1F	; 31
     d90:	70 e0       	ldi	r23, 0x00	; 0
     d92:	cd 01       	movw	r24, r26
     d94:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     d98:	dc 01       	movw	r26, r24
     d9a:	22 e0       	ldi	r18, 0x02	; 2
     d9c:	26 0f       	add	r18, r22
     d9e:	2f 0d       	add	r18, r15
     da0:	2e 0d       	add	r18, r14
     da2:	f8 01       	movw	r30, r16
     da4:	25 83       	std	Z+5, r18	; 0x05
     da6:	c2 cf       	rjmp	.-124    	; 0xd2c <gmtime_r+0x12a>

00000da8 <iso_week_date_r>:
     da8:	cf 92       	push	r12
     daa:	df 92       	push	r13
     dac:	ef 92       	push	r14
     dae:	ff 92       	push	r15
     db0:	0f 93       	push	r16
     db2:	1f 93       	push	r17
     db4:	cf 93       	push	r28
     db6:	df 93       	push	r29
     db8:	8c 01       	movw	r16, r24
     dba:	7b 01       	movw	r14, r22
     dbc:	ea 01       	movw	r28, r20
     dbe:	88 83       	st	Y, r24
     dc0:	99 83       	std	Y+1, r25	; 0x01
     dc2:	0e 94 87 01 	call	0x30e	; 0x30e <is_leap_year>
     dc6:	28 2f       	mov	r18, r24
     dc8:	a8 01       	movw	r20, r16
     dca:	40 5d       	subi	r20, 0xD0	; 208
     dcc:	57 40       	sbci	r21, 0x07	; 7
     dce:	6d e6       	ldi	r22, 0x6D	; 109
     dd0:	71 e0       	ldi	r23, 0x01	; 1
     dd2:	46 9f       	mul	r20, r22
     dd4:	c0 01       	movw	r24, r0
     dd6:	47 9f       	mul	r20, r23
     dd8:	90 0d       	add	r25, r0
     dda:	56 9f       	mul	r21, r22
     ddc:	90 0d       	add	r25, r0
     dde:	11 24       	eor	r1, r1
     de0:	8e 0d       	add	r24, r14
     de2:	9f 1d       	adc	r25, r15
     de4:	41 15       	cp	r20, r1
     de6:	51 05       	cpc	r21, r1
     de8:	79 f0       	breq	.+30     	; 0xe08 <iso_week_date_r+0x60>
     dea:	ba 01       	movw	r22, r20
     dec:	76 95       	lsr	r23
     dee:	67 95       	ror	r22
     df0:	76 95       	lsr	r23
     df2:	67 95       	ror	r22
     df4:	6f 5f       	subi	r22, 0xFF	; 255
     df6:	7f 4f       	sbci	r23, 0xFF	; 255
     df8:	86 0f       	add	r24, r22
     dfa:	97 1f       	adc	r25, r23
     dfc:	82 1b       	sub	r24, r18
     dfe:	91 09       	sbc	r25, r1
     e00:	45 36       	cpi	r20, 0x65	; 101
     e02:	51 05       	cpc	r21, r1
     e04:	08 f0       	brcs	.+2      	; 0xe08 <iso_week_date_r+0x60>
     e06:	01 97       	sbiw	r24, 0x01	; 1
     e08:	06 96       	adiw	r24, 0x06	; 6
     e0a:	67 e0       	ldi	r22, 0x07	; 7
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	0e 94 ea 4d 	call	0x9bd4	; 0x9bd4 <__udivmodhi4>
     e12:	6c 01       	movw	r12, r24
     e14:	89 2b       	or	r24, r25
     e16:	19 f4       	brne	.+6      	; 0xe1e <iso_week_date_r+0x76>
     e18:	87 e0       	ldi	r24, 0x07	; 7
     e1a:	c8 2e       	mov	r12, r24
     e1c:	d1 2c       	mov	r13, r1
     e1e:	cc 82       	std	Y+4, r12	; 0x04
     e20:	dd 82       	std	Y+5, r13	; 0x05
     e22:	c7 01       	movw	r24, r14
     e24:	0b 96       	adiw	r24, 0x0b	; 11
     e26:	8c 19       	sub	r24, r12
     e28:	9d 09       	sbc	r25, r13
     e2a:	67 e0       	ldi	r22, 0x07	; 7
     e2c:	70 e0       	ldi	r23, 0x00	; 0
     e2e:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     e32:	65 33       	cpi	r22, 0x35	; 53
     e34:	71 05       	cpc	r23, r1
     e36:	b1 f4       	brne	.+44     	; 0xe64 <iso_week_date_r+0xbc>
     e38:	81 e0       	ldi	r24, 0x01	; 1
     e3a:	c8 1a       	sub	r12, r24
     e3c:	d1 08       	sbc	r13, r1
     e3e:	ec 18       	sub	r14, r12
     e40:	fd 08       	sbc	r15, r13
     e42:	82 2f       	mov	r24, r18
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	84 59       	subi	r24, 0x94	; 148
     e48:	9e 4f       	sbci	r25, 0xFE	; 254
     e4a:	23 e0       	ldi	r18, 0x03	; 3
     e4c:	e2 0e       	add	r14, r18
     e4e:	f1 1c       	adc	r15, r1
     e50:	8e 15       	cp	r24, r14
     e52:	9f 05       	cpc	r25, r15
     e54:	3c f4       	brge	.+14     	; 0xe64 <iso_week_date_r+0xbc>
     e56:	88 81       	ld	r24, Y
     e58:	99 81       	ldd	r25, Y+1	; 0x01
     e5a:	01 96       	adiw	r24, 0x01	; 1
     e5c:	88 83       	st	Y, r24
     e5e:	99 83       	std	Y+1, r25	; 0x01
     e60:	61 e0       	ldi	r22, 0x01	; 1
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	6a 83       	std	Y+2, r22	; 0x02
     e66:	7b 83       	std	Y+3, r23	; 0x03
     e68:	67 2b       	or	r22, r23
     e6a:	79 f4       	brne	.+30     	; 0xe8a <iso_week_date_r+0xe2>
     e6c:	01 50       	subi	r16, 0x01	; 1
     e6e:	11 09       	sbc	r17, r1
     e70:	c8 01       	movw	r24, r16
     e72:	0e 94 87 01 	call	0x30e	; 0x30e <is_leap_year>
     e76:	68 2f       	mov	r22, r24
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	64 59       	subi	r22, 0x94	; 148
     e7c:	7e 4f       	sbci	r23, 0xFE	; 254
     e7e:	ae 01       	movw	r20, r28
     e80:	c8 01       	movw	r24, r16
     e82:	0e 94 d4 06 	call	0xda8	; 0xda8 <iso_week_date_r>
     e86:	cc 82       	std	Y+4, r12	; 0x04
     e88:	dd 82       	std	Y+5, r13	; 0x05
     e8a:	df 91       	pop	r29
     e8c:	cf 91       	pop	r28
     e8e:	1f 91       	pop	r17
     e90:	0f 91       	pop	r16
     e92:	ff 90       	pop	r15
     e94:	ef 90       	pop	r14
     e96:	df 90       	pop	r13
     e98:	cf 90       	pop	r12
     e9a:	08 95       	ret

00000e9c <__print_lz>:
     e9c:	1f 93       	push	r17
     e9e:	cf 93       	push	r28
     ea0:	df 93       	push	r29
     ea2:	eb 01       	movw	r28, r22
     ea4:	14 2f       	mov	r17, r20
     ea6:	6a e0       	ldi	r22, 0x0A	; 10
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
     eae:	60 5d       	subi	r22, 0xD0	; 208
     eb0:	68 83       	st	Y, r22
     eb2:	80 5d       	subi	r24, 0xD0	; 208
     eb4:	89 83       	std	Y+1, r24	; 0x01
     eb6:	1a 83       	std	Y+2, r17	; 0x02
     eb8:	df 91       	pop	r29
     eba:	cf 91       	pop	r28
     ebc:	1f 91       	pop	r17
     ebe:	08 95       	ret

00000ec0 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     ec0:	0e 94 97 28 	call	0x512e	; 0x512e <system_init>
}
     ec4:	08 95       	ret

00000ec6 <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
     ec6:	1f 92       	push	r1
     ec8:	0f 92       	push	r0
     eca:	0f b6       	in	r0, 0x3f	; 63
     ecc:	0f 92       	push	r0
     ece:	11 24       	eor	r1, r1
     ed0:	0b b6       	in	r0, 0x3b	; 59
     ed2:	0f 92       	push	r0
     ed4:	2f 93       	push	r18
     ed6:	3f 93       	push	r19
     ed8:	4f 93       	push	r20
     eda:	5f 93       	push	r21
     edc:	6f 93       	push	r22
     ede:	7f 93       	push	r23
     ee0:	8f 93       	push	r24
     ee2:	9f 93       	push	r25
     ee4:	af 93       	push	r26
     ee6:	bf 93       	push	r27
     ee8:	ef 93       	push	r30
     eea:	ff 93       	push	r31
	if(g_linkbus_usart_number == USART_0)
     eec:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_linkbus_usart_number>
     ef0:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
     ef4:	89 2b       	or	r24, r25
     ef6:	c1 f4       	brne	.+48     	; 0xf28 <__vector_20+0x62>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     ef8:	80 91 57 43 	lds	r24, 0x4357	; 0x804357 <_ZZ11__vector_20E4buff>
     efc:	90 91 58 43 	lds	r25, 0x4358	; 0x804358 <_ZZ11__vector_20E4buff+0x1>
     f00:	89 2b       	or	r24, r25
     f02:	09 f4       	brne	.+2      	; 0xf06 <__vector_20+0x40>
     f04:	41 c0       	rjmp	.+130    	; 0xf88 <__vector_20+0xc2>
		{
			buff = nextFullLBTxBuffer();
		}

		if((*buff)[charIndex])
     f06:	e0 91 57 43 	lds	r30, 0x4357	; 0x804357 <_ZZ11__vector_20E4buff>
     f0a:	f0 91 58 43 	lds	r31, 0x4358	; 0x804358 <_ZZ11__vector_20E4buff+0x1>
     f0e:	80 91 56 43 	lds	r24, 0x4356	; 0x804356 <_ZZ11__vector_20E9charIndex>
     f12:	df 01       	movw	r26, r30
     f14:	a8 0f       	add	r26, r24
     f16:	b1 1d       	adc	r27, r1
     f18:	9c 91       	ld	r25, X
     f1a:	99 23       	and	r25, r25
     f1c:	e1 f1       	breq	.+120    	; 0xf96 <__vector_20+0xd0>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
     f1e:	8f 5f       	subi	r24, 0xFF	; 255
     f20:	80 93 56 43 	sts	0x4356, r24	; 0x804356 <_ZZ11__vector_20E9charIndex>
     f24:	90 93 02 08 	sts	0x0802, r25	; 0x800802 <__TEXT_REGION_LENGTH__+0x7e0802>
				linkbus_end_tx();
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
     f28:	80 91 5b 40 	lds	r24, 0x405B	; 0x80405b <g_serialbus_usart_number>
     f2c:	90 91 5c 40 	lds	r25, 0x405C	; 0x80405c <g_serialbus_usart_number+0x1>
     f30:	89 2b       	or	r24, r25
     f32:	b9 f4       	brne	.+46     	; 0xf62 <__vector_20+0x9c>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
     f34:	80 91 54 43 	lds	r24, 0x4354	; 0x804354 <_ZZ11__vector_20E4buff_0>
     f38:	90 91 55 43 	lds	r25, 0x4355	; 0x804355 <_ZZ11__vector_20E4buff_0+0x1>
     f3c:	89 2b       	or	r24, r25
     f3e:	d1 f1       	breq	.+116    	; 0xfb4 <__vector_20+0xee>
		{
			buff = nextFullSBTxBuffer();
		}

		if((*buff)[charIndex])
     f40:	e0 91 54 43 	lds	r30, 0x4354	; 0x804354 <_ZZ11__vector_20E4buff_0>
     f44:	f0 91 55 43 	lds	r31, 0x4355	; 0x804355 <_ZZ11__vector_20E4buff_0+0x1>
     f48:	80 91 53 43 	lds	r24, 0x4353	; 0x804353 <_ZZ11__vector_20E9charIndex_0>
     f4c:	df 01       	movw	r26, r30
     f4e:	a8 0f       	add	r26, r24
     f50:	b1 1d       	adc	r27, r1
     f52:	9c 91       	ld	r25, X
     f54:	99 23       	and	r25, r25
     f56:	a9 f1       	breq	.+106    	; 0xfc2 <__vector_20+0xfc>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
     f58:	8f 5f       	subi	r24, 0xFF	; 255
     f5a:	80 93 53 43 	sts	0x4353, r24	; 0x804353 <_ZZ11__vector_20E9charIndex_0>
     f5e:	90 93 02 08 	sts	0x0802, r25	; 0x800802 <__TEXT_REGION_LENGTH__+0x7e0802>
			{
				serialbus_end_tx();
			}
		}
	}
}
     f62:	ff 91       	pop	r31
     f64:	ef 91       	pop	r30
     f66:	bf 91       	pop	r27
     f68:	af 91       	pop	r26
     f6a:	9f 91       	pop	r25
     f6c:	8f 91       	pop	r24
     f6e:	7f 91       	pop	r23
     f70:	6f 91       	pop	r22
     f72:	5f 91       	pop	r21
     f74:	4f 91       	pop	r20
     f76:	3f 91       	pop	r19
     f78:	2f 91       	pop	r18
     f7a:	0f 90       	pop	r0
     f7c:	0b be       	out	0x3b, r0	; 59
     f7e:	0f 90       	pop	r0
     f80:	0f be       	out	0x3f, r0	; 63
     f82:	0f 90       	pop	r0
     f84:	1f 90       	pop	r1
     f86:	18 95       	reti
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
		{
			buff = nextFullLBTxBuffer();
     f88:	0e 94 c4 3a 	call	0x7588	; 0x7588 <_Z18nextFullLBTxBufferv>
     f8c:	80 93 57 43 	sts	0x4357, r24	; 0x804357 <_ZZ11__vector_20E4buff>
     f90:	90 93 58 43 	sts	0x4358, r25	; 0x804358 <_ZZ11__vector_20E4buff+0x1>
     f94:	b8 cf       	rjmp	.-144    	; 0xf06 <__vector_20+0x40>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
     f96:	10 92 56 43 	sts	0x4356, r1	; 0x804356 <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
     f9a:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
     f9c:	0e 94 c4 3a 	call	0x7588	; 0x7588 <_Z18nextFullLBTxBufferv>
     fa0:	80 93 57 43 	sts	0x4357, r24	; 0x804357 <_ZZ11__vector_20E4buff>
     fa4:	90 93 58 43 	sts	0x4358, r25	; 0x804358 <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
     fa8:	89 2b       	or	r24, r25
     faa:	09 f0       	breq	.+2      	; 0xfae <__vector_20+0xe8>
     fac:	bd cf       	rjmp	.-134    	; 0xf28 <__vector_20+0x62>
			{
				linkbus_end_tx();
     fae:	0e 94 9e 3b 	call	0x773c	; 0x773c <_Z14linkbus_end_txv>
     fb2:	ba cf       	rjmp	.-140    	; 0xf28 <__vector_20+0x62>
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
		{
			buff = nextFullSBTxBuffer();
     fb4:	0e 94 76 3f 	call	0x7eec	; 0x7eec <nextFullSBTxBuffer>
     fb8:	80 93 54 43 	sts	0x4354, r24	; 0x804354 <_ZZ11__vector_20E4buff_0>
     fbc:	90 93 55 43 	sts	0x4355, r25	; 0x804355 <_ZZ11__vector_20E4buff_0+0x1>
     fc0:	bf cf       	rjmp	.-130    	; 0xf40 <__vector_20+0x7a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
     fc2:	10 92 53 43 	sts	0x4353, r1	; 0x804353 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
     fc6:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
     fc8:	0e 94 76 3f 	call	0x7eec	; 0x7eec <nextFullSBTxBuffer>
     fcc:	80 93 54 43 	sts	0x4354, r24	; 0x804354 <_ZZ11__vector_20E4buff_0>
     fd0:	90 93 55 43 	sts	0x4355, r25	; 0x804355 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
     fd4:	89 2b       	or	r24, r25
     fd6:	29 f6       	brne	.-118    	; 0xf62 <__vector_20+0x9c>
			{
				serialbus_end_tx();
     fd8:	0e 94 bc 3f 	call	0x7f78	; 0x7f78 <serialbus_end_tx>
			}
		}
	}
}
     fdc:	c2 cf       	rjmp	.-124    	; 0xf62 <__vector_20+0x9c>

00000fde <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
     fde:	1f 92       	push	r1
     fe0:	0f 92       	push	r0
     fe2:	0f b6       	in	r0, 0x3f	; 63
     fe4:	0f 92       	push	r0
     fe6:	11 24       	eor	r1, r1
     fe8:	0b b6       	in	r0, 0x3b	; 59
     fea:	0f 92       	push	r0
     fec:	2f 93       	push	r18
     fee:	3f 93       	push	r19
     ff0:	4f 93       	push	r20
     ff2:	5f 93       	push	r21
     ff4:	6f 93       	push	r22
     ff6:	7f 93       	push	r23
     ff8:	8f 93       	push	r24
     ffa:	9f 93       	push	r25
     ffc:	af 93       	push	r26
     ffe:	bf 93       	push	r27
    1000:	ef 93       	push	r30
    1002:	ff 93       	push	r31
	if(g_linkbus_usart_number == USART_4)
    1004:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_linkbus_usart_number>
    1008:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    100c:	04 97       	sbiw	r24, 0x04	; 4
    100e:	d1 f0       	breq	.+52     	; 0x1044 <__vector_56+0x66>
				linkbus_end_tx();
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    1010:	80 91 5b 40 	lds	r24, 0x405B	; 0x80405b <g_serialbus_usart_number>
    1014:	90 91 5c 40 	lds	r25, 0x405C	; 0x80405c <g_serialbus_usart_number+0x1>
    1018:	04 97       	sbiw	r24, 0x04	; 4
    101a:	09 f4       	brne	.+2      	; 0x101e <__vector_56+0x40>
    101c:	41 c0       	rjmp	.+130    	; 0x10a0 <__vector_56+0xc2>
			{
				serialbus_end_tx();
			}
		}
	}
}
    101e:	ff 91       	pop	r31
    1020:	ef 91       	pop	r30
    1022:	bf 91       	pop	r27
    1024:	af 91       	pop	r26
    1026:	9f 91       	pop	r25
    1028:	8f 91       	pop	r24
    102a:	7f 91       	pop	r23
    102c:	6f 91       	pop	r22
    102e:	5f 91       	pop	r21
    1030:	4f 91       	pop	r20
    1032:	3f 91       	pop	r19
    1034:	2f 91       	pop	r18
    1036:	0f 90       	pop	r0
    1038:	0b be       	out	0x3b, r0	; 59
    103a:	0f 90       	pop	r0
    103c:	0f be       	out	0x3f, r0	; 63
    103e:	0f 90       	pop	r0
    1040:	1f 90       	pop	r1
    1042:	18 95       	reti
	if(g_linkbus_usart_number == USART_4)
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1044:	80 91 51 43 	lds	r24, 0x4351	; 0x804351 <_ZZ11__vector_56E4buff>
    1048:	90 91 52 43 	lds	r25, 0x4352	; 0x804352 <_ZZ11__vector_56E4buff+0x1>
    104c:	89 2b       	or	r24, r25
    104e:	91 f0       	breq	.+36     	; 0x1074 <__vector_56+0x96>
		{
			buff = nextFullLBTxBuffer();
		}

		if((*buff)[charIndex])
    1050:	e0 91 51 43 	lds	r30, 0x4351	; 0x804351 <_ZZ11__vector_56E4buff>
    1054:	f0 91 52 43 	lds	r31, 0x4352	; 0x804352 <_ZZ11__vector_56E4buff+0x1>
    1058:	80 91 50 43 	lds	r24, 0x4350	; 0x804350 <_ZZ11__vector_56E9charIndex>
    105c:	df 01       	movw	r26, r30
    105e:	a8 0f       	add	r26, r24
    1060:	b1 1d       	adc	r27, r1
    1062:	9c 91       	ld	r25, X
    1064:	99 23       	and	r25, r25
    1066:	69 f0       	breq	.+26     	; 0x1082 <__vector_56+0xa4>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1068:	8f 5f       	subi	r24, 0xFF	; 255
    106a:	80 93 50 43 	sts	0x4350, r24	; 0x804350 <_ZZ11__vector_56E9charIndex>
    106e:	90 93 82 08 	sts	0x0882, r25	; 0x800882 <__TEXT_REGION_LENGTH__+0x7e0882>
    1072:	ce cf       	rjmp	.-100    	; 0x1010 <__vector_56+0x32>
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
		{
			buff = nextFullLBTxBuffer();
    1074:	0e 94 c4 3a 	call	0x7588	; 0x7588 <_Z18nextFullLBTxBufferv>
    1078:	80 93 51 43 	sts	0x4351, r24	; 0x804351 <_ZZ11__vector_56E4buff>
    107c:	90 93 52 43 	sts	0x4352, r25	; 0x804352 <_ZZ11__vector_56E4buff+0x1>
    1080:	e7 cf       	rjmp	.-50     	; 0x1050 <__vector_56+0x72>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1082:	10 92 50 43 	sts	0x4350, r1	; 0x804350 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    1086:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1088:	0e 94 c4 3a 	call	0x7588	; 0x7588 <_Z18nextFullLBTxBufferv>
    108c:	80 93 51 43 	sts	0x4351, r24	; 0x804351 <_ZZ11__vector_56E4buff>
    1090:	90 93 52 43 	sts	0x4352, r25	; 0x804352 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    1094:	89 2b       	or	r24, r25
    1096:	09 f0       	breq	.+2      	; 0x109a <__vector_56+0xbc>
    1098:	bb cf       	rjmp	.-138    	; 0x1010 <__vector_56+0x32>
			{
				linkbus_end_tx();
    109a:	0e 94 9e 3b 	call	0x773c	; 0x773c <_Z14linkbus_end_txv>
    109e:	b8 cf       	rjmp	.-144    	; 0x1010 <__vector_56+0x32>
	if(g_serialbus_usart_number == USART_4)
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    10a0:	80 91 4e 43 	lds	r24, 0x434E	; 0x80434e <_ZZ11__vector_56E4buff_0>
    10a4:	90 91 4f 43 	lds	r25, 0x434F	; 0x80434f <_ZZ11__vector_56E4buff_0+0x1>
    10a8:	89 2b       	or	r24, r25
    10aa:	91 f0       	breq	.+36     	; 0x10d0 <__vector_56+0xf2>
		{
			buff = nextFullSBTxBuffer();
		}

		if((*buff)[charIndex])
    10ac:	e0 91 4e 43 	lds	r30, 0x434E	; 0x80434e <_ZZ11__vector_56E4buff_0>
    10b0:	f0 91 4f 43 	lds	r31, 0x434F	; 0x80434f <_ZZ11__vector_56E4buff_0+0x1>
    10b4:	80 91 4d 43 	lds	r24, 0x434D	; 0x80434d <_ZZ11__vector_56E9charIndex_0>
    10b8:	df 01       	movw	r26, r30
    10ba:	a8 0f       	add	r26, r24
    10bc:	b1 1d       	adc	r27, r1
    10be:	9c 91       	ld	r25, X
    10c0:	99 23       	and	r25, r25
    10c2:	69 f0       	breq	.+26     	; 0x10de <__vector_56+0x100>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    10c4:	8f 5f       	subi	r24, 0xFF	; 255
    10c6:	80 93 4d 43 	sts	0x434D, r24	; 0x80434d <_ZZ11__vector_56E9charIndex_0>
    10ca:	90 93 82 08 	sts	0x0882, r25	; 0x800882 <__TEXT_REGION_LENGTH__+0x7e0882>
    10ce:	a7 cf       	rjmp	.-178    	; 0x101e <__vector_56+0x40>
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
		{
			buff = nextFullSBTxBuffer();
    10d0:	0e 94 76 3f 	call	0x7eec	; 0x7eec <nextFullSBTxBuffer>
    10d4:	80 93 4e 43 	sts	0x434E, r24	; 0x80434e <_ZZ11__vector_56E4buff_0>
    10d8:	90 93 4f 43 	sts	0x434F, r25	; 0x80434f <_ZZ11__vector_56E4buff_0+0x1>
    10dc:	e7 cf       	rjmp	.-50     	; 0x10ac <__vector_56+0xce>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    10de:	10 92 4d 43 	sts	0x434D, r1	; 0x80434d <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    10e2:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    10e4:	0e 94 76 3f 	call	0x7eec	; 0x7eec <nextFullSBTxBuffer>
    10e8:	80 93 4e 43 	sts	0x434E, r24	; 0x80434e <_ZZ11__vector_56E4buff_0>
    10ec:	90 93 4f 43 	sts	0x434F, r25	; 0x80434f <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    10f0:	89 2b       	or	r24, r25
    10f2:	09 f0       	breq	.+2      	; 0x10f6 <__vector_56+0x118>
    10f4:	94 cf       	rjmp	.-216    	; 0x101e <__vector_56+0x40>
			{
				serialbus_end_tx();
    10f6:	0e 94 bc 3f 	call	0x7f78	; 0x7f78 <serialbus_end_tx>
			}
		}
	}
}
    10fa:	91 cf       	rjmp	.-222    	; 0x101e <__vector_56+0x40>

000010fc <_Z10linkbus_Rxh>:
		serial_Rx(rx_char);
	}
}

void linkbus_Rx(uint8_t rx_char)
{
    10fc:	0f 93       	push	r16
    10fe:	1f 93       	push	r17
    1100:	cf 93       	push	r28
    1102:	df 93       	push	r29
    1104:	18 2f       	mov	r17, r24
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;
	static bool escapeNext = false;

	if(!buff)
    1106:	c0 91 4b 43 	lds	r28, 0x434B	; 0x80434b <_ZZ10linkbus_RxhE4buff>
    110a:	d0 91 4c 43 	lds	r29, 0x434C	; 0x80434c <_ZZ10linkbus_RxhE4buff+0x1>
    110e:	20 97       	sbiw	r28, 0x00	; 0
    1110:	09 f4       	brne	.+2      	; 0x1114 <_Z10linkbus_Rxh+0x18>
    1112:	4c c0       	rjmp	.+152    	; 0x11ac <_Z10linkbus_Rxh+0xb0>
		buff = nextEmptyLBRxBuffer();
	}

	if(buff)
	{
		rx_char = toupper(rx_char);
    1114:	81 2f       	mov	r24, r17
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	0e 94 16 50 	call	0xa02c	; 0xa02c <toupper>
		
		if(!escapeNext && (rx_char == '\\'))
    111c:	90 91 42 43 	lds	r25, 0x4342	; 0x804342 <_ZZ10linkbus_RxhE10escapeNext>
    1120:	91 11       	cpse	r25, r1
    1122:	53 c0       	rjmp	.+166    	; 0x11ca <_Z10linkbus_Rxh+0xce>
    1124:	8c 35       	cpi	r24, 0x5C	; 92
    1126:	09 f4       	brne	.+2      	; 0x112a <_Z10linkbus_Rxh+0x2e>
    1128:	4c c0       	rjmp	.+152    	; 0x11c2 <_Z10linkbus_Rxh+0xc6>
		{
			escapeNext = true;
		}
		else if(!escapeNext && ((rx_char == '$') || (rx_char == '!')))    /* start of new message = $ */
    112a:	84 32       	cpi	r24, 0x24	; 36
    112c:	09 f4       	brne	.+2      	; 0x1130 <_Z10linkbus_Rxh+0x34>
    112e:	a2 c0       	rjmp	.+324    	; 0x1274 <_Z10linkbus_Rxh+0x178>
    1130:	81 32       	cpi	r24, 0x21	; 33
    1132:	09 f4       	brne	.+2      	; 0x1136 <_Z10linkbus_Rxh+0x3a>
    1134:	9a c0       	rjmp	.+308    	; 0x126a <_Z10linkbus_Rxh+0x16e>
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
		}
		else if(receiving_msg)
    1136:	20 91 43 43 	lds	r18, 0x4343	; 0x804343 <_ZZ10linkbus_RxhE13receiving_msg>
    113a:	22 23       	and	r18, r18
    113c:	09 f4       	brne	.+2      	; 0x1140 <_Z10linkbus_Rxh+0x44>
    113e:	ec c0       	rjmp	.+472    	; 0x1318 <_Z10linkbus_Rxh+0x21c>
		{
			if(!escapeNext && ((rx_char == ',') || (rx_char == ';') || (rx_char == '?')))   /* new field = ,; end of message = ; */
    1140:	8c 32       	cpi	r24, 0x2C	; 44
    1142:	09 f4       	brne	.+2      	; 0x1146 <_Z10linkbus_Rxh+0x4a>
    1144:	4c c0       	rjmp	.+152    	; 0x11de <_Z10linkbus_Rxh+0xe2>
    1146:	8b 33       	cpi	r24, 0x3B	; 59
    1148:	09 f4       	brne	.+2      	; 0x114c <_Z10linkbus_Rxh+0x50>
    114a:	c6 c0       	rjmp	.+396    	; 0x12d8 <_Z10linkbus_Rxh+0x1dc>
    114c:	8f 33       	cpi	r24, 0x3F	; 63
    114e:	09 f4       	brne	.+2      	; 0x1152 <_Z10linkbus_Rxh+0x56>
    1150:	b9 c0       	rjmp	.+370    	; 0x12c4 <_Z10linkbus_Rxh+0x1c8>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1152:	20 91 49 43 	lds	r18, 0x4349	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
    1156:	21 11       	cpse	r18, r1
    1158:	74 c0       	rjmp	.+232    	; 0x1242 <_Z10linkbus_Rxh+0x146>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    115a:	00 91 44 43 	lds	r16, 0x4344	; 0x804344 <_ZZ10linkbus_RxhE10tempMsg_ID>
    115e:	10 91 45 43 	lds	r17, 0x4345	; 0x804345 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1162:	20 91 46 43 	lds	r18, 0x4346	; 0x804346 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1166:	30 91 47 43 	lds	r19, 0x4347	; 0x804347 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    116a:	b9 01       	movw	r22, r18
    116c:	a8 01       	movw	r20, r16
    116e:	44 0f       	add	r20, r20
    1170:	55 1f       	adc	r21, r21
    1172:	66 1f       	adc	r22, r22
    1174:	77 1f       	adc	r23, r23
    1176:	44 0f       	add	r20, r20
    1178:	55 1f       	adc	r21, r21
    117a:	66 1f       	adc	r22, r22
    117c:	77 1f       	adc	r23, r23
    117e:	40 0f       	add	r20, r16
    1180:	51 1f       	adc	r21, r17
    1182:	62 1f       	adc	r22, r18
    1184:	73 1f       	adc	r23, r19
    1186:	44 0f       	add	r20, r20
    1188:	55 1f       	adc	r21, r21
    118a:	66 1f       	adc	r22, r22
    118c:	77 1f       	adc	r23, r23
    118e:	48 0f       	add	r20, r24
    1190:	51 1d       	adc	r21, r1
    1192:	61 1d       	adc	r22, r1
    1194:	71 1d       	adc	r23, r1
    1196:	40 93 44 43 	sts	0x4344, r20	; 0x804344 <_ZZ10linkbus_RxhE10tempMsg_ID>
    119a:	50 93 45 43 	sts	0x4345, r21	; 0x804345 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    119e:	60 93 46 43 	sts	0x4346, r22	; 0x804346 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    11a2:	70 93 47 43 	sts	0x4347, r23	; 0x804347 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
				}
				
				escapeNext = false;
    11a6:	10 92 42 43 	sts	0x4342, r1	; 0x804342 <_ZZ10linkbus_RxhE10escapeNext>
    11aa:	7c c0       	rjmp	.+248    	; 0x12a4 <_Z10linkbus_Rxh+0x1a8>
	static bool receiving_msg = false;
	static bool escapeNext = false;

	if(!buff)
	{
		buff = nextEmptyLBRxBuffer();
    11ac:	0e 94 08 3b 	call	0x7610	; 0x7610 <_Z19nextEmptyLBRxBufferv>
    11b0:	ec 01       	movw	r28, r24
    11b2:	80 93 4b 43 	sts	0x434B, r24	; 0x80434b <_ZZ10linkbus_RxhE4buff>
    11b6:	90 93 4c 43 	sts	0x434C, r25	; 0x80434c <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    11ba:	89 2b       	or	r24, r25
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <_Z10linkbus_Rxh+0xc4>
    11be:	7d c0       	rjmp	.+250    	; 0x12ba <_Z10linkbus_Rxh+0x1be>
    11c0:	a9 cf       	rjmp	.-174    	; 0x1114 <_Z10linkbus_Rxh+0x18>
	{
		rx_char = toupper(rx_char);
		
		if(!escapeNext && (rx_char == '\\'))
		{
			escapeNext = true;
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	80 93 42 43 	sts	0x4342, r24	; 0x804342 <_ZZ10linkbus_RxhE10escapeNext>
    11c8:	78 c0       	rjmp	.+240    	; 0x12ba <_Z10linkbus_Rxh+0x1be>
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
		}
		else if(receiving_msg)
    11ca:	20 91 43 43 	lds	r18, 0x4343	; 0x804343 <_ZZ10linkbus_RxhE13receiving_msg>
    11ce:	21 11       	cpse	r18, r1
    11d0:	c0 cf       	rjmp	.-128    	; 0x1152 <_Z10linkbus_Rxh+0x56>
				}
				
				escapeNext = false;
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    11d2:	8d 30       	cpi	r24, 0x0D	; 13
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <_Z10linkbus_Rxh+0xdc>
    11d6:	b6 c0       	rjmp	.+364    	; 0x1344 <_Z10linkbus_Rxh+0x248>
			tempMsg_ID = 0;
			field_index = 0;
			buff = NULL;
		}

		if(!escapeNext)
    11d8:	91 11       	cpse	r25, r1
    11da:	6f c0       	rjmp	.+222    	; 0x12ba <_Z10linkbus_Rxh+0x1be>
    11dc:	63 c0       	rjmp	.+198    	; 0x12a4 <_Z10linkbus_Rxh+0x1a8>
		else if(receiving_msg)
		{
			if(!escapeNext && ((rx_char == ',') || (rx_char == ';') || (rx_char == '?')))   /* new field = ,; end of message = ; */
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    11de:	20 91 49 43 	lds	r18, 0x4349	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
    11e2:	22 23       	and	r18, r18
    11e4:	09 f4       	brne	.+2      	; 0x11e8 <_Z10linkbus_Rxh+0xec>
    11e6:	92 c0       	rjmp	.+292    	; 0x130c <_Z10linkbus_Rxh+0x210>
				{
					buff->fields[field_index - 1][field_len] = 0;
    11e8:	42 2f       	mov	r20, r18
    11ea:	41 50       	subi	r20, 0x01	; 1
    11ec:	55 0b       	sbc	r21, r21
    11ee:	ba 01       	movw	r22, r20
    11f0:	e0 91 48 43 	lds	r30, 0x4348	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
    11f4:	35 e1       	ldi	r19, 0x15	; 21
    11f6:	36 9f       	mul	r19, r22
    11f8:	a0 01       	movw	r20, r0
    11fa:	37 9f       	mul	r19, r23
    11fc:	50 0d       	add	r21, r0
    11fe:	11 24       	eor	r1, r1
    1200:	4c 0f       	add	r20, r28
    1202:	5d 1f       	adc	r21, r29
    1204:	e4 0f       	add	r30, r20
    1206:	f5 2f       	mov	r31, r21
    1208:	f1 1d       	adc	r31, r1
    120a:	14 82       	std	Z+4, r1	; 0x04
				}

				field_index++;
    120c:	2f 5f       	subi	r18, 0xFF	; 255
    120e:	20 93 49 43 	sts	0x4349, r18	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1212:	10 92 48 43 	sts	0x4348, r1	; 0x804348 <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1216:	8b 33       	cpi	r24, 0x3B	; 59
    1218:	09 f4       	brne	.+2      	; 0x121c <_Z10linkbus_Rxh+0x120>
    121a:	67 c0       	rjmp	.+206    	; 0x12ea <_Z10linkbus_Rxh+0x1ee>
					{
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}
				else if(rx_char == '?')
    121c:	8f 33       	cpi	r24, 0x3F	; 63
    121e:	e1 f6       	brne	.-72     	; 0x11d8 <_Z10linkbus_Rxh+0xdc>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1220:	82 e0       	ldi	r24, 0x02	; 2
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	88 83       	st	Y, r24
    1226:	99 83       	std	Y+1, r25	; 0x01
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1228:	80 91 4a 43 	lds	r24, 0x434A	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
    122c:	83 30       	cpi	r24, 0x03	; 3
    122e:	30 f0       	brcs	.+12     	; 0x123c <_Z10linkbus_Rxh+0x140>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1230:	80 91 44 43 	lds	r24, 0x4344	; 0x804344 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1234:	90 91 45 43 	lds	r25, 0x4345	; 0x804345 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1238:	8a 83       	std	Y+2, r24	; 0x02
    123a:	9b 83       	std	Y+3, r25	; 0x03
					}
					receiving_msg = false;
    123c:	10 92 43 43 	sts	0x4343, r1	; 0x804343 <_ZZ10linkbus_RxhE13receiving_msg>
    1240:	60 c0       	rjmp	.+192    	; 0x1302 <_Z10linkbus_Rxh+0x206>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1242:	90 91 48 43 	lds	r25, 0x4348	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
    1246:	31 e0       	ldi	r19, 0x01	; 1
    1248:	39 0f       	add	r19, r25
    124a:	30 93 48 43 	sts	0x4348, r19	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
    124e:	21 50       	subi	r18, 0x01	; 1
    1250:	33 0b       	sbc	r19, r19
    1252:	65 e1       	ldi	r22, 0x15	; 21
    1254:	62 9f       	mul	r22, r18
    1256:	a0 01       	movw	r20, r0
    1258:	63 9f       	mul	r22, r19
    125a:	50 0d       	add	r21, r0
    125c:	11 24       	eor	r1, r1
    125e:	c4 0f       	add	r28, r20
    1260:	d5 1f       	adc	r29, r21
    1262:	c9 0f       	add	r28, r25
    1264:	d1 1d       	adc	r29, r1
    1266:	8c 83       	std	Y+4, r24	; 0x04
    1268:	9e cf       	rjmp	.-196    	; 0x11a6 <_Z10linkbus_Rxh+0xaa>
		{
			escapeNext = true;
		}
		else if(!escapeNext && ((rx_char == '$') || (rx_char == '!')))    /* start of new message = $ */
		{
			charIndex = 0;
    126a:	10 92 4a 43 	sts	0x434A, r1	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    126e:	83 e0       	ldi	r24, 0x03	; 3
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	04 c0       	rjmp	.+8      	; 0x127c <_Z10linkbus_Rxh+0x180>
		{
			escapeNext = true;
		}
		else if(!escapeNext && ((rx_char == '$') || (rx_char == '!')))    /* start of new message = $ */
		{
			charIndex = 0;
    1274:	10 92 4a 43 	sts	0x434A, r1	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1278:	81 e0       	ldi	r24, 0x01	; 1
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	88 83       	st	Y, r24
    127e:	99 83       	std	Y+1, r25	; 0x01
			field_len = 0;
    1280:	10 92 48 43 	sts	0x4348, r1	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1284:	10 92 44 43 	sts	0x4344, r1	; 0x804344 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1288:	10 92 45 43 	sts	0x4345, r1	; 0x804345 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    128c:	10 92 46 43 	sts	0x4346, r1	; 0x804346 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1290:	10 92 47 43 	sts	0x4347, r1	; 0x804347 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	80 93 43 43 	sts	0x4343, r24	; 0x804343 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
			{
				buff->fields[field_index][0] = '\0';
    129a:	1c 82       	std	Y+4, r1	; 0x04
    129c:	19 8e       	std	Y+25, r1	; 0x19
    129e:	1e a6       	std	Y+46, r1	; 0x2e
			}

			field_index = 0;
    12a0:	10 92 49 43 	sts	0x4349, r1	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
		}

		if(!escapeNext)
		{
			if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    12a4:	80 91 4a 43 	lds	r24, 0x434A	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
    12a8:	8f 5f       	subi	r24, 0xFF	; 255
    12aa:	80 93 4a 43 	sts	0x434A, r24	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
    12ae:	82 33       	cpi	r24, 0x32	; 50
    12b0:	20 f0       	brcs	.+8      	; 0x12ba <_Z10linkbus_Rxh+0x1be>
			{
				receiving_msg = false;
    12b2:	10 92 43 43 	sts	0x4343, r1	; 0x804343 <_ZZ10linkbus_RxhE13receiving_msg>
				charIndex = 0;
    12b6:	10 92 4a 43 	sts	0x434A, r1	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
			}
		}
	}
}
    12ba:	df 91       	pop	r29
    12bc:	cf 91       	pop	r28
    12be:	1f 91       	pop	r17
    12c0:	0f 91       	pop	r16
    12c2:	08 95       	ret
		else if(receiving_msg)
		{
			if(!escapeNext && ((rx_char == ',') || (rx_char == ';') || (rx_char == '?')))   /* new field = ,; end of message = ; */
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    12c4:	20 91 49 43 	lds	r18, 0x4349	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
    12c8:	21 11       	cpse	r18, r1
    12ca:	8e cf       	rjmp	.-228    	; 0x11e8 <_Z10linkbus_Rxh+0xec>
				{
					buff->fields[field_index - 1][field_len] = 0;
				}

				field_index++;
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	80 93 49 43 	sts	0x4349, r24	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    12d2:	10 92 48 43 	sts	0x4348, r1	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
    12d6:	a4 cf       	rjmp	.-184    	; 0x1220 <_Z10linkbus_Rxh+0x124>
		else if(receiving_msg)
		{
			if(!escapeNext && ((rx_char == ',') || (rx_char == ';') || (rx_char == '?')))   /* new field = ,; end of message = ; */
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    12d8:	20 91 49 43 	lds	r18, 0x4349	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
    12dc:	21 11       	cpse	r18, r1
    12de:	84 cf       	rjmp	.-248    	; 0x11e8 <_Z10linkbus_Rxh+0xec>
				{
					buff->fields[field_index - 1][field_len] = 0;
				}

				field_index++;
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	80 93 49 43 	sts	0x4349, r24	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    12e6:	10 92 48 43 	sts	0x4348, r1	; 0x804348 <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    12ea:	80 91 4a 43 	lds	r24, 0x434A	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
    12ee:	84 30       	cpi	r24, 0x04	; 4
    12f0:	30 f0       	brcs	.+12     	; 0x12fe <_Z10linkbus_Rxh+0x202>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    12f2:	80 91 44 43 	lds	r24, 0x4344	; 0x804344 <_ZZ10linkbus_RxhE10tempMsg_ID>
    12f6:	90 91 45 43 	lds	r25, 0x4345	; 0x804345 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    12fa:	8a 83       	std	Y+2, r24	; 0x02
    12fc:	9b 83       	std	Y+3, r25	; 0x03
					}
					receiving_msg = false;
    12fe:	10 92 43 43 	sts	0x4343, r1	; 0x804343 <_ZZ10linkbus_RxhE13receiving_msg>
					receiving_msg = false;
				}

				if(!receiving_msg)
				{
					buff = 0;
    1302:	10 92 4b 43 	sts	0x434B, r1	; 0x80434b <_ZZ10linkbus_RxhE4buff>
    1306:	10 92 4c 43 	sts	0x434C, r1	; 0x80434c <_ZZ10linkbus_RxhE4buff+0x1>
    130a:	cc cf       	rjmp	.-104    	; 0x12a4 <_Z10linkbus_Rxh+0x1a8>
				if(field_index > 0)
				{
					buff->fields[field_index - 1][field_len] = 0;
				}

				field_index++;
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	80 93 49 43 	sts	0x4349, r24	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1312:	10 92 48 43 	sts	0x4348, r1	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
    1316:	60 cf       	rjmp	.-320    	; 0x11d8 <_Z10linkbus_Rxh+0xdc>
				}
				
				escapeNext = false;
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1318:	8d 30       	cpi	r24, 0x0D	; 13
    131a:	09 f0       	breq	.+2      	; 0x131e <_Z10linkbus_Rxh+0x222>
    131c:	5d cf       	rjmp	.-326    	; 0x11d8 <_Z10linkbus_Rxh+0xdc>
		{
			buff->id = LB_MESSAGE_EMPTY;
    131e:	1a 82       	std	Y+2, r1	; 0x02
    1320:	1b 82       	std	Y+3, r1	; 0x03
			charIndex = LINKBUS_MAX_MSG_LENGTH;
			field_len = 0;
    1322:	10 92 48 43 	sts	0x4348, r1	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1326:	10 92 44 43 	sts	0x4344, r1	; 0x804344 <_ZZ10linkbus_RxhE10tempMsg_ID>
    132a:	10 92 45 43 	sts	0x4345, r1	; 0x804345 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    132e:	10 92 46 43 	sts	0x4346, r1	; 0x804346 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1332:	10 92 47 43 	sts	0x4347, r1	; 0x804347 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1336:	10 92 49 43 	sts	0x4349, r1	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    133a:	10 92 4b 43 	sts	0x434B, r1	; 0x80434b <_ZZ10linkbus_RxhE4buff>
    133e:	10 92 4c 43 	sts	0x434C, r1	; 0x80434c <_ZZ10linkbus_RxhE4buff+0x1>
    1342:	b7 cf       	rjmp	.-146    	; 0x12b2 <_Z10linkbus_Rxh+0x1b6>
				escapeNext = false;
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
		{
			buff->id = LB_MESSAGE_EMPTY;
    1344:	1a 82       	std	Y+2, r1	; 0x02
    1346:	1b 82       	std	Y+3, r1	; 0x03
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1348:	82 e3       	ldi	r24, 0x32	; 50
    134a:	80 93 4a 43 	sts	0x434A, r24	; 0x80434a <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    134e:	10 92 48 43 	sts	0x4348, r1	; 0x804348 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1352:	10 92 44 43 	sts	0x4344, r1	; 0x804344 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1356:	10 92 45 43 	sts	0x4345, r1	; 0x804345 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    135a:	10 92 46 43 	sts	0x4346, r1	; 0x804346 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    135e:	10 92 47 43 	sts	0x4347, r1	; 0x804347 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1362:	10 92 49 43 	sts	0x4349, r1	; 0x804349 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1366:	10 92 4b 43 	sts	0x434B, r1	; 0x80434b <_ZZ10linkbus_RxhE4buff>
    136a:	10 92 4c 43 	sts	0x434C, r1	; 0x80434c <_ZZ10linkbus_RxhE4buff+0x1>
    136e:	a5 cf       	rjmp	.-182    	; 0x12ba <_Z10linkbus_Rxh+0x1be>

00001370 <__vector_19>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(USART0_RXC_vect)
{
    1370:	1f 92       	push	r1
    1372:	0f 92       	push	r0
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	0f 92       	push	r0
    1378:	11 24       	eor	r1, r1
    137a:	0b b6       	in	r0, 0x3b	; 59
    137c:	0f 92       	push	r0
    137e:	2f 93       	push	r18
    1380:	3f 93       	push	r19
    1382:	4f 93       	push	r20
    1384:	5f 93       	push	r21
    1386:	6f 93       	push	r22
    1388:	7f 93       	push	r23
    138a:	8f 93       	push	r24
    138c:	9f 93       	push	r25
    138e:	af 93       	push	r26
    1390:	bf 93       	push	r27
    1392:	ef 93       	push	r30
    1394:	ff 93       	push	r31
	uint8_t rx_char = USART0_get_data();
    1396:	0e 94 08 4b 	call	0x9610	; 0x9610 <USART0_get_data>
	
	if(g_linkbus_usart_number == USART_0)
    139a:	20 91 54 40 	lds	r18, 0x4054	; 0x804054 <g_linkbus_usart_number>
    139e:	30 91 55 40 	lds	r19, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    13a2:	23 2b       	or	r18, r19
    13a4:	99 f0       	breq	.+38     	; 0x13cc <__vector_19+0x5c>
	
	if(g_serialbus_usart_number == USART_0)
	{
		serial_Rx(rx_char);
	}
}
    13a6:	ff 91       	pop	r31
    13a8:	ef 91       	pop	r30
    13aa:	bf 91       	pop	r27
    13ac:	af 91       	pop	r26
    13ae:	9f 91       	pop	r25
    13b0:	8f 91       	pop	r24
    13b2:	7f 91       	pop	r23
    13b4:	6f 91       	pop	r22
    13b6:	5f 91       	pop	r21
    13b8:	4f 91       	pop	r20
    13ba:	3f 91       	pop	r19
    13bc:	2f 91       	pop	r18
    13be:	0f 90       	pop	r0
    13c0:	0b be       	out	0x3b, r0	; 59
    13c2:	0f 90       	pop	r0
    13c4:	0f be       	out	0x3f, r0	; 63
    13c6:	0f 90       	pop	r0
    13c8:	1f 90       	pop	r1
    13ca:	18 95       	reti
{
	uint8_t rx_char = USART0_get_data();
	
	if(g_linkbus_usart_number == USART_0)
	{
		linkbus_Rx(rx_char);
    13cc:	0e 94 7e 08 	call	0x10fc	; 0x10fc <_Z10linkbus_Rxh>
	
	if(g_serialbus_usart_number == USART_0)
	{
		serial_Rx(rx_char);
	}
}
    13d0:	ea cf       	rjmp	.-44     	; 0x13a6 <__vector_19+0x36>

000013d2 <__vector_55>:

ISR(USART4_RXC_vect)
{
    13d2:	1f 92       	push	r1
    13d4:	0f 92       	push	r0
    13d6:	0f b6       	in	r0, 0x3f	; 63
    13d8:	0f 92       	push	r0
    13da:	11 24       	eor	r1, r1
    13dc:	0b b6       	in	r0, 0x3b	; 59
    13de:	0f 92       	push	r0
    13e0:	2f 93       	push	r18
    13e2:	3f 93       	push	r19
    13e4:	4f 93       	push	r20
    13e6:	5f 93       	push	r21
    13e8:	6f 93       	push	r22
    13ea:	7f 93       	push	r23
    13ec:	8f 93       	push	r24
    13ee:	9f 93       	push	r25
    13f0:	af 93       	push	r26
    13f2:	bf 93       	push	r27
    13f4:	ef 93       	push	r30
    13f6:	ff 93       	push	r31
	uint8_t rx_char = USART4_get_data();
    13f8:	0e 94 94 4b 	call	0x9728	; 0x9728 <USART4_get_data>
	
	if(g_linkbus_usart_number == USART_4)
    13fc:	20 91 54 40 	lds	r18, 0x4054	; 0x804054 <g_linkbus_usart_number>
    1400:	30 91 55 40 	lds	r19, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    1404:	24 30       	cpi	r18, 0x04	; 4
    1406:	31 05       	cpc	r19, r1
    1408:	99 f0       	breq	.+38     	; 0x1430 <__vector_55+0x5e>
	
	if(g_serialbus_usart_number == USART_4)
	{
		serial_Rx(rx_char);
	}
}
    140a:	ff 91       	pop	r31
    140c:	ef 91       	pop	r30
    140e:	bf 91       	pop	r27
    1410:	af 91       	pop	r26
    1412:	9f 91       	pop	r25
    1414:	8f 91       	pop	r24
    1416:	7f 91       	pop	r23
    1418:	6f 91       	pop	r22
    141a:	5f 91       	pop	r21
    141c:	4f 91       	pop	r20
    141e:	3f 91       	pop	r19
    1420:	2f 91       	pop	r18
    1422:	0f 90       	pop	r0
    1424:	0b be       	out	0x3b, r0	; 59
    1426:	0f 90       	pop	r0
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	0f 90       	pop	r0
    142c:	1f 90       	pop	r1
    142e:	18 95       	reti
{
	uint8_t rx_char = USART4_get_data();
	
	if(g_linkbus_usart_number == USART_4)
	{
		linkbus_Rx(rx_char);
    1430:	0e 94 7e 08 	call	0x10fc	; 0x10fc <_Z10linkbus_Rxh>
	
	if(g_serialbus_usart_number == USART_4)
	{
		serial_Rx(rx_char);
	}
}
    1434:	ea cf       	rjmp	.-44     	; 0x140a <__vector_55+0x38>

00001436 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    1436:	1f 92       	push	r1
    1438:	0f 92       	push	r0
    143a:	0f b6       	in	r0, 0x3f	; 63
    143c:	0f 92       	push	r0
    143e:	11 24       	eor	r1, r1
    1440:	0b b6       	in	r0, 0x3b	; 59
    1442:	0f 92       	push	r0
    1444:	2f 93       	push	r18
    1446:	3f 93       	push	r19
    1448:	4f 93       	push	r20
    144a:	5f 93       	push	r21
    144c:	6f 93       	push	r22
    144e:	7f 93       	push	r23
    1450:	8f 93       	push	r24
    1452:	9f 93       	push	r25
    1454:	af 93       	push	r26
    1456:	bf 93       	push	r27
    1458:	ef 93       	push	r30
    145a:	ff 93       	push	r31
	uint8_t rx_char = USART1_get_data();	
    145c:	0e 94 50 4b 	call	0x96a0	; 0x96a0 <USART1_get_data>
	
	if(g_linkbus_usart_number == USART_1)
    1460:	20 91 54 40 	lds	r18, 0x4054	; 0x804054 <g_linkbus_usart_number>
    1464:	30 91 55 40 	lds	r19, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    1468:	21 30       	cpi	r18, 0x01	; 1
    146a:	31 05       	cpc	r19, r1
    146c:	99 f0       	breq	.+38     	; 0x1494 <__vector_31+0x5e>
	
	if(g_serialbus_usart_number == USART_1)
	{
		serial_Rx(rx_char);
	}
}
    146e:	ff 91       	pop	r31
    1470:	ef 91       	pop	r30
    1472:	bf 91       	pop	r27
    1474:	af 91       	pop	r26
    1476:	9f 91       	pop	r25
    1478:	8f 91       	pop	r24
    147a:	7f 91       	pop	r23
    147c:	6f 91       	pop	r22
    147e:	5f 91       	pop	r21
    1480:	4f 91       	pop	r20
    1482:	3f 91       	pop	r19
    1484:	2f 91       	pop	r18
    1486:	0f 90       	pop	r0
    1488:	0b be       	out	0x3b, r0	; 59
    148a:	0f 90       	pop	r0
    148c:	0f be       	out	0x3f, r0	; 63
    148e:	0f 90       	pop	r0
    1490:	1f 90       	pop	r1
    1492:	18 95       	reti
{
	uint8_t rx_char = USART1_get_data();	
	
	if(g_linkbus_usart_number == USART_1)
	{
		linkbus_Rx(rx_char);
    1494:	0e 94 7e 08 	call	0x10fc	; 0x10fc <_Z10linkbus_Rxh>
	
	if(g_serialbus_usart_number == USART_1)
	{
		serial_Rx(rx_char);
	}
}
    1498:	ea cf       	rjmp	.-44     	; 0x146e <__vector_31+0x38>

0000149a <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    149a:	1f 92       	push	r1
    149c:	0f 92       	push	r0
    149e:	0f b6       	in	r0, 0x3f	; 63
    14a0:	0f 92       	push	r0
    14a2:	11 24       	eor	r1, r1
    14a4:	0b b6       	in	r0, 0x3b	; 59
    14a6:	0f 92       	push	r0
    14a8:	2f 93       	push	r18
    14aa:	3f 93       	push	r19
    14ac:	4f 93       	push	r20
    14ae:	5f 93       	push	r21
    14b0:	6f 93       	push	r22
    14b2:	7f 93       	push	r23
    14b4:	8f 93       	push	r24
    14b6:	9f 93       	push	r25
    14b8:	af 93       	push	r26
    14ba:	bf 93       	push	r27
    14bc:	ef 93       	push	r30
    14be:	ff 93       	push	r31
	if(g_serialbus_usart_number == USART_1)
    14c0:	80 91 5b 40 	lds	r24, 0x405B	; 0x80405b <g_serialbus_usart_number>
    14c4:	90 91 5c 40 	lds	r25, 0x405C	; 0x80405c <g_serialbus_usart_number+0x1>
    14c8:	01 97       	sbiw	r24, 0x01	; 1
    14ca:	d1 f0       	breq	.+52     	; 0x1500 <__vector_32+0x66>
				serialbus_end_tx();
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    14cc:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_linkbus_usart_number>
    14d0:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    14d4:	01 97       	sbiw	r24, 0x01	; 1
    14d6:	09 f4       	brne	.+2      	; 0x14da <__vector_32+0x40>
    14d8:	41 c0       	rjmp	.+130    	; 0x155c <__vector_32+0xc2>
			{
				linkbus_end_tx();
			}
		}
	}
}
    14da:	ff 91       	pop	r31
    14dc:	ef 91       	pop	r30
    14de:	bf 91       	pop	r27
    14e0:	af 91       	pop	r26
    14e2:	9f 91       	pop	r25
    14e4:	8f 91       	pop	r24
    14e6:	7f 91       	pop	r23
    14e8:	6f 91       	pop	r22
    14ea:	5f 91       	pop	r21
    14ec:	4f 91       	pop	r20
    14ee:	3f 91       	pop	r19
    14f0:	2f 91       	pop	r18
    14f2:	0f 90       	pop	r0
    14f4:	0b be       	out	0x3b, r0	; 59
    14f6:	0f 90       	pop	r0
    14f8:	0f be       	out	0x3f, r0	; 63
    14fa:	0f 90       	pop	r0
    14fc:	1f 90       	pop	r1
    14fe:	18 95       	reti
	if(g_serialbus_usart_number == USART_1)
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1500:	80 91 40 43 	lds	r24, 0x4340	; 0x804340 <_ZZ11__vector_32E4buff>
    1504:	90 91 41 43 	lds	r25, 0x4341	; 0x804341 <_ZZ11__vector_32E4buff+0x1>
    1508:	89 2b       	or	r24, r25
    150a:	91 f0       	breq	.+36     	; 0x1530 <__vector_32+0x96>
		{
			buff = nextFullSBTxBuffer();
		}

		if((*buff)[charIndex])
    150c:	e0 91 40 43 	lds	r30, 0x4340	; 0x804340 <_ZZ11__vector_32E4buff>
    1510:	f0 91 41 43 	lds	r31, 0x4341	; 0x804341 <_ZZ11__vector_32E4buff+0x1>
    1514:	80 91 3f 43 	lds	r24, 0x433F	; 0x80433f <_ZZ11__vector_32E9charIndex>
    1518:	df 01       	movw	r26, r30
    151a:	a8 0f       	add	r26, r24
    151c:	b1 1d       	adc	r27, r1
    151e:	9c 91       	ld	r25, X
    1520:	99 23       	and	r25, r25
    1522:	69 f0       	breq	.+26     	; 0x153e <__vector_32+0xa4>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1524:	8f 5f       	subi	r24, 0xFF	; 255
    1526:	80 93 3f 43 	sts	0x433F, r24	; 0x80433f <_ZZ11__vector_32E9charIndex>
    152a:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
    152e:	ce cf       	rjmp	.-100    	; 0x14cc <__vector_32+0x32>
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
		{
			buff = nextFullSBTxBuffer();
    1530:	0e 94 76 3f 	call	0x7eec	; 0x7eec <nextFullSBTxBuffer>
    1534:	80 93 40 43 	sts	0x4340, r24	; 0x804340 <_ZZ11__vector_32E4buff>
    1538:	90 93 41 43 	sts	0x4341, r25	; 0x804341 <_ZZ11__vector_32E4buff+0x1>
    153c:	e7 cf       	rjmp	.-50     	; 0x150c <__vector_32+0x72>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    153e:	10 92 3f 43 	sts	0x433F, r1	; 0x80433f <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1542:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1544:	0e 94 76 3f 	call	0x7eec	; 0x7eec <nextFullSBTxBuffer>
    1548:	80 93 40 43 	sts	0x4340, r24	; 0x804340 <_ZZ11__vector_32E4buff>
    154c:	90 93 41 43 	sts	0x4341, r25	; 0x804341 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1550:	89 2b       	or	r24, r25
    1552:	09 f0       	breq	.+2      	; 0x1556 <__vector_32+0xbc>
    1554:	bb cf       	rjmp	.-138    	; 0x14cc <__vector_32+0x32>
			{
				serialbus_end_tx();
    1556:	0e 94 bc 3f 	call	0x7f78	; 0x7f78 <serialbus_end_tx>
    155a:	b8 cf       	rjmp	.-144    	; 0x14cc <__vector_32+0x32>
	if(g_linkbus_usart_number == USART_1)
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    155c:	80 91 3d 43 	lds	r24, 0x433D	; 0x80433d <_ZZ11__vector_32E4buff_0>
    1560:	90 91 3e 43 	lds	r25, 0x433E	; 0x80433e <_ZZ11__vector_32E4buff_0+0x1>
    1564:	89 2b       	or	r24, r25
    1566:	91 f0       	breq	.+36     	; 0x158c <__vector_32+0xf2>
		{
			buff = nextFullLBTxBuffer();
		}

		if((*buff)[charIndex])
    1568:	e0 91 3d 43 	lds	r30, 0x433D	; 0x80433d <_ZZ11__vector_32E4buff_0>
    156c:	f0 91 3e 43 	lds	r31, 0x433E	; 0x80433e <_ZZ11__vector_32E4buff_0+0x1>
    1570:	80 91 3c 43 	lds	r24, 0x433C	; 0x80433c <__data_end>
    1574:	df 01       	movw	r26, r30
    1576:	a8 0f       	add	r26, r24
    1578:	b1 1d       	adc	r27, r1
    157a:	9c 91       	ld	r25, X
    157c:	99 23       	and	r25, r25
    157e:	69 f0       	breq	.+26     	; 0x159a <__vector_32+0x100>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1580:	8f 5f       	subi	r24, 0xFF	; 255
    1582:	80 93 3c 43 	sts	0x433C, r24	; 0x80433c <__data_end>
    1586:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
    158a:	a7 cf       	rjmp	.-178    	; 0x14da <__vector_32+0x40>
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
		{
			buff = nextFullLBTxBuffer();
    158c:	0e 94 c4 3a 	call	0x7588	; 0x7588 <_Z18nextFullLBTxBufferv>
    1590:	80 93 3d 43 	sts	0x433D, r24	; 0x80433d <_ZZ11__vector_32E4buff_0>
    1594:	90 93 3e 43 	sts	0x433E, r25	; 0x80433e <_ZZ11__vector_32E4buff_0+0x1>
    1598:	e7 cf       	rjmp	.-50     	; 0x1568 <__vector_32+0xce>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    159a:	10 92 3c 43 	sts	0x433C, r1	; 0x80433c <__data_end>
			(*buff)[0] = '\0';
    159e:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    15a0:	0e 94 c4 3a 	call	0x7588	; 0x7588 <_Z18nextFullLBTxBufferv>
    15a4:	80 93 3d 43 	sts	0x433D, r24	; 0x80433d <_ZZ11__vector_32E4buff_0>
    15a8:	90 93 3e 43 	sts	0x433E, r25	; 0x80433e <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    15ac:	89 2b       	or	r24, r25
    15ae:	09 f0       	breq	.+2      	; 0x15b2 <__vector_32+0x118>
    15b0:	94 cf       	rjmp	.-216    	; 0x14da <__vector_32+0x40>
			{
				linkbus_end_tx();
    15b2:	0e 94 9e 3b 	call	0x773c	; 0x773c <_Z14linkbus_end_txv>
			}
		}
	}
}
    15b6:	91 cf       	rjmp	.-222    	; 0x14da <__vector_32+0x40>

000015b8 <__vector_6>:
	bool result;
	
	result = !eventScheduled() || !g_event_enabled || ((g_sleepType == SLEEP_USER_OVERRIDE) || (g_sleepType == SLEEP_FOREVER));
	
	return result;
}
    15b8:	1f 92       	push	r1
    15ba:	0f 92       	push	r0
    15bc:	0f b6       	in	r0, 0x3f	; 63
    15be:	0f 92       	push	r0
    15c0:	11 24       	eor	r1, r1
    15c2:	0b b6       	in	r0, 0x3b	; 59
    15c4:	0f 92       	push	r0
    15c6:	0f 93       	push	r16
    15c8:	1f 93       	push	r17
    15ca:	2f 93       	push	r18
    15cc:	3f 93       	push	r19
    15ce:	4f 93       	push	r20
    15d0:	5f 93       	push	r21
    15d2:	6f 93       	push	r22
    15d4:	7f 93       	push	r23
    15d6:	8f 93       	push	r24
    15d8:	9f 93       	push	r25
    15da:	af 93       	push	r26
    15dc:	bf 93       	push	r27
    15de:	ef 93       	push	r30
    15e0:	ff 93       	push	r31
    15e2:	1a 99       	sbic	0x03, 2	; 3
    15e4:	17 c0       	rjmp	.+46     	; 0x1614 <__vector_6+0x5c>
    15e6:	8f ef       	ldi	r24, 0xFF	; 255
    15e8:	83 b9       	out	0x03, r24	; 3
    15ea:	ff 91       	pop	r31
    15ec:	ef 91       	pop	r30
    15ee:	bf 91       	pop	r27
    15f0:	af 91       	pop	r26
    15f2:	9f 91       	pop	r25
    15f4:	8f 91       	pop	r24
    15f6:	7f 91       	pop	r23
    15f8:	6f 91       	pop	r22
    15fa:	5f 91       	pop	r21
    15fc:	4f 91       	pop	r20
    15fe:	3f 91       	pop	r19
    1600:	2f 91       	pop	r18
    1602:	1f 91       	pop	r17
    1604:	0f 91       	pop	r16
    1606:	0f 90       	pop	r0
    1608:	0b be       	out	0x3b, r0	; 59
    160a:	0f 90       	pop	r0
    160c:	0f be       	out	0x3f, r0	; 63
    160e:	0f 90       	pop	r0
    1610:	1f 90       	pop	r1
    1612:	18 95       	reti
    1614:	0e 94 62 05 	call	0xac4	; 0xac4 <system_tick>
    1618:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    161c:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1620:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1624:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1628:	bb 23       	and	r27, r27
    162a:	0c f4       	brge	.+2      	; 0x162e <__vector_6+0x76>
    162c:	47 c0       	rjmp	.+142    	; 0x16bc <__vector_6+0x104>
    162e:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    1632:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1636:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    163a:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    163e:	18 16       	cp	r1, r24
    1640:	19 06       	cpc	r1, r25
    1642:	1a 06       	cpc	r1, r26
    1644:	1b 06       	cpc	r1, r27
    1646:	9c f4       	brge	.+38     	; 0x166e <__vector_6+0xb6>
    1648:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    164c:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1650:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1654:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1658:	01 97       	sbiw	r24, 0x01	; 1
    165a:	a1 09       	sbc	r26, r1
    165c:	b1 09       	sbc	r27, r1
    165e:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    1662:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1666:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    166a:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	80 93 21 44 	sts	0x4421, r24	; 0x804421 <g_seconds_transition>
    1674:	80 91 24 44 	lds	r24, 0x4424	; 0x804424 <_ZL10g_sleeping>
    1678:	88 23       	and	r24, r24
    167a:	09 f4       	brne	.+2      	; 0x167e <__vector_6+0xc6>
    167c:	6e c0       	rjmp	.+220    	; 0x175a <__vector_6+0x1a2>
    167e:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <_ZL11g_sleepType>
    1682:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <_ZL11g_sleepType+0x1>
    1686:	03 97       	sbiw	r24, 0x03	; 3
    1688:	09 f0       	breq	.+2      	; 0x168c <__vector_6+0xd4>
    168a:	3f c0       	rjmp	.+126    	; 0x170a <__vector_6+0x152>
    168c:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    1690:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1694:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1698:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    169c:	8b 3f       	cpi	r24, 0xFB	; 251
    169e:	9f 4f       	sbci	r25, 0xFF	; 255
    16a0:	af 4f       	sbci	r26, 0xFF	; 255
    16a2:	bf 4f       	sbci	r27, 0xFF	; 255
    16a4:	fc f0       	brlt	.+62     	; 0x16e4 <__vector_6+0x12c>
    16a6:	10 92 23 44 	sts	0x4423, r1	; 0x804423 <_ZL17g_go_to_sleep_now>
    16aa:	10 92 24 44 	sts	0x4424, r1	; 0x804424 <_ZL10g_sleeping>
    16ae:	82 e0       	ldi	r24, 0x02	; 2
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	80 93 16 40 	sts	0x4016, r24	; 0x804016 <_ZL12g_awakenedBy>
    16b6:	90 93 17 40 	sts	0x4017, r25	; 0x804017 <_ZL12g_awakenedBy+0x1>
    16ba:	95 cf       	rjmp	.-214    	; 0x15e6 <__vector_6+0x2e>
    16bc:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    16c0:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    16c4:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    16c8:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    16cc:	01 96       	adiw	r24, 0x01	; 1
    16ce:	a1 1d       	adc	r26, r1
    16d0:	b1 1d       	adc	r27, r1
    16d2:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    16d6:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    16da:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    16de:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    16e2:	c5 cf       	rjmp	.-118    	; 0x166e <__vector_6+0xb6>
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	80 e0       	ldi	r24, 0x00	; 0
    16e8:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    16ec:	00 91 25 44 	lds	r16, 0x4425	; 0x804425 <_ZL17g_time_to_wake_up>
    16f0:	10 91 26 44 	lds	r17, 0x4426	; 0x804426 <_ZL17g_time_to_wake_up+0x1>
    16f4:	20 91 27 44 	lds	r18, 0x4427	; 0x804427 <_ZL17g_time_to_wake_up+0x2>
    16f8:	30 91 28 44 	lds	r19, 0x4428	; 0x804428 <_ZL17g_time_to_wake_up+0x3>
    16fc:	60 17       	cp	r22, r16
    16fe:	71 07       	cpc	r23, r17
    1700:	82 07       	cpc	r24, r18
    1702:	93 07       	cpc	r25, r19
    1704:	08 f4       	brcc	.+2      	; 0x1708 <__vector_6+0x150>
    1706:	6f cf       	rjmp	.-290    	; 0x15e6 <__vector_6+0x2e>
    1708:	ce cf       	rjmp	.-100    	; 0x16a6 <__vector_6+0xee>
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    1712:	00 91 25 44 	lds	r16, 0x4425	; 0x804425 <_ZL17g_time_to_wake_up>
    1716:	10 91 26 44 	lds	r17, 0x4426	; 0x804426 <_ZL17g_time_to_wake_up+0x1>
    171a:	20 91 27 44 	lds	r18, 0x4427	; 0x804427 <_ZL17g_time_to_wake_up+0x2>
    171e:	30 91 28 44 	lds	r19, 0x4428	; 0x804428 <_ZL17g_time_to_wake_up+0x3>
    1722:	60 17       	cp	r22, r16
    1724:	71 07       	cpc	r23, r17
    1726:	82 07       	cpc	r24, r18
    1728:	93 07       	cpc	r25, r19
    172a:	08 f4       	brcc	.+2      	; 0x172e <__vector_6+0x176>
    172c:	5c cf       	rjmp	.-328    	; 0x15e6 <__vector_6+0x2e>
    172e:	10 92 23 44 	sts	0x4423, r1	; 0x804423 <_ZL17g_go_to_sleep_now>
    1732:	10 92 24 44 	sts	0x4424, r1	; 0x804424 <_ZL10g_sleeping>
    1736:	82 e0       	ldi	r24, 0x02	; 2
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	80 93 16 40 	sts	0x4016, r24	; 0x804016 <_ZL12g_awakenedBy>
    173e:	90 93 17 40 	sts	0x4017, r25	; 0x804017 <_ZL12g_awakenedBy+0x1>
    1742:	10 92 c5 43 	sts	0x43C5, r1	; 0x8043c5 <_ZL12g_on_the_air>
    1746:	10 92 c6 43 	sts	0x43C6, r1	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    174a:	10 92 c7 43 	sts	0x43C7, r1	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    174e:	10 92 c8 43 	sts	0x43C8, r1	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1752:	81 e0       	ldi	r24, 0x01	; 1
    1754:	80 93 32 44 	sts	0x4432, r24	; 0x804432 <_ZL26g_timer_launched_new_event>
    1758:	46 cf       	rjmp	.-372    	; 0x15e6 <__vector_6+0x2e>
    175a:	0e 94 b0 0b 	call	0x1760	; 0x1760 <_Z17handle_1sec_tasksv>
    175e:	43 cf       	rjmp	.-378    	; 0x15e6 <__vector_6+0x2e>

00001760 <_Z17handle_1sec_tasksv>:
    1760:	0f 93       	push	r16
    1762:	1f 93       	push	r17
    1764:	80 91 3a 44 	lds	r24, 0x443A	; 0x80443a <g_check_temperature>
    1768:	90 91 3b 44 	lds	r25, 0x443B	; 0x80443b <g_check_temperature+0x1>
    176c:	89 2b       	or	r24, r25
    176e:	49 f0       	breq	.+18     	; 0x1782 <_Z17handle_1sec_tasksv+0x22>
    1770:	80 91 3a 44 	lds	r24, 0x443A	; 0x80443a <g_check_temperature>
    1774:	90 91 3b 44 	lds	r25, 0x443B	; 0x80443b <g_check_temperature+0x1>
    1778:	01 97       	sbiw	r24, 0x01	; 1
    177a:	80 93 3a 44 	sts	0x443A, r24	; 0x80443a <g_check_temperature>
    177e:	90 93 3b 44 	sts	0x443B, r25	; 0x80443b <g_check_temperature+0x1>
    1782:	80 91 1e 44 	lds	r24, 0x441E	; 0x80441e <g_event_commenced>
    1786:	88 23       	and	r24, r24
    1788:	a1 f0       	breq	.+40     	; 0x17b2 <_Z17handle_1sec_tasksv+0x52>
    178a:	80 91 18 44 	lds	r24, 0x4418	; 0x804418 <g_event_finish_epoch>
    178e:	90 91 19 44 	lds	r25, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    1792:	a0 91 1a 44 	lds	r26, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    1796:	b0 91 1b 44 	lds	r27, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    179a:	89 2b       	or	r24, r25
    179c:	8a 2b       	or	r24, r26
    179e:	8b 2b       	or	r24, r27
    17a0:	41 f0       	breq	.+16     	; 0x17b2 <_Z17handle_1sec_tasksv+0x52>
    17a2:	80 91 1f 44 	lds	r24, 0x441F	; 0x80441f <g_check_for_next_event>
    17a6:	81 11       	cpse	r24, r1
    17a8:	04 c0       	rjmp	.+8      	; 0x17b2 <_Z17handle_1sec_tasksv+0x52>
    17aa:	80 91 cd 43 	lds	r24, 0x43CD	; 0x8043cd <_ZL20g_shutting_down_wifi>
    17ae:	88 23       	and	r24, r24
    17b0:	d9 f0       	breq	.+54     	; 0x17e8 <_Z17handle_1sec_tasksv+0x88>
    17b2:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    17b6:	88 23       	and	r24, r24
    17b8:	09 f4       	brne	.+2      	; 0x17bc <_Z17handle_1sec_tasksv+0x5c>
    17ba:	66 c0       	rjmp	.+204    	; 0x1888 <_Z17handle_1sec_tasksv+0x128>
    17bc:	80 91 1e 44 	lds	r24, 0x441E	; 0x80441e <g_event_commenced>
    17c0:	88 23       	and	r24, r24
    17c2:	09 f4       	brne	.+2      	; 0x17c6 <_Z17handle_1sec_tasksv+0x66>
    17c4:	54 c0       	rjmp	.+168    	; 0x186e <_Z17handle_1sec_tasksv+0x10e>
    17c6:	80 91 c9 43 	lds	r24, 0x43C9	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    17ca:	90 91 ca 43 	lds	r25, 0x43CA	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    17ce:	89 2b       	or	r24, r25
    17d0:	09 f4       	brne	.+2      	; 0x17d4 <_Z17handle_1sec_tasksv+0x74>
    17d2:	5a c0       	rjmp	.+180    	; 0x1888 <_Z17handle_1sec_tasksv+0x128>
    17d4:	80 91 c9 43 	lds	r24, 0x43C9	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    17d8:	90 91 ca 43 	lds	r25, 0x43CA	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    17dc:	01 97       	sbiw	r24, 0x01	; 1
    17de:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    17e2:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    17e6:	50 c0       	rjmp	.+160    	; 0x1888 <_Z17handle_1sec_tasksv+0x128>
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	80 e0       	ldi	r24, 0x00	; 0
    17ec:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    17f0:	00 91 18 44 	lds	r16, 0x4418	; 0x804418 <g_event_finish_epoch>
    17f4:	10 91 19 44 	lds	r17, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    17f8:	20 91 1a 44 	lds	r18, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    17fc:	30 91 1b 44 	lds	r19, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    1800:	60 17       	cp	r22, r16
    1802:	71 07       	cpc	r23, r17
    1804:	82 07       	cpc	r24, r18
    1806:	93 07       	cpc	r25, r19
    1808:	a0 f2       	brcs	.-88     	; 0x17b2 <_Z17handle_1sec_tasksv+0x52>
    180a:	8c ef       	ldi	r24, 0xFC	; 252
    180c:	90 e0       	ldi	r25, 0x00	; 0
    180e:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    1812:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    1816:	10 92 c5 43 	sts	0x43C5, r1	; 0x8043c5 <_ZL12g_on_the_air>
    181a:	10 92 c6 43 	sts	0x43C6, r1	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    181e:	10 92 c7 43 	sts	0x43C7, r1	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1822:	10 92 c8 43 	sts	0x43C8, r1	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1826:	80 e0       	ldi	r24, 0x00	; 0
    1828:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    182c:	10 92 1c 44 	sts	0x441C, r1	; 0x80441c <g_event_enabled>
    1830:	10 92 1e 44 	sts	0x441E, r1	; 0x80441e <g_event_commenced>
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	80 93 1f 44 	sts	0x441F, r24	; 0x80441f <g_check_for_next_event>
    183a:	82 e0       	ldi	r24, 0x02	; 2
    183c:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    1840:	85 e0       	ldi	r24, 0x05	; 5
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <_ZL11g_sleepType>
    1848:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <_ZL11g_sleepType+0x1>
    184c:	80 91 cf 43 	lds	r24, 0x43CF	; 0x8043cf <_ZL16g_hardware_error>
    1850:	90 91 d0 43 	lds	r25, 0x43D0	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    1854:	82 ff       	sbrs	r24, 2
    1856:	06 c0       	rjmp	.+12     	; 0x1864 <_Z17handle_1sec_tasksv+0x104>
    1858:	10 92 1f 44 	sts	0x441F, r1	; 0x80441f <g_check_for_next_event>
    185c:	81 e0       	ldi	r24, 0x01	; 1
    185e:	80 93 23 44 	sts	0x4423, r24	; 0x804423 <_ZL17g_go_to_sleep_now>
    1862:	a7 cf       	rjmp	.-178    	; 0x17b2 <_Z17handle_1sec_tasksv+0x52>
    1864:	8f e3       	ldi	r24, 0x3F	; 63
    1866:	94 e4       	ldi	r25, 0x44	; 68
    1868:	0e 94 bf 3a 	call	0x757e	; 0x757e <_ZN4leds4initEv>
    186c:	a2 cf       	rjmp	.-188    	; 0x17b2 <_Z17handle_1sec_tasksv+0x52>
    186e:	80 91 14 44 	lds	r24, 0x4414	; 0x804414 <g_event_start_epoch>
    1872:	90 91 15 44 	lds	r25, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    1876:	a0 91 16 44 	lds	r26, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    187a:	b0 91 17 44 	lds	r27, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    187e:	81 30       	cpi	r24, 0x01	; 1
    1880:	96 46       	sbci	r25, 0x66	; 102
    1882:	ae 4e       	sbci	r26, 0xEE	; 238
    1884:	bf 45       	sbci	r27, 0x5F	; 95
    1886:	80 f4       	brcc	.+32     	; 0x18a8 <_Z17handle_1sec_tasksv+0x148>
    1888:	80 91 cc 43 	lds	r24, 0x43CC	; 0x8043cc <_ZL19g_wifi_enable_delay>
    188c:	88 23       	and	r24, r24
    188e:	e1 f1       	breq	.+120    	; 0x1908 <_Z17handle_1sec_tasksv+0x1a8>
    1890:	80 91 cc 43 	lds	r24, 0x43CC	; 0x8043cc <_ZL19g_wifi_enable_delay>
    1894:	81 50       	subi	r24, 0x01	; 1
    1896:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    189a:	80 91 cc 43 	lds	r24, 0x43CC	; 0x8043cc <_ZL19g_wifi_enable_delay>
    189e:	88 23       	and	r24, r24
    18a0:	49 f1       	breq	.+82     	; 0x18f4 <_Z17handle_1sec_tasksv+0x194>
    18a2:	1f 91       	pop	r17
    18a4:	0f 91       	pop	r16
    18a6:	08 95       	ret
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    18b0:	00 91 14 44 	lds	r16, 0x4414	; 0x804414 <g_event_start_epoch>
    18b4:	10 91 15 44 	lds	r17, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    18b8:	20 91 16 44 	lds	r18, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    18bc:	30 91 17 44 	lds	r19, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    18c0:	60 17       	cp	r22, r16
    18c2:	71 07       	cpc	r23, r17
    18c4:	82 07       	cpc	r24, r18
    18c6:	93 07       	cpc	r25, r19
    18c8:	f8 f2       	brcs	.-66     	; 0x1888 <_Z17handle_1sec_tasksv+0x128>
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    18d0:	10 92 c5 43 	sts	0x43C5, r1	; 0x8043c5 <_ZL12g_on_the_air>
    18d4:	10 92 c6 43 	sts	0x43C6, r1	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    18d8:	10 92 c7 43 	sts	0x43C7, r1	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    18dc:	10 92 c8 43 	sts	0x43C8, r1	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    18e0:	81 e0       	ldi	r24, 0x01	; 1
    18e2:	80 93 1e 44 	sts	0x441E, r24	; 0x80441e <g_event_commenced>
    18e6:	80 93 32 44 	sts	0x4432, r24	; 0x804432 <_ZL26g_timer_launched_new_event>
    18ea:	8f e3       	ldi	r24, 0x3F	; 63
    18ec:	94 e4       	ldi	r25, 0x44	; 68
    18ee:	0e 94 bf 3a 	call	0x757e	; 0x757e <_ZN4leds4initEv>
    18f2:	ca cf       	rjmp	.-108    	; 0x1888 <_Z17handle_1sec_tasksv+0x128>
    18f4:	81 e0       	ldi	r24, 0x01	; 1
    18f6:	0e 94 e9 34 	call	0x69d2	; 0x69d2 <_Z10wifi_powerb>
    18fa:	80 e0       	ldi	r24, 0x00	; 0
    18fc:	0e 94 ef 34 	call	0x69de	; 0x69de <_Z10wifi_resetb>
    1900:	88 e7       	ldi	r24, 0x78	; 120
    1902:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    1906:	cd cf       	rjmp	.-102    	; 0x18a2 <_Z17handle_1sec_tasksv+0x142>
    1908:	80 91 cd 43 	lds	r24, 0x43CD	; 0x8043cd <_ZL20g_shutting_down_wifi>
    190c:	81 11       	cpse	r24, r1
    190e:	08 c0       	rjmp	.+16     	; 0x1920 <_Z17handle_1sec_tasksv+0x1c0>
    1910:	80 91 1f 44 	lds	r24, 0x441F	; 0x80441f <g_check_for_next_event>
    1914:	81 11       	cpse	r24, r1
    1916:	15 c0       	rjmp	.+42     	; 0x1942 <_Z17handle_1sec_tasksv+0x1e2>
    1918:	80 91 20 44 	lds	r24, 0x4420	; 0x804420 <g_waiting_for_next_event>
    191c:	81 11       	cpse	r24, r1
    191e:	11 c0       	rjmp	.+34     	; 0x1942 <_Z17handle_1sec_tasksv+0x1e2>
    1920:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    1924:	88 23       	and	r24, r24
    1926:	69 f0       	breq	.+26     	; 0x1942 <_Z17handle_1sec_tasksv+0x1e2>
    1928:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    192c:	81 50       	subi	r24, 0x01	; 1
    192e:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    1932:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    1936:	81 11       	cpse	r24, r1
    1938:	04 c0       	rjmp	.+8      	; 0x1942 <_Z17handle_1sec_tasksv+0x1e2>
    193a:	80 91 56 44 	lds	r24, 0x4456	; 0x804456 <g_enable_manual_transmissions>
    193e:	88 23       	and	r24, r24
    1940:	49 f0       	breq	.+18     	; 0x1954 <_Z17handle_1sec_tasksv+0x1f4>
    1942:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <_ZL13g_wifi_active>
    1946:	88 23       	and	r24, r24
    1948:	09 f4       	brne	.+2      	; 0x194c <_Z17handle_1sec_tasksv+0x1ec>
    194a:	ab cf       	rjmp	.-170    	; 0x18a2 <_Z17handle_1sec_tasksv+0x142>
    194c:	81 e0       	ldi	r24, 0x01	; 1
    194e:	80 93 cb 43 	sts	0x43CB, r24	; 0x8043cb <_ZL16g_report_seconds>
    1952:	a7 cf       	rjmp	.-178    	; 0x18a2 <_Z17handle_1sec_tasksv+0x142>
    1954:	10 92 ce 43 	sts	0x43CE, r1	; 0x8043ce <_ZL12g_wifi_ready>
    1958:	81 e0       	ldi	r24, 0x01	; 1
    195a:	0e 94 ef 34 	call	0x69de	; 0x69de <_Z10wifi_resetb>
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	0e 94 e9 34 	call	0x69d2	; 0x69d2 <_Z10wifi_powerb>
    1964:	10 92 cd 43 	sts	0x43CD, r1	; 0x8043cd <_ZL20g_shutting_down_wifi>
    1968:	10 92 0c 40 	sts	0x400C, r1	; 0x80400c <_ZL13g_wifi_active>
    196c:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <_ZL11g_sleepType>
    1970:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <_ZL11g_sleepType+0x1>
    1974:	89 2b       	or	r24, r25
    1976:	29 f3       	breq	.-54     	; 0x1942 <_Z17handle_1sec_tasksv+0x1e2>
    1978:	81 e0       	ldi	r24, 0x01	; 1
    197a:	80 93 23 44 	sts	0x4423, r24	; 0x804423 <_ZL17g_go_to_sleep_now>
    197e:	e1 cf       	rjmp	.-62     	; 0x1942 <_Z17handle_1sec_tasksv+0x1e2>

00001980 <__vector_22>:
    1980:	1f 92       	push	r1
    1982:	0f 92       	push	r0
    1984:	0f b6       	in	r0, 0x3f	; 63
    1986:	0f 92       	push	r0
    1988:	11 24       	eor	r1, r1
    198a:	8f 93       	push	r24
    198c:	9f 93       	push	r25
    198e:	79 9b       	sbis	0x0f, 1	; 15
    1990:	10 c0       	rjmp	.+32     	; 0x19b2 <__vector_22+0x32>
    1992:	80 91 24 44 	lds	r24, 0x4424	; 0x804424 <_ZL10g_sleeping>
    1996:	88 23       	and	r24, r24
    1998:	31 f0       	breq	.+12     	; 0x19a6 <__vector_22+0x26>
    199a:	10 92 23 44 	sts	0x4423, r1	; 0x804423 <_ZL17g_go_to_sleep_now>
    199e:	10 92 24 44 	sts	0x4424, r1	; 0x804424 <_ZL10g_sleeping>
    19a2:	10 92 20 44 	sts	0x4420, r1	; 0x804420 <g_waiting_for_next_event>
    19a6:	83 e0       	ldi	r24, 0x03	; 3
    19a8:	90 e0       	ldi	r25, 0x00	; 0
    19aa:	80 93 16 40 	sts	0x4016, r24	; 0x804016 <_ZL12g_awakenedBy>
    19ae:	90 93 17 40 	sts	0x4017, r25	; 0x804017 <_ZL12g_awakenedBy+0x1>
    19b2:	8f ef       	ldi	r24, 0xFF	; 255
    19b4:	8f b9       	out	0x0f, r24	; 15
    19b6:	9f 91       	pop	r25
    19b8:	8f 91       	pop	r24
    19ba:	0f 90       	pop	r0
    19bc:	0f be       	out	0x3f, r0	; 63
    19be:	0f 90       	pop	r0
    19c0:	1f 90       	pop	r1
    19c2:	18 95       	reti

000019c4 <__vector_12>:
    19c4:	1f 92       	push	r1
    19c6:	0f 92       	push	r0
    19c8:	0f b6       	in	r0, 0x3f	; 63
    19ca:	0f 92       	push	r0
    19cc:	11 24       	eor	r1, r1
    19ce:	0b b6       	in	r0, 0x3b	; 59
    19d0:	0f 92       	push	r0
    19d2:	cf 92       	push	r12
    19d4:	df 92       	push	r13
    19d6:	ef 92       	push	r14
    19d8:	ff 92       	push	r15
    19da:	1f 93       	push	r17
    19dc:	2f 93       	push	r18
    19de:	3f 93       	push	r19
    19e0:	4f 93       	push	r20
    19e2:	5f 93       	push	r21
    19e4:	6f 93       	push	r22
    19e6:	7f 93       	push	r23
    19e8:	8f 93       	push	r24
    19ea:	9f 93       	push	r25
    19ec:	af 93       	push	r26
    19ee:	bf 93       	push	r27
    19f0:	ef 93       	push	r30
    19f2:	ff 93       	push	r31
    19f4:	cf 93       	push	r28
    19f6:	df 93       	push	r29
    19f8:	00 d0       	rcall	.+0      	; 0x19fa <__vector_12+0x36>
    19fa:	00 d0       	rcall	.+0      	; 0x19fc <__vector_12+0x38>
    19fc:	cd b7       	in	r28, 0x3d	; 61
    19fe:	de b7       	in	r29, 0x3e	; 62
    1a00:	80 91 06 0b 	lds	r24, 0x0B06	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
    1a04:	80 ff       	sbrs	r24, 0
    1a06:	8d c4       	rjmp	.+2330   	; 0x2322 <__vector_12+0x95e>
    1a08:	80 91 57 44 	lds	r24, 0x4457	; 0x804457 <g_delay_before_powerup_xmsn>
    1a0c:	90 91 58 44 	lds	r25, 0x4458	; 0x804458 <g_delay_before_powerup_xmsn+0x1>
    1a10:	89 2b       	or	r24, r25
    1a12:	49 f0       	breq	.+18     	; 0x1a26 <__vector_12+0x62>
    1a14:	80 91 57 44 	lds	r24, 0x4457	; 0x804457 <g_delay_before_powerup_xmsn>
    1a18:	90 91 58 44 	lds	r25, 0x4458	; 0x804458 <g_delay_before_powerup_xmsn+0x1>
    1a1c:	01 97       	sbiw	r24, 0x01	; 1
    1a1e:	80 93 57 44 	sts	0x4457, r24	; 0x804457 <g_delay_before_powerup_xmsn>
    1a22:	90 93 58 44 	sts	0x4458, r25	; 0x804458 <g_delay_before_powerup_xmsn+0x1>
    1a26:	20 91 3d 40 	lds	r18, 0x403D	; 0x80403d <_ZZ11__vector_12E7fiftyMS>
    1a2a:	2f 5f       	subi	r18, 0xFF	; 255
    1a2c:	20 93 3d 40 	sts	0x403D, r18	; 0x80403d <_ZZ11__vector_12E7fiftyMS>
    1a30:	8b ea       	ldi	r24, 0xAB	; 171
    1a32:	28 9f       	mul	r18, r24
    1a34:	81 2d       	mov	r24, r1
    1a36:	11 24       	eor	r1, r1
    1a38:	86 95       	lsr	r24
    1a3a:	86 95       	lsr	r24
    1a3c:	98 2f       	mov	r25, r24
    1a3e:	99 0f       	add	r25, r25
    1a40:	89 0f       	add	r24, r25
    1a42:	88 0f       	add	r24, r24
    1a44:	28 17       	cp	r18, r24
    1a46:	09 f4       	brne	.+2      	; 0x1a4a <__vector_12+0x86>
    1a48:	64 c0       	rjmp	.+200    	; 0x1b12 <__vector_12+0x14e>
    1a4a:	80 91 1e 44 	lds	r24, 0x441E	; 0x80441e <g_event_commenced>
    1a4e:	90 91 64 44 	lds	r25, 0x4464	; 0x804464 <_ZZ11__vector_12E20hold_event_commenced>
    1a52:	98 17       	cp	r25, r24
    1a54:	41 f0       	breq	.+16     	; 0x1a66 <__vector_12+0xa2>
    1a56:	80 91 1e 44 	lds	r24, 0x441E	; 0x80441e <g_event_commenced>
    1a5a:	80 93 64 44 	sts	0x4464, r24	; 0x804464 <_ZZ11__vector_12E20hold_event_commenced>
    1a5e:	80 91 1e 44 	lds	r24, 0x441E	; 0x80441e <g_event_commenced>
    1a62:	81 11       	cpse	r24, r1
    1a64:	31 c1       	rjmp	.+610    	; 0x1cc8 <__vector_12+0x304>
    1a66:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    1a6a:	88 23       	and	r24, r24
    1a6c:	21 f0       	breq	.+8      	; 0x1a76 <__vector_12+0xb2>
    1a6e:	80 91 1e 44 	lds	r24, 0x441E	; 0x80441e <g_event_commenced>
    1a72:	81 11       	cpse	r24, r1
    1a74:	3f c1       	rjmp	.+638    	; 0x1cf4 <__vector_12+0x330>
    1a76:	80 91 56 44 	lds	r24, 0x4456	; 0x804456 <g_enable_manual_transmissions>
    1a7a:	81 11       	cpse	r24, r1
    1a7c:	05 c0       	rjmp	.+10     	; 0x1a88 <__vector_12+0xc4>
    1a7e:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <g_enable_LED_enunciations>
    1a82:	88 23       	and	r24, r24
    1a84:	09 f4       	brne	.+2      	; 0x1a88 <__vector_12+0xc4>
    1a86:	7d c2       	rjmp	.+1274   	; 0x1f82 <__vector_12+0x5be>
    1a88:	80 e4       	ldi	r24, 0x40	; 64
    1a8a:	94 e4       	ldi	r25, 0x44	; 68
    1a8c:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <_ZNK18CircularStringBuff5emptyEv>
    1a90:	18 2f       	mov	r17, r24
    1a92:	1c 82       	std	Y+4, r1	; 0x04
    1a94:	0e 94 d3 3c 	call	0x79a6	; 0x79a6 <_Z15lastMorseCallerv>
    1a98:	02 97       	sbiw	r24, 0x02	; 2
    1a9a:	09 f0       	breq	.+2      	; 0x1a9e <__vector_12+0xda>
    1a9c:	7e c3       	rjmp	.+1788   	; 0x219a <__vector_12+0x7d6>
    1a9e:	11 11       	cpse	r17, r1
    1aa0:	8e c3       	rjmp	.+1820   	; 0x21be <__vector_12+0x7fa>
    1aa2:	10 92 40 40 	sts	0x4040, r1	; 0x804040 <_ZZ11__vector_12E4idle>
    1aa6:	80 91 5e 44 	lds	r24, 0x445E	; 0x80445e <_ZZ11__vector_12E7codeInc>
    1aaa:	90 91 5f 44 	lds	r25, 0x445F	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    1aae:	00 97       	sbiw	r24, 0x00	; 0
    1ab0:	09 f4       	brne	.+2      	; 0x1ab4 <__vector_12+0xf0>
    1ab2:	f6 c3       	rjmp	.+2028   	; 0x22a0 <__vector_12+0x8dc>
    1ab4:	01 97       	sbiw	r24, 0x01	; 1
    1ab6:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    1aba:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    1abe:	89 2b       	or	r24, r25
    1ac0:	09 f0       	breq	.+2      	; 0x1ac4 <__vector_12+0x100>
    1ac2:	5f c2       	rjmp	.+1214   	; 0x1f82 <__vector_12+0x5be>
    1ac4:	22 e0       	ldi	r18, 0x02	; 2
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	4f e3       	ldi	r20, 0x3F	; 63
    1aca:	50 e4       	ldi	r21, 0x40	; 64
    1acc:	be 01       	movw	r22, r28
    1ace:	6c 5f       	subi	r22, 0xFC	; 252
    1ad0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	80 e0       	ldi	r24, 0x00	; 0
    1ad6:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    1ada:	80 93 65 44 	sts	0x4465, r24	; 0x804465 <_ZZ11__vector_12E3key>
    1ade:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZZ11__vector_12E12charFinished>
    1ae2:	81 11       	cpse	r24, r1
    1ae4:	98 c3       	rjmp	.+1840   	; 0x2216 <__vector_12+0x852>
    1ae6:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_enunciator>
    1aea:	90 91 21 40 	lds	r25, 0x4021	; 0x804021 <g_enunciator+0x1>
    1aee:	01 97       	sbiw	r24, 0x01	; 1
    1af0:	09 f4       	brne	.+2      	; 0x1af4 <__vector_12+0x130>
    1af2:	d1 c3       	rjmp	.+1954   	; 0x2296 <__vector_12+0x8d2>
    1af4:	60 91 65 44 	lds	r22, 0x4465	; 0x804465 <_ZZ11__vector_12E3key>
    1af8:	8f e3       	ldi	r24, 0x3F	; 63
    1afa:	94 e4       	ldi	r25, 0x44	; 68
    1afc:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    1b00:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    1b04:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    1b08:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    1b0c:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    1b10:	38 c2       	rjmp	.+1136   	; 0x1f82 <__vector_12+0x5be>
    1b12:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_Z18portCdebouncedValsv>
    1b16:	18 2f       	mov	r17, r24
    1b18:	0e 94 6f 26 	call	0x4cde	; 0x4cde <_Z8debouncev>
    1b1c:	0e 94 9a 26 	call	0x4d34	; 0x4d34 <_Z18portCdebouncedValsv>
    1b20:	91 2f       	mov	r25, r17
    1b22:	90 78       	andi	r25, 0x80	; 128
    1b24:	80 78       	andi	r24, 0x80	; 128
    1b26:	98 17       	cp	r25, r24
    1b28:	09 f4       	brne	.+2      	; 0x1b2c <__vector_12+0x168>
    1b2a:	72 c0       	rjmp	.+228    	; 0x1c10 <__vector_12+0x24c>
    1b2c:	11 23       	and	r17, r17
    1b2e:	0c f4       	brge	.+2      	; 0x1b32 <__vector_12+0x16e>
    1b30:	4b c0       	rjmp	.+150    	; 0x1bc8 <__vector_12+0x204>
    1b32:	8f e3       	ldi	r24, 0x3F	; 63
    1b34:	94 e4       	ldi	r25, 0x44	; 68
    1b36:	0e 94 bf 37 	call	0x6f7e	; 0x6f7e <_ZN4leds6activeEv>
    1b3a:	88 23       	and	r24, r24
    1b3c:	09 f4       	brne	.+2      	; 0x1b40 <__vector_12+0x17c>
    1b3e:	59 c0       	rjmp	.+178    	; 0x1bf2 <__vector_12+0x22e>
    1b40:	10 92 33 44 	sts	0x4433, r1	; 0x804433 <g_switch_closed_time>
    1b44:	10 92 34 44 	sts	0x4434, r1	; 0x804434 <g_switch_closed_time+0x1>
    1b48:	81 e0       	ldi	r24, 0x01	; 1
    1b4a:	80 93 62 44 	sts	0x4462, r24	; 0x804462 <_ZZ11__vector_12E14buttonReleased>
    1b4e:	81 e0       	ldi	r24, 0x01	; 1
    1b50:	80 93 3e 40 	sts	0x403E, r24	; 0x80403e <_ZZ11__vector_12E16longPressEnabled>
    1b54:	80 91 60 44 	lds	r24, 0x4460	; 0x804460 <_ZZ11__vector_12E28switch_closures_count_period>
    1b58:	90 91 61 44 	lds	r25, 0x4461	; 0x804461 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    1b5c:	00 97       	sbiw	r24, 0x00	; 0
    1b5e:	09 f4       	brne	.+2      	; 0x1b62 <__vector_12+0x19e>
    1b60:	85 c0       	rjmp	.+266    	; 0x1c6c <__vector_12+0x2a8>
    1b62:	01 97       	sbiw	r24, 0x01	; 1
    1b64:	80 93 60 44 	sts	0x4460, r24	; 0x804460 <_ZZ11__vector_12E28switch_closures_count_period>
    1b68:	90 93 61 44 	sts	0x4461, r25	; 0x804461 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    1b6c:	89 2b       	or	r24, r25
    1b6e:	c1 f4       	brne	.+48     	; 0x1ba0 <__vector_12+0x1dc>
    1b70:	80 91 37 44 	lds	r24, 0x4437	; 0x804437 <g_switch_presses_count>
    1b74:	90 91 38 44 	lds	r25, 0x4438	; 0x804438 <g_switch_presses_count+0x1>
    1b78:	89 2b       	or	r24, r25
    1b7a:	71 f0       	breq	.+28     	; 0x1b98 <__vector_12+0x1d4>
    1b7c:	80 91 37 44 	lds	r24, 0x4437	; 0x804437 <g_switch_presses_count>
    1b80:	90 91 38 44 	lds	r25, 0x4438	; 0x804438 <g_switch_presses_count+0x1>
    1b84:	03 97       	sbiw	r24, 0x03	; 3
    1b86:	40 f4       	brcc	.+16     	; 0x1b98 <__vector_12+0x1d4>
    1b88:	80 91 37 44 	lds	r24, 0x4437	; 0x804437 <g_switch_presses_count>
    1b8c:	90 91 38 44 	lds	r25, 0x4438	; 0x804438 <g_switch_presses_count+0x1>
    1b90:	80 93 35 44 	sts	0x4435, r24	; 0x804435 <g_handle_counted_presses>
    1b94:	90 93 36 44 	sts	0x4436, r25	; 0x804436 <g_handle_counted_presses+0x1>
    1b98:	10 92 37 44 	sts	0x4437, r1	; 0x804437 <g_switch_presses_count>
    1b9c:	10 92 38 44 	sts	0x4438, r1	; 0x804438 <g_switch_presses_count+0x1>
    1ba0:	0e 94 9d 26 	call	0x4d3a	; 0x4d3a <_Z18portDdebouncedValsv>
    1ba4:	81 ff       	sbrs	r24, 1
    1ba6:	7f c0       	rjmp	.+254    	; 0x1ca6 <__vector_12+0x2e2>
    1ba8:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    1bac:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    1bb0:	01 97       	sbiw	r24, 0x01	; 1
    1bb2:	09 f4       	brne	.+2      	; 0x1bb6 <__vector_12+0x1f2>
    1bb4:	4a cf       	rjmp	.-364    	; 0x1a4a <__vector_12+0x86>
    1bb6:	81 e0       	ldi	r24, 0x01	; 1
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	80 93 c1 43 	sts	0x43C1, r24	; 0x8043c1 <g_antenna_connect_state>
    1bbe:	90 93 c2 43 	sts	0x43C2, r25	; 0x8043c2 <g_antenna_connect_state+0x1>
    1bc2:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    1bc6:	41 cf       	rjmp	.-382    	; 0x1a4a <__vector_12+0x86>
    1bc8:	8f e3       	ldi	r24, 0x3F	; 63
    1bca:	94 e4       	ldi	r25, 0x44	; 68
    1bcc:	0e 94 bf 37 	call	0x6f7e	; 0x6f7e <_ZN4leds6activeEv>
    1bd0:	88 23       	and	r24, r24
    1bd2:	61 f0       	breq	.+24     	; 0x1bec <__vector_12+0x228>
    1bd4:	80 91 37 44 	lds	r24, 0x4437	; 0x804437 <g_switch_presses_count>
    1bd8:	90 91 38 44 	lds	r25, 0x4438	; 0x804438 <g_switch_presses_count+0x1>
    1bdc:	01 96       	adiw	r24, 0x01	; 1
    1bde:	80 93 37 44 	sts	0x4437, r24	; 0x804437 <g_switch_presses_count>
    1be2:	90 93 38 44 	sts	0x4438, r25	; 0x804438 <g_switch_presses_count+0x1>
    1be6:	10 92 62 44 	sts	0x4462, r1	; 0x804462 <_ZZ11__vector_12E14buttonReleased>
    1bea:	b4 cf       	rjmp	.-152    	; 0x1b54 <__vector_12+0x190>
    1bec:	10 92 3e 40 	sts	0x403E, r1	; 0x80403e <_ZZ11__vector_12E16longPressEnabled>
    1bf0:	b1 cf       	rjmp	.-158    	; 0x1b54 <__vector_12+0x190>
    1bf2:	8f e3       	ldi	r24, 0x3F	; 63
    1bf4:	94 e4       	ldi	r25, 0x44	; 68
    1bf6:	0e 94 bf 3a 	call	0x757e	; 0x757e <_ZN4leds4initEv>
    1bfa:	44 e0       	ldi	r20, 0x04	; 4
    1bfc:	50 e0       	ldi	r21, 0x00	; 0
    1bfe:	60 e8       	ldi	r22, 0x80	; 128
    1c00:	75 e2       	ldi	r23, 0x25	; 37
    1c02:	80 e0       	ldi	r24, 0x00	; 0
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	0e 94 d4 3f 	call	0x7fa8	; 0x7fa8 <serialbus_init>
    1c0a:	0e 94 c1 20 	call	0x4182	; 0x4182 <_Z25setAntennaStateEnunciatorv>
    1c0e:	9f cf       	rjmp	.-194    	; 0x1b4e <__vector_12+0x18a>
    1c10:	11 23       	and	r17, r17
    1c12:	0c f4       	brge	.+2      	; 0x1c16 <__vector_12+0x252>
    1c14:	9f cf       	rjmp	.-194    	; 0x1b54 <__vector_12+0x190>
    1c16:	8f e3       	ldi	r24, 0x3F	; 63
    1c18:	94 e4       	ldi	r25, 0x44	; 68
    1c1a:	0e 94 bf 37 	call	0x6f7e	; 0x6f7e <_ZN4leds6activeEv>
    1c1e:	88 23       	and	r24, r24
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <__vector_12+0x260>
    1c22:	98 cf       	rjmp	.-208    	; 0x1b54 <__vector_12+0x190>
    1c24:	80 91 39 44 	lds	r24, 0x4439	; 0x804439 <g_long_button_press>
    1c28:	81 11       	cpse	r24, r1
    1c2a:	94 cf       	rjmp	.-216    	; 0x1b54 <__vector_12+0x190>
    1c2c:	80 91 3e 40 	lds	r24, 0x403E	; 0x80403e <_ZZ11__vector_12E16longPressEnabled>
    1c30:	88 23       	and	r24, r24
    1c32:	09 f4       	brne	.+2      	; 0x1c36 <__vector_12+0x272>
    1c34:	8f cf       	rjmp	.-226    	; 0x1b54 <__vector_12+0x190>
    1c36:	80 91 33 44 	lds	r24, 0x4433	; 0x804433 <g_switch_closed_time>
    1c3a:	90 91 34 44 	lds	r25, 0x4434	; 0x804434 <g_switch_closed_time+0x1>
    1c3e:	01 96       	adiw	r24, 0x01	; 1
    1c40:	80 93 33 44 	sts	0x4433, r24	; 0x804433 <g_switch_closed_time>
    1c44:	90 93 34 44 	sts	0x4434, r25	; 0x804434 <g_switch_closed_time+0x1>
    1c48:	88 3c       	cpi	r24, 0xC8	; 200
    1c4a:	91 05       	cpc	r25, r1
    1c4c:	08 f4       	brcc	.+2      	; 0x1c50 <__vector_12+0x28c>
    1c4e:	82 cf       	rjmp	.-252    	; 0x1b54 <__vector_12+0x190>
    1c50:	81 e0       	ldi	r24, 0x01	; 1
    1c52:	80 93 39 44 	sts	0x4439, r24	; 0x804439 <g_long_button_press>
    1c56:	10 92 33 44 	sts	0x4433, r1	; 0x804433 <g_switch_closed_time>
    1c5a:	10 92 34 44 	sts	0x4434, r1	; 0x804434 <g_switch_closed_time+0x1>
    1c5e:	10 92 37 44 	sts	0x4437, r1	; 0x804437 <g_switch_presses_count>
    1c62:	10 92 38 44 	sts	0x4438, r1	; 0x804438 <g_switch_presses_count+0x1>
    1c66:	10 92 3e 40 	sts	0x403E, r1	; 0x80403e <_ZZ11__vector_12E16longPressEnabled>
    1c6a:	74 cf       	rjmp	.-280    	; 0x1b54 <__vector_12+0x190>
    1c6c:	80 91 37 44 	lds	r24, 0x4437	; 0x804437 <g_switch_presses_count>
    1c70:	90 91 38 44 	lds	r25, 0x4438	; 0x804438 <g_switch_presses_count+0x1>
    1c74:	01 97       	sbiw	r24, 0x01	; 1
    1c76:	61 f0       	breq	.+24     	; 0x1c90 <__vector_12+0x2cc>
    1c78:	80 91 37 44 	lds	r24, 0x4437	; 0x804437 <g_switch_presses_count>
    1c7c:	90 91 38 44 	lds	r25, 0x4438	; 0x804438 <g_switch_presses_count+0x1>
    1c80:	03 97       	sbiw	r24, 0x03	; 3
    1c82:	08 f4       	brcc	.+2      	; 0x1c86 <__vector_12+0x2c2>
    1c84:	8d cf       	rjmp	.-230    	; 0x1ba0 <__vector_12+0x1dc>
    1c86:	10 92 37 44 	sts	0x4437, r1	; 0x804437 <g_switch_presses_count>
    1c8a:	10 92 38 44 	sts	0x4438, r1	; 0x804438 <g_switch_presses_count+0x1>
    1c8e:	88 cf       	rjmp	.-240    	; 0x1ba0 <__vector_12+0x1dc>
    1c90:	80 91 62 44 	lds	r24, 0x4462	; 0x804462 <_ZZ11__vector_12E14buttonReleased>
    1c94:	88 23       	and	r24, r24
    1c96:	81 f3       	breq	.-32     	; 0x1c78 <__vector_12+0x2b4>
    1c98:	82 e3       	ldi	r24, 0x32	; 50
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	80 93 60 44 	sts	0x4460, r24	; 0x804460 <_ZZ11__vector_12E28switch_closures_count_period>
    1ca0:	90 93 61 44 	sts	0x4461, r25	; 0x804461 <_ZZ11__vector_12E28switch_closures_count_period+0x1>
    1ca4:	7d cf       	rjmp	.-262    	; 0x1ba0 <__vector_12+0x1dc>
    1ca6:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    1caa:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    1cae:	02 97       	sbiw	r24, 0x02	; 2
    1cb0:	09 f4       	brne	.+2      	; 0x1cb4 <__vector_12+0x2f0>
    1cb2:	cb ce       	rjmp	.-618    	; 0x1a4a <__vector_12+0x86>
    1cb4:	82 e0       	ldi	r24, 0x02	; 2
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	80 93 c1 43 	sts	0x43C1, r24	; 0x8043c1 <g_antenna_connect_state>
    1cbc:	90 93 c2 43 	sts	0x43C2, r25	; 0x8043c2 <g_antenna_connect_state+0x1>
    1cc0:	81 e0       	ldi	r24, 0x01	; 1
    1cc2:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    1cc6:	c1 ce       	rjmp	.-638    	; 0x1a4a <__vector_12+0x86>
    1cc8:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    1ccc:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    1cd0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    1cd4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1cd8:	81 e0       	ldi	r24, 0x01	; 1
    1cda:	89 83       	std	Y+1, r24	; 0x01
    1cdc:	21 e0       	ldi	r18, 0x01	; 1
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	50 e0       	ldi	r21, 0x00	; 0
    1ce2:	40 e0       	ldi	r20, 0x00	; 0
    1ce4:	be 01       	movw	r22, r28
    1ce6:	6f 5f       	subi	r22, 0xFF	; 255
    1ce8:	7f 4f       	sbci	r23, 0xFF	; 255
    1cea:	81 ed       	ldi	r24, 0xD1	; 209
    1cec:	93 e4       	ldi	r25, 0x43	; 67
    1cee:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    1cf2:	b9 ce       	rjmp	.-654    	; 0x1a66 <__vector_12+0xa2>
    1cf4:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    1cf8:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1cfc:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1d00:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1d04:	18 16       	cp	r1, r24
    1d06:	19 06       	cpc	r1, r25
    1d08:	1a 06       	cpc	r1, r26
    1d0a:	1b 06       	cpc	r1, r27
    1d0c:	0c f0       	brlt	.+2      	; 0x1d10 <__vector_12+0x34c>
    1d0e:	5d c0       	rjmp	.+186    	; 0x1dca <__vector_12+0x406>
    1d10:	81 e0       	ldi	r24, 0x01	; 1
    1d12:	80 93 59 44 	sts	0x4459, r24	; 0x804459 <_ZZ11__vector_12E15on_air_finished>
    1d16:	10 92 5a 44 	sts	0x445A, r1	; 0x80445a <_ZZ11__vector_12E17transitionPrepped>
    1d1a:	10 92 5b 44 	sts	0x445B, r1	; 0x80445b <_ZZ11__vector_12E26intra_cycle_delay_counting>
    1d1e:	80 91 22 44 	lds	r24, 0x4422	; 0x804422 <g_sending_station_ID>
    1d22:	81 11       	cpse	r24, r1
    1d24:	26 c0       	rjmp	.+76     	; 0x1d72 <__vector_12+0x3ae>
    1d26:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    1d2a:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    1d2e:	89 2b       	or	r24, r25
    1d30:	99 f0       	breq	.+38     	; 0x1d58 <__vector_12+0x394>
    1d32:	80 91 10 44 	lds	r24, 0x4410	; 0x804410 <g_time_needed_for_ID>
    1d36:	90 91 11 44 	lds	r25, 0x4411	; 0x804411 <g_time_needed_for_ID+0x1>
    1d3a:	40 91 c5 43 	lds	r20, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    1d3e:	50 91 c6 43 	lds	r21, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1d42:	60 91 c7 43 	lds	r22, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1d46:	70 91 c8 43 	lds	r23, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1d4a:	b0 e0       	ldi	r27, 0x00	; 0
    1d4c:	a0 e0       	ldi	r26, 0x00	; 0
    1d4e:	84 17       	cp	r24, r20
    1d50:	95 07       	cpc	r25, r21
    1d52:	a6 07       	cpc	r26, r22
    1d54:	b7 07       	cpc	r27, r23
    1d56:	6c f0       	brlt	.+26     	; 0x1d72 <__vector_12+0x3ae>
    1d58:	80 91 c9 43 	lds	r24, 0x43C9	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    1d5c:	90 91 ca 43 	lds	r25, 0x43CA	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    1d60:	89 2b       	or	r24, r25
    1d62:	39 f4       	brne	.+14     	; 0x1d72 <__vector_12+0x3ae>
    1d64:	80 91 10 44 	lds	r24, 0x4410	; 0x804410 <g_time_needed_for_ID>
    1d68:	90 91 11 44 	lds	r25, 0x4411	; 0x804411 <g_time_needed_for_ID+0x1>
    1d6c:	89 2b       	or	r24, r25
    1d6e:	09 f0       	breq	.+2      	; 0x1d72 <__vector_12+0x3ae>
    1d70:	88 c0       	rjmp	.+272    	; 0x1e82 <__vector_12+0x4be>
    1d72:	80 91 5e 44 	lds	r24, 0x445E	; 0x80445e <_ZZ11__vector_12E7codeInc>
    1d76:	90 91 5f 44 	lds	r25, 0x445F	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    1d7a:	00 97       	sbiw	r24, 0x00	; 0
    1d7c:	09 f4       	brne	.+2      	; 0x1d80 <__vector_12+0x3bc>
    1d7e:	ea c0       	rjmp	.+468    	; 0x1f54 <__vector_12+0x590>
    1d80:	01 97       	sbiw	r24, 0x01	; 1
    1d82:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    1d86:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    1d8a:	89 2b       	or	r24, r25
    1d8c:	09 f0       	breq	.+2      	; 0x1d90 <__vector_12+0x3cc>
    1d8e:	ea c0       	rjmp	.+468    	; 0x1f64 <__vector_12+0x5a0>
    1d90:	21 e0       	ldi	r18, 0x01	; 1
    1d92:	30 e0       	ldi	r19, 0x00	; 0
    1d94:	ae 01       	movw	r20, r28
    1d96:	4d 5f       	subi	r20, 0xFD	; 253
    1d98:	5f 4f       	sbci	r21, 0xFF	; 255
    1d9a:	be 01       	movw	r22, r28
    1d9c:	6c 5f       	subi	r22, 0xFC	; 252
    1d9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1da0:	90 e0       	ldi	r25, 0x00	; 0
    1da2:	80 e0       	ldi	r24, 0x00	; 0
    1da4:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    1da8:	80 93 65 44 	sts	0x4465, r24	; 0x804465 <_ZZ11__vector_12E3key>
    1dac:	8c 81       	ldd	r24, Y+4	; 0x04
    1dae:	81 11       	cpse	r24, r1
    1db0:	03 c0       	rjmp	.+6      	; 0x1db8 <__vector_12+0x3f4>
    1db2:	8b 81       	ldd	r24, Y+3	; 0x03
    1db4:	81 11       	cpse	r24, r1
    1db6:	8b c0       	rjmp	.+278    	; 0x1ece <__vector_12+0x50a>
    1db8:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    1dbc:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    1dc0:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    1dc4:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    1dc8:	cd c0       	rjmp	.+410    	; 0x1f64 <__vector_12+0x5a0>
    1dca:	80 91 22 44 	lds	r24, 0x4422	; 0x804422 <g_sending_station_ID>
    1dce:	81 11       	cpse	r24, r1
    1dd0:	9f cf       	rjmp	.-194    	; 0x1d10 <__vector_12+0x34c>
    1dd2:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    1dd6:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    1dda:	89 2b       	or	r24, r25
    1ddc:	69 f4       	brne	.+26     	; 0x1df8 <__vector_12+0x434>
    1dde:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    1de2:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1de6:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1dea:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1dee:	89 2b       	or	r24, r25
    1df0:	8a 2b       	or	r24, r26
    1df2:	8b 2b       	or	r24, r27
    1df4:	09 f0       	breq	.+2      	; 0x1df8 <__vector_12+0x434>
    1df6:	8c cf       	rjmp	.-232    	; 0x1d10 <__vector_12+0x34c>
    1df8:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    1dfc:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1e00:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1e04:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1e08:	bb 23       	and	r27, r27
    1e0a:	0c f4       	brge	.+2      	; 0x1e0e <__vector_12+0x44a>
    1e0c:	c6 c0       	rjmp	.+396    	; 0x1f9a <__vector_12+0x5d6>
    1e0e:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    1e12:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1e16:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1e1a:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1e1e:	89 2b       	or	r24, r25
    1e20:	8a 2b       	or	r24, r26
    1e22:	8b 2b       	or	r24, r27
    1e24:	09 f0       	breq	.+2      	; 0x1e28 <__vector_12+0x464>
    1e26:	ad c0       	rjmp	.+346    	; 0x1f82 <__vector_12+0x5be>
    1e28:	80 91 32 44 	lds	r24, 0x4432	; 0x804432 <_ZL26g_timer_launched_new_event>
    1e2c:	88 23       	and	r24, r24
    1e2e:	09 f4       	brne	.+2      	; 0x1e32 <__vector_12+0x46e>
    1e30:	ba c0       	rjmp	.+372    	; 0x1fa6 <__vector_12+0x5e2>
    1e32:	10 92 32 44 	sts	0x4432, r1	; 0x804432 <_ZL26g_timer_launched_new_event>
    1e36:	80 91 12 44 	lds	r24, 0x4412	; 0x804412 <g_intra_cycle_delay_time>
    1e3a:	90 91 13 44 	lds	r25, 0x4413	; 0x804413 <g_intra_cycle_delay_time+0x1>
    1e3e:	89 2b       	or	r24, r25
    1e40:	09 f4       	brne	.+2      	; 0x1e44 <__vector_12+0x480>
    1e42:	ae c0       	rjmp	.+348    	; 0x1fa0 <__vector_12+0x5dc>
    1e44:	80 91 12 44 	lds	r24, 0x4412	; 0x804412 <g_intra_cycle_delay_time>
    1e48:	90 91 13 44 	lds	r25, 0x4413	; 0x804413 <g_intra_cycle_delay_time+0x1>
    1e4c:	91 95       	neg	r25
    1e4e:	81 95       	neg	r24
    1e50:	91 09       	sbc	r25, r1
    1e52:	09 2e       	mov	r0, r25
    1e54:	00 0c       	add	r0, r0
    1e56:	aa 0b       	sbc	r26, r26
    1e58:	bb 0b       	sbc	r27, r27
    1e5a:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    1e5e:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1e62:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1e66:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1e6a:	81 e0       	ldi	r24, 0x01	; 1
    1e6c:	80 93 5b 44 	sts	0x445B, r24	; 0x80445b <_ZZ11__vector_12E26intra_cycle_delay_counting>
    1e70:	80 93 5a 44 	sts	0x445A, r24	; 0x80445a <_ZZ11__vector_12E17transitionPrepped>
    1e74:	10 92 59 44 	sts	0x4459, r1	; 0x804459 <_ZZ11__vector_12E15on_air_finished>
    1e78:	80 91 5a 44 	lds	r24, 0x445A	; 0x80445a <_ZZ11__vector_12E17transitionPrepped>
    1e7c:	81 11       	cpse	r24, r1
    1e7e:	81 c0       	rjmp	.+258    	; 0x1f82 <__vector_12+0x5be>
    1e80:	9b c0       	rjmp	.+310    	; 0x1fb8 <__vector_12+0x5f4>
    1e82:	8f ee       	ldi	r24, 0xEF	; 239
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    1e8a:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    1e8e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_id_codespeed>
    1e92:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    1e96:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    1e9a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1e9e:	1c 82       	std	Y+4, r1	; 0x04
    1ea0:	21 e0       	ldi	r18, 0x01	; 1
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	50 e0       	ldi	r21, 0x00	; 0
    1ea6:	40 e0       	ldi	r20, 0x00	; 0
    1ea8:	be 01       	movw	r22, r28
    1eaa:	6c 5f       	subi	r22, 0xFC	; 252
    1eac:	7f 4f       	sbci	r23, 0xFF	; 255
    1eae:	8b ef       	ldi	r24, 0xFB	; 251
    1eb0:	93 e4       	ldi	r25, 0x43	; 67
    1eb2:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    1eb6:	81 e0       	ldi	r24, 0x01	; 1
    1eb8:	80 93 22 44 	sts	0x4422, r24	; 0x804422 <g_sending_station_ID>
    1ebc:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <g_ID_period_seconds>
    1ec0:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <g_ID_period_seconds+0x1>
    1ec4:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    1ec8:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    1ecc:	52 cf       	rjmp	.-348    	; 0x1d72 <__vector_12+0x3ae>
    1ece:	8d ef       	ldi	r24, 0xFD	; 253
    1ed0:	90 e0       	ldi	r25, 0x00	; 0
    1ed2:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    1ed6:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    1eda:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    1ede:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    1ee2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    1ee6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    1eea:	81 e0       	ldi	r24, 0x01	; 1
    1eec:	8c 83       	std	Y+4, r24	; 0x04
    1eee:	21 e0       	ldi	r18, 0x01	; 1
    1ef0:	30 e0       	ldi	r19, 0x00	; 0
    1ef2:	50 e0       	ldi	r21, 0x00	; 0
    1ef4:	40 e0       	ldi	r20, 0x00	; 0
    1ef6:	be 01       	movw	r22, r28
    1ef8:	6c 5f       	subi	r22, 0xFC	; 252
    1efa:	7f 4f       	sbci	r23, 0xFF	; 255
    1efc:	81 ed       	ldi	r24, 0xD1	; 209
    1efe:	93 e4       	ldi	r25, 0x43	; 67
    1f00:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    1f04:	80 91 22 44 	lds	r24, 0x4422	; 0x804422 <g_sending_station_ID>
    1f08:	88 23       	and	r24, r24
    1f0a:	41 f0       	breq	.+16     	; 0x1f1c <__vector_12+0x558>
    1f0c:	20 91 12 40 	lds	r18, 0x4012	; 0x804012 <g_off_air_seconds>
    1f10:	30 91 13 40 	lds	r19, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    1f14:	81 e0       	ldi	r24, 0x01	; 1
    1f16:	23 2b       	or	r18, r19
    1f18:	09 f4       	brne	.+2      	; 0x1f1c <__vector_12+0x558>
    1f1a:	80 e0       	ldi	r24, 0x00	; 0
    1f1c:	80 93 63 44 	sts	0x4463, r24	; 0x804463 <_ZZ11__vector_12E11muteAfterID>
    1f20:	10 92 22 44 	sts	0x4422, r1	; 0x804422 <g_sending_station_ID>
    1f24:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    1f28:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    1f2c:	89 2b       	or	r24, r25
    1f2e:	09 f0       	breq	.+2      	; 0x1f32 <__vector_12+0x56e>
    1f30:	43 cf       	rjmp	.-378    	; 0x1db8 <__vector_12+0x3f4>
    1f32:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    1f36:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    1f3a:	09 2e       	mov	r0, r25
    1f3c:	00 0c       	add	r0, r0
    1f3e:	aa 0b       	sbc	r26, r26
    1f40:	bb 0b       	sbc	r27, r27
    1f42:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    1f46:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1f4a:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1f4e:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    1f52:	32 cf       	rjmp	.-412    	; 0x1db8 <__vector_12+0x3f4>
    1f54:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    1f58:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    1f5c:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    1f60:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    1f64:	80 91 63 44 	lds	r24, 0x4463	; 0x804463 <_ZZ11__vector_12E11muteAfterID>
    1f68:	81 11       	cpse	r24, r1
    1f6a:	10 92 65 44 	sts	0x4465, r1	; 0x804465 <_ZZ11__vector_12E3key>
    1f6e:	80 91 65 44 	lds	r24, 0x4465	; 0x804465 <_ZZ11__vector_12E3key>
    1f72:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    1f76:	60 91 65 44 	lds	r22, 0x4465	; 0x804465 <_ZZ11__vector_12E3key>
    1f7a:	8f e3       	ldi	r24, 0x3F	; 63
    1f7c:	94 e4       	ldi	r25, 0x44	; 68
    1f7e:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    1f82:	50 91 5c 44 	lds	r21, 0x445C	; 0x80445c <_ZZ11__vector_12E19conversionInProcess>
    1f86:	51 11       	cpse	r21, r1
    1f88:	0a c2       	rjmp	.+1044   	; 0x239e <__vector_12+0x9da>
    1f8a:	8f ef       	ldi	r24, 0xFF	; 255
    1f8c:	80 93 5d 44 	sts	0x445D, r24	; 0x80445d <_ZZ11__vector_12E24indexConversionInProcess>
    1f90:	90 e0       	ldi	r25, 0x00	; 0
    1f92:	80 e0       	ldi	r24, 0x00	; 0
    1f94:	4f ef       	ldi	r20, 0xFF	; 255
    1f96:	61 e0       	ldi	r22, 0x01	; 1
    1f98:	a1 c1       	rjmp	.+834    	; 0x22dc <__vector_12+0x918>
    1f9a:	10 92 5a 44 	sts	0x445A, r1	; 0x80445a <_ZZ11__vector_12E17transitionPrepped>
    1f9e:	f1 cf       	rjmp	.-30     	; 0x1f82 <__vector_12+0x5be>
    1fa0:	10 92 5a 44 	sts	0x445A, r1	; 0x80445a <_ZZ11__vector_12E17transitionPrepped>
    1fa4:	67 cf       	rjmp	.-306    	; 0x1e74 <__vector_12+0x4b0>
    1fa6:	80 91 5b 44 	lds	r24, 0x445B	; 0x80445b <_ZZ11__vector_12E26intra_cycle_delay_counting>
    1faa:	88 23       	and	r24, r24
    1fac:	09 f4       	brne	.+2      	; 0x1fb0 <__vector_12+0x5ec>
    1fae:	64 cf       	rjmp	.-312    	; 0x1e78 <__vector_12+0x4b4>
    1fb0:	10 92 5b 44 	sts	0x445B, r1	; 0x80445b <_ZZ11__vector_12E26intra_cycle_delay_counting>
    1fb4:	10 92 59 44 	sts	0x4459, r1	; 0x804459 <_ZZ11__vector_12E15on_air_finished>
    1fb8:	81 e0       	ldi	r24, 0x01	; 1
    1fba:	80 93 5a 44 	sts	0x445A, r24	; 0x80445a <_ZZ11__vector_12E17transitionPrepped>
    1fbe:	80 91 59 44 	lds	r24, 0x4459	; 0x804459 <_ZZ11__vector_12E15on_air_finished>
    1fc2:	88 23       	and	r24, r24
    1fc4:	09 f4       	brne	.+2      	; 0x1fc8 <__vector_12+0x604>
    1fc6:	b2 c0       	rjmp	.+356    	; 0x212c <__vector_12+0x768>
    1fc8:	10 92 59 44 	sts	0x4459, r1	; 0x804459 <_ZZ11__vector_12E15on_air_finished>
    1fcc:	10 92 65 44 	sts	0x4465, r1	; 0x804465 <_ZZ11__vector_12E3key>
    1fd0:	80 e0       	ldi	r24, 0x00	; 0
    1fd2:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    1fd6:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    1fda:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    1fde:	89 2b       	or	r24, r25
    1fe0:	89 f4       	brne	.+34     	; 0x2004 <__vector_12+0x640>
    1fe2:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    1fe6:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    1fea:	09 2e       	mov	r0, r25
    1fec:	00 0c       	add	r0, r0
    1fee:	aa 0b       	sbc	r26, r26
    1ff0:	bb 0b       	sbc	r27, r27
    1ff2:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    1ff6:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    1ffa:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    1ffe:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    2002:	bf cf       	rjmp	.-130    	; 0x1f82 <__vector_12+0x5be>
    2004:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    2008:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    200c:	91 95       	neg	r25
    200e:	81 95       	neg	r24
    2010:	91 09       	sbc	r25, r1
    2012:	09 2e       	mov	r0, r25
    2014:	00 0c       	add	r0, r0
    2016:	aa 0b       	sbc	r26, r26
    2018:	bb 0b       	sbc	r27, r27
    201a:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    201e:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    2022:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    2026:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	80 e0       	ldi	r24, 0x00	; 0
    202e:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    2032:	6b 01       	movw	r12, r22
    2034:	7c 01       	movw	r14, r24
    2036:	80 91 18 44 	lds	r24, 0x4418	; 0x804418 <g_event_finish_epoch>
    203a:	90 91 19 44 	lds	r25, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    203e:	a0 91 1a 44 	lds	r26, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    2042:	b0 91 1b 44 	lds	r27, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    2046:	40 e0       	ldi	r20, 0x00	; 0
    2048:	50 e0       	ldi	r21, 0x00	; 0
    204a:	ba 01       	movw	r22, r20
    204c:	c8 16       	cp	r12, r24
    204e:	d9 06       	cpc	r13, r25
    2050:	ea 06       	cpc	r14, r26
    2052:	fb 06       	cpc	r15, r27
    2054:	08 f4       	brcc	.+2      	; 0x2058 <__vector_12+0x694>
    2056:	55 c0       	rjmp	.+170    	; 0x2102 <__vector_12+0x73e>
    2058:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    205c:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    2060:	20 91 10 40 	lds	r18, 0x4010	; 0x804010 <g_on_air_seconds>
    2064:	30 91 11 40 	lds	r19, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    2068:	82 0f       	add	r24, r18
    206a:	93 1f       	adc	r25, r19
    206c:	0f 96       	adiw	r24, 0x0f	; 15
    206e:	09 2e       	mov	r0, r25
    2070:	00 0c       	add	r0, r0
    2072:	aa 0b       	sbc	r26, r26
    2074:	bb 0b       	sbc	r27, r27
    2076:	84 17       	cp	r24, r20
    2078:	95 07       	cpc	r25, r21
    207a:	a6 07       	cpc	r26, r22
    207c:	b7 07       	cpc	r27, r23
    207e:	bc f5       	brge	.+110    	; 0x20ee <__vector_12+0x72a>
    2080:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    2084:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    2088:	40 97       	sbiw	r24, 0x10	; 16
    208a:	8c f1       	brlt	.+98     	; 0x20ee <__vector_12+0x72a>
    208c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2090:	81 11       	cpse	r24, r1
    2092:	2d c0       	rjmp	.+90     	; 0x20ee <__vector_12+0x72a>
    2094:	20 91 12 40 	lds	r18, 0x4012	; 0x804012 <g_off_air_seconds>
    2098:	30 91 13 40 	lds	r19, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    209c:	2a 50       	subi	r18, 0x0A	; 10
    209e:	31 09       	sbc	r19, r1
    20a0:	c9 01       	movw	r24, r18
    20a2:	03 2e       	mov	r0, r19
    20a4:	00 0c       	add	r0, r0
    20a6:	aa 0b       	sbc	r26, r26
    20a8:	bb 0b       	sbc	r27, r27
    20aa:	8c 0d       	add	r24, r12
    20ac:	9d 1d       	adc	r25, r13
    20ae:	ae 1d       	adc	r26, r14
    20b0:	bf 1d       	adc	r27, r15
    20b2:	80 93 25 44 	sts	0x4425, r24	; 0x804425 <_ZL17g_time_to_wake_up>
    20b6:	90 93 26 44 	sts	0x4426, r25	; 0x804426 <_ZL17g_time_to_wake_up+0x1>
    20ba:	a0 93 27 44 	sts	0x4427, r26	; 0x804427 <_ZL17g_time_to_wake_up+0x2>
    20be:	b0 93 28 44 	sts	0x4428, r27	; 0x804428 <_ZL17g_time_to_wake_up+0x3>
    20c2:	83 e0       	ldi	r24, 0x03	; 3
    20c4:	90 e0       	ldi	r25, 0x00	; 0
    20c6:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <_ZL11g_sleepType>
    20ca:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <_ZL11g_sleepType+0x1>
    20ce:	81 e0       	ldi	r24, 0x01	; 1
    20d0:	80 93 23 44 	sts	0x4423, r24	; 0x804423 <_ZL17g_go_to_sleep_now>
    20d4:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <g_ID_period_seconds>
    20d8:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <g_ID_period_seconds+0x1>
    20dc:	82 1b       	sub	r24, r18
    20de:	93 0b       	sbc	r25, r19
    20e0:	12 f4       	brpl	.+4      	; 0x20e6 <__vector_12+0x722>
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	80 e0       	ldi	r24, 0x00	; 0
    20e6:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    20ea:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    20ee:	10 92 63 44 	sts	0x4463, r1	; 0x804463 <_ZZ11__vector_12E11muteAfterID>
    20f2:	10 92 22 44 	sts	0x4422, r1	; 0x804422 <g_sending_station_ID>
    20f6:	60 e0       	ldi	r22, 0x00	; 0
    20f8:	8f e3       	ldi	r24, 0x3F	; 63
    20fa:	94 e4       	ldi	r25, 0x44	; 68
    20fc:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    2100:	40 cf       	rjmp	.-384    	; 0x1f82 <__vector_12+0x5be>
    2102:	60 91 18 44 	lds	r22, 0x4418	; 0x804418 <g_event_finish_epoch>
    2106:	70 91 19 44 	lds	r23, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    210a:	80 91 1a 44 	lds	r24, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    210e:	90 91 1b 44 	lds	r25, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    2112:	a7 01       	movw	r20, r14
    2114:	96 01       	movw	r18, r12
    2116:	0e 94 97 4b 	call	0x972e	; 0x972e <_Z7timeDifmm>
    211a:	ab 01       	movw	r20, r22
    211c:	bc 01       	movw	r22, r24
    211e:	8e ef       	ldi	r24, 0xFE	; 254
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    2126:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    212a:	96 cf       	rjmp	.-212    	; 0x2058 <__vector_12+0x694>
    212c:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    2130:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    2134:	09 2e       	mov	r0, r25
    2136:	00 0c       	add	r0, r0
    2138:	aa 0b       	sbc	r26, r26
    213a:	bb 0b       	sbc	r27, r27
    213c:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    2140:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    2144:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    2148:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    214c:	10 92 63 44 	sts	0x4463, r1	; 0x804463 <_ZZ11__vector_12E11muteAfterID>
    2150:	10 92 22 44 	sts	0x4422, r1	; 0x804422 <g_sending_station_ID>
    2154:	60 e0       	ldi	r22, 0x00	; 0
    2156:	8f e3       	ldi	r24, 0x3F	; 63
    2158:	94 e4       	ldi	r25, 0x44	; 68
    215a:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    215e:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    2162:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    2166:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    216a:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    216e:	81 e0       	ldi	r24, 0x01	; 1
    2170:	8c 83       	std	Y+4, r24	; 0x04
    2172:	21 e0       	ldi	r18, 0x01	; 1
    2174:	30 e0       	ldi	r19, 0x00	; 0
    2176:	50 e0       	ldi	r21, 0x00	; 0
    2178:	40 e0       	ldi	r20, 0x00	; 0
    217a:	be 01       	movw	r22, r28
    217c:	6c 5f       	subi	r22, 0xFC	; 252
    217e:	7f 4f       	sbci	r23, 0xFF	; 255
    2180:	81 ed       	ldi	r24, 0xD1	; 209
    2182:	93 e4       	ldi	r25, 0x43	; 67
    2184:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    2188:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    218c:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2190:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    2194:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    2198:	f4 ce       	rjmp	.-536    	; 0x1f82 <__vector_12+0x5be>
    219a:	80 e4       	ldi	r24, 0x40	; 64
    219c:	94 e4       	ldi	r25, 0x44	; 68
    219e:	0e 94 9b 27 	call	0x4f36	; 0x4f36 <_ZN18CircularStringBuff5resetEv>
    21a2:	81 e0       	ldi	r24, 0x01	; 1
    21a4:	80 93 3f 40 	sts	0x403F, r24	; 0x80403f <_ZZ11__vector_12E12charFinished>
    21a8:	22 e0       	ldi	r18, 0x02	; 2
    21aa:	30 e0       	ldi	r19, 0x00	; 0
    21ac:	50 e0       	ldi	r21, 0x00	; 0
    21ae:	40 e0       	ldi	r20, 0x00	; 0
    21b0:	be 01       	movw	r22, r28
    21b2:	6c 5f       	subi	r22, 0xFC	; 252
    21b4:	7f 4f       	sbci	r23, 0xFF	; 255
    21b6:	8e e8       	ldi	r24, 0x8E	; 142
    21b8:	90 e4       	ldi	r25, 0x40	; 64
    21ba:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    21be:	80 91 3f 40 	lds	r24, 0x403F	; 0x80403f <_ZZ11__vector_12E12charFinished>
    21c2:	88 23       	and	r24, r24
    21c4:	09 f4       	brne	.+2      	; 0x21c8 <__vector_12+0x804>
    21c6:	6d cc       	rjmp	.-1830   	; 0x1aa2 <__vector_12+0xde>
    21c8:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <_ZZ11__vector_12E4idle>
    21cc:	81 11       	cpse	r24, r1
    21ce:	d9 ce       	rjmp	.-590    	; 0x1f82 <__vector_12+0x5be>
    21d0:	80 91 65 44 	lds	r24, 0x4465	; 0x804465 <_ZZ11__vector_12E3key>
    21d4:	81 11       	cpse	r24, r1
    21d6:	11 c0       	rjmp	.+34     	; 0x21fa <__vector_12+0x836>
    21d8:	60 e0       	ldi	r22, 0x00	; 0
    21da:	80 e4       	ldi	r24, 0x40	; 64
    21dc:	94 e4       	ldi	r25, 0x44	; 68
    21de:	0e 94 b3 27 	call	0x4f66	; 0x4f66 <_ZN18CircularStringBuff7setBusyEb>
    21e2:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    21e6:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    21ea:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    21ee:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    21f2:	81 e0       	ldi	r24, 0x01	; 1
    21f4:	80 93 40 40 	sts	0x4040, r24	; 0x804040 <_ZZ11__vector_12E4idle>
    21f8:	c4 ce       	rjmp	.-632    	; 0x1f82 <__vector_12+0x5be>
    21fa:	10 92 65 44 	sts	0x4465, r1	; 0x804465 <_ZZ11__vector_12E3key>
    21fe:	80 e0       	ldi	r24, 0x00	; 0
    2200:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    2204:	60 e0       	ldi	r22, 0x00	; 0
    2206:	8f e3       	ldi	r24, 0x3F	; 63
    2208:	94 e4       	ldi	r25, 0x44	; 68
    220a:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    220e:	80 e0       	ldi	r24, 0x00	; 0
    2210:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    2214:	e1 cf       	rjmp	.-62     	; 0x21d8 <__vector_12+0x814>
    2216:	80 e4       	ldi	r24, 0x40	; 64
    2218:	94 e4       	ldi	r25, 0x44	; 68
    221a:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <_ZNK18CircularStringBuff5emptyEv>
    221e:	81 11       	cpse	r24, r1
    2220:	62 cc       	rjmp	.-1852   	; 0x1ae6 <__vector_12+0x122>
    2222:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    2226:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    222a:	89 83       	std	Y+1, r24	; 0x01
    222c:	9a 83       	std	Y+2, r25	; 0x02
    222e:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    2232:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    2236:	29 81       	ldd	r18, Y+1	; 0x01
    2238:	3a 81       	ldd	r19, Y+2	; 0x02
    223a:	28 17       	cp	r18, r24
    223c:	39 07       	cpc	r19, r25
    223e:	10 f4       	brcc	.+4      	; 0x2244 <__vector_12+0x880>
    2240:	89 81       	ldd	r24, Y+1	; 0x01
    2242:	9a 81       	ldd	r25, Y+2	; 0x02
    2244:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL27g_enunciation_code_throttle>
    2248:	90 93 0a 40 	sts	0x400A, r25	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    224c:	80 e4       	ldi	r24, 0x40	; 64
    224e:	94 e4       	ldi	r25, 0x44	; 68
    2250:	0e 94 12 28 	call	0x5024	; 0x5024 <_ZN18CircularStringBuff3getEv>
    2254:	e6 e6       	ldi	r30, 0x66	; 102
    2256:	f4 e4       	ldi	r31, 0x44	; 68
    2258:	80 83       	st	Z, r24
    225a:	11 82       	std	Z+1, r1	; 0x01
    225c:	22 e0       	ldi	r18, 0x02	; 2
    225e:	30 e0       	ldi	r19, 0x00	; 0
    2260:	50 e0       	ldi	r21, 0x00	; 0
    2262:	40 e0       	ldi	r20, 0x00	; 0
    2264:	be 01       	movw	r22, r28
    2266:	6c 5f       	subi	r22, 0xFC	; 252
    2268:	7f 4f       	sbci	r23, 0xFF	; 255
    226a:	cf 01       	movw	r24, r30
    226c:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    2270:	22 e0       	ldi	r18, 0x02	; 2
    2272:	30 e0       	ldi	r19, 0x00	; 0
    2274:	4f e3       	ldi	r20, 0x3F	; 63
    2276:	50 e4       	ldi	r21, 0x40	; 64
    2278:	be 01       	movw	r22, r28
    227a:	6c 5f       	subi	r22, 0xFC	; 252
    227c:	7f 4f       	sbci	r23, 0xFF	; 255
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	80 e0       	ldi	r24, 0x00	; 0
    2282:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <_Z9makeMorsePcPbS0_10callerID_t>
    2286:	80 93 65 44 	sts	0x4465, r24	; 0x804465 <_ZZ11__vector_12E3key>
    228a:	61 e0       	ldi	r22, 0x01	; 1
    228c:	80 e4       	ldi	r24, 0x40	; 64
    228e:	94 e4       	ldi	r25, 0x44	; 68
    2290:	0e 94 b3 27 	call	0x4f66	; 0x4f66 <_ZN18CircularStringBuff7setBusyEb>
    2294:	28 cc       	rjmp	.-1968   	; 0x1ae6 <__vector_12+0x122>
    2296:	80 91 65 44 	lds	r24, 0x4465	; 0x804465 <_ZZ11__vector_12E3key>
    229a:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    229e:	2a cc       	rjmp	.-1964   	; 0x1af4 <__vector_12+0x130>
    22a0:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <g_enunciator>
    22a4:	90 91 21 40 	lds	r25, 0x4021	; 0x804021 <g_enunciator+0x1>
    22a8:	01 97       	sbiw	r24, 0x01	; 1
    22aa:	79 f0       	breq	.+30     	; 0x22ca <__vector_12+0x906>
    22ac:	60 91 65 44 	lds	r22, 0x4465	; 0x804465 <_ZZ11__vector_12E3key>
    22b0:	8f e3       	ldi	r24, 0x3F	; 63
    22b2:	94 e4       	ldi	r25, 0x44	; 68
    22b4:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    22b8:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL27g_enunciation_code_throttle>
    22bc:	90 91 0a 40 	lds	r25, 0x400A	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    22c0:	80 93 5e 44 	sts	0x445E, r24	; 0x80445e <_ZZ11__vector_12E7codeInc>
    22c4:	90 93 5f 44 	sts	0x445F, r25	; 0x80445f <_ZZ11__vector_12E7codeInc+0x1>
    22c8:	5c ce       	rjmp	.-840    	; 0x1f82 <__vector_12+0x5be>
    22ca:	80 91 65 44 	lds	r24, 0x4465	; 0x804465 <_ZZ11__vector_12E3key>
    22ce:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    22d2:	ec cf       	rjmp	.-40     	; 0x22ac <__vector_12+0x8e8>
    22d4:	01 96       	adiw	r24, 0x01	; 1
    22d6:	83 30       	cpi	r24, 0x03	; 3
    22d8:	91 05       	cpc	r25, r1
    22da:	09 f1       	breq	.+66     	; 0x231e <__vector_12+0x95a>
    22dc:	fc 01       	movw	r30, r24
    22de:	dc 01       	movw	r26, r24
    22e0:	aa 0f       	add	r26, r26
    22e2:	bb 1f       	adc	r27, r27
    22e4:	a6 5e       	subi	r26, 0xE6	; 230
    22e6:	bf 4b       	sbci	r27, 0xBF	; 191
    22e8:	2d 91       	ld	r18, X+
    22ea:	3c 91       	ld	r19, X
    22ec:	23 2b       	or	r18, r19
    22ee:	61 f0       	breq	.+24     	; 0x2308 <__vector_12+0x944>
    22f0:	dc 01       	movw	r26, r24
    22f2:	aa 0f       	add	r26, r26
    22f4:	bb 1f       	adc	r27, r27
    22f6:	a6 5e       	subi	r26, 0xE6	; 230
    22f8:	bf 4b       	sbci	r27, 0xBF	; 191
    22fa:	2d 91       	ld	r18, X+
    22fc:	3c 91       	ld	r19, X
    22fe:	11 97       	sbiw	r26, 0x01	; 1
    2300:	21 50       	subi	r18, 0x01	; 1
    2302:	31 09       	sbc	r19, r1
    2304:	2d 93       	st	X+, r18
    2306:	3c 93       	st	X, r19
    2308:	ee 0f       	add	r30, r30
    230a:	ff 1f       	adc	r31, r31
    230c:	e6 5e       	subi	r30, 0xE6	; 230
    230e:	ff 4b       	sbci	r31, 0xBF	; 191
    2310:	20 81       	ld	r18, Z
    2312:	31 81       	ldd	r19, Z+1	; 0x01
    2314:	23 2b       	or	r18, r19
    2316:	f1 f6       	brne	.-68     	; 0x22d4 <__vector_12+0x910>
    2318:	48 2f       	mov	r20, r24
    231a:	56 2f       	mov	r21, r22
    231c:	db cf       	rjmp	.-74     	; 0x22d4 <__vector_12+0x910>
    231e:	51 11       	cpse	r21, r1
    2320:	20 c0       	rjmp	.+64     	; 0x2362 <__vector_12+0x99e>
    2322:	83 e0       	ldi	r24, 0x03	; 3
    2324:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
    2328:	24 96       	adiw	r28, 0x04	; 4
    232a:	cd bf       	out	0x3d, r28	; 61
    232c:	de bf       	out	0x3e, r29	; 62
    232e:	df 91       	pop	r29
    2330:	cf 91       	pop	r28
    2332:	ff 91       	pop	r31
    2334:	ef 91       	pop	r30
    2336:	bf 91       	pop	r27
    2338:	af 91       	pop	r26
    233a:	9f 91       	pop	r25
    233c:	8f 91       	pop	r24
    233e:	7f 91       	pop	r23
    2340:	6f 91       	pop	r22
    2342:	5f 91       	pop	r21
    2344:	4f 91       	pop	r20
    2346:	3f 91       	pop	r19
    2348:	2f 91       	pop	r18
    234a:	1f 91       	pop	r17
    234c:	ff 90       	pop	r15
    234e:	ef 90       	pop	r14
    2350:	df 90       	pop	r13
    2352:	cf 90       	pop	r12
    2354:	0f 90       	pop	r0
    2356:	0b be       	out	0x3b, r0	; 59
    2358:	0f 90       	pop	r0
    235a:	0f be       	out	0x3f, r0	; 63
    235c:	0f 90       	pop	r0
    235e:	1f 90       	pop	r1
    2360:	18 95       	reti
    2362:	40 93 5d 44 	sts	0x445D, r20	; 0x80445d <_ZZ11__vector_12E24indexConversionInProcess>
    2366:	44 23       	and	r20, r20
    2368:	e4 f2       	brlt	.-72     	; 0x2322 <__vector_12+0x95e>
    236a:	84 2f       	mov	r24, r20
    236c:	88 0f       	add	r24, r24
    236e:	99 0b       	sbc	r25, r25
    2370:	fc 01       	movw	r30, r24
    2372:	e1 56       	subi	r30, 0x61	; 97
    2374:	fd 4b       	sbci	r31, 0xBD	; 189
    2376:	20 81       	ld	r18, Z
    2378:	31 81       	ldd	r19, Z+1	; 0x01
    237a:	fc 01       	movw	r30, r24
    237c:	e6 5e       	subi	r30, 0xE6	; 230
    237e:	ff 4b       	sbci	r31, 0xBF	; 191
    2380:	20 83       	st	Z, r18
    2382:	31 83       	std	Z+1, r19	; 0x01
    2384:	87 56       	subi	r24, 0x67	; 103
    2386:	9d 4b       	sbci	r25, 0xBD	; 189
    2388:	dc 01       	movw	r26, r24
    238a:	8d 91       	ld	r24, X+
    238c:	9c 91       	ld	r25, X
    238e:	0e 94 4e 25 	call	0x4a9c	; 0x4a9c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2392:	0e 94 a6 25 	call	0x4b4c	; 0x4b4c <_Z20ADC0_startConversionv>
    2396:	81 e0       	ldi	r24, 0x01	; 1
    2398:	80 93 5c 44 	sts	0x445C, r24	; 0x80445c <_ZZ11__vector_12E19conversionInProcess>
    239c:	c2 cf       	rjmp	.-124    	; 0x2322 <__vector_12+0x95e>
    239e:	0e 94 b2 25 	call	0x4b64	; 0x4b64 <_Z19ADC0_conversionDonev>
    23a2:	88 23       	and	r24, r24
    23a4:	09 f4       	brne	.+2      	; 0x23a8 <__vector_12+0x9e4>
    23a6:	bd cf       	rjmp	.-134    	; 0x2322 <__vector_12+0x95e>
    23a8:	0e 94 b6 25 	call	0x4b6c	; 0x4b6c <_Z9ADC0_readv>
    23ac:	9c 01       	movw	r18, r24
    23ae:	2b 50       	subi	r18, 0x0B	; 11
    23b0:	31 09       	sbc	r19, r1
    23b2:	2f 3e       	cpi	r18, 0xEF	; 239
    23b4:	3f 40       	sbci	r19, 0x0F	; 15
    23b6:	d0 f4       	brcc	.+52     	; 0x23ec <__vector_12+0xa28>
    23b8:	80 93 68 44 	sts	0x4468, r24	; 0x804468 <_ZZ11__vector_12E20holdConversionResult>
    23bc:	90 93 69 44 	sts	0x4469, r25	; 0x804469 <_ZZ11__vector_12E20holdConversionResult+0x1>
    23c0:	20 91 5d 44 	lds	r18, 0x445D	; 0x80445d <_ZZ11__vector_12E24indexConversionInProcess>
    23c4:	02 2e       	mov	r0, r18
    23c6:	00 0c       	add	r0, r0
    23c8:	33 0b       	sbc	r19, r19
    23ca:	f9 01       	movw	r30, r18
    23cc:	ee 0f       	add	r30, r30
    23ce:	ff 1f       	adc	r31, r31
    23d0:	e4 5d       	subi	r30, 0xD4	; 212
    23d2:	fb 4b       	sbci	r31, 0xBB	; 187
    23d4:	40 81       	ld	r20, Z
    23d6:	51 81       	ldd	r21, Z+1	; 0x01
    23d8:	27 5d       	subi	r18, 0xD7	; 215
    23da:	3b 4b       	sbci	r19, 0xBB	; 187
    23dc:	41 e0       	ldi	r20, 0x01	; 1
    23de:	d9 01       	movw	r26, r18
    23e0:	4c 93       	st	X, r20
    23e2:	80 83       	st	Z, r24
    23e4:	91 83       	std	Z+1, r25	; 0x01
    23e6:	10 92 5c 44 	sts	0x445C, r1	; 0x80445c <_ZZ11__vector_12E19conversionInProcess>
    23ea:	9b cf       	rjmp	.-202    	; 0x2322 <__vector_12+0x95e>
    23ec:	e0 91 5d 44 	lds	r30, 0x445D	; 0x80445d <_ZZ11__vector_12E24indexConversionInProcess>
    23f0:	ee 0f       	add	r30, r30
    23f2:	ff 0b       	sbc	r31, r31
    23f4:	e4 5d       	subi	r30, 0xD4	; 212
    23f6:	fb 4b       	sbci	r31, 0xBB	; 187
    23f8:	80 81       	ld	r24, Z
    23fa:	91 81       	ldd	r25, Z+1	; 0x01
    23fc:	f4 cf       	rjmp	.-24     	; 0x23e6 <__vector_12+0xa22>

000023fe <__vector_29>:
    23fe:	1f 92       	push	r1
    2400:	0f 92       	push	r0
    2402:	0f b6       	in	r0, 0x3f	; 63
    2404:	0f 92       	push	r0
    2406:	11 24       	eor	r1, r1
    2408:	8f 93       	push	r24
    240a:	9f 93       	push	r25
    240c:	5f 99       	sbic	0x0b, 7	; 11
    240e:	09 c0       	rjmp	.+18     	; 0x2422 <__vector_29+0x24>
    2410:	8f ef       	ldi	r24, 0xFF	; 255
    2412:	8b b9       	out	0x0b, r24	; 11
    2414:	9f 91       	pop	r25
    2416:	8f 91       	pop	r24
    2418:	0f 90       	pop	r0
    241a:	0f be       	out	0x3f, r0	; 63
    241c:	0f 90       	pop	r0
    241e:	1f 90       	pop	r1
    2420:	18 95       	reti
    2422:	80 91 24 44 	lds	r24, 0x4424	; 0x804424 <_ZL10g_sleeping>
    2426:	88 23       	and	r24, r24
    2428:	99 f3       	breq	.-26     	; 0x2410 <__vector_29+0x12>
    242a:	10 92 23 44 	sts	0x4423, r1	; 0x804423 <_ZL17g_go_to_sleep_now>
    242e:	10 92 24 44 	sts	0x4424, r1	; 0x804424 <_ZL10g_sleeping>
    2432:	84 e0       	ldi	r24, 0x04	; 4
    2434:	90 e0       	ldi	r25, 0x00	; 0
    2436:	80 93 16 40 	sts	0x4016, r24	; 0x804016 <_ZL12g_awakenedBy>
    243a:	90 93 17 40 	sts	0x4017, r25	; 0x804017 <_ZL12g_awakenedBy+0x1>
    243e:	10 92 20 44 	sts	0x4420, r1	; 0x804420 <g_waiting_for_next_event>
    2442:	e6 cf       	rjmp	.-52     	; 0x2410 <__vector_29+0x12>

00002444 <_Z12powerDown3V3v>:
    2444:	80 e0       	ldi	r24, 0x00	; 0
    2446:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    244a:	0f 98       	cbi	0x01, 7	; 1
    244c:	2c 98       	cbi	0x05, 4	; 5
    244e:	08 95       	ret

00002450 <_Z10powerUp3V3v>:
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    2456:	2c 9a       	sbi	0x05, 4	; 5
    2458:	0f 9a       	sbi	0x01, 7	; 1
    245a:	08 95       	ret

0000245c <_Z6setFanb>:
    245c:	81 11       	cpse	r24, r1
    245e:	02 c0       	rjmp	.+4      	; 0x2464 <_Z6setFanb+0x8>
    2460:	09 98       	cbi	0x01, 1	; 1
    2462:	08 95       	ret
    2464:	09 9a       	sbi	0x01, 1	; 1
    2466:	08 95       	ret

00002468 <_Z7fanIsOnv>:
    2468:	82 b1       	in	r24, 0x02	; 2
    246a:	86 95       	lsr	r24
    246c:	81 70       	andi	r24, 0x01	; 1
    246e:	08 95       	ret

00002470 <main>:
    2470:	cf 93       	push	r28
    2472:	df 93       	push	r29
    2474:	cd b7       	in	r28, 0x3d	; 61
    2476:	de b7       	in	r29, 0x3e	; 62
    2478:	e8 97       	sbiw	r28, 0x38	; 56
    247a:	cd bf       	out	0x3d, r28	; 61
    247c:	de bf       	out	0x3e, r29	; 62
    247e:	0e 94 60 07 	call	0xec0	; 0xec0 <atmel_start_init>
    2482:	41 e0       	ldi	r20, 0x01	; 1
    2484:	70 e0       	ldi	r23, 0x00	; 0
    2486:	60 e0       	ldi	r22, 0x00	; 0
    2488:	8f e3       	ldi	r24, 0x3F	; 63
    248a:	94 e4       	ldi	r25, 0x44	; 68
    248c:	0e 94 60 38 	call	0x70c0	; 0x70c0 <_ZN4leds5blinkE7Blink_tb>
    2490:	0e 94 28 12 	call	0x2450	; 0x2450 <_Z10powerUp3V3v>
    2494:	81 e0       	ldi	r24, 0x01	; 1
    2496:	0e 94 2e 12 	call	0x245c	; 0x245c <_Z6setFanb>
    249a:	8a e4       	ldi	r24, 0x4A	; 74
    249c:	94 e4       	ldi	r25, 0x44	; 68
    249e:	0e 94 59 32 	call	0x64b2	; 0x64b2 <_ZN13EepromManager20initializeEEPROMVarsEv>
    24a2:	8a e4       	ldi	r24, 0x4A	; 74
    24a4:	94 e4       	ldi	r25, 0x44	; 68
    24a6:	0e 94 d3 2f 	call	0x5fa6	; 0x5fa6 <_ZN13EepromManager11readNonVolsEv>
    24aa:	81 e0       	ldi	r24, 0x01	; 1
    24ac:	0e 94 ef 34 	call	0x69de	; 0x69de <_Z10wifi_resetb>
    24b0:	81 e0       	ldi	r24, 0x01	; 1
    24b2:	0e 94 e9 34 	call	0x69d2	; 0x69d2 <_Z10wifi_powerb>
    24b6:	60 e0       	ldi	r22, 0x00	; 0
    24b8:	70 e0       	ldi	r23, 0x00	; 0
    24ba:	cb 01       	movw	r24, r22
    24bc:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    24c0:	68 ee       	ldi	r22, 0xE8	; 232
    24c2:	73 e0       	ldi	r23, 0x03	; 3
    24c4:	80 e0       	ldi	r24, 0x00	; 0
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    24cc:	88 23       	and	r24, r24
    24ce:	21 f0       	breq	.+8      	; 0x24d8 <main+0x68>
    24d0:	0e 94 f5 34 	call	0x69ea	; 0x69ea <_Z11wifiPresentv>
    24d4:	88 23       	and	r24, r24
    24d6:	a1 f3       	breq	.-24     	; 0x24c0 <main+0x50>
    24d8:	0e 94 f5 34 	call	0x69ea	; 0x69ea <_Z11wifiPresentv>
    24dc:	88 23       	and	r24, r24
    24de:	c1 f1       	breq	.+112    	; 0x2550 <main+0xe0>
    24e0:	80 e0       	ldi	r24, 0x00	; 0
    24e2:	0e 94 e9 34 	call	0x69d2	; 0x69d2 <_Z10wifi_powerb>
    24e6:	0e 94 f8 49 	call	0x93f0	; 0x93f0 <_Z16init_transmitterv>
    24ea:	89 2b       	or	r24, r25
    24ec:	69 f0       	breq	.+26     	; 0x2508 <main+0x98>
    24ee:	0e 94 4e 49 	call	0x929c	; 0x929c <_Z15txIsInitializedv>
    24f2:	81 11       	cpse	r24, r1
    24f4:	09 c0       	rjmp	.+18     	; 0x2508 <main+0x98>
    24f6:	80 91 cf 43 	lds	r24, 0x43CF	; 0x8043cf <_ZL16g_hardware_error>
    24fa:	90 91 d0 43 	lds	r25, 0x43D0	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    24fe:	82 60       	ori	r24, 0x02	; 2
    2500:	80 93 cf 43 	sts	0x43CF, r24	; 0x8043cf <_ZL16g_hardware_error>
    2504:	90 93 d0 43 	sts	0x43D0, r25	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    2508:	60 e0       	ldi	r22, 0x00	; 0
    250a:	70 e0       	ldi	r23, 0x00	; 0
    250c:	cb 01       	movw	r24, r22
    250e:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    2512:	68 ee       	ldi	r22, 0xE8	; 232
    2514:	73 e0       	ldi	r23, 0x03	; 3
    2516:	80 e0       	ldi	r24, 0x00	; 0
    2518:	90 e0       	ldi	r25, 0x00	; 0
    251a:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    251e:	81 11       	cpse	r24, r1
    2520:	f8 cf       	rjmp	.-16     	; 0x2512 <main+0xa2>
    2522:	0e 94 87 20 	call	0x410e	; 0x410e <_Z8rtc_initv>
    2526:	8c 01       	movw	r16, r24
    2528:	60 e0       	ldi	r22, 0x00	; 0
    252a:	70 e0       	ldi	r23, 0x00	; 0
    252c:	cb 01       	movw	r24, r22
    252e:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    2532:	68 e5       	ldi	r22, 0x58	; 88
    2534:	7b e1       	ldi	r23, 0x1B	; 27
    2536:	80 e0       	ldi	r24, 0x00	; 0
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    253e:	88 23       	and	r24, r24
    2540:	d9 f0       	breq	.+54     	; 0x2578 <main+0x108>
    2542:	0c 3f       	cpi	r16, 0xFC	; 252
    2544:	11 05       	cpc	r17, r1
    2546:	d9 f4       	brne	.+54     	; 0x257e <main+0x10e>
    2548:	0e 94 87 20 	call	0x410e	; 0x410e <_Z8rtc_initv>
    254c:	8c 01       	movw	r16, r24
    254e:	f1 cf       	rjmp	.-30     	; 0x2532 <main+0xc2>
    2550:	80 e0       	ldi	r24, 0x00	; 0
    2552:	0e 94 e9 34 	call	0x69d2	; 0x69d2 <_Z10wifi_powerb>
    2556:	81 e0       	ldi	r24, 0x01	; 1
    2558:	0e 94 ef 34 	call	0x69de	; 0x69de <_Z10wifi_resetb>
    255c:	10 92 cc 43 	sts	0x43CC, r1	; 0x8043cc <_ZL19g_wifi_enable_delay>
    2560:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2564:	80 91 cf 43 	lds	r24, 0x43CF	; 0x8043cf <_ZL16g_hardware_error>
    2568:	90 91 d0 43 	lds	r25, 0x43D0	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    256c:	84 60       	ori	r24, 0x04	; 4
    256e:	80 93 cf 43 	sts	0x43CF, r24	; 0x8043cf <_ZL16g_hardware_error>
    2572:	90 93 d0 43 	sts	0x43D0, r25	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    2576:	b7 cf       	rjmp	.-146    	; 0x24e6 <main+0x76>
    2578:	0c 3f       	cpi	r16, 0xFC	; 252
    257a:	11 05       	cpc	r17, r1
    257c:	79 f0       	breq	.+30     	; 0x259c <main+0x12c>
    257e:	ce 01       	movw	r24, r28
    2580:	01 96       	adiw	r24, 0x01	; 1
    2582:	0e 94 c7 28 	call	0x518e	; 0x518e <ds3231_get_epoch>
    2586:	29 81       	ldd	r18, Y+1	; 0x01
    2588:	3a 81       	ldd	r19, Y+2	; 0x02
    258a:	23 2b       	or	r18, r19
    258c:	11 f4       	brne	.+4      	; 0x2592 <main+0x122>
    258e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <set_system_time>
    2592:	0e 94 2f 24 	call	0x485e	; 0x485e <_Z14eventScheduledv>
    2596:	80 93 1d 44 	sts	0x441D, r24	; 0x80441d <g_event_scheduled>
    259a:	09 c0       	rjmp	.+18     	; 0x25ae <main+0x13e>
    259c:	80 91 cf 43 	lds	r24, 0x43CF	; 0x8043cf <_ZL16g_hardware_error>
    25a0:	90 91 d0 43 	lds	r25, 0x43D0	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    25a4:	81 60       	ori	r24, 0x01	; 1
    25a6:	80 93 cf 43 	sts	0x43CF, r24	; 0x8043cf <_ZL16g_hardware_error>
    25aa:	90 93 d0 43 	sts	0x43D0, r25	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    25ae:	83 e0       	ldi	r24, 0x03	; 3
    25b0:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    25b4:	0e 94 cd 1d 	call	0x3b9a	; 0x3b9a <_Z12eventEnabledv>
    25b8:	80 93 c3 43 	sts	0x43C3, r24	; 0x8043c3 <_ZL13g_start_event>
    25bc:	c1 2c       	mov	r12, r1
    25be:	d1 2c       	mov	r13, r1
    25c0:	76 01       	movw	r14, r12
    25c2:	09 e5       	ldi	r16, 0x59	; 89
    25c4:	13 e4       	ldi	r17, 0x43	; 67
    25c6:	0f 2e       	mov	r0, r31
    25c8:	fa e0       	ldi	r31, 0x0A	; 10
    25ca:	4f 2e       	mov	r4, r31
    25cc:	51 2c       	mov	r5, r1
    25ce:	f0 2d       	mov	r31, r0
    25d0:	0f 2e       	mov	r0, r31
    25d2:	f7 ea       	ldi	r31, 0xA7	; 167
    25d4:	6f 2e       	mov	r6, r31
    25d6:	f0 e4       	ldi	r31, 0x40	; 64
    25d8:	7f 2e       	mov	r7, r31
    25da:	f0 2d       	mov	r31, r0
    25dc:	0f 2e       	mov	r0, r31
    25de:	ff ea       	ldi	r31, 0xAF	; 175
    25e0:	af 2e       	mov	r10, r31
    25e2:	f0 e4       	ldi	r31, 0x40	; 64
    25e4:	bf 2e       	mov	r11, r31
    25e6:	f0 2d       	mov	r31, r0
    25e8:	0f 2e       	mov	r0, r31
    25ea:	f5 e0       	ldi	r31, 0x05	; 5
    25ec:	2f 2e       	mov	r2, r31
    25ee:	31 2c       	mov	r3, r1
    25f0:	f0 2d       	mov	r31, r0
    25f2:	9c c2       	rjmp	.+1336   	; 0x2b2c <main+0x6bc>
    25f4:	82 e0       	ldi	r24, 0x02	; 2
    25f6:	90 e0       	ldi	r25, 0x00	; 0
    25f8:	0e 94 0e 21 	call	0x421c	; 0x421c <_Z13startEventNow19EventActionSource_t>
    25fc:	ad c2       	rjmp	.+1370   	; 0x2b58 <main+0x6e8>
    25fe:	0e 94 f7 20 	call	0x41ee	; 0x41ee <_Z12suspendEventv>
    2602:	aa c2       	rjmp	.+1364   	; 0x2b58 <main+0x6e8>
    2604:	80 e4       	ldi	r24, 0x40	; 64
    2606:	94 e4       	ldi	r25, 0x44	; 68
    2608:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <_ZNK18CircularStringBuff5emptyEv>
    260c:	81 11       	cpse	r24, r1
    260e:	04 c0       	rjmp	.+8      	; 0x2618 <main+0x1a8>
    2610:	81 e0       	ldi	r24, 0x01	; 1
    2612:	80 93 3c 40 	sts	0x403C, r24	; 0x80403c <g_enable_LED_enunciations>
    2616:	b8 c2       	rjmp	.+1392   	; 0x2b88 <main+0x718>
    2618:	80 e4       	ldi	r24, 0x40	; 64
    261a:	94 e4       	ldi	r25, 0x44	; 68
    261c:	0e 94 bc 27 	call	0x4f78	; 0x4f78 <_ZN18CircularStringBuff6isBusyEv>
    2620:	81 11       	cpse	r24, r1
    2622:	b2 c2       	rjmp	.+1380   	; 0x2b88 <main+0x718>
    2624:	82 e0       	ldi	r24, 0x02	; 2
    2626:	90 e0       	ldi	r25, 0x00	; 0
    2628:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_enunciator>
    262c:	90 93 21 40 	sts	0x4021, r25	; 0x804021 <g_enunciator+0x1>
    2630:	80 91 cf 43 	lds	r24, 0x43CF	; 0x8043cf <_ZL16g_hardware_error>
    2634:	90 91 d0 43 	lds	r25, 0x43D0	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    2638:	89 2b       	or	r24, r25
    263a:	09 f0       	breq	.+2      	; 0x263e <main+0x1ce>
    263c:	97 c0       	rjmp	.+302    	; 0x276c <main+0x2fc>
    263e:	80 91 3c 44 	lds	r24, 0x443C	; 0x80443c <_ZL17g_do_powerup_xmsn>
    2642:	88 23       	and	r24, r24
    2644:	09 f4       	brne	.+2      	; 0x2648 <main+0x1d8>
    2646:	be c0       	rjmp	.+380    	; 0x27c4 <main+0x354>
    2648:	80 91 57 44 	lds	r24, 0x4457	; 0x804457 <g_delay_before_powerup_xmsn>
    264c:	90 91 58 44 	lds	r25, 0x4458	; 0x804458 <g_delay_before_powerup_xmsn+0x1>
    2650:	89 2b       	or	r24, r25
    2652:	09 f0       	breq	.+2      	; 0x2656 <main+0x1e6>
    2654:	99 c2       	rjmp	.+1330   	; 0x2b88 <main+0x718>
    2656:	90 e0       	ldi	r25, 0x00	; 0
    2658:	80 e0       	ldi	r24, 0x00	; 0
    265a:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    265e:	6d ab       	std	Y+53, r22	; 0x35
    2660:	7e ab       	std	Y+54, r23	; 0x36
    2662:	8f ab       	std	Y+55, r24	; 0x37
    2664:	98 af       	std	Y+56, r25	; 0x38
    2666:	0e 94 10 23 	call	0x4620	; 0x4620 <_Z23clockConfigurationCheckv>
    266a:	02 97       	sbiw	r24, 0x02	; 2
    266c:	09 f4       	brne	.+2      	; 0x2670 <main+0x200>
    266e:	7b c0       	rjmp	.+246    	; 0x2766 <main+0x2f6>
    2670:	80 91 14 44 	lds	r24, 0x4414	; 0x804414 <g_event_start_epoch>
    2674:	90 91 15 44 	lds	r25, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    2678:	a0 91 16 44 	lds	r26, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    267c:	b0 91 17 44 	lds	r27, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    2680:	2d a9       	ldd	r18, Y+53	; 0x35
    2682:	3e a9       	ldd	r19, Y+54	; 0x36
    2684:	4f a9       	ldd	r20, Y+55	; 0x37
    2686:	58 ad       	ldd	r21, Y+56	; 0x38
    2688:	28 17       	cp	r18, r24
    268a:	39 07       	cpc	r19, r25
    268c:	4a 07       	cpc	r20, r26
    268e:	5b 07       	cpc	r21, r27
    2690:	08 f0       	brcs	.+2      	; 0x2694 <main+0x224>
    2692:	69 c0       	rjmp	.+210    	; 0x2766 <main+0x2f6>
    2694:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2698:	8c ab       	std	Y+52, r24	; 0x34
    269a:	8c a9       	ldd	r24, Y+52	; 0x34
    269c:	8d 33       	cpi	r24, 0x3D	; 61
    269e:	08 f4       	brcc	.+2      	; 0x26a2 <main+0x232>
    26a0:	6c c0       	rjmp	.+216    	; 0x277a <main+0x30a>
    26a2:	8c a9       	ldd	r24, Y+52	; 0x34
    26a4:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    26a8:	81 e0       	ldi	r24, 0x01	; 1
    26aa:	0e 94 41 24 	call	0x4882	; 0x4882 <_Z15externBatStringb>
    26ae:	98 2e       	mov	r9, r24
    26b0:	89 2e       	mov	r8, r25
    26b2:	60 91 14 44 	lds	r22, 0x4414	; 0x804414 <g_event_start_epoch>
    26b6:	70 91 15 44 	lds	r23, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    26ba:	80 91 16 44 	lds	r24, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    26be:	90 91 17 44 	lds	r25, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    26c2:	22 e3       	ldi	r18, 0x32	; 50
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	ae 01       	movw	r20, r28
    26c8:	4f 5f       	subi	r20, 0xFF	; 255
    26ca:	5f 4f       	sbci	r21, 0xFF	; 255
    26cc:	0e 94 c4 2a 	call	0x5588	; 0x5588 <convertEpochToTimeString>
    26d0:	8f 92       	push	r8
    26d2:	9f 92       	push	r9
    26d4:	9f 93       	push	r25
    26d6:	8f 93       	push	r24
    26d8:	40 e9       	ldi	r20, 0x90	; 144
    26da:	50 e4       	ldi	r21, 0x40	; 64
    26dc:	5f 93       	push	r21
    26de:	4f 93       	push	r20
    26e0:	1f 93       	push	r17
    26e2:	0f 93       	push	r16
    26e4:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    26e8:	42 e7       	ldi	r20, 0x72	; 114
    26ea:	6e e2       	ldi	r22, 0x2E	; 46
    26ec:	c8 01       	movw	r24, r16
    26ee:	0e 94 a5 24 	call	0x494a	; 0x494a <_Z7repCharPccc>
    26f2:	40 e2       	ldi	r20, 0x20	; 32
    26f4:	6d e2       	ldi	r22, 0x2D	; 45
    26f6:	c8 01       	movw	r24, r16
    26f8:	0e 94 a5 24 	call	0x494a	; 0x494a <_Z7repCharPccc>
    26fc:	42 e7       	ldi	r20, 0x72	; 114
    26fe:	6a e3       	ldi	r22, 0x3A	; 58
    2700:	c8 01       	movw	r24, r16
    2702:	0e 94 a5 24 	call	0x494a	; 0x494a <_Z7repCharPccc>
    2706:	f8 01       	movw	r30, r16
    2708:	01 90       	ld	r0, Z+
    270a:	00 20       	and	r0, r0
    270c:	e9 f7       	brne	.-6      	; 0x2708 <main+0x298>
    270e:	cf 01       	movw	r24, r30
    2710:	8a 55       	subi	r24, 0x5A	; 90
    2712:	93 44       	sbci	r25, 0x43	; 67
    2714:	cd bf       	out	0x3d, r28	; 61
    2716:	de bf       	out	0x3e, r29	; 62
    2718:	80 35       	cpi	r24, 0x50	; 80
    271a:	91 05       	cpc	r25, r1
    271c:	28 f4       	brcc	.+10     	; 0x2728 <main+0x2b8>
    271e:	e1 ed       	ldi	r30, 0xD1	; 209
    2720:	f3 e4       	ldi	r31, 0x43	; 67
    2722:	80 81       	ld	r24, Z
    2724:	81 11       	cpse	r24, r1
    2726:	2b c0       	rjmp	.+86     	; 0x277e <main+0x30e>
    2728:	f8 01       	movw	r30, r16
    272a:	01 90       	ld	r0, Z+
    272c:	00 20       	and	r0, r0
    272e:	e9 f7       	brne	.-6      	; 0x272a <main+0x2ba>
    2730:	ea 55       	subi	r30, 0x5A	; 90
    2732:	f3 44       	sbci	r31, 0x43	; 67
    2734:	e5 35       	cpi	r30, 0x55	; 85
    2736:	f1 05       	cpc	r31, r1
    2738:	20 f4       	brcc	.+8      	; 0x2742 <main+0x2d2>
    273a:	80 91 fb 43 	lds	r24, 0x43FB	; 0x8043fb <g_messages_text+0x2a>
    273e:	81 11       	cpse	r24, r1
    2740:	25 c0       	rjmp	.+74     	; 0x278c <main+0x31c>
    2742:	8f e0       	ldi	r24, 0x0F	; 15
    2744:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    2748:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL27g_enunciation_code_throttle>
    274c:	90 93 0a 40 	sts	0x400A, r25	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    2750:	b8 01       	movw	r22, r16
    2752:	8f e3       	ldi	r24, 0x3F	; 63
    2754:	94 e4       	ldi	r25, 0x44	; 68
    2756:	0e 94 01 38 	call	0x7002	; 0x7002 <_ZN4leds8sendCodeEPc>
    275a:	81 e0       	ldi	r24, 0x01	; 1
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <g_enunciator>
    2762:	90 93 21 40 	sts	0x4021, r25	; 0x804021 <g_enunciator+0x1>
    2766:	10 92 3c 44 	sts	0x443C, r1	; 0x80443c <_ZL17g_do_powerup_xmsn>
    276a:	0e c2       	rjmp	.+1052   	; 0x2b88 <main+0x718>
    276c:	69 e0       	ldi	r22, 0x09	; 9
    276e:	70 e0       	ldi	r23, 0x00	; 0
    2770:	8f e3       	ldi	r24, 0x3F	; 63
    2772:	94 e4       	ldi	r25, 0x44	; 68
    2774:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN4leds5blinkE7Blink_t>
    2778:	07 c2       	rjmp	.+1038   	; 0x2b88 <main+0x718>
    277a:	8c e3       	ldi	r24, 0x3C	; 60
    277c:	93 cf       	rjmp	.-218    	; 0x26a4 <main+0x234>
    277e:	44 e1       	ldi	r20, 0x14	; 20
    2780:	50 e0       	ldi	r21, 0x00	; 0
    2782:	bf 01       	movw	r22, r30
    2784:	c8 01       	movw	r24, r16
    2786:	0e 94 3b 50 	call	0xa076	; 0xa076 <strncat>
    278a:	ce cf       	rjmp	.-100    	; 0x2728 <main+0x2b8>
    278c:	e7 5a       	subi	r30, 0xA7	; 167
    278e:	fc 4b       	sbci	r31, 0xBC	; 188
    2790:	20 e2       	ldi	r18, 0x20	; 32
    2792:	3d e3       	ldi	r19, 0x3D	; 61
    2794:	20 83       	st	Z, r18
    2796:	31 83       	std	Z+1, r19	; 0x01
    2798:	40 e2       	ldi	r20, 0x20	; 32
    279a:	50 e0       	ldi	r21, 0x00	; 0
    279c:	42 83       	std	Z+2, r20	; 0x02
    279e:	53 83       	std	Z+3, r21	; 0x03
    27a0:	44 e1       	ldi	r20, 0x14	; 20
    27a2:	50 e0       	ldi	r21, 0x00	; 0
    27a4:	6b ef       	ldi	r22, 0xFB	; 251
    27a6:	73 e4       	ldi	r23, 0x43	; 67
    27a8:	c8 01       	movw	r24, r16
    27aa:	0e 94 3b 50 	call	0xa076	; 0xa076 <strncat>
    27ae:	f8 01       	movw	r30, r16
    27b0:	01 90       	ld	r0, Z+
    27b2:	00 20       	and	r0, r0
    27b4:	e9 f7       	brne	.-6      	; 0x27b0 <main+0x340>
    27b6:	31 97       	sbiw	r30, 0x01	; 1
    27b8:	80 e2       	ldi	r24, 0x20	; 32
    27ba:	9e e7       	ldi	r25, 0x7E	; 126
    27bc:	80 83       	st	Z, r24
    27be:	91 83       	std	Z+1, r25	; 0x01
    27c0:	12 82       	std	Z+2, r1	; 0x02
    27c2:	bf cf       	rjmp	.-130    	; 0x2742 <main+0x2d2>
    27c4:	80 91 1d 44 	lds	r24, 0x441D	; 0x80441d <g_event_scheduled>
    27c8:	81 11       	cpse	r24, r1
    27ca:	0b c0       	rjmp	.+22     	; 0x27e2 <main+0x372>
    27cc:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    27d0:	88 23       	and	r24, r24
    27d2:	a9 f0       	breq	.+42     	; 0x27fe <main+0x38e>
    27d4:	61 e0       	ldi	r22, 0x01	; 1
    27d6:	70 e0       	ldi	r23, 0x00	; 0
    27d8:	8f e3       	ldi	r24, 0x3F	; 63
    27da:	94 e4       	ldi	r25, 0x44	; 68
    27dc:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN4leds5blinkE7Blink_t>
    27e0:	d3 c1       	rjmp	.+934    	; 0x2b88 <main+0x718>
    27e2:	88 e0       	ldi	r24, 0x08	; 8
    27e4:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    27e8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL27g_enunciation_code_throttle>
    27ec:	90 93 0a 40 	sts	0x400A, r25	; 0x80400a <_ZL27g_enunciation_code_throttle+0x1>
    27f0:	63 ea       	ldi	r22, 0xA3	; 163
    27f2:	70 e4       	ldi	r23, 0x40	; 64
    27f4:	8f e3       	ldi	r24, 0x3F	; 63
    27f6:	94 e4       	ldi	r25, 0x44	; 68
    27f8:	0e 94 01 38 	call	0x7002	; 0x7002 <_ZN4leds8sendCodeEPc>
    27fc:	c5 c1       	rjmp	.+906    	; 0x2b88 <main+0x718>
    27fe:	63 e0       	ldi	r22, 0x03	; 3
    2800:	70 e0       	ldi	r23, 0x00	; 0
    2802:	8f e3       	ldi	r24, 0x3F	; 63
    2804:	94 e4       	ldi	r25, 0x44	; 68
    2806:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN4leds5blinkE7Blink_t>
    280a:	be c1       	rjmp	.+892    	; 0x2b88 <main+0x718>
    280c:	0e 94 bb 25 	call	0x4b76	; 0x4b76 <_Z12temperatureCv>
    2810:	4c 01       	movw	r8, r24
    2812:	89 53       	subi	r24, 0x39	; 57
    2814:	9f 4f       	sbci	r25, 0xFF	; 255
    2816:	8d 35       	cpi	r24, 0x5D	; 93
    2818:	91 40       	sbci	r25, 0x01	; 1
    281a:	28 f0       	brcs	.+10     	; 0x2826 <main+0x3b6>
    281c:	40 92 3a 44 	sts	0x443A, r4	; 0x80443a <g_check_temperature>
    2820:	50 92 3b 44 	sts	0x443B, r5	; 0x80443b <g_check_temperature+0x1>
    2824:	b8 c1       	rjmp	.+880    	; 0x2b96 <main+0x726>
    2826:	0e 94 34 12 	call	0x2468	; 0x2468 <_Z7fanIsOnv>
    282a:	88 23       	and	r24, r24
    282c:	41 f0       	breq	.+16     	; 0x283e <main+0x3ce>
    282e:	ff e1       	ldi	r31, 0x1F	; 31
    2830:	8f 16       	cp	r8, r31
    2832:	91 04       	cpc	r9, r1
    2834:	9c f7       	brge	.-26     	; 0x281c <main+0x3ac>
    2836:	80 e0       	ldi	r24, 0x00	; 0
    2838:	0e 94 2e 12 	call	0x245c	; 0x245c <_Z6setFanb>
    283c:	ef cf       	rjmp	.-34     	; 0x281c <main+0x3ac>
    283e:	23 e2       	ldi	r18, 0x23	; 35
    2840:	82 16       	cp	r8, r18
    2842:	91 04       	cpc	r9, r1
    2844:	5c f3       	brlt	.-42     	; 0x281c <main+0x3ac>
    2846:	81 e0       	ldi	r24, 0x01	; 1
    2848:	0e 94 2e 12 	call	0x245c	; 0x245c <_Z6setFanb>
    284c:	e7 cf       	rjmp	.-50     	; 0x281c <main+0x3ac>
    284e:	0e 94 f7 20 	call	0x41ee	; 0x41ee <_Z12suspendEventv>
    2852:	ae c1       	rjmp	.+860    	; 0x2bb0 <main+0x740>
    2854:	10 92 c3 43 	sts	0x43C3, r1	; 0x8043c3 <_ZL13g_start_event>
    2858:	19 82       	std	Y+1, r1	; 0x01
    285a:	1a 82       	std	Y+2, r1	; 0x02
    285c:	ce 01       	movw	r24, r28
    285e:	01 96       	adiw	r24, 0x01	; 1
    2860:	0e 94 b1 1e 	call	0x3d62	; 0x3d62 <_Z11launchEventP2SC>
    2864:	80 93 bd 43 	sts	0x43BD, r24	; 0x8043bd <_ZL17g_last_error_code>
    2868:	90 93 be 43 	sts	0x43BE, r25	; 0x8043be <_ZL17g_last_error_code+0x1>
    286c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2870:	88 23       	and	r24, r24
    2872:	09 f4       	brne	.+2      	; 0x2876 <main+0x406>
    2874:	a7 c1       	rjmp	.+846    	; 0x2bc4 <main+0x754>
    2876:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    287a:	8b ab       	std	Y+51, r24	; 0x33
    287c:	8b a9       	ldd	r24, Y+51	; 0x33
    287e:	8a 30       	cpi	r24, 0x0A	; 10
    2880:	20 f0       	brcs	.+8      	; 0x288a <main+0x41a>
    2882:	8b a9       	ldd	r24, Y+51	; 0x33
    2884:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2888:	9d c1       	rjmp	.+826    	; 0x2bc4 <main+0x754>
    288a:	c2 01       	movw	r24, r4
    288c:	fb cf       	rjmp	.-10     	; 0x2884 <main+0x414>
    288e:	10 92 c4 43 	sts	0x43C4, r1	; 0x8043c4 <_ZL11g_end_event>
    2892:	0e 94 f7 20 	call	0x41ee	; 0x41ee <_Z12suspendEventv>
    2896:	9a c1       	rjmp	.+820    	; 0x2bcc <main+0x75c>
    2898:	10 92 cb 43 	sts	0x43CB, r1	; 0x8043cb <_ZL16g_report_seconds>
    289c:	90 e0       	ldi	r25, 0x00	; 0
    289e:	80 e0       	ldi	r24, 0x00	; 0
    28a0:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    28a4:	9f 93       	push	r25
    28a6:	8f 93       	push	r24
    28a8:	7f 93       	push	r23
    28aa:	6f 93       	push	r22
    28ac:	7f 92       	push	r7
    28ae:	6f 92       	push	r6
    28b0:	1f 93       	push	r17
    28b2:	0f 93       	push	r16
    28b4:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    28b8:	a8 01       	movw	r20, r16
    28ba:	6b ea       	ldi	r22, 0xAB	; 171
    28bc:	70 e4       	ldi	r23, 0x40	; 64
    28be:	83 e0       	ldi	r24, 0x03	; 3
    28c0:	90 e0       	ldi	r25, 0x00	; 0
    28c2:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    28c6:	cd bf       	out	0x3d, r28	; 61
    28c8:	de bf       	out	0x3e, r29	; 62
    28ca:	c1 2c       	mov	r12, r1
    28cc:	d1 2c       	mov	r13, r1
    28ce:	e1 2c       	mov	r14, r1
    28d0:	f1 2c       	mov	r15, r1
    28d2:	95 c1       	rjmp	.+810    	; 0x2bfe <main+0x78e>
    28d4:	80 91 bd 43 	lds	r24, 0x43BD	; 0x8043bd <_ZL17g_last_error_code>
    28d8:	90 91 be 43 	lds	r25, 0x43BE	; 0x8043be <_ZL17g_last_error_code+0x1>
    28dc:	9f 93       	push	r25
    28de:	8f 93       	push	r24
    28e0:	bf 92       	push	r11
    28e2:	af 92       	push	r10
    28e4:	1f 93       	push	r17
    28e6:	0f 93       	push	r16
    28e8:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    28ec:	a8 01       	movw	r20, r16
    28ee:	62 eb       	ldi	r22, 0xB2	; 178
    28f0:	70 e4       	ldi	r23, 0x40	; 64
    28f2:	83 e0       	ldi	r24, 0x03	; 3
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    28fa:	10 92 bd 43 	sts	0x43BD, r1	; 0x8043bd <_ZL17g_last_error_code>
    28fe:	10 92 be 43 	sts	0x43BE, r1	; 0x8043be <_ZL17g_last_error_code+0x1>
    2902:	0f 90       	pop	r0
    2904:	0f 90       	pop	r0
    2906:	0f 90       	pop	r0
    2908:	0f 90       	pop	r0
    290a:	0f 90       	pop	r0
    290c:	0f 90       	pop	r0
    290e:	7e c1       	rjmp	.+764    	; 0x2c0c <main+0x79c>
    2910:	80 91 bf 43 	lds	r24, 0x43BF	; 0x8043bf <_ZL18g_last_status_code>
    2914:	90 91 c0 43 	lds	r25, 0x43C0	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    2918:	9f 93       	push	r25
    291a:	8f 93       	push	r24
    291c:	bf 92       	push	r11
    291e:	af 92       	push	r10
    2920:	1f 93       	push	r17
    2922:	0f 93       	push	r16
    2924:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    2928:	a8 01       	movw	r20, r16
    292a:	65 eb       	ldi	r22, 0xB5	; 181
    292c:	70 e4       	ldi	r23, 0x40	; 64
    292e:	83 e0       	ldi	r24, 0x03	; 3
    2930:	90 e0       	ldi	r25, 0x00	; 0
    2932:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2936:	10 92 bf 43 	sts	0x43BF, r1	; 0x8043bf <_ZL18g_last_status_code>
    293a:	10 92 c0 43 	sts	0x43C0, r1	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    293e:	0f 90       	pop	r0
    2940:	0f 90       	pop	r0
    2942:	0f 90       	pop	r0
    2944:	0f 90       	pop	r0
    2946:	0f 90       	pop	r0
    2948:	0f 90       	pop	r0
    294a:	67 c1       	rjmp	.+718    	; 0x2c1a <main+0x7aa>
    294c:	10 92 1f 44 	sts	0x441F, r1	; 0x80441f <g_check_for_next_event>
    2950:	81 e0       	ldi	r24, 0x01	; 1
    2952:	80 93 20 44 	sts	0x4420, r24	; 0x804420 <g_waiting_for_next_event>
    2956:	80 91 bf 43 	lds	r24, 0x43BF	; 0x8043bf <_ZL18g_last_status_code>
    295a:	90 91 c0 43 	lds	r25, 0x43C0	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    295e:	9f 93       	push	r25
    2960:	8f 93       	push	r24
    2962:	bf 92       	push	r11
    2964:	af 92       	push	r10
    2966:	1f 93       	push	r17
    2968:	0f 93       	push	r16
    296a:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    296e:	48 eb       	ldi	r20, 0xB8	; 184
    2970:	50 e4       	ldi	r21, 0x40	; 64
    2972:	6a eb       	ldi	r22, 0xBA	; 186
    2974:	70 e4       	ldi	r23, 0x40	; 64
    2976:	83 e0       	ldi	r24, 0x03	; 3
    2978:	90 e0       	ldi	r25, 0x00	; 0
    297a:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    297e:	20 92 18 40 	sts	0x4018, r2	; 0x804018 <_ZL11g_sleepType>
    2982:	30 92 19 40 	sts	0x4019, r3	; 0x804019 <_ZL11g_sleepType+0x1>
    2986:	0f 90       	pop	r0
    2988:	0f 90       	pop	r0
    298a:	0f 90       	pop	r0
    298c:	0f 90       	pop	r0
    298e:	0f 90       	pop	r0
    2990:	0f 90       	pop	r0
    2992:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    2996:	88 23       	and	r24, r24
    2998:	b1 f0       	breq	.+44     	; 0x29c6 <main+0x556>
    299a:	10 92 06 40 	sts	0x4006, r1	; 0x804006 <_ZL28g_antenna_connection_changed>
    299e:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    29a2:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    29a6:	01 97       	sbiw	r24, 0x01	; 1
    29a8:	09 f4       	brne	.+2      	; 0x29ac <main+0x53c>
    29aa:	84 c0       	rjmp	.+264    	; 0x2ab4 <main+0x644>
    29ac:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    29b0:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    29b4:	02 97       	sbiw	r24, 0x02	; 2
    29b6:	09 f4       	brne	.+2      	; 0x29ba <main+0x54a>
    29b8:	87 c0       	rjmp	.+270    	; 0x2ac8 <main+0x658>
    29ba:	8f e3       	ldi	r24, 0x3F	; 63
    29bc:	94 e4       	ldi	r25, 0x44	; 68
    29be:	0e 94 bf 3a 	call	0x757e	; 0x757e <_ZN4leds4initEv>
    29c2:	0e 94 c1 20 	call	0x4182	; 0x4182 <_Z25setAntennaStateEnunciatorv>
    29c6:	80 91 23 44 	lds	r24, 0x4423	; 0x804423 <_ZL17g_go_to_sleep_now>
    29ca:	88 23       	and	r24, r24
    29cc:	09 f4       	brne	.+2      	; 0x29d0 <main+0x560>
    29ce:	ae c0       	rjmp	.+348    	; 0x2b2c <main+0x6bc>
    29d0:	8f e3       	ldi	r24, 0x3F	; 63
    29d2:	94 e4       	ldi	r25, 0x44	; 68
    29d4:	0e 94 d1 37 	call	0x6fa2	; 0x6fa2 <_ZN4leds10deactivateEv>
    29d8:	0e 94 f6 3b 	call	0x77ec	; 0x77ec <_Z15linkbus_disablev>
    29dc:	0e 94 ea 49 	call	0x93d4	; 0x93d4 <_Z20shutdown_transmitterv>
    29e0:	81 e0       	ldi	r24, 0x01	; 1
    29e2:	0e 94 ef 34 	call	0x69de	; 0x69de <_Z10wifi_resetb>
    29e6:	80 e0       	ldi	r24, 0x00	; 0
    29e8:	0e 94 e9 34 	call	0x69d2	; 0x69d2 <_Z10wifi_powerb>
    29ec:	0e 94 22 12 	call	0x2444	; 0x2444 <_Z12powerDown3V3v>
    29f0:	80 e0       	ldi	r24, 0x00	; 0
    29f2:	0e 94 2e 12 	call	0x245c	; 0x245c <_Z6setFanb>
    29f6:	0e 94 bc 28 	call	0x5178	; 0x5178 <system_sleep_settings>
    29fa:	10 92 20 44 	sts	0x4420, r1	; 0x804420 <g_waiting_for_next_event>
    29fe:	82 e0       	ldi	r24, 0x02	; 2
    2a00:	90 e0       	ldi	r25, 0x00	; 0
    2a02:	0e 94 2c 47 	call	0x8e58	; 0x8e58 <SLPCTRL_set_sleep_mode>
    2a06:	81 e0       	ldi	r24, 0x01	; 1
    2a08:	80 93 24 44 	sts	0x4424, r24	; 0x804424 <_ZL10g_sleeping>
    2a0c:	10 92 16 40 	sts	0x4016, r1	; 0x804016 <_ZL12g_awakenedBy>
    2a10:	10 92 17 40 	sts	0x4017, r1	; 0x804017 <_ZL12g_awakenedBy+0x1>
    2a14:	80 91 23 44 	lds	r24, 0x4423	; 0x804423 <_ZL17g_go_to_sleep_now>
    2a18:	88 23       	and	r24, r24
    2a1a:	99 f0       	breq	.+38     	; 0x2a42 <main+0x5d2>
    2a1c:	e0 e5       	ldi	r30, 0x50	; 80
    2a1e:	f0 e0       	ldi	r31, 0x00	; 0
    2a20:	80 81       	ld	r24, Z
    2a22:	89 7f       	andi	r24, 0xF9	; 249
    2a24:	82 60       	ori	r24, 0x02	; 2
    2a26:	80 83       	st	Z, r24
    2a28:	f8 94       	cli
    2a2a:	80 81       	ld	r24, Z
    2a2c:	81 60       	ori	r24, 0x01	; 1
    2a2e:	80 83       	st	Z, r24
    2a30:	78 94       	sei
    2a32:	88 95       	sleep
    2a34:	80 81       	ld	r24, Z
    2a36:	8e 7f       	andi	r24, 0xFE	; 254
    2a38:	80 83       	st	Z, r24
    2a3a:	80 91 23 44 	lds	r24, 0x4423	; 0x804423 <_ZL17g_go_to_sleep_now>
    2a3e:	81 11       	cpse	r24, r1
    2a40:	ef cf       	rjmp	.-34     	; 0x2a20 <main+0x5b0>
    2a42:	10 92 24 44 	sts	0x4424, r1	; 0x804424 <_ZL10g_sleeping>
    2a46:	0e 94 60 07 	call	0xec0	; 0xec0 <atmel_start_init>
    2a4a:	0e 94 28 12 	call	0x2450	; 0x2450 <_Z10powerUp3V3v>
    2a4e:	0e 94 f8 49 	call	0x93f0	; 0x93f0 <_Z16init_transmitterv>
    2a52:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <_ZL12g_awakenedBy>
    2a56:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <_ZL12g_awakenedBy+0x1>
    2a5a:	04 97       	sbiw	r24, 0x04	; 4
    2a5c:	09 f4       	brne	.+2      	; 0x2a60 <main+0x5f0>
    2a5e:	55 c0       	rjmp	.+170    	; 0x2b0a <main+0x69a>
    2a60:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <_ZL12g_awakenedBy>
    2a64:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <_ZL12g_awakenedBy+0x1>
    2a68:	03 97       	sbiw	r24, 0x03	; 3
    2a6a:	09 f4       	brne	.+2      	; 0x2a6e <main+0x5fe>
    2a6c:	4e c0       	rjmp	.+156    	; 0x2b0a <main+0x69a>
    2a6e:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <_ZL12g_awakenedBy>
    2a72:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <_ZL12g_awakenedBy+0x1>
    2a76:	01 97       	sbiw	r24, 0x01	; 1
    2a78:	09 f4       	brne	.+2      	; 0x2a7c <main+0x60c>
    2a7a:	47 c0       	rjmp	.+142    	; 0x2b0a <main+0x69a>
    2a7c:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <_ZL12g_awakenedBy>
    2a80:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <_ZL12g_awakenedBy+0x1>
    2a84:	02 97       	sbiw	r24, 0x02	; 2
    2a86:	09 f0       	breq	.+2      	; 0x2a8a <main+0x61a>
    2a88:	47 c0       	rjmp	.+142    	; 0x2b18 <main+0x6a8>
    2a8a:	81 e0       	ldi	r24, 0x01	; 1
    2a8c:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    2a90:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    2a94:	81 11       	cpse	r24, r1
    2a96:	40 c0       	rjmp	.+128    	; 0x2b18 <main+0x6a8>
    2a98:	0e 94 cd 1d 	call	0x3b9a	; 0x3b9a <_Z12eventEnabledv>
    2a9c:	80 93 c3 43 	sts	0x43C3, r24	; 0x8043c3 <_ZL13g_start_event>
    2aa0:	80 91 c3 43 	lds	r24, 0x43C3	; 0x8043c3 <_ZL13g_start_event>
    2aa4:	81 11       	cpse	r24, r1
    2aa6:	38 c0       	rjmp	.+112    	; 0x2b18 <main+0x6a8>
    2aa8:	0e 94 16 3c 	call	0x782c	; 0x782c <_Z14linkbus_enablev>
    2aac:	82 e0       	ldi	r24, 0x02	; 2
    2aae:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    2ab2:	32 c0       	rjmp	.+100    	; 0x2b18 <main+0x6a8>
    2ab4:	81 e0       	ldi	r24, 0x01	; 1
    2ab6:	0e 94 eb 48 	call	0x91d6	; 0x91d6 <_Z15inhibitRFOutputb>
    2aba:	87 ef       	ldi	r24, 0xF7	; 247
    2abc:	90 e0       	ldi	r25, 0x00	; 0
    2abe:	80 93 bd 43 	sts	0x43BD, r24	; 0x8043bd <_ZL17g_last_error_code>
    2ac2:	90 93 be 43 	sts	0x43BE, r25	; 0x8043be <_ZL17g_last_error_code+0x1>
    2ac6:	79 cf       	rjmp	.-270    	; 0x29ba <main+0x54a>
    2ac8:	80 e0       	ldi	r24, 0x00	; 0
    2aca:	0e 94 eb 48 	call	0x91d6	; 0x91d6 <_Z15inhibitRFOutputb>
    2ace:	8f e3       	ldi	r24, 0x3F	; 63
    2ad0:	94 e4       	ldi	r25, 0x44	; 68
    2ad2:	0e 94 bf 3a 	call	0x757e	; 0x757e <_ZN4leds4initEv>
    2ad6:	0e 94 cd 1d 	call	0x3b9a	; 0x3b9a <_Z12eventEnabledv>
    2ada:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <_ZL11g_sleepType>
    2ade:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <_ZL11g_sleepType+0x1>
    2ae2:	01 97       	sbiw	r24, 0x01	; 1
    2ae4:	09 f0       	breq	.+2      	; 0x2ae8 <main+0x678>
    2ae6:	69 cf       	rjmp	.-302    	; 0x29ba <main+0x54a>
    2ae8:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <_ZL12g_awakenedBy>
    2aec:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <_ZL12g_awakenedBy+0x1>
    2af0:	01 97       	sbiw	r24, 0x01	; 1
    2af2:	09 f4       	brne	.+2      	; 0x2af6 <main+0x686>
    2af4:	62 cf       	rjmp	.-316    	; 0x29ba <main+0x54a>
    2af6:	81 e0       	ldi	r24, 0x01	; 1
    2af8:	80 93 3c 44 	sts	0x443C, r24	; 0x80443c <_ZL17g_do_powerup_xmsn>
    2afc:	88 ee       	ldi	r24, 0xE8	; 232
    2afe:	93 e0       	ldi	r25, 0x03	; 3
    2b00:	80 93 57 44 	sts	0x4457, r24	; 0x804457 <g_delay_before_powerup_xmsn>
    2b04:	90 93 58 44 	sts	0x4458, r25	; 0x804458 <g_delay_before_powerup_xmsn+0x1>
    2b08:	58 cf       	rjmp	.-336    	; 0x29ba <main+0x54a>
    2b0a:	0e 94 c1 20 	call	0x4182	; 0x4182 <_Z25setAntennaStateEnunciatorv>
    2b0e:	0e 94 16 3c 	call	0x782c	; 0x782c <_Z14linkbus_enablev>
    2b12:	82 e0       	ldi	r24, 0x02	; 2
    2b14:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    2b18:	0e 94 2f 24 	call	0x485e	; 0x485e <_Z14eventScheduledv>
    2b1c:	80 93 1d 44 	sts	0x441D, r24	; 0x80441d <g_event_scheduled>
    2b20:	8d ee       	ldi	r24, 0xED	; 237
    2b22:	90 e0       	ldi	r25, 0x00	; 0
    2b24:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    2b28:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    2b2c:	0e 94 22 16 	call	0x2c44	; 0x2c44 <_Z17handleLinkBusMsgsv>
    2b30:	80 91 35 44 	lds	r24, 0x4435	; 0x804435 <g_handle_counted_presses>
    2b34:	90 91 36 44 	lds	r25, 0x4436	; 0x804436 <g_handle_counted_presses+0x1>
    2b38:	89 2b       	or	r24, r25
    2b3a:	91 f0       	breq	.+36     	; 0x2b60 <main+0x6f0>
    2b3c:	80 91 35 44 	lds	r24, 0x4435	; 0x804435 <g_handle_counted_presses>
    2b40:	90 91 36 44 	lds	r25, 0x4436	; 0x804436 <g_handle_counted_presses+0x1>
    2b44:	01 97       	sbiw	r24, 0x01	; 1
    2b46:	09 f4       	brne	.+2      	; 0x2b4a <main+0x6da>
    2b48:	55 cd       	rjmp	.-1366   	; 0x25f4 <main+0x184>
    2b4a:	80 91 35 44 	lds	r24, 0x4435	; 0x804435 <g_handle_counted_presses>
    2b4e:	90 91 36 44 	lds	r25, 0x4436	; 0x804436 <g_handle_counted_presses+0x1>
    2b52:	02 97       	sbiw	r24, 0x02	; 2
    2b54:	09 f4       	brne	.+2      	; 0x2b58 <main+0x6e8>
    2b56:	53 cd       	rjmp	.-1370   	; 0x25fe <main+0x18e>
    2b58:	10 92 35 44 	sts	0x4435, r1	; 0x804435 <g_handle_counted_presses>
    2b5c:	10 92 36 44 	sts	0x4436, r1	; 0x804436 <g_handle_counted_presses+0x1>
    2b60:	80 91 33 44 	lds	r24, 0x4433	; 0x804433 <g_switch_closed_time>
    2b64:	90 91 34 44 	lds	r25, 0x4434	; 0x804434 <g_switch_closed_time+0x1>
    2b68:	88 3e       	cpi	r24, 0xE8	; 232
    2b6a:	93 40       	sbci	r25, 0x03	; 3
    2b6c:	08 f4       	brcc	.+2      	; 0x2b70 <main+0x700>
    2b6e:	4a cd       	rjmp	.-1388   	; 0x2604 <main+0x194>
    2b70:	68 e0       	ldi	r22, 0x08	; 8
    2b72:	70 e0       	ldi	r23, 0x00	; 0
    2b74:	8f e3       	ldi	r24, 0x3F	; 63
    2b76:	94 e4       	ldi	r25, 0x44	; 68
    2b78:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN4leds5blinkE7Blink_t>
    2b7c:	67 e0       	ldi	r22, 0x07	; 7
    2b7e:	70 e0       	ldi	r23, 0x00	; 0
    2b80:	8f e3       	ldi	r24, 0x3F	; 63
    2b82:	94 e4       	ldi	r25, 0x44	; 68
    2b84:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN4leds5blinkE7Blink_t>
    2b88:	80 91 3a 44 	lds	r24, 0x443A	; 0x80443a <g_check_temperature>
    2b8c:	90 91 3b 44 	lds	r25, 0x443B	; 0x80443b <g_check_temperature+0x1>
    2b90:	89 2b       	or	r24, r25
    2b92:	09 f4       	brne	.+2      	; 0x2b96 <main+0x726>
    2b94:	3b ce       	rjmp	.-906    	; 0x280c <main+0x39c>
    2b96:	80 91 39 44 	lds	r24, 0x4439	; 0x804439 <g_long_button_press>
    2b9a:	88 23       	and	r24, r24
    2b9c:	79 f0       	breq	.+30     	; 0x2bbc <main+0x74c>
    2b9e:	10 92 39 44 	sts	0x4439, r1	; 0x804439 <g_long_button_press>
    2ba2:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    2ba6:	81 11       	cpse	r24, r1
    2ba8:	52 ce       	rjmp	.-860    	; 0x284e <main+0x3de>
    2baa:	81 e0       	ldi	r24, 0x01	; 1
    2bac:	80 93 1f 44 	sts	0x441F, r24	; 0x80441f <g_check_for_next_event>
    2bb0:	68 e0       	ldi	r22, 0x08	; 8
    2bb2:	70 e0       	ldi	r23, 0x00	; 0
    2bb4:	8f e3       	ldi	r24, 0x3F	; 63
    2bb6:	94 e4       	ldi	r25, 0x44	; 68
    2bb8:	0e 94 9c 3a 	call	0x7538	; 0x7538 <_ZN4leds4initE7Blink_t>
    2bbc:	80 91 c3 43 	lds	r24, 0x43C3	; 0x8043c3 <_ZL13g_start_event>
    2bc0:	81 11       	cpse	r24, r1
    2bc2:	48 ce       	rjmp	.-880    	; 0x2854 <main+0x3e4>
    2bc4:	80 91 c4 43 	lds	r24, 0x43C4	; 0x8043c4 <_ZL11g_end_event>
    2bc8:	81 11       	cpse	r24, r1
    2bca:	61 ce       	rjmp	.-830    	; 0x288e <main+0x41e>
    2bcc:	80 91 cb 43 	lds	r24, 0x43CB	; 0x8043cb <_ZL16g_report_seconds>
    2bd0:	88 23       	and	r24, r24
    2bd2:	a9 f0       	breq	.+42     	; 0x2bfe <main+0x78e>
    2bd4:	c1 14       	cp	r12, r1
    2bd6:	d1 04       	cpc	r13, r1
    2bd8:	e1 04       	cpc	r14, r1
    2bda:	f1 04       	cpc	r15, r1
    2bdc:	51 f0       	breq	.+20     	; 0x2bf2 <main+0x782>
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	80 e0       	ldi	r24, 0x00	; 0
    2be2:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    2be6:	6c 15       	cp	r22, r12
    2be8:	7d 05       	cpc	r23, r13
    2bea:	8e 05       	cpc	r24, r14
    2bec:	9f 05       	cpc	r25, r15
    2bee:	09 f0       	breq	.+2      	; 0x2bf2 <main+0x782>
    2bf0:	53 ce       	rjmp	.-858    	; 0x2898 <main+0x428>
    2bf2:	90 e0       	ldi	r25, 0x00	; 0
    2bf4:	80 e0       	ldi	r24, 0x00	; 0
    2bf6:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    2bfa:	6b 01       	movw	r12, r22
    2bfc:	7c 01       	movw	r14, r24
    2bfe:	80 91 bd 43 	lds	r24, 0x43BD	; 0x8043bd <_ZL17g_last_error_code>
    2c02:	90 91 be 43 	lds	r25, 0x43BE	; 0x8043be <_ZL17g_last_error_code+0x1>
    2c06:	89 2b       	or	r24, r25
    2c08:	09 f0       	breq	.+2      	; 0x2c0c <main+0x79c>
    2c0a:	64 ce       	rjmp	.-824    	; 0x28d4 <main+0x464>
    2c0c:	80 91 bf 43 	lds	r24, 0x43BF	; 0x8043bf <_ZL18g_last_status_code>
    2c10:	90 91 c0 43 	lds	r25, 0x43C0	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    2c14:	89 2b       	or	r24, r25
    2c16:	09 f0       	breq	.+2      	; 0x2c1a <main+0x7aa>
    2c18:	7b ce       	rjmp	.-778    	; 0x2910 <main+0x4a0>
    2c1a:	80 91 1f 44 	lds	r24, 0x441F	; 0x80441f <g_check_for_next_event>
    2c1e:	88 23       	and	r24, r24
    2c20:	09 f4       	brne	.+2      	; 0x2c24 <main+0x7b4>
    2c22:	b7 ce       	rjmp	.-658    	; 0x2992 <main+0x522>
    2c24:	80 91 ce 43 	lds	r24, 0x43CE	; 0x8043ce <_ZL12g_wifi_ready>
    2c28:	81 11       	cpse	r24, r1
    2c2a:	90 ce       	rjmp	.-736    	; 0x294c <main+0x4dc>
    2c2c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2c30:	81 11       	cpse	r24, r1
    2c32:	af ce       	rjmp	.-674    	; 0x2992 <main+0x522>
    2c34:	80 91 cc 43 	lds	r24, 0x43CC	; 0x8043cc <_ZL19g_wifi_enable_delay>
    2c38:	81 11       	cpse	r24, r1
    2c3a:	ab ce       	rjmp	.-682    	; 0x2992 <main+0x522>
    2c3c:	81 e0       	ldi	r24, 0x01	; 1
    2c3e:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    2c42:	a7 ce       	rjmp	.-690    	; 0x2992 <main+0x522>

00002c44 <_Z17handleLinkBusMsgsv>:
    2c44:	0f 93       	push	r16
    2c46:	1f 93       	push	r17
    2c48:	cf 93       	push	r28
    2c4a:	df 93       	push	r29
    2c4c:	cd b7       	in	r28, 0x3d	; 61
    2c4e:	de b7       	in	r29, 0x3e	; 62
    2c50:	e4 97       	sbiw	r28, 0x34	; 52
    2c52:	cd bf       	out	0x3d, r28	; 61
    2c54:	de bf       	out	0x3e, r29	; 62
    2c56:	81 e0       	ldi	r24, 0x01	; 1
    2c58:	89 83       	std	Y+1, r24	; 0x01
    2c5a:	0e 94 53 3b 	call	0x76a6	; 0x76a6 <_Z18nextFullLBRxBufferv>
    2c5e:	8c 87       	std	Y+12, r24	; 0x0c
    2c60:	9d 87       	std	Y+13, r25	; 0x0d
    2c62:	21 e0       	ldi	r18, 0x01	; 1
    2c64:	8c 85       	ldd	r24, Y+12	; 0x0c
    2c66:	9d 85       	ldd	r25, Y+13	; 0x0d
    2c68:	89 2b       	or	r24, r25
    2c6a:	09 f4       	brne	.+2      	; 0x2c6e <_Z17handleLinkBusMsgsv+0x2a>
    2c6c:	20 e0       	ldi	r18, 0x00	; 0
    2c6e:	22 23       	and	r18, r18
    2c70:	09 f4       	brne	.+2      	; 0x2c74 <_Z17handleLinkBusMsgsv+0x30>
    2c72:	8a c7       	rjmp	.+3860   	; 0x3b88 <_Z17handleLinkBusMsgsv+0xf44>
    2c74:	8c 85       	ldd	r24, Y+12	; 0x0c
    2c76:	9d 85       	ldd	r25, Y+13	; 0x0d
    2c78:	fc 01       	movw	r30, r24
    2c7a:	82 81       	ldd	r24, Z+2	; 0x02
    2c7c:	93 81       	ldd	r25, Z+3	; 0x03
    2c7e:	8e 87       	std	Y+14, r24	; 0x0e
    2c80:	9f 87       	std	Y+15, r25	; 0x0f
    2c82:	8e 85       	ldd	r24, Y+14	; 0x0e
    2c84:	9f 85       	ldd	r25, Y+15	; 0x0f
    2c86:	81 3d       	cpi	r24, 0xD1	; 209
    2c88:	fe e1       	ldi	r31, 0x1E	; 30
    2c8a:	9f 07       	cpc	r25, r31
    2c8c:	09 f4       	brne	.+2      	; 0x2c90 <_Z17handleLinkBusMsgsv+0x4c>
    2c8e:	a4 c6       	rjmp	.+3400   	; 0x39d8 <_Z17handleLinkBusMsgsv+0xd94>
    2c90:	82 3d       	cpi	r24, 0xD2	; 210
    2c92:	2e e1       	ldi	r18, 0x1E	; 30
    2c94:	92 07       	cpc	r25, r18
    2c96:	e0 f5       	brcc	.+120    	; 0x2d10 <_Z17handleLinkBusMsgsv+0xcc>
    2c98:	84 38       	cpi	r24, 0x84	; 132
    2c9a:	e3 e0       	ldi	r30, 0x03	; 3
    2c9c:	9e 07       	cpc	r25, r30
    2c9e:	09 f4       	brne	.+2      	; 0x2ca2 <_Z17handleLinkBusMsgsv+0x5e>
    2ca0:	fd c2       	rjmp	.+1530   	; 0x329c <_Z17handleLinkBusMsgsv+0x658>
    2ca2:	85 38       	cpi	r24, 0x85	; 133
    2ca4:	f3 e0       	ldi	r31, 0x03	; 3
    2ca6:	9f 07       	cpc	r25, r31
    2ca8:	d0 f4       	brcc	.+52     	; 0x2cde <_Z17handleLinkBusMsgsv+0x9a>
    2caa:	85 31       	cpi	r24, 0x15	; 21
    2cac:	23 e0       	ldi	r18, 0x03	; 3
    2cae:	92 07       	cpc	r25, r18
    2cb0:	09 f4       	brne	.+2      	; 0x2cb4 <_Z17handleLinkBusMsgsv+0x70>
    2cb2:	28 c2       	rjmp	.+1104   	; 0x3104 <_Z17handleLinkBusMsgsv+0x4c0>
    2cb4:	86 31       	cpi	r24, 0x16	; 22
    2cb6:	e3 e0       	ldi	r30, 0x03	; 3
    2cb8:	9e 07       	cpc	r25, r30
    2cba:	30 f4       	brcc	.+12     	; 0x2cc8 <_Z17handleLinkBusMsgsv+0x84>
    2cbc:	84 35       	cpi	r24, 0x54	; 84
    2cbe:	91 05       	cpc	r25, r1
    2cc0:	09 f4       	brne	.+2      	; 0x2cc4 <_Z17handleLinkBusMsgsv+0x80>
    2cc2:	7d c5       	rjmp	.+2810   	; 0x37be <_Z17handleLinkBusMsgsv+0xb7a>
    2cc4:	0c 94 98 1d 	jmp	0x3b30	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2cc8:	8e 31       	cpi	r24, 0x1E	; 30
    2cca:	f3 e0       	ldi	r31, 0x03	; 3
    2ccc:	9f 07       	cpc	r25, r31
    2cce:	09 f4       	brne	.+2      	; 0x2cd2 <_Z17handleLinkBusMsgsv+0x8e>
    2cd0:	38 c4       	rjmp	.+2160   	; 0x3542 <_Z17handleLinkBusMsgsv+0x8fe>
    2cd2:	81 36       	cpi	r24, 0x61	; 97
    2cd4:	93 40       	sbci	r25, 0x03	; 3
    2cd6:	09 f4       	brne	.+2      	; 0x2cda <_Z17handleLinkBusMsgsv+0x96>
    2cd8:	55 c6       	rjmp	.+3242   	; 0x3984 <_Z17handleLinkBusMsgsv+0xd40>
    2cda:	0c 94 98 1d 	jmp	0x3b30	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2cde:	86 3a       	cpi	r24, 0xA6	; 166
    2ce0:	ec e1       	ldi	r30, 0x1C	; 28
    2ce2:	9e 07       	cpc	r25, r30
    2ce4:	09 f4       	brne	.+2      	; 0x2ce8 <_Z17handleLinkBusMsgsv+0xa4>
    2ce6:	f6 c6       	rjmp	.+3564   	; 0x3ad4 <_Z17handleLinkBusMsgsv+0xe90>
    2ce8:	87 3a       	cpi	r24, 0xA7	; 167
    2cea:	fc e1       	ldi	r31, 0x1C	; 28
    2cec:	9f 07       	cpc	r25, r31
    2cee:	30 f4       	brcc	.+12     	; 0x2cfc <_Z17handleLinkBusMsgsv+0xb8>
    2cf0:	8f 3a       	cpi	r24, 0xAF	; 175
    2cf2:	93 40       	sbci	r25, 0x03	; 3
    2cf4:	09 f4       	brne	.+2      	; 0x2cf8 <_Z17handleLinkBusMsgsv+0xb4>
    2cf6:	45 c0       	rjmp	.+138    	; 0x2d82 <_Z17handleLinkBusMsgsv+0x13e>
    2cf8:	0c 94 98 1d 	jmp	0x3b30	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2cfc:	88 31       	cpi	r24, 0x18	; 24
    2cfe:	ed e1       	ldi	r30, 0x1D	; 29
    2d00:	9e 07       	cpc	r25, r30
    2d02:	09 f4       	brne	.+2      	; 0x2d06 <_Z17handleLinkBusMsgsv+0xc2>
    2d04:	1b c7       	rjmp	.+3638   	; 0x3b3c <_Z17handleLinkBusMsgsv+0xef8>
    2d06:	82 38       	cpi	r24, 0x82	; 130
    2d08:	9e 41       	sbci	r25, 0x1E	; 30
    2d0a:	09 f4       	brne	.+2      	; 0x2d0e <_Z17handleLinkBusMsgsv+0xca>
    2d0c:	0c c1       	rjmp	.+536    	; 0x2f26 <_Z17handleLinkBusMsgsv+0x2e2>
    2d0e:	10 c7       	rjmp	.+3616   	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2d10:	8a 39       	cpi	r24, 0x9A	; 154
    2d12:	23 e2       	ldi	r18, 0x23	; 35
    2d14:	92 07       	cpc	r25, r18
    2d16:	09 f4       	brne	.+2      	; 0x2d1a <_Z17handleLinkBusMsgsv+0xd6>
    2d18:	05 c1       	rjmp	.+522    	; 0x2f24 <_Z17handleLinkBusMsgsv+0x2e0>
    2d1a:	8b 39       	cpi	r24, 0x9B	; 155
    2d1c:	e3 e2       	ldi	r30, 0x23	; 35
    2d1e:	9e 07       	cpc	r25, r30
    2d20:	c0 f4       	brcc	.+48     	; 0x2d52 <_Z17handleLinkBusMsgsv+0x10e>
    2d22:	8e 36       	cpi	r24, 0x6E	; 110
    2d24:	f1 e2       	ldi	r31, 0x21	; 33
    2d26:	9f 07       	cpc	r25, r31
    2d28:	09 f4       	brne	.+2      	; 0x2d2c <_Z17handleLinkBusMsgsv+0xe8>
    2d2a:	08 c7       	rjmp	.+3600   	; 0x3b3c <_Z17handleLinkBusMsgsv+0xef8>
    2d2c:	8f 36       	cpi	r24, 0x6F	; 111
    2d2e:	21 e2       	ldi	r18, 0x21	; 33
    2d30:	92 07       	cpc	r25, r18
    2d32:	28 f4       	brcc	.+10     	; 0x2d3e <_Z17handleLinkBusMsgsv+0xfa>
    2d34:	87 35       	cpi	r24, 0x57	; 87
    2d36:	90 42       	sbci	r25, 0x20	; 32
    2d38:	09 f4       	brne	.+2      	; 0x2d3c <_Z17handleLinkBusMsgsv+0xf8>
    2d3a:	48 c0       	rjmp	.+144    	; 0x2dcc <_Z17handleLinkBusMsgsv+0x188>
    2d3c:	f9 c6       	rjmp	.+3570   	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2d3e:	8d 3a       	cpi	r24, 0xAD	; 173
    2d40:	f2 e2       	ldi	r31, 0x22	; 34
    2d42:	9f 07       	cpc	r25, r31
    2d44:	09 f4       	brne	.+2      	; 0x2d48 <_Z17handleLinkBusMsgsv+0x104>
    2d46:	5e c1       	rjmp	.+700    	; 0x3004 <_Z17handleLinkBusMsgsv+0x3c0>
    2d48:	81 3c       	cpi	r24, 0xC1	; 193
    2d4a:	92 42       	sbci	r25, 0x22	; 34
    2d4c:	09 f4       	brne	.+2      	; 0x2d50 <_Z17handleLinkBusMsgsv+0x10c>
    2d4e:	d5 c1       	rjmp	.+938    	; 0x30fa <_Z17handleLinkBusMsgsv+0x4b6>
    2d50:	ef c6       	rjmp	.+3550   	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2d52:	80 3d       	cpi	r24, 0xD0	; 208
    2d54:	e3 e2       	ldi	r30, 0x23	; 35
    2d56:	9e 07       	cpc	r25, r30
    2d58:	09 f4       	brne	.+2      	; 0x2d5c <_Z17handleLinkBusMsgsv+0x118>
    2d5a:	62 c4       	rjmp	.+2244   	; 0x3620 <_Z17handleLinkBusMsgsv+0x9dc>
    2d5c:	81 3d       	cpi	r24, 0xD1	; 209
    2d5e:	f3 e2       	ldi	r31, 0x23	; 35
    2d60:	9f 07       	cpc	r25, r31
    2d62:	28 f4       	brcc	.+10     	; 0x2d6e <_Z17handleLinkBusMsgsv+0x12a>
    2d64:	8f 3c       	cpi	r24, 0xCF	; 207
    2d66:	93 42       	sbci	r25, 0x23	; 35
    2d68:	09 f4       	brne	.+2      	; 0x2d6c <_Z17handleLinkBusMsgsv+0x128>
    2d6a:	bc c6       	rjmp	.+3448   	; 0x3ae4 <_Z17handleLinkBusMsgsv+0xea0>
    2d6c:	e1 c6       	rjmp	.+3522   	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2d6e:	87 3f       	cpi	r24, 0xF7	; 247
    2d70:	e3 e2       	ldi	r30, 0x23	; 35
    2d72:	9e 07       	cpc	r25, r30
    2d74:	09 f4       	brne	.+2      	; 0x2d78 <_Z17handleLinkBusMsgsv+0x134>
    2d76:	26 c3       	rjmp	.+1612   	; 0x33c4 <_Z17handleLinkBusMsgsv+0x780>
    2d78:	8c 39       	cpi	r24, 0x9C	; 156
    2d7a:	94 42       	sbci	r25, 0x24	; 36
    2d7c:	09 f4       	brne	.+2      	; 0x2d80 <_Z17handleLinkBusMsgsv+0x13c>
    2d7e:	cf c6       	rjmp	.+3486   	; 0x3b1e <_Z17handleLinkBusMsgsv+0xeda>
    2d80:	d7 c6       	rjmp	.+3502   	; 0x3b30 <_Z17handleLinkBusMsgsv+0xeec>
    2d82:	8c 85       	ldd	r24, Y+12	; 0x0c
    2d84:	9d 85       	ldd	r25, Y+13	; 0x0d
    2d86:	fc 01       	movw	r30, r24
    2d88:	84 81       	ldd	r24, Z+4	; 0x04
    2d8a:	88 23       	and	r24, r24
    2d8c:	09 f4       	brne	.+2      	; 0x2d90 <_Z17handleLinkBusMsgsv+0x14c>
    2d8e:	d8 c6       	rjmp	.+3504   	; 0x3b40 <_Z17handleLinkBusMsgsv+0xefc>
    2d90:	8c 85       	ldd	r24, Y+12	; 0x0c
    2d92:	9d 85       	ldd	r25, Y+13	; 0x0d
    2d94:	04 96       	adiw	r24, 0x04	; 4
    2d96:	0e 94 c8 4f 	call	0x9f90	; 0x9f90 <atoi>
    2d9a:	21 e0       	ldi	r18, 0x01	; 1
    2d9c:	89 2b       	or	r24, r25
    2d9e:	09 f4       	brne	.+2      	; 0x2da2 <_Z17handleLinkBusMsgsv+0x15e>
    2da0:	20 e0       	ldi	r18, 0x00	; 0
    2da2:	2b a7       	std	Y+43, r18	; 0x2b
    2da4:	0e 94 f7 20 	call	0x41ee	; 0x41ee <_Z12suspendEventv>
    2da8:	0e 94 f6 3b 	call	0x77ec	; 0x77ec <_Z15linkbus_disablev>
    2dac:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2db0:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL11g_sleepType>
    2db4:	10 92 19 40 	sts	0x4019, r1	; 0x804019 <_ZL11g_sleepType+0x1>
    2db8:	9b a5       	ldd	r25, Y+43	; 0x2b
    2dba:	81 e0       	ldi	r24, 0x01	; 1
    2dbc:	89 27       	eor	r24, r25
    2dbe:	88 23       	and	r24, r24
    2dc0:	09 f4       	brne	.+2      	; 0x2dc4 <_Z17handleLinkBusMsgsv+0x180>
    2dc2:	be c6       	rjmp	.+3452   	; 0x3b40 <_Z17handleLinkBusMsgsv+0xefc>
    2dc4:	80 e0       	ldi	r24, 0x00	; 0
    2dc6:	0e 94 e9 34 	call	0x69d2	; 0x69d2 <_Z10wifi_powerb>
    2dca:	ba c6       	rjmp	.+3444   	; 0x3b40 <_Z17handleLinkBusMsgsv+0xefc>
    2dcc:	10 92 1c 44 	sts	0x441C, r1	; 0x80441c <g_event_enabled>
    2dd0:	81 e0       	ldi	r24, 0x01	; 1
    2dd2:	80 93 56 44 	sts	0x4456, r24	; 0x804456 <g_enable_manual_transmissions>
    2dd6:	8c 85       	ldd	r24, Y+12	; 0x0c
    2dd8:	9d 85       	ldd	r25, Y+13	; 0x0d
    2dda:	fc 01       	movw	r30, r24
    2ddc:	84 81       	ldd	r24, Z+4	; 0x04
    2dde:	88 23       	and	r24, r24
    2de0:	09 f4       	brne	.+2      	; 0x2de4 <_Z17handleLinkBusMsgsv+0x1a0>
    2de2:	b0 c6       	rjmp	.+3424   	; 0x3b44 <_Z17handleLinkBusMsgsv+0xf00>
    2de4:	8c 85       	ldd	r24, Y+12	; 0x0c
    2de6:	9d 85       	ldd	r25, Y+13	; 0x0d
    2de8:	04 96       	adiw	r24, 0x04	; 4
    2dea:	8c a3       	std	Y+36, r24	; 0x24
    2dec:	9d a3       	std	Y+37, r25	; 0x25
    2dee:	8c a1       	ldd	r24, Y+36	; 0x24
    2df0:	9d a1       	ldd	r25, Y+37	; 0x25
    2df2:	0e 94 32 50 	call	0xa064	; 0xa064 <strlen>
    2df6:	8e a3       	std	Y+38, r24	; 0x26
    2df8:	9f a3       	std	Y+39, r25	; 0x27
    2dfa:	80 91 56 44 	lds	r24, 0x4456	; 0x804456 <g_enable_manual_transmissions>
    2dfe:	88 a7       	std	Y+40, r24	; 0x28
    2e00:	8e a1       	ldd	r24, Y+38	; 0x26
    2e02:	9f a1       	ldd	r25, Y+39	; 0x27
    2e04:	02 97       	sbiw	r24, 0x02	; 2
    2e06:	b9 f4       	brne	.+46     	; 0x2e36 <_Z17handleLinkBusMsgsv+0x1f2>
    2e08:	8c a1       	ldd	r24, Y+36	; 0x24
    2e0a:	9d a1       	ldd	r25, Y+37	; 0x25
    2e0c:	fc 01       	movw	r30, r24
    2e0e:	80 81       	ld	r24, Z
    2e10:	8c 35       	cpi	r24, 0x5C	; 92
    2e12:	89 f4       	brne	.+34     	; 0x2e36 <_Z17handleLinkBusMsgsv+0x1f2>
    2e14:	8c a1       	ldd	r24, Y+36	; 0x24
    2e16:	9d a1       	ldd	r25, Y+37	; 0x25
    2e18:	01 96       	adiw	r24, 0x01	; 1
    2e1a:	fc 01       	movw	r30, r24
    2e1c:	80 81       	ld	r24, Z
    2e1e:	82 34       	cpi	r24, 0x42	; 66
    2e20:	51 f4       	brne	.+20     	; 0x2e36 <_Z17handleLinkBusMsgsv+0x1f2>
    2e22:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <g_enable_manual_transmissions>
    2e26:	80 e4       	ldi	r24, 0x40	; 64
    2e28:	94 e4       	ldi	r25, 0x44	; 68
    2e2a:	0e 94 f0 27 	call	0x4fe0	; 0x4fe0 <_ZN18CircularStringBuff3popEv>
    2e2e:	88 a5       	ldd	r24, Y+40	; 0x28
    2e30:	80 93 56 44 	sts	0x4456, r24	; 0x804456 <g_enable_manual_transmissions>
    2e34:	87 c6       	rjmp	.+3342   	; 0x3b44 <_Z17handleLinkBusMsgsv+0xf00>
    2e36:	8e a1       	ldd	r24, Y+38	; 0x26
    2e38:	9f a1       	ldd	r25, Y+39	; 0x27
    2e3a:	02 97       	sbiw	r24, 0x02	; 2
    2e3c:	ac f1       	brlt	.+106    	; 0x2ea8 <_Z17handleLinkBusMsgsv+0x264>
    2e3e:	1a 82       	std	Y+2, r1	; 0x02
    2e40:	1b 82       	std	Y+3, r1	; 0x03
    2e42:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <g_enable_manual_transmissions>
    2e46:	80 e4       	ldi	r24, 0x40	; 64
    2e48:	94 e4       	ldi	r25, 0x44	; 68
    2e4a:	0e 94 bf 27 	call	0x4f7e	; 0x4f7e <_ZNK18CircularStringBuff4fullEv>
    2e4e:	98 2f       	mov	r25, r24
    2e50:	81 e0       	ldi	r24, 0x01	; 1
    2e52:	89 27       	eor	r24, r25
    2e54:	88 23       	and	r24, r24
    2e56:	69 f0       	breq	.+26     	; 0x2e72 <_Z17handleLinkBusMsgsv+0x22e>
    2e58:	2a 81       	ldd	r18, Y+2	; 0x02
    2e5a:	3b 81       	ldd	r19, Y+3	; 0x03
    2e5c:	8e a1       	ldd	r24, Y+38	; 0x26
    2e5e:	9f a1       	ldd	r25, Y+39	; 0x27
    2e60:	28 17       	cp	r18, r24
    2e62:	39 07       	cpc	r19, r25
    2e64:	34 f4       	brge	.+12     	; 0x2e72 <_Z17handleLinkBusMsgsv+0x22e>
    2e66:	8a 81       	ldd	r24, Y+2	; 0x02
    2e68:	9b 81       	ldd	r25, Y+3	; 0x03
    2e6a:	45 97       	sbiw	r24, 0x15	; 21
    2e6c:	14 f4       	brge	.+4      	; 0x2e72 <_Z17handleLinkBusMsgsv+0x22e>
    2e6e:	81 e0       	ldi	r24, 0x01	; 1
    2e70:	01 c0       	rjmp	.+2      	; 0x2e74 <_Z17handleLinkBusMsgsv+0x230>
    2e72:	80 e0       	ldi	r24, 0x00	; 0
    2e74:	88 23       	and	r24, r24
    2e76:	a1 f0       	breq	.+40     	; 0x2ea0 <_Z17handleLinkBusMsgsv+0x25c>
    2e78:	8a 81       	ldd	r24, Y+2	; 0x02
    2e7a:	9b 81       	ldd	r25, Y+3	; 0x03
    2e7c:	9c 01       	movw	r18, r24
    2e7e:	2f 5f       	subi	r18, 0xFF	; 255
    2e80:	3f 4f       	sbci	r19, 0xFF	; 255
    2e82:	2a 83       	std	Y+2, r18	; 0x02
    2e84:	3b 83       	std	Y+3, r19	; 0x03
    2e86:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e88:	3d 85       	ldd	r19, Y+13	; 0x0d
    2e8a:	82 0f       	add	r24, r18
    2e8c:	93 1f       	adc	r25, r19
    2e8e:	04 96       	adiw	r24, 0x04	; 4
    2e90:	fc 01       	movw	r30, r24
    2e92:	80 81       	ld	r24, Z
    2e94:	68 2f       	mov	r22, r24
    2e96:	80 e4       	ldi	r24, 0x40	; 64
    2e98:	94 e4       	ldi	r25, 0x44	; 68
    2e9a:	0e 94 c2 27 	call	0x4f84	; 0x4f84 <_ZN18CircularStringBuff3putEc>
    2e9e:	d3 cf       	rjmp	.-90     	; 0x2e46 <_Z17handleLinkBusMsgsv+0x202>
    2ea0:	88 a5       	ldd	r24, Y+40	; 0x28
    2ea2:	80 93 56 44 	sts	0x4456, r24	; 0x804456 <g_enable_manual_transmissions>
    2ea6:	4e c6       	rjmp	.+3228   	; 0x3b44 <_Z17handleLinkBusMsgsv+0xf00>
    2ea8:	8c 85       	ldd	r24, Y+12	; 0x0c
    2eaa:	9d 85       	ldd	r25, Y+13	; 0x0d
    2eac:	fc 01       	movw	r30, r24
    2eae:	84 81       	ldd	r24, Z+4	; 0x04
    2eb0:	89 a7       	std	Y+41, r24	; 0x29
    2eb2:	89 a5       	ldd	r24, Y+41	; 0x29
    2eb4:	8b 35       	cpi	r24, 0x5B	; 91
    2eb6:	71 f4       	brne	.+28     	; 0x2ed4 <_Z17handleLinkBusMsgsv+0x290>
    2eb8:	81 e0       	ldi	r24, 0x01	; 1
    2eba:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    2ebe:	41 e0       	ldi	r20, 0x01	; 1
    2ec0:	67 e0       	ldi	r22, 0x07	; 7
    2ec2:	70 e0       	ldi	r23, 0x00	; 0
    2ec4:	8f e3       	ldi	r24, 0x3F	; 63
    2ec6:	94 e4       	ldi	r25, 0x44	; 68
    2ec8:	0e 94 60 38 	call	0x70c0	; 0x70c0 <_ZN4leds5blinkE7Blink_tb>
    2ecc:	81 e0       	ldi	r24, 0x01	; 1
    2ece:	0e 94 c4 48 	call	0x9188	; 0x9188 <_Z9txKeyDownb>
    2ed2:	38 c6       	rjmp	.+3184   	; 0x3b44 <_Z17handleLinkBusMsgsv+0xf00>
    2ed4:	89 a5       	ldd	r24, Y+41	; 0x29
    2ed6:	8d 35       	cpi	r24, 0x5D	; 93
    2ed8:	71 f4       	brne	.+28     	; 0x2ef6 <_Z17handleLinkBusMsgsv+0x2b2>
    2eda:	80 e0       	ldi	r24, 0x00	; 0
    2edc:	0e 94 c4 48 	call	0x9188	; 0x9188 <_Z9txKeyDownb>
    2ee0:	80 e0       	ldi	r24, 0x00	; 0
    2ee2:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    2ee6:	41 e0       	ldi	r20, 0x01	; 1
    2ee8:	61 e0       	ldi	r22, 0x01	; 1
    2eea:	70 e0       	ldi	r23, 0x00	; 0
    2eec:	8f e3       	ldi	r24, 0x3F	; 63
    2eee:	94 e4       	ldi	r25, 0x44	; 68
    2ef0:	0e 94 60 38 	call	0x70c0	; 0x70c0 <_ZN4leds5blinkE7Blink_tb>
    2ef4:	27 c6       	rjmp	.+3150   	; 0x3b44 <_Z17handleLinkBusMsgsv+0xf00>
    2ef6:	89 a5       	ldd	r24, Y+41	; 0x29
    2ef8:	8e 35       	cpi	r24, 0x5E	; 94
    2efa:	49 f4       	brne	.+18     	; 0x2f0e <_Z17handleLinkBusMsgsv+0x2ca>
    2efc:	0e 94 f7 20 	call	0x41ee	; 0x41ee <_Z12suspendEventv>
    2f00:	10 92 0b 40 	sts	0x400B, r1	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2f04:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL11g_sleepType>
    2f08:	10 92 19 40 	sts	0x4019, r1	; 0x804019 <_ZL11g_sleepType+0x1>
    2f0c:	1b c6       	rjmp	.+3126   	; 0x3b44 <_Z17handleLinkBusMsgsv+0xf00>
    2f0e:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <g_enable_manual_transmissions>
    2f12:	69 a5       	ldd	r22, Y+41	; 0x29
    2f14:	80 e4       	ldi	r24, 0x40	; 64
    2f16:	94 e4       	ldi	r25, 0x44	; 68
    2f18:	0e 94 c2 27 	call	0x4f84	; 0x4f84 <_ZN18CircularStringBuff3putEc>
    2f1c:	88 a5       	ldd	r24, Y+40	; 0x28
    2f1e:	80 93 56 44 	sts	0x4456, r24	; 0x804456 <g_enable_manual_transmissions>
    2f22:	10 c6       	rjmp	.+3104   	; 0x3b44 <_Z17handleLinkBusMsgsv+0xf00>
    2f24:	ff cf       	rjmp	.-2      	; 0x2f24 <_Z17handleLinkBusMsgsv+0x2e0>
    2f26:	8c 85       	ldd	r24, Y+12	; 0x0c
    2f28:	9d 85       	ldd	r25, Y+13	; 0x0d
    2f2a:	fc 01       	movw	r30, r24
    2f2c:	84 81       	ldd	r24, Z+4	; 0x04
    2f2e:	8a a7       	std	Y+42, r24	; 0x2a
    2f30:	81 e0       	ldi	r24, 0x01	; 1
    2f32:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <_ZL13g_wifi_active>
    2f36:	8a a5       	ldd	r24, Y+42	; 0x2a
    2f38:	8a 35       	cpi	r24, 0x5A	; 90
    2f3a:	21 f4       	brne	.+8      	; 0x2f44 <_Z17handleLinkBusMsgsv+0x300>
    2f3c:	88 e7       	ldi	r24, 0x78	; 120
    2f3e:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2f42:	02 c6       	rjmp	.+3076   	; 0x3b48 <_Z17handleLinkBusMsgsv+0xf04>
    2f44:	8a a5       	ldd	r24, Y+42	; 0x2a
    2f46:	80 33       	cpi	r24, 0x30	; 48
    2f48:	d9 f5       	brne	.+118    	; 0x2fc0 <_Z17handleLinkBusMsgsv+0x37c>
    2f4a:	81 e0       	ldi	r24, 0x01	; 1
    2f4c:	80 93 ce 43 	sts	0x43CE, r24	; 0x8043ce <_ZL12g_wifi_ready>
    2f50:	80 e0       	ldi	r24, 0x00	; 0
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    2f58:	dc 01       	movw	r26, r24
    2f5a:	cb 01       	movw	r24, r22
    2f5c:	2b 2f       	mov	r18, r27
    2f5e:	2f 93       	push	r18
    2f60:	2a 2f       	mov	r18, r26
    2f62:	2f 93       	push	r18
    2f64:	29 2f       	mov	r18, r25
    2f66:	2f 93       	push	r18
    2f68:	8f 93       	push	r24
    2f6a:	87 ea       	ldi	r24, 0xA7	; 167
    2f6c:	90 e4       	ldi	r25, 0x40	; 64
    2f6e:	89 2f       	mov	r24, r25
    2f70:	8f 93       	push	r24
    2f72:	87 ea       	ldi	r24, 0xA7	; 167
    2f74:	90 e4       	ldi	r25, 0x40	; 64
    2f76:	8f 93       	push	r24
    2f78:	89 e5       	ldi	r24, 0x59	; 89
    2f7a:	93 e4       	ldi	r25, 0x43	; 67
    2f7c:	89 2f       	mov	r24, r25
    2f7e:	8f 93       	push	r24
    2f80:	89 e5       	ldi	r24, 0x59	; 89
    2f82:	93 e4       	ldi	r25, 0x43	; 67
    2f84:	8f 93       	push	r24
    2f86:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    2f8a:	8d b7       	in	r24, 0x3d	; 61
    2f8c:	9e b7       	in	r25, 0x3e	; 62
    2f8e:	08 96       	adiw	r24, 0x08	; 8
    2f90:	cd bf       	out	0x3d, r28	; 61
    2f92:	de bf       	out	0x3e, r29	; 62
    2f94:	49 e5       	ldi	r20, 0x59	; 89
    2f96:	53 e4       	ldi	r21, 0x43	; 67
    2f98:	6b ea       	ldi	r22, 0xAB	; 171
    2f9a:	70 e4       	ldi	r23, 0x40	; 64
    2f9c:	83 e0       	ldi	r24, 0x03	; 3
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2fa4:	80 91 20 44 	lds	r24, 0x4420	; 0x804420 <g_waiting_for_next_event>
    2fa8:	88 23       	and	r24, r24
    2faa:	09 f4       	brne	.+2      	; 0x2fae <_Z17handleLinkBusMsgsv+0x36a>
    2fac:	cd c5       	rjmp	.+2970   	; 0x3b48 <_Z17handleLinkBusMsgsv+0xf04>
    2fae:	48 eb       	ldi	r20, 0xB8	; 184
    2fb0:	50 e4       	ldi	r21, 0x40	; 64
    2fb2:	6a eb       	ldi	r22, 0xBA	; 186
    2fb4:	70 e4       	ldi	r23, 0x40	; 64
    2fb6:	83 e0       	ldi	r24, 0x03	; 3
    2fb8:	90 e0       	ldi	r25, 0x00	; 0
    2fba:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    2fbe:	c4 c5       	rjmp	.+2952   	; 0x3b48 <_Z17handleLinkBusMsgsv+0xf04>
    2fc0:	8a a5       	ldd	r24, Y+42	; 0x2a
    2fc2:	82 33       	cpi	r24, 0x32	; 50
    2fc4:	71 f4       	brne	.+28     	; 0x2fe2 <_Z17handleLinkBusMsgsv+0x39e>
    2fc6:	81 e0       	ldi	r24, 0x01	; 1
    2fc8:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    2fcc:	90 91 1c 44 	lds	r25, 0x441C	; 0x80441c <g_event_enabled>
    2fd0:	81 e0       	ldi	r24, 0x01	; 1
    2fd2:	89 27       	eor	r24, r25
    2fd4:	88 23       	and	r24, r24
    2fd6:	09 f4       	brne	.+2      	; 0x2fda <_Z17handleLinkBusMsgsv+0x396>
    2fd8:	b7 c5       	rjmp	.+2926   	; 0x3b48 <_Z17handleLinkBusMsgsv+0xf04>
    2fda:	81 e0       	ldi	r24, 0x01	; 1
    2fdc:	80 93 c3 43 	sts	0x43C3, r24	; 0x8043c3 <_ZL13g_start_event>
    2fe0:	b3 c5       	rjmp	.+2918   	; 0x3b48 <_Z17handleLinkBusMsgsv+0xf04>
    2fe2:	8a a5       	ldd	r24, Y+42	; 0x2a
    2fe4:	83 33       	cpi	r24, 0x33	; 51
    2fe6:	09 f0       	breq	.+2      	; 0x2fea <_Z17handleLinkBusMsgsv+0x3a6>
    2fe8:	af c5       	rjmp	.+2910   	; 0x3b48 <_Z17handleLinkBusMsgsv+0xf04>
    2fea:	10 92 cc 43 	sts	0x43CC, r1	; 0x8043cc <_ZL19g_wifi_enable_delay>
    2fee:	81 e0       	ldi	r24, 0x01	; 1
    2ff0:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    2ff4:	10 92 20 44 	sts	0x4420, r1	; 0x804420 <g_waiting_for_next_event>
    2ff8:	10 92 0c 40 	sts	0x400C, r1	; 0x80400c <_ZL13g_wifi_active>
    2ffc:	81 e0       	ldi	r24, 0x01	; 1
    2ffe:	80 93 cd 43 	sts	0x43CD, r24	; 0x8043cd <_ZL20g_shutting_down_wifi>
    3002:	a2 c5       	rjmp	.+2884   	; 0x3b48 <_Z17handleLinkBusMsgsv+0xf04>
    3004:	8c 85       	ldd	r24, Y+12	; 0x0c
    3006:	9d 85       	ldd	r25, Y+13	; 0x0d
    3008:	fc 01       	movw	r30, r24
    300a:	84 81       	ldd	r24, Z+4	; 0x04
    300c:	88 23       	and	r24, r24
    300e:	09 f4       	brne	.+2      	; 0x3012 <_Z17handleLinkBusMsgsv+0x3ce>
    3010:	9d c5       	rjmp	.+2874   	; 0x3b4c <_Z17handleLinkBusMsgsv+0xf08>
    3012:	8c 85       	ldd	r24, Y+12	; 0x0c
    3014:	9d 85       	ldd	r25, Y+13	; 0x0d
    3016:	fc 01       	movw	r30, r24
    3018:	84 81       	ldd	r24, Z+4	; 0x04
    301a:	8d 34       	cpi	r24, 0x4D	; 77
    301c:	81 f4       	brne	.+32     	; 0x303e <_Z17handleLinkBusMsgsv+0x3fa>
    301e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3020:	9d 85       	ldd	r25, Y+13	; 0x0d
    3022:	fc 01       	movw	r30, r24
    3024:	81 8d       	ldd	r24, Z+25	; 0x19
    3026:	88 23       	and	r24, r24
    3028:	51 f0       	breq	.+20     	; 0x303e <_Z17handleLinkBusMsgsv+0x3fa>
    302a:	8c 85       	ldd	r24, Y+12	; 0x0c
    302c:	9d 85       	ldd	r25, Y+13	; 0x0d
    302e:	49 96       	adiw	r24, 0x19	; 25
    3030:	0e 94 c8 4f 	call	0x9f90	; 0x9f90 <atoi>
    3034:	80 93 6b 44 	sts	0x446B, r24	; 0x80446b <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    3038:	90 93 6c 44 	sts	0x446C, r25	; 0x80446c <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    303c:	09 c0       	rjmp	.+18     	; 0x3050 <_Z17handleLinkBusMsgsv+0x40c>
    303e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3040:	9d 85       	ldd	r25, Y+13	; 0x0d
    3042:	04 96       	adiw	r24, 0x04	; 4
    3044:	0e 94 c8 4f 	call	0x9f90	; 0x9f90 <atoi>
    3048:	80 93 6b 44 	sts	0x446B, r24	; 0x80446b <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    304c:	90 93 6c 44 	sts	0x446C, r25	; 0x80446c <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    3050:	0e 94 49 49 	call	0x9292	; 0x9292 <_Z12txGetPowerMwv>
    3054:	9c 01       	movw	r18, r24
    3056:	80 91 6b 44 	lds	r24, 0x446B	; 0x80446b <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    305a:	90 91 6c 44 	lds	r25, 0x446C	; 0x80446c <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    305e:	41 e0       	ldi	r20, 0x01	; 1
    3060:	28 17       	cp	r18, r24
    3062:	39 07       	cpc	r19, r25
    3064:	09 f4       	brne	.+2      	; 0x3068 <_Z17handleLinkBusMsgsv+0x424>
    3066:	40 e0       	ldi	r20, 0x00	; 0
    3068:	44 23       	and	r20, r20
    306a:	e9 f1       	breq	.+122    	; 0x30e6 <_Z17handleLinkBusMsgsv+0x4a2>
    306c:	60 e0       	ldi	r22, 0x00	; 0
    306e:	70 e0       	ldi	r23, 0x00	; 0
    3070:	8b e6       	ldi	r24, 0x6B	; 107
    3072:	94 e4       	ldi	r25, 0x44	; 68
    3074:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_Z15txSetParametersPjPb>
    3078:	8a a3       	std	Y+34, r24	; 0x22
    307a:	9b a3       	std	Y+35, r25	; 0x23
    307c:	8a a1       	ldd	r24, Y+34	; 0x22
    307e:	9b a1       	ldd	r25, Y+35	; 0x23
    3080:	89 2b       	or	r24, r25
    3082:	39 f0       	breq	.+14     	; 0x3092 <_Z17handleLinkBusMsgsv+0x44e>
    3084:	8a a1       	ldd	r24, Y+34	; 0x22
    3086:	9b a1       	ldd	r25, Y+35	; 0x23
    3088:	80 93 bd 43 	sts	0x43BD, r24	; 0x8043bd <_ZL17g_last_error_code>
    308c:	90 93 be 43 	sts	0x43BE, r25	; 0x8043be <_ZL17g_last_error_code+0x1>
    3090:	05 c0       	rjmp	.+10     	; 0x309c <_Z17handleLinkBusMsgsv+0x458>
    3092:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3096:	8f 5f       	subi	r24, 0xFF	; 255
    3098:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    309c:	80 91 6b 44 	lds	r24, 0x446B	; 0x80446b <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    30a0:	90 91 6c 44 	lds	r25, 0x446C	; 0x80446c <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    30a4:	29 2f       	mov	r18, r25
    30a6:	2f 93       	push	r18
    30a8:	8f 93       	push	r24
    30aa:	8e eb       	ldi	r24, 0xBE	; 190
    30ac:	90 e4       	ldi	r25, 0x40	; 64
    30ae:	89 2f       	mov	r24, r25
    30b0:	8f 93       	push	r24
    30b2:	8e eb       	ldi	r24, 0xBE	; 190
    30b4:	90 e4       	ldi	r25, 0x40	; 64
    30b6:	8f 93       	push	r24
    30b8:	89 e5       	ldi	r24, 0x59	; 89
    30ba:	93 e4       	ldi	r25, 0x43	; 67
    30bc:	89 2f       	mov	r24, r25
    30be:	8f 93       	push	r24
    30c0:	89 e5       	ldi	r24, 0x59	; 89
    30c2:	93 e4       	ldi	r25, 0x43	; 67
    30c4:	8f 93       	push	r24
    30c6:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    30ca:	0f 90       	pop	r0
    30cc:	0f 90       	pop	r0
    30ce:	0f 90       	pop	r0
    30d0:	0f 90       	pop	r0
    30d2:	0f 90       	pop	r0
    30d4:	0f 90       	pop	r0
    30d6:	49 e5       	ldi	r20, 0x59	; 89
    30d8:	53 e4       	ldi	r21, 0x43	; 67
    30da:	63 ec       	ldi	r22, 0xC3	; 195
    30dc:	70 e4       	ldi	r23, 0x40	; 64
    30de:	83 e0       	ldi	r24, 0x03	; 3
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    30e6:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    30ea:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    30ee:	80 64       	ori	r24, 0x40	; 64
    30f0:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    30f4:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    30f8:	29 c5       	rjmp	.+2642   	; 0x3b4c <_Z17handleLinkBusMsgsv+0xf08>
    30fa:	8a e4       	ldi	r24, 0x4A	; 74
    30fc:	94 e4       	ldi	r25, 0x44	; 68
    30fe:	0e 94 f5 2e 	call	0x5dea	; 0x5dea <_ZN13EepromManager13saveAllEEPROMEv>
    3102:	35 c5       	rjmp	.+2666   	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3104:	8c 85       	ldd	r24, Y+12	; 0x0c
    3106:	9d 85       	ldd	r25, Y+13	; 0x0d
    3108:	fc 01       	movw	r30, r24
    310a:	84 81       	ldd	r24, Z+4	; 0x04
    310c:	8c a7       	std	Y+44, r24	; 0x2c
    310e:	8c a5       	ldd	r24, Y+44	; 0x2c
    3110:	81 33       	cpi	r24, 0x31	; 49
    3112:	21 f0       	breq	.+8      	; 0x311c <_Z17handleLinkBusMsgsv+0x4d8>
    3114:	8c a5       	ldd	r24, Y+44	; 0x2c
    3116:	82 33       	cpi	r24, 0x32	; 50
    3118:	09 f0       	breq	.+2      	; 0x311c <_Z17handleLinkBusMsgsv+0x4d8>
    311a:	ab c0       	rjmp	.+342    	; 0x3272 <_Z17handleLinkBusMsgsv+0x62e>
    311c:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    3120:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    3124:	21 e0       	ldi	r18, 0x01	; 1
    3126:	02 97       	sbiw	r24, 0x02	; 2
    3128:	09 f4       	brne	.+2      	; 0x312c <_Z17handleLinkBusMsgsv+0x4e8>
    312a:	20 e0       	ldi	r18, 0x00	; 0
    312c:	22 23       	and	r18, r18
    312e:	31 f0       	breq	.+12     	; 0x313c <_Z17handleLinkBusMsgsv+0x4f8>
    3130:	87 ef       	ldi	r24, 0xF7	; 247
    3132:	90 e0       	ldi	r25, 0x00	; 0
    3134:	80 93 bd 43 	sts	0x43BD, r24	; 0x8043bd <_ZL17g_last_error_code>
    3138:	90 93 be 43 	sts	0x43BE, r25	; 0x8043be <_ZL17g_last_error_code+0x1>
    313c:	8c a5       	ldd	r24, Y+44	; 0x2c
    313e:	81 33       	cpi	r24, 0x31	; 49
    3140:	09 f0       	breq	.+2      	; 0x3144 <_Z17handleLinkBusMsgsv+0x500>
    3142:	55 c0       	rjmp	.+170    	; 0x31ee <_Z17handleLinkBusMsgsv+0x5aa>
    3144:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    3148:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    314c:	02 97       	sbiw	r24, 0x02	; 2
    314e:	21 f0       	breq	.+8      	; 0x3158 <_Z17handleLinkBusMsgsv+0x514>
    3150:	80 91 6d 40 	lds	r24, 0x406D	; 0x80406d <g_tx_power_is_zero>
    3154:	88 23       	and	r24, r24
    3156:	11 f0       	breq	.+4      	; 0x315c <_Z17handleLinkBusMsgsv+0x518>
    3158:	81 e0       	ldi	r24, 0x01	; 1
    315a:	01 c0       	rjmp	.+2      	; 0x315e <_Z17handleLinkBusMsgsv+0x51a>
    315c:	80 e0       	ldi	r24, 0x00	; 0
    315e:	88 23       	and	r24, r24
    3160:	09 f4       	brne	.+2      	; 0x3164 <_Z17handleLinkBusMsgsv+0x520>
    3162:	9a c0       	rjmp	.+308    	; 0x3298 <_Z17handleLinkBusMsgsv+0x654>
    3164:	10 92 1c 44 	sts	0x441C, r1	; 0x80441c <g_event_enabled>
    3168:	81 e0       	ldi	r24, 0x01	; 1
    316a:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    316e:	81 e0       	ldi	r24, 0x01	; 1
    3170:	90 e0       	ldi	r25, 0x00	; 0
    3172:	a0 e0       	ldi	r26, 0x00	; 0
    3174:	b0 e0       	ldi	r27, 0x00	; 0
    3176:	80 93 14 44 	sts	0x4414, r24	; 0x804414 <g_event_start_epoch>
    317a:	90 93 15 44 	sts	0x4415, r25	; 0x804415 <g_event_start_epoch+0x1>
    317e:	a0 93 16 44 	sts	0x4416, r26	; 0x804416 <g_event_start_epoch+0x2>
    3182:	b0 93 17 44 	sts	0x4417, r27	; 0x804417 <g_event_start_epoch+0x3>
    3186:	8f ef       	ldi	r24, 0xFF	; 255
    3188:	9f ef       	ldi	r25, 0xFF	; 255
    318a:	dc 01       	movw	r26, r24
    318c:	80 93 18 44 	sts	0x4418, r24	; 0x804418 <g_event_finish_epoch>
    3190:	90 93 19 44 	sts	0x4419, r25	; 0x804419 <g_event_finish_epoch+0x1>
    3194:	a0 93 1a 44 	sts	0x441A, r26	; 0x80441a <g_event_finish_epoch+0x2>
    3198:	b0 93 1b 44 	sts	0x441B, r27	; 0x80441b <g_event_finish_epoch+0x3>
    319c:	8f e0       	ldi	r24, 0x0F	; 15
    319e:	97 e2       	ldi	r25, 0x27	; 39
    31a0:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    31a4:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
    31a8:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds>
    31ac:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <g_off_air_seconds+0x1>
    31b0:	8f e0       	ldi	r24, 0x0F	; 15
    31b2:	97 e2       	ldi	r25, 0x27	; 39
    31b4:	a0 e0       	ldi	r26, 0x00	; 0
    31b6:	b0 e0       	ldi	r27, 0x00	; 0
    31b8:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    31bc:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    31c0:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    31c4:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    31c8:	8f ef       	ldi	r24, 0xFF	; 255
    31ca:	9f ef       	ldi	r25, 0xFF	; 255
    31cc:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    31d0:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    31d4:	81 e0       	ldi	r24, 0x01	; 1
    31d6:	80 93 1e 44 	sts	0x441E, r24	; 0x80441e <g_event_commenced>
    31da:	81 e0       	ldi	r24, 0x01	; 1
    31dc:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <g_event_enabled>
    31e0:	8d ef       	ldi	r24, 0xFD	; 253
    31e2:	90 e0       	ldi	r25, 0x00	; 0
    31e4:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    31e8:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    31ec:	55 c0       	rjmp	.+170    	; 0x3298 <_Z17handleLinkBusMsgsv+0x654>
    31ee:	8c a5       	ldd	r24, Y+44	; 0x2c
    31f0:	82 33       	cpi	r24, 0x32	; 50
    31f2:	09 f0       	breq	.+2      	; 0x31f6 <_Z17handleLinkBusMsgsv+0x5b2>
    31f4:	51 c0       	rjmp	.+162    	; 0x3298 <_Z17handleLinkBusMsgsv+0x654>
    31f6:	0e 94 2f 24 	call	0x485e	; 0x485e <_Z14eventScheduledv>
    31fa:	80 93 1d 44 	sts	0x441D, r24	; 0x80441d <g_event_scheduled>
    31fe:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    3202:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    3206:	8f 3f       	cpi	r24, 0xFF	; 255
    3208:	9f 40       	sbci	r25, 0x0F	; 15
    320a:	39 f0       	breq	.+14     	; 0x321a <_Z17handleLinkBusMsgsv+0x5d6>
    320c:	8d ec       	ldi	r24, 0xCD	; 205
    320e:	90 e0       	ldi	r25, 0x00	; 0
    3210:	80 93 bd 43 	sts	0x43BD, r24	; 0x8043bd <_ZL17g_last_error_code>
    3214:	90 93 be 43 	sts	0x43BE, r25	; 0x8043be <_ZL17g_last_error_code+0x1>
    3218:	3f c0       	rjmp	.+126    	; 0x3298 <_Z17handleLinkBusMsgsv+0x654>
    321a:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    321e:	88 23       	and	r24, r24
    3220:	51 f0       	breq	.+20     	; 0x3236 <_Z17handleLinkBusMsgsv+0x5f2>
    3222:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    3226:	88 23       	and	r24, r24
    3228:	11 f0       	breq	.+4      	; 0x322e <_Z17handleLinkBusMsgsv+0x5ea>
    322a:	0e 94 f7 20 	call	0x41ee	; 0x41ee <_Z12suspendEventv>
    322e:	8a e4       	ldi	r24, 0x4A	; 74
    3230:	94 e4       	ldi	r25, 0x44	; 68
    3232:	0e 94 f5 2e 	call	0x5dea	; 0x5dea <_ZN13EepromManager13saveAllEEPROMEv>
    3236:	90 91 1c 44 	lds	r25, 0x441C	; 0x80441c <g_event_enabled>
    323a:	81 e0       	ldi	r24, 0x01	; 1
    323c:	89 27       	eor	r24, r25
    323e:	88 23       	and	r24, r24
    3240:	71 f0       	breq	.+28     	; 0x325e <_Z17handleLinkBusMsgsv+0x61a>
    3242:	1f a6       	std	Y+47, r1	; 0x2f
    3244:	18 aa       	std	Y+48, r1	; 0x30
    3246:	ce 01       	movw	r24, r28
    3248:	8f 96       	adiw	r24, 0x2f	; 47
    324a:	0e 94 b1 1e 	call	0x3d62	; 0x3d62 <_Z11launchEventP2SC>
    324e:	80 93 bd 43 	sts	0x43BD, r24	; 0x8043bd <_ZL17g_last_error_code>
    3252:	90 93 be 43 	sts	0x43BE, r25	; 0x8043be <_ZL17g_last_error_code+0x1>
    3256:	82 e0       	ldi	r24, 0x02	; 2
    3258:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    325c:	03 c0       	rjmp	.+6      	; 0x3264 <_Z17handleLinkBusMsgsv+0x620>
    325e:	8c e3       	ldi	r24, 0x3C	; 60
    3260:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <_ZL23g_WiFi_shutdown_seconds>
    3264:	10 92 6a 44 	sts	0x446A, r1	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3268:	10 92 3d 44 	sts	0x443D, r1	; 0x80443d <g_Event_Configuration_Check>
    326c:	10 92 3e 44 	sts	0x443E, r1	; 0x80443e <g_Event_Configuration_Check+0x1>
    3270:	13 c0       	rjmp	.+38     	; 0x3298 <_Z17handleLinkBusMsgsv+0x654>
    3272:	8c a5       	ldd	r24, Y+44	; 0x2c
    3274:	80 33       	cpi	r24, 0x30	; 48
    3276:	09 f0       	breq	.+2      	; 0x327a <_Z17handleLinkBusMsgsv+0x636>
    3278:	6b c4       	rjmp	.+2262   	; 0x3b50 <_Z17handleLinkBusMsgsv+0xf0c>
    327a:	10 92 6a 44 	sts	0x446A, r1	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    327e:	10 92 3d 44 	sts	0x443D, r1	; 0x80443d <g_Event_Configuration_Check>
    3282:	10 92 3e 44 	sts	0x443E, r1	; 0x80443e <g_Event_Configuration_Check+0x1>
    3286:	8c ee       	ldi	r24, 0xEC	; 236
    3288:	90 e0       	ldi	r25, 0x00	; 0
    328a:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    328e:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    3292:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <g_enable_manual_transmissions>
    3296:	5c c4       	rjmp	.+2232   	; 0x3b50 <_Z17handleLinkBusMsgsv+0xf0c>
    3298:	00 00       	nop
    329a:	5a c4       	rjmp	.+2228   	; 0x3b50 <_Z17handleLinkBusMsgsv+0xf0c>
    329c:	1c 82       	std	Y+4, r1	; 0x04
    329e:	1d 82       	std	Y+5, r1	; 0x05
    32a0:	1e 82       	std	Y+6, r1	; 0x06
    32a2:	1f 82       	std	Y+7, r1	; 0x07
    32a4:	8c 85       	ldd	r24, Y+12	; 0x0c
    32a6:	9d 85       	ldd	r25, Y+13	; 0x0d
    32a8:	fc 01       	movw	r30, r24
    32aa:	84 81       	ldd	r24, Z+4	; 0x04
    32ac:	83 35       	cpi	r24, 0x53	; 83
    32ae:	09 f0       	breq	.+2      	; 0x32b2 <_Z17handleLinkBusMsgsv+0x66e>
    32b0:	41 c0       	rjmp	.+130    	; 0x3334 <_Z17handleLinkBusMsgsv+0x6f0>
    32b2:	8c 85       	ldd	r24, Y+12	; 0x0c
    32b4:	9d 85       	ldd	r25, Y+13	; 0x0d
    32b6:	fc 01       	movw	r30, r24
    32b8:	81 8d       	ldd	r24, Z+25	; 0x19
    32ba:	88 23       	and	r24, r24
    32bc:	59 f0       	breq	.+22     	; 0x32d4 <_Z17handleLinkBusMsgsv+0x690>
    32be:	8c 85       	ldd	r24, Y+12	; 0x0c
    32c0:	9d 85       	ldd	r25, Y+13	; 0x0d
    32c2:	49 96       	adiw	r24, 0x19	; 25
    32c4:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    32c8:	dc 01       	movw	r26, r24
    32ca:	cb 01       	movw	r24, r22
    32cc:	8c 83       	std	Y+4, r24	; 0x04
    32ce:	9d 83       	std	Y+5, r25	; 0x05
    32d0:	ae 83       	std	Y+6, r26	; 0x06
    32d2:	bf 83       	std	Y+7, r27	; 0x07
    32d4:	80 91 14 44 	lds	r24, 0x4414	; 0x804414 <g_event_start_epoch>
    32d8:	90 91 15 44 	lds	r25, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    32dc:	a0 91 16 44 	lds	r26, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    32e0:	b0 91 17 44 	lds	r27, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    32e4:	61 e0       	ldi	r22, 0x01	; 1
    32e6:	2c 81       	ldd	r18, Y+4	; 0x04
    32e8:	3d 81       	ldd	r19, Y+5	; 0x05
    32ea:	4e 81       	ldd	r20, Y+6	; 0x06
    32ec:	5f 81       	ldd	r21, Y+7	; 0x07
    32ee:	28 17       	cp	r18, r24
    32f0:	39 07       	cpc	r19, r25
    32f2:	4a 07       	cpc	r20, r26
    32f4:	5b 07       	cpc	r21, r27
    32f6:	09 f4       	brne	.+2      	; 0x32fa <_Z17handleLinkBusMsgsv+0x6b6>
    32f8:	60 e0       	ldi	r22, 0x00	; 0
    32fa:	66 23       	and	r22, r22
    32fc:	89 f0       	breq	.+34     	; 0x3320 <_Z17handleLinkBusMsgsv+0x6dc>
    32fe:	8c 81       	ldd	r24, Y+4	; 0x04
    3300:	9d 81       	ldd	r25, Y+5	; 0x05
    3302:	ae 81       	ldd	r26, Y+6	; 0x06
    3304:	bf 81       	ldd	r27, Y+7	; 0x07
    3306:	80 93 14 44 	sts	0x4414, r24	; 0x804414 <g_event_start_epoch>
    330a:	90 93 15 44 	sts	0x4415, r25	; 0x804415 <g_event_start_epoch+0x1>
    330e:	a0 93 16 44 	sts	0x4416, r26	; 0x804416 <g_event_start_epoch+0x2>
    3312:	b0 93 17 44 	sts	0x4417, r27	; 0x804417 <g_event_start_epoch+0x3>
    3316:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    331a:	8f 5f       	subi	r24, 0xFF	; 255
    331c:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3320:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    3324:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    3328:	98 60       	ori	r25, 0x08	; 8
    332a:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    332e:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    3332:	10 c4       	rjmp	.+2080   	; 0x3b54 <_Z17handleLinkBusMsgsv+0xf10>
    3334:	8c 85       	ldd	r24, Y+12	; 0x0c
    3336:	9d 85       	ldd	r25, Y+13	; 0x0d
    3338:	fc 01       	movw	r30, r24
    333a:	84 81       	ldd	r24, Z+4	; 0x04
    333c:	86 34       	cpi	r24, 0x46	; 70
    333e:	09 f0       	breq	.+2      	; 0x3342 <_Z17handleLinkBusMsgsv+0x6fe>
    3340:	09 c4       	rjmp	.+2066   	; 0x3b54 <_Z17handleLinkBusMsgsv+0xf10>
    3342:	8c 85       	ldd	r24, Y+12	; 0x0c
    3344:	9d 85       	ldd	r25, Y+13	; 0x0d
    3346:	fc 01       	movw	r30, r24
    3348:	81 8d       	ldd	r24, Z+25	; 0x19
    334a:	88 23       	and	r24, r24
    334c:	59 f0       	breq	.+22     	; 0x3364 <_Z17handleLinkBusMsgsv+0x720>
    334e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3350:	9d 85       	ldd	r25, Y+13	; 0x0d
    3352:	49 96       	adiw	r24, 0x19	; 25
    3354:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    3358:	dc 01       	movw	r26, r24
    335a:	cb 01       	movw	r24, r22
    335c:	8c 83       	std	Y+4, r24	; 0x04
    335e:	9d 83       	std	Y+5, r25	; 0x05
    3360:	ae 83       	std	Y+6, r26	; 0x06
    3362:	bf 83       	std	Y+7, r27	; 0x07
    3364:	80 91 18 44 	lds	r24, 0x4418	; 0x804418 <g_event_finish_epoch>
    3368:	90 91 19 44 	lds	r25, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    336c:	a0 91 1a 44 	lds	r26, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    3370:	b0 91 1b 44 	lds	r27, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    3374:	61 e0       	ldi	r22, 0x01	; 1
    3376:	2c 81       	ldd	r18, Y+4	; 0x04
    3378:	3d 81       	ldd	r19, Y+5	; 0x05
    337a:	4e 81       	ldd	r20, Y+6	; 0x06
    337c:	5f 81       	ldd	r21, Y+7	; 0x07
    337e:	28 17       	cp	r18, r24
    3380:	39 07       	cpc	r19, r25
    3382:	4a 07       	cpc	r20, r26
    3384:	5b 07       	cpc	r21, r27
    3386:	09 f4       	brne	.+2      	; 0x338a <_Z17handleLinkBusMsgsv+0x746>
    3388:	60 e0       	ldi	r22, 0x00	; 0
    338a:	66 23       	and	r22, r22
    338c:	89 f0       	breq	.+34     	; 0x33b0 <_Z17handleLinkBusMsgsv+0x76c>
    338e:	8c 81       	ldd	r24, Y+4	; 0x04
    3390:	9d 81       	ldd	r25, Y+5	; 0x05
    3392:	ae 81       	ldd	r26, Y+6	; 0x06
    3394:	bf 81       	ldd	r27, Y+7	; 0x07
    3396:	80 93 18 44 	sts	0x4418, r24	; 0x804418 <g_event_finish_epoch>
    339a:	90 93 19 44 	sts	0x4419, r25	; 0x804419 <g_event_finish_epoch+0x1>
    339e:	a0 93 1a 44 	sts	0x441A, r26	; 0x80441a <g_event_finish_epoch+0x2>
    33a2:	b0 93 1b 44 	sts	0x441B, r27	; 0x80441b <g_event_finish_epoch+0x3>
    33a6:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    33aa:	8f 5f       	subi	r24, 0xFF	; 255
    33ac:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    33b0:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    33b4:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    33b8:	81 60       	ori	r24, 0x01	; 1
    33ba:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    33be:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    33c2:	c8 c3       	rjmp	.+1936   	; 0x3b54 <_Z17handleLinkBusMsgsv+0xf10>
    33c4:	81 e0       	ldi	r24, 0x01	; 1
    33c6:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <_ZL13g_wifi_active>
    33ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    33cc:	9d 85       	ldd	r25, Y+13	; 0x0d
    33ce:	fc 01       	movw	r30, r24
    33d0:	80 81       	ld	r24, Z
    33d2:	91 81       	ldd	r25, Z+1	; 0x01
    33d4:	01 97       	sbiw	r24, 0x01	; 1
    33d6:	e9 f4       	brne	.+58     	; 0x3412 <_Z17handleLinkBusMsgsv+0x7ce>
    33d8:	8c 85       	ldd	r24, Y+12	; 0x0c
    33da:	9d 85       	ldd	r25, Y+13	; 0x0d
    33dc:	fc 01       	movw	r30, r24
    33de:	84 81       	ldd	r24, Z+4	; 0x04
    33e0:	88 23       	and	r24, r24
    33e2:	99 f0       	breq	.+38     	; 0x340a <_Z17handleLinkBusMsgsv+0x7c6>
    33e4:	8c 85       	ldd	r24, Y+12	; 0x0c
    33e6:	9d 85       	ldd	r25, Y+13	; 0x0d
    33e8:	04 96       	adiw	r24, 0x04	; 4
    33ea:	44 e1       	ldi	r20, 0x14	; 20
    33ec:	50 e0       	ldi	r21, 0x00	; 0
    33ee:	bc 01       	movw	r22, r24
    33f0:	89 e5       	ldi	r24, 0x59	; 89
    33f2:	93 e4       	ldi	r25, 0x43	; 67
    33f4:	0e 94 4b 50 	call	0xa096	; 0xa096 <strncpy>
    33f8:	60 e0       	ldi	r22, 0x00	; 0
    33fa:	70 e0       	ldi	r23, 0x00	; 0
    33fc:	89 e5       	ldi	r24, 0x59	; 89
    33fe:	93 e4       	ldi	r25, 0x43	; 67
    3400:	0e 94 fa 29 	call	0x53f4	; 0x53f4 <ds3231_set_date_time>
    3404:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <_Z19syncSystemTimeToRTCv>
    3408:	a7 c3       	rjmp	.+1870   	; 0x3b58 <_Z17handleLinkBusMsgsv+0xf14>
    340a:	81 e0       	ldi	r24, 0x01	; 1
    340c:	80 93 cb 43 	sts	0x43CB, r24	; 0x8043cb <_ZL16g_report_seconds>
    3410:	a3 c3       	rjmp	.+1862   	; 0x3b58 <_Z17handleLinkBusMsgsv+0xf14>
    3412:	8c 85       	ldd	r24, Y+12	; 0x0c
    3414:	9d 85       	ldd	r25, Y+13	; 0x0d
    3416:	fc 01       	movw	r30, r24
    3418:	80 81       	ld	r24, Z
    341a:	91 81       	ldd	r25, Z+1	; 0x01
    341c:	02 97       	sbiw	r24, 0x02	; 2
    341e:	09 f0       	breq	.+2      	; 0x3422 <_Z17handleLinkBusMsgsv+0x7de>
    3420:	9b c3       	rjmp	.+1846   	; 0x3b58 <_Z17handleLinkBusMsgsv+0xf14>
    3422:	8c 85       	ldd	r24, Y+12	; 0x0c
    3424:	9d 85       	ldd	r25, Y+13	; 0x0d
    3426:	fc 01       	movw	r30, r24
    3428:	84 81       	ldd	r24, Z+4	; 0x04
    342a:	88 35       	cpi	r24, 0x58	; 88
    342c:	d1 f5       	brne	.+116    	; 0x34a2 <_Z17handleLinkBusMsgsv+0x85e>
    342e:	1c 8a       	std	Y+20, r1	; 0x14
    3430:	8c 85       	ldd	r24, Y+12	; 0x0c
    3432:	9d 85       	ldd	r25, Y+13	; 0x0d
    3434:	fc 01       	movw	r30, r24
    3436:	81 8d       	ldd	r24, Z+25	; 0x19
    3438:	88 23       	and	r24, r24
    343a:	51 f0       	breq	.+20     	; 0x3450 <_Z17handleLinkBusMsgsv+0x80c>
    343c:	8c 85       	ldd	r24, Y+12	; 0x0c
    343e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3440:	49 96       	adiw	r24, 0x19	; 25
    3442:	0e 94 c8 4f 	call	0x9f90	; 0x9f90 <atoi>
    3446:	8c 8b       	std	Y+20, r24	; 0x14
    3448:	8c 89       	ldd	r24, Y+20	; 0x14
    344a:	0e 94 6b 2a 	call	0x54d6	; 0x54d6 <ds3231_set_aging>
    344e:	84 c3       	rjmp	.+1800   	; 0x3b58 <_Z17handleLinkBusMsgsv+0xf14>
    3450:	0e 94 87 2a 	call	0x550e	; 0x550e <ds3231_get_aging>
    3454:	8c 8b       	std	Y+20, r24	; 0x14
    3456:	8c 89       	ldd	r24, Y+20	; 0x14
    3458:	08 2e       	mov	r0, r24
    345a:	00 0c       	add	r0, r0
    345c:	99 0b       	sbc	r25, r25
    345e:	29 2f       	mov	r18, r25
    3460:	2f 93       	push	r18
    3462:	8f 93       	push	r24
    3464:	87 ec       	ldi	r24, 0xC7	; 199
    3466:	90 e4       	ldi	r25, 0x40	; 64
    3468:	89 2f       	mov	r24, r25
    346a:	8f 93       	push	r24
    346c:	87 ec       	ldi	r24, 0xC7	; 199
    346e:	90 e4       	ldi	r25, 0x40	; 64
    3470:	8f 93       	push	r24
    3472:	89 e5       	ldi	r24, 0x59	; 89
    3474:	93 e4       	ldi	r25, 0x43	; 67
    3476:	89 2f       	mov	r24, r25
    3478:	8f 93       	push	r24
    347a:	89 e5       	ldi	r24, 0x59	; 89
    347c:	93 e4       	ldi	r25, 0x43	; 67
    347e:	8f 93       	push	r24
    3480:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    3484:	0f 90       	pop	r0
    3486:	0f 90       	pop	r0
    3488:	0f 90       	pop	r0
    348a:	0f 90       	pop	r0
    348c:	0f 90       	pop	r0
    348e:	0f 90       	pop	r0
    3490:	49 e5       	ldi	r20, 0x59	; 89
    3492:	53 e4       	ldi	r21, 0x43	; 67
    3494:	6b ea       	ldi	r22, 0xAB	; 171
    3496:	70 e4       	ldi	r23, 0x40	; 64
    3498:	83 e0       	ldi	r24, 0x03	; 3
    349a:	90 e0       	ldi	r25, 0x00	; 0
    349c:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    34a0:	5b c3       	rjmp	.+1718   	; 0x3b58 <_Z17handleLinkBusMsgsv+0xf14>
    34a2:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <_Z19syncSystemTimeToRTCv>
    34a6:	80 e0       	ldi	r24, 0x00	; 0
    34a8:	90 e0       	ldi	r25, 0x00	; 0
    34aa:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    34ae:	dc 01       	movw	r26, r24
    34b0:	cb 01       	movw	r24, r22
    34b2:	88 8b       	std	Y+16, r24	; 0x10
    34b4:	99 8b       	std	Y+17, r25	; 0x11
    34b6:	aa 8b       	std	Y+18, r26	; 0x12
    34b8:	bb 8b       	std	Y+19, r27	; 0x13
    34ba:	80 91 6d 44 	lds	r24, 0x446D	; 0x80446d <_ZZ17handleLinkBusMsgsvE8lastTime>
    34be:	90 91 6e 44 	lds	r25, 0x446E	; 0x80446e <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    34c2:	a0 91 6f 44 	lds	r26, 0x446F	; 0x80446f <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    34c6:	b0 91 70 44 	lds	r27, 0x4470	; 0x804470 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    34ca:	28 89       	ldd	r18, Y+16	; 0x10
    34cc:	39 89       	ldd	r19, Y+17	; 0x11
    34ce:	4a 89       	ldd	r20, Y+18	; 0x12
    34d0:	5b 89       	ldd	r21, Y+19	; 0x13
    34d2:	28 17       	cp	r18, r24
    34d4:	39 07       	cpc	r19, r25
    34d6:	4a 07       	cpc	r20, r26
    34d8:	5b 07       	cpc	r21, r27
    34da:	09 f4       	brne	.+2      	; 0x34de <_Z17handleLinkBusMsgsv+0x89a>
    34dc:	3d c3       	rjmp	.+1658   	; 0x3b58 <_Z17handleLinkBusMsgsv+0xf14>
    34de:	8b 89       	ldd	r24, Y+19	; 0x13
    34e0:	8f 93       	push	r24
    34e2:	8a 89       	ldd	r24, Y+18	; 0x12
    34e4:	8f 93       	push	r24
    34e6:	89 89       	ldd	r24, Y+17	; 0x11
    34e8:	8f 93       	push	r24
    34ea:	88 89       	ldd	r24, Y+16	; 0x10
    34ec:	8f 93       	push	r24
    34ee:	87 ea       	ldi	r24, 0xA7	; 167
    34f0:	90 e4       	ldi	r25, 0x40	; 64
    34f2:	89 2f       	mov	r24, r25
    34f4:	8f 93       	push	r24
    34f6:	87 ea       	ldi	r24, 0xA7	; 167
    34f8:	90 e4       	ldi	r25, 0x40	; 64
    34fa:	8f 93       	push	r24
    34fc:	89 e5       	ldi	r24, 0x59	; 89
    34fe:	93 e4       	ldi	r25, 0x43	; 67
    3500:	89 2f       	mov	r24, r25
    3502:	8f 93       	push	r24
    3504:	89 e5       	ldi	r24, 0x59	; 89
    3506:	93 e4       	ldi	r25, 0x43	; 67
    3508:	8f 93       	push	r24
    350a:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    350e:	8d b7       	in	r24, 0x3d	; 61
    3510:	9e b7       	in	r25, 0x3e	; 62
    3512:	08 96       	adiw	r24, 0x08	; 8
    3514:	cd bf       	out	0x3d, r28	; 61
    3516:	de bf       	out	0x3e, r29	; 62
    3518:	49 e5       	ldi	r20, 0x59	; 89
    351a:	53 e4       	ldi	r21, 0x43	; 67
    351c:	6b ea       	ldi	r22, 0xAB	; 171
    351e:	70 e4       	ldi	r23, 0x40	; 64
    3520:	83 e0       	ldi	r24, 0x03	; 3
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3528:	88 89       	ldd	r24, Y+16	; 0x10
    352a:	99 89       	ldd	r25, Y+17	; 0x11
    352c:	aa 89       	ldd	r26, Y+18	; 0x12
    352e:	bb 89       	ldd	r27, Y+19	; 0x13
    3530:	80 93 6d 44 	sts	0x446D, r24	; 0x80446d <_ZZ17handleLinkBusMsgsvE8lastTime>
    3534:	90 93 6e 44 	sts	0x446E, r25	; 0x80446e <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    3538:	a0 93 6f 44 	sts	0x446F, r26	; 0x80446f <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    353c:	b0 93 70 44 	sts	0x4470, r27	; 0x804470 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    3540:	0b c3       	rjmp	.+1558   	; 0x3b58 <_Z17handleLinkBusMsgsv+0xf14>
    3542:	8c 85       	ldd	r24, Y+12	; 0x0c
    3544:	9d 85       	ldd	r25, Y+13	; 0x0d
    3546:	fc 01       	movw	r30, r24
    3548:	80 81       	ld	r24, Z
    354a:	91 81       	ldd	r25, Z+1	; 0x01
    354c:	01 97       	sbiw	r24, 0x01	; 1
    354e:	09 f0       	breq	.+2      	; 0x3552 <_Z17handleLinkBusMsgsv+0x90e>
    3550:	3f c0       	rjmp	.+126    	; 0x35d0 <_Z17handleLinkBusMsgsv+0x98c>
    3552:	8c 85       	ldd	r24, Y+12	; 0x0c
    3554:	9d 85       	ldd	r25, Y+13	; 0x0d
    3556:	fc 01       	movw	r30, r24
    3558:	84 81       	ldd	r24, Z+4	; 0x04
    355a:	88 23       	and	r24, r24
    355c:	01 f1       	breq	.+64     	; 0x359e <_Z17handleLinkBusMsgsv+0x95a>
    355e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3560:	9d 85       	ldd	r25, Y+13	; 0x0d
    3562:	04 96       	adiw	r24, 0x04	; 4
    3564:	bc 01       	movw	r22, r24
    3566:	8b ef       	ldi	r24, 0xFB	; 251
    3568:	93 e4       	ldi	r25, 0x43	; 67
    356a:	0e 94 29 50 	call	0xa052	; 0xa052 <strcmp>
    356e:	89 2b       	or	r24, r25
    3570:	29 f1       	breq	.+74     	; 0x35bc <_Z17handleLinkBusMsgsv+0x978>
    3572:	8c 85       	ldd	r24, Y+12	; 0x0c
    3574:	9d 85       	ldd	r25, Y+13	; 0x0d
    3576:	04 96       	adiw	r24, 0x04	; 4
    3578:	44 e1       	ldi	r20, 0x14	; 20
    357a:	50 e0       	ldi	r21, 0x00	; 0
    357c:	bc 01       	movw	r22, r24
    357e:	8b ef       	ldi	r24, 0xFB	; 251
    3580:	93 e4       	ldi	r25, 0x43	; 67
    3582:	0e 94 4b 50 	call	0xa096	; 0xa096 <strncpy>
    3586:	0e 94 97 23 	call	0x472e	; 0x472e <_Z15timeNeededForIDv>
    358a:	80 93 10 44 	sts	0x4410, r24	; 0x804410 <g_time_needed_for_ID>
    358e:	90 93 11 44 	sts	0x4411, r25	; 0x804411 <g_time_needed_for_ID+0x1>
    3592:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3596:	8f 5f       	subi	r24, 0xFF	; 255
    3598:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    359c:	0f c0       	rjmp	.+30     	; 0x35bc <_Z17handleLinkBusMsgsv+0x978>
    359e:	80 91 fb 43 	lds	r24, 0x43FB	; 0x8043fb <g_messages_text+0x2a>
    35a2:	88 23       	and	r24, r24
    35a4:	59 f0       	breq	.+22     	; 0x35bc <_Z17handleLinkBusMsgsv+0x978>
    35a6:	10 92 fb 43 	sts	0x43FB, r1	; 0x8043fb <g_messages_text+0x2a>
    35aa:	10 92 10 44 	sts	0x4410, r1	; 0x804410 <g_time_needed_for_ID>
    35ae:	10 92 11 44 	sts	0x4411, r1	; 0x804411 <g_time_needed_for_ID+0x1>
    35b2:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    35b6:	8f 5f       	subi	r24, 0xFF	; 255
    35b8:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    35bc:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    35c0:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    35c4:	91 60       	ori	r25, 0x01	; 1
    35c6:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    35ca:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    35ce:	c6 c2       	rjmp	.+1420   	; 0x3b5c <_Z17handleLinkBusMsgsv+0xf18>
    35d0:	80 91 fb 43 	lds	r24, 0x43FB	; 0x8043fb <g_messages_text+0x2a>
    35d4:	88 23       	and	r24, r24
    35d6:	09 f4       	brne	.+2      	; 0x35da <_Z17handleLinkBusMsgsv+0x996>
    35d8:	c1 c2       	rjmp	.+1410   	; 0x3b5c <_Z17handleLinkBusMsgsv+0xf18>
    35da:	8b ef       	ldi	r24, 0xFB	; 251
    35dc:	93 e4       	ldi	r25, 0x43	; 67
    35de:	89 2f       	mov	r24, r25
    35e0:	8f 93       	push	r24
    35e2:	8b ef       	ldi	r24, 0xFB	; 251
    35e4:	93 e4       	ldi	r25, 0x43	; 67
    35e6:	8f 93       	push	r24
    35e8:	8c ec       	ldi	r24, 0xCC	; 204
    35ea:	90 e4       	ldi	r25, 0x40	; 64
    35ec:	89 2f       	mov	r24, r25
    35ee:	8f 93       	push	r24
    35f0:	8c ec       	ldi	r24, 0xCC	; 204
    35f2:	90 e4       	ldi	r25, 0x40	; 64
    35f4:	8f 93       	push	r24
    35f6:	89 e5       	ldi	r24, 0x59	; 89
    35f8:	93 e4       	ldi	r25, 0x43	; 67
    35fa:	89 2f       	mov	r24, r25
    35fc:	8f 93       	push	r24
    35fe:	89 e5       	ldi	r24, 0x59	; 89
    3600:	93 e4       	ldi	r25, 0x43	; 67
    3602:	8f 93       	push	r24
    3604:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    3608:	0f 90       	pop	r0
    360a:	0f 90       	pop	r0
    360c:	0f 90       	pop	r0
    360e:	0f 90       	pop	r0
    3610:	0f 90       	pop	r0
    3612:	0f 90       	pop	r0
    3614:	89 e5       	ldi	r24, 0x59	; 89
    3616:	93 e4       	ldi	r25, 0x43	; 67
    3618:	0e 94 33 3c 	call	0x7866	; 0x7866 <_Z12lb_send_textPc>
    361c:	19 82       	std	Y+1, r1	; 0x01
    361e:	9e c2       	rjmp	.+1340   	; 0x3b5c <_Z17handleLinkBusMsgsv+0xf18>
    3620:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    3624:	8d 8b       	std	Y+21, r24	; 0x15
    3626:	8c 85       	ldd	r24, Y+12	; 0x0c
    3628:	9d 85       	ldd	r25, Y+13	; 0x0d
    362a:	fc 01       	movw	r30, r24
    362c:	84 81       	ldd	r24, Z+4	; 0x04
    362e:	89 34       	cpi	r24, 0x49	; 73
    3630:	09 f0       	breq	.+2      	; 0x3634 <_Z17handleLinkBusMsgsv+0x9f0>
    3632:	60 c0       	rjmp	.+192    	; 0x36f4 <_Z17handleLinkBusMsgsv+0xab0>
    3634:	8c 85       	ldd	r24, Y+12	; 0x0c
    3636:	9d 85       	ldd	r25, Y+13	; 0x0d
    3638:	fc 01       	movw	r30, r24
    363a:	81 8d       	ldd	r24, Z+25	; 0x19
    363c:	88 23       	and	r24, r24
    363e:	09 f4       	brne	.+2      	; 0x3642 <_Z17handleLinkBusMsgsv+0x9fe>
    3640:	8f c2       	rjmp	.+1310   	; 0x3b60 <_Z17handleLinkBusMsgsv+0xf1c>
    3642:	8c 85       	ldd	r24, Y+12	; 0x0c
    3644:	9d 85       	ldd	r25, Y+13	; 0x0d
    3646:	49 96       	adiw	r24, 0x19	; 25
    3648:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    364c:	dc 01       	movw	r26, r24
    364e:	cb 01       	movw	r24, r22
    3650:	8c 8f       	std	Y+28, r24	; 0x1c
    3652:	9d 8f       	std	Y+29, r25	; 0x1d
    3654:	ae 8f       	std	Y+30, r26	; 0x1e
    3656:	bf 8f       	std	Y+31, r27	; 0x1f
    3658:	85 e0       	ldi	r24, 0x05	; 5
    365a:	88 a3       	std	Y+32, r24	; 0x20
    365c:	84 e1       	ldi	r24, 0x14	; 20
    365e:	89 a3       	std	Y+33, r24	; 0x21
    3660:	89 a1       	ldd	r24, Y+33	; 0x21
    3662:	88 2f       	mov	r24, r24
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	a0 e0       	ldi	r26, 0x00	; 0
    3668:	b0 e0       	ldi	r27, 0x00	; 0
    366a:	2c 8d       	ldd	r18, Y+28	; 0x1c
    366c:	3d 8d       	ldd	r19, Y+29	; 0x1d
    366e:	4e 8d       	ldd	r20, Y+30	; 0x1e
    3670:	5f 8d       	ldd	r21, Y+31	; 0x1f
    3672:	82 17       	cp	r24, r18
    3674:	93 07       	cpc	r25, r19
    3676:	a4 07       	cpc	r26, r20
    3678:	b5 07       	cpc	r27, r21
    367a:	34 f4       	brge	.+12     	; 0x3688 <_Z17handleLinkBusMsgsv+0xa44>
    367c:	89 a1       	ldd	r24, Y+33	; 0x21
    367e:	88 2f       	mov	r24, r24
    3680:	90 e0       	ldi	r25, 0x00	; 0
    3682:	a0 e0       	ldi	r26, 0x00	; 0
    3684:	b0 e0       	ldi	r27, 0x00	; 0
    3686:	10 c0       	rjmp	.+32     	; 0x36a8 <_Z17handleLinkBusMsgsv+0xa64>
    3688:	88 a1       	ldd	r24, Y+32	; 0x20
    368a:	28 2f       	mov	r18, r24
    368c:	30 e0       	ldi	r19, 0x00	; 0
    368e:	40 e0       	ldi	r20, 0x00	; 0
    3690:	50 e0       	ldi	r21, 0x00	; 0
    3692:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3694:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3696:	ae 8d       	ldd	r26, Y+30	; 0x1e
    3698:	bf 8d       	ldd	r27, Y+31	; 0x1f
    369a:	82 17       	cp	r24, r18
    369c:	93 07       	cpc	r25, r19
    369e:	a4 07       	cpc	r26, r20
    36a0:	b5 07       	cpc	r27, r21
    36a2:	14 f4       	brge	.+4      	; 0x36a8 <_Z17handleLinkBusMsgsv+0xa64>
    36a4:	da 01       	movw	r26, r20
    36a6:	c9 01       	movw	r24, r18
    36a8:	8d 8b       	std	Y+21, r24	; 0x15
    36aa:	90 91 0d 40 	lds	r25, 0x400D	; 0x80400d <g_id_codespeed>
    36ae:	81 e0       	ldi	r24, 0x01	; 1
    36b0:	2d 89       	ldd	r18, Y+21	; 0x15
    36b2:	29 17       	cp	r18, r25
    36b4:	09 f4       	brne	.+2      	; 0x36b8 <_Z17handleLinkBusMsgsv+0xa74>
    36b6:	80 e0       	ldi	r24, 0x00	; 0
    36b8:	88 23       	and	r24, r24
    36ba:	91 f0       	breq	.+36     	; 0x36e0 <_Z17handleLinkBusMsgsv+0xa9c>
    36bc:	8d 89       	ldd	r24, Y+21	; 0x15
    36be:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_id_codespeed>
    36c2:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    36c6:	8f 5f       	subi	r24, 0xFF	; 255
    36c8:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    36cc:	80 91 fb 43 	lds	r24, 0x43FB	; 0x8043fb <g_messages_text+0x2a>
    36d0:	88 23       	and	r24, r24
    36d2:	31 f0       	breq	.+12     	; 0x36e0 <_Z17handleLinkBusMsgsv+0xa9c>
    36d4:	0e 94 97 23 	call	0x472e	; 0x472e <_Z15timeNeededForIDv>
    36d8:	80 93 10 44 	sts	0x4410, r24	; 0x804410 <g_time_needed_for_ID>
    36dc:	90 93 11 44 	sts	0x4411, r25	; 0x804411 <g_time_needed_for_ID+0x1>
    36e0:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    36e4:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    36e8:	92 60       	ori	r25, 0x02	; 2
    36ea:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    36ee:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    36f2:	36 c2       	rjmp	.+1132   	; 0x3b60 <_Z17handleLinkBusMsgsv+0xf1c>
    36f4:	8c 85       	ldd	r24, Y+12	; 0x0c
    36f6:	9d 85       	ldd	r25, Y+13	; 0x0d
    36f8:	fc 01       	movw	r30, r24
    36fa:	84 81       	ldd	r24, Z+4	; 0x04
    36fc:	80 35       	cpi	r24, 0x50	; 80
    36fe:	09 f0       	breq	.+2      	; 0x3702 <_Z17handleLinkBusMsgsv+0xabe>
    3700:	2f c2       	rjmp	.+1118   	; 0x3b60 <_Z17handleLinkBusMsgsv+0xf1c>
    3702:	8c 85       	ldd	r24, Y+12	; 0x0c
    3704:	9d 85       	ldd	r25, Y+13	; 0x0d
    3706:	fc 01       	movw	r30, r24
    3708:	81 8d       	ldd	r24, Z+25	; 0x19
    370a:	88 23       	and	r24, r24
    370c:	09 f4       	brne	.+2      	; 0x3710 <_Z17handleLinkBusMsgsv+0xacc>
    370e:	28 c2       	rjmp	.+1104   	; 0x3b60 <_Z17handleLinkBusMsgsv+0xf1c>
    3710:	8c 85       	ldd	r24, Y+12	; 0x0c
    3712:	9d 85       	ldd	r25, Y+13	; 0x0d
    3714:	49 96       	adiw	r24, 0x19	; 25
    3716:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    371a:	dc 01       	movw	r26, r24
    371c:	cb 01       	movw	r24, r22
    371e:	8e 8b       	std	Y+22, r24	; 0x16
    3720:	9f 8b       	std	Y+23, r25	; 0x17
    3722:	a8 8f       	std	Y+24, r26	; 0x18
    3724:	b9 8f       	std	Y+25, r27	; 0x19
    3726:	85 e0       	ldi	r24, 0x05	; 5
    3728:	8a 8f       	std	Y+26, r24	; 0x1a
    372a:	84 e1       	ldi	r24, 0x14	; 20
    372c:	8b 8f       	std	Y+27, r24	; 0x1b
    372e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3730:	88 2f       	mov	r24, r24
    3732:	90 e0       	ldi	r25, 0x00	; 0
    3734:	a0 e0       	ldi	r26, 0x00	; 0
    3736:	b0 e0       	ldi	r27, 0x00	; 0
    3738:	2e 89       	ldd	r18, Y+22	; 0x16
    373a:	3f 89       	ldd	r19, Y+23	; 0x17
    373c:	48 8d       	ldd	r20, Y+24	; 0x18
    373e:	59 8d       	ldd	r21, Y+25	; 0x19
    3740:	82 17       	cp	r24, r18
    3742:	93 07       	cpc	r25, r19
    3744:	a4 07       	cpc	r26, r20
    3746:	b5 07       	cpc	r27, r21
    3748:	34 f4       	brge	.+12     	; 0x3756 <_Z17handleLinkBusMsgsv+0xb12>
    374a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    374c:	88 2f       	mov	r24, r24
    374e:	90 e0       	ldi	r25, 0x00	; 0
    3750:	a0 e0       	ldi	r26, 0x00	; 0
    3752:	b0 e0       	ldi	r27, 0x00	; 0
    3754:	10 c0       	rjmp	.+32     	; 0x3776 <_Z17handleLinkBusMsgsv+0xb32>
    3756:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3758:	28 2f       	mov	r18, r24
    375a:	30 e0       	ldi	r19, 0x00	; 0
    375c:	40 e0       	ldi	r20, 0x00	; 0
    375e:	50 e0       	ldi	r21, 0x00	; 0
    3760:	8e 89       	ldd	r24, Y+22	; 0x16
    3762:	9f 89       	ldd	r25, Y+23	; 0x17
    3764:	a8 8d       	ldd	r26, Y+24	; 0x18
    3766:	b9 8d       	ldd	r27, Y+25	; 0x19
    3768:	82 17       	cp	r24, r18
    376a:	93 07       	cpc	r25, r19
    376c:	a4 07       	cpc	r26, r20
    376e:	b5 07       	cpc	r27, r21
    3770:	14 f4       	brge	.+4      	; 0x3776 <_Z17handleLinkBusMsgsv+0xb32>
    3772:	da 01       	movw	r26, r20
    3774:	c9 01       	movw	r24, r18
    3776:	8d 8b       	std	Y+21, r24	; 0x15
    3778:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_pattern_codespeed>
    377c:	81 e0       	ldi	r24, 0x01	; 1
    377e:	2d 89       	ldd	r18, Y+21	; 0x15
    3780:	29 17       	cp	r18, r25
    3782:	09 f4       	brne	.+2      	; 0x3786 <_Z17handleLinkBusMsgsv+0xb42>
    3784:	80 e0       	ldi	r24, 0x00	; 0
    3786:	88 23       	and	r24, r24
    3788:	81 f0       	breq	.+32     	; 0x37aa <_Z17handleLinkBusMsgsv+0xb66>
    378a:	8d 89       	ldd	r24, Y+21	; 0x15
    378c:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
    3790:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3794:	8f 5f       	subi	r24, 0xFF	; 255
    3796:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    379a:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    379e:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    37a2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    37a6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    37aa:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    37ae:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    37b2:	94 60       	ori	r25, 0x04	; 4
    37b4:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    37b8:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    37bc:	d1 c1       	rjmp	.+930    	; 0x3b60 <_Z17handleLinkBusMsgsv+0xf1c>
    37be:	1d a6       	std	Y+45, r1	; 0x2d
    37c0:	1e a6       	std	Y+46, r1	; 0x2e
    37c2:	8c 85       	ldd	r24, Y+12	; 0x0c
    37c4:	9d 85       	ldd	r25, Y+13	; 0x0d
    37c6:	fc 01       	movw	r30, r24
    37c8:	84 81       	ldd	r24, Z+4	; 0x04
    37ca:	80 33       	cpi	r24, 0x30	; 48
    37cc:	91 f5       	brne	.+100    	; 0x3832 <_Z17handleLinkBusMsgsv+0xbee>
    37ce:	8c 85       	ldd	r24, Y+12	; 0x0c
    37d0:	9d 85       	ldd	r25, Y+13	; 0x0d
    37d2:	fc 01       	movw	r30, r24
    37d4:	81 8d       	ldd	r24, Z+25	; 0x19
    37d6:	88 23       	and	r24, r24
    37d8:	09 f4       	brne	.+2      	; 0x37dc <_Z17handleLinkBusMsgsv+0xb98>
    37da:	c4 c1       	rjmp	.+904    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    37dc:	8c 85       	ldd	r24, Y+12	; 0x0c
    37de:	9d 85       	ldd	r25, Y+13	; 0x0d
    37e0:	49 96       	adiw	r24, 0x19	; 25
    37e2:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    37e6:	dc 01       	movw	r26, r24
    37e8:	cb 01       	movw	r24, r22
    37ea:	8d a7       	std	Y+45, r24	; 0x2d
    37ec:	9e a7       	std	Y+46, r25	; 0x2e
    37ee:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <g_off_air_seconds>
    37f2:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    37f6:	41 e0       	ldi	r20, 0x01	; 1
    37f8:	2d a5       	ldd	r18, Y+45	; 0x2d
    37fa:	3e a5       	ldd	r19, Y+46	; 0x2e
    37fc:	28 17       	cp	r18, r24
    37fe:	39 07       	cpc	r19, r25
    3800:	09 f4       	brne	.+2      	; 0x3804 <_Z17handleLinkBusMsgsv+0xbc0>
    3802:	40 e0       	ldi	r20, 0x00	; 0
    3804:	44 23       	and	r20, r20
    3806:	59 f0       	breq	.+22     	; 0x381e <_Z17handleLinkBusMsgsv+0xbda>
    3808:	8d a5       	ldd	r24, Y+45	; 0x2d
    380a:	9e a5       	ldd	r25, Y+46	; 0x2e
    380c:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <g_off_air_seconds>
    3810:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <g_off_air_seconds+0x1>
    3814:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3818:	8f 5f       	subi	r24, 0xFF	; 255
    381a:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    381e:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    3822:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    3826:	84 60       	ori	r24, 0x04	; 4
    3828:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    382c:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    3830:	99 c1       	rjmp	.+818    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    3832:	8c 85       	ldd	r24, Y+12	; 0x0c
    3834:	9d 85       	ldd	r25, Y+13	; 0x0d
    3836:	fc 01       	movw	r30, r24
    3838:	84 81       	ldd	r24, Z+4	; 0x04
    383a:	81 33       	cpi	r24, 0x31	; 49
    383c:	91 f5       	brne	.+100    	; 0x38a2 <_Z17handleLinkBusMsgsv+0xc5e>
    383e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3840:	9d 85       	ldd	r25, Y+13	; 0x0d
    3842:	fc 01       	movw	r30, r24
    3844:	81 8d       	ldd	r24, Z+25	; 0x19
    3846:	88 23       	and	r24, r24
    3848:	09 f4       	brne	.+2      	; 0x384c <_Z17handleLinkBusMsgsv+0xc08>
    384a:	8c c1       	rjmp	.+792    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    384c:	8c 85       	ldd	r24, Y+12	; 0x0c
    384e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3850:	49 96       	adiw	r24, 0x19	; 25
    3852:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    3856:	dc 01       	movw	r26, r24
    3858:	cb 01       	movw	r24, r22
    385a:	8d a7       	std	Y+45, r24	; 0x2d
    385c:	9e a7       	std	Y+46, r25	; 0x2e
    385e:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    3862:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    3866:	41 e0       	ldi	r20, 0x01	; 1
    3868:	2d a5       	ldd	r18, Y+45	; 0x2d
    386a:	3e a5       	ldd	r19, Y+46	; 0x2e
    386c:	28 17       	cp	r18, r24
    386e:	39 07       	cpc	r19, r25
    3870:	09 f4       	brne	.+2      	; 0x3874 <_Z17handleLinkBusMsgsv+0xc30>
    3872:	40 e0       	ldi	r20, 0x00	; 0
    3874:	44 23       	and	r20, r20
    3876:	59 f0       	breq	.+22     	; 0x388e <_Z17handleLinkBusMsgsv+0xc4a>
    3878:	8d a5       	ldd	r24, Y+45	; 0x2d
    387a:	9e a5       	ldd	r25, Y+46	; 0x2e
    387c:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    3880:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
    3884:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3888:	8f 5f       	subi	r24, 0xFF	; 255
    388a:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    388e:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    3892:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    3896:	88 60       	ori	r24, 0x08	; 8
    3898:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    389c:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    38a0:	61 c1       	rjmp	.+706    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    38a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    38a4:	9d 85       	ldd	r25, Y+13	; 0x0d
    38a6:	fc 01       	movw	r30, r24
    38a8:	84 81       	ldd	r24, Z+4	; 0x04
    38aa:	89 34       	cpi	r24, 0x49	; 73
    38ac:	91 f5       	brne	.+100    	; 0x3912 <_Z17handleLinkBusMsgsv+0xcce>
    38ae:	8c 85       	ldd	r24, Y+12	; 0x0c
    38b0:	9d 85       	ldd	r25, Y+13	; 0x0d
    38b2:	fc 01       	movw	r30, r24
    38b4:	81 8d       	ldd	r24, Z+25	; 0x19
    38b6:	88 23       	and	r24, r24
    38b8:	09 f4       	brne	.+2      	; 0x38bc <_Z17handleLinkBusMsgsv+0xc78>
    38ba:	54 c1       	rjmp	.+680    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    38bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    38be:	9d 85       	ldd	r25, Y+13	; 0x0d
    38c0:	49 96       	adiw	r24, 0x19	; 25
    38c2:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    38c6:	dc 01       	movw	r26, r24
    38c8:	cb 01       	movw	r24, r22
    38ca:	8d a7       	std	Y+45, r24	; 0x2d
    38cc:	9e a7       	std	Y+46, r25	; 0x2e
    38ce:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <g_ID_period_seconds>
    38d2:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <g_ID_period_seconds+0x1>
    38d6:	41 e0       	ldi	r20, 0x01	; 1
    38d8:	2d a5       	ldd	r18, Y+45	; 0x2d
    38da:	3e a5       	ldd	r19, Y+46	; 0x2e
    38dc:	28 17       	cp	r18, r24
    38de:	39 07       	cpc	r19, r25
    38e0:	09 f4       	brne	.+2      	; 0x38e4 <_Z17handleLinkBusMsgsv+0xca0>
    38e2:	40 e0       	ldi	r20, 0x00	; 0
    38e4:	44 23       	and	r20, r20
    38e6:	59 f0       	breq	.+22     	; 0x38fe <_Z17handleLinkBusMsgsv+0xcba>
    38e8:	8d a5       	ldd	r24, Y+45	; 0x2d
    38ea:	9e a5       	ldd	r25, Y+46	; 0x2e
    38ec:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <g_ID_period_seconds>
    38f0:	90 93 15 40 	sts	0x4015, r25	; 0x804015 <g_ID_period_seconds+0x1>
    38f4:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    38f8:	8f 5f       	subi	r24, 0xFF	; 255
    38fa:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    38fe:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    3902:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    3906:	80 62       	ori	r24, 0x20	; 32
    3908:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    390c:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    3910:	29 c1       	rjmp	.+594    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    3912:	8c 85       	ldd	r24, Y+12	; 0x0c
    3914:	9d 85       	ldd	r25, Y+13	; 0x0d
    3916:	fc 01       	movw	r30, r24
    3918:	84 81       	ldd	r24, Z+4	; 0x04
    391a:	84 34       	cpi	r24, 0x44	; 68
    391c:	09 f0       	breq	.+2      	; 0x3920 <_Z17handleLinkBusMsgsv+0xcdc>
    391e:	22 c1       	rjmp	.+580    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    3920:	8c 85       	ldd	r24, Y+12	; 0x0c
    3922:	9d 85       	ldd	r25, Y+13	; 0x0d
    3924:	fc 01       	movw	r30, r24
    3926:	81 8d       	ldd	r24, Z+25	; 0x19
    3928:	88 23       	and	r24, r24
    392a:	09 f4       	brne	.+2      	; 0x392e <_Z17handleLinkBusMsgsv+0xcea>
    392c:	1b c1       	rjmp	.+566    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    392e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3930:	9d 85       	ldd	r25, Y+13	; 0x0d
    3932:	49 96       	adiw	r24, 0x19	; 25
    3934:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    3938:	dc 01       	movw	r26, r24
    393a:	cb 01       	movw	r24, r22
    393c:	8d a7       	std	Y+45, r24	; 0x2d
    393e:	9e a7       	std	Y+46, r25	; 0x2e
    3940:	80 91 12 44 	lds	r24, 0x4412	; 0x804412 <g_intra_cycle_delay_time>
    3944:	90 91 13 44 	lds	r25, 0x4413	; 0x804413 <g_intra_cycle_delay_time+0x1>
    3948:	41 e0       	ldi	r20, 0x01	; 1
    394a:	2d a5       	ldd	r18, Y+45	; 0x2d
    394c:	3e a5       	ldd	r19, Y+46	; 0x2e
    394e:	28 17       	cp	r18, r24
    3950:	39 07       	cpc	r19, r25
    3952:	09 f4       	brne	.+2      	; 0x3956 <_Z17handleLinkBusMsgsv+0xd12>
    3954:	40 e0       	ldi	r20, 0x00	; 0
    3956:	44 23       	and	r20, r20
    3958:	59 f0       	breq	.+22     	; 0x3970 <_Z17handleLinkBusMsgsv+0xd2c>
    395a:	8d a5       	ldd	r24, Y+45	; 0x2d
    395c:	9e a5       	ldd	r25, Y+46	; 0x2e
    395e:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    3962:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    3966:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    396a:	8f 5f       	subi	r24, 0xFF	; 255
    396c:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3970:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    3974:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    3978:	80 61       	ori	r24, 0x10	; 16
    397a:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    397e:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    3982:	f0 c0       	rjmp	.+480    	; 0x3b64 <_Z17handleLinkBusMsgsv+0xf20>
    3984:	8c 85       	ldd	r24, Y+12	; 0x0c
    3986:	9d 85       	ldd	r25, Y+13	; 0x0d
    3988:	fc 01       	movw	r30, r24
    398a:	84 81       	ldd	r24, Z+4	; 0x04
    398c:	88 23       	and	r24, r24
    398e:	09 f4       	brne	.+2      	; 0x3992 <_Z17handleLinkBusMsgsv+0xd4e>
    3990:	eb c0       	rjmp	.+470    	; 0x3b68 <_Z17handleLinkBusMsgsv+0xf24>
    3992:	8c 85       	ldd	r24, Y+12	; 0x0c
    3994:	9d 85       	ldd	r25, Y+13	; 0x0d
    3996:	04 96       	adiw	r24, 0x04	; 4
    3998:	bc 01       	movw	r22, r24
    399a:	81 ed       	ldi	r24, 0xD1	; 209
    399c:	93 e4       	ldi	r25, 0x43	; 67
    399e:	0e 94 29 50 	call	0xa052	; 0xa052 <strcmp>
    39a2:	89 2b       	or	r24, r25
    39a4:	79 f0       	breq	.+30     	; 0x39c4 <_Z17handleLinkBusMsgsv+0xd80>
    39a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    39a8:	9d 85       	ldd	r25, Y+13	; 0x0d
    39aa:	04 96       	adiw	r24, 0x04	; 4
    39ac:	44 e1       	ldi	r20, 0x14	; 20
    39ae:	50 e0       	ldi	r21, 0x00	; 0
    39b0:	bc 01       	movw	r22, r24
    39b2:	81 ed       	ldi	r24, 0xD1	; 209
    39b4:	93 e4       	ldi	r25, 0x43	; 67
    39b6:	0e 94 4b 50 	call	0xa096	; 0xa096 <strncpy>
    39ba:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    39be:	8f 5f       	subi	r24, 0xFF	; 255
    39c0:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    39c4:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    39c8:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    39cc:	82 60       	ori	r24, 0x02	; 2
    39ce:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    39d2:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    39d6:	c8 c0       	rjmp	.+400    	; 0x3b68 <_Z17handleLinkBusMsgsv+0xf24>
    39d8:	18 86       	std	Y+8, r1	; 0x08
    39da:	19 86       	std	Y+9, r1	; 0x09
    39dc:	1a 86       	std	Y+10, r1	; 0x0a
    39de:	1b 86       	std	Y+11, r1	; 0x0b
    39e0:	8c 85       	ldd	r24, Y+12	; 0x0c
    39e2:	9d 85       	ldd	r25, Y+13	; 0x0d
    39e4:	fc 01       	movw	r30, r24
    39e6:	84 81       	ldd	r24, Z+4	; 0x04
    39e8:	88 23       	and	r24, r24
    39ea:	e9 f1       	breq	.+122    	; 0x3a66 <_Z17handleLinkBusMsgsv+0xe22>
    39ec:	8c 85       	ldd	r24, Y+12	; 0x0c
    39ee:	9d 85       	ldd	r25, Y+13	; 0x0d
    39f0:	04 96       	adiw	r24, 0x04	; 4
    39f2:	0e 94 e6 4f 	call	0x9fcc	; 0x9fcc <atol>
    39f6:	dc 01       	movw	r26, r24
    39f8:	cb 01       	movw	r24, r22
    39fa:	89 ab       	std	Y+49, r24	; 0x31
    39fc:	9a ab       	std	Y+50, r25	; 0x32
    39fe:	ab ab       	std	Y+51, r26	; 0x33
    3a00:	bc ab       	std	Y+52, r27	; 0x34
    3a02:	0e 94 ac 48 	call	0x9158	; 0x9158 <_Z14txGetFrequencyv>
    3a06:	9b 01       	movw	r18, r22
    3a08:	ac 01       	movw	r20, r24
    3a0a:	89 a9       	ldd	r24, Y+49	; 0x31
    3a0c:	9a a9       	ldd	r25, Y+50	; 0x32
    3a0e:	ab a9       	ldd	r26, Y+51	; 0x33
    3a10:	bc a9       	ldd	r27, Y+52	; 0x34
    3a12:	61 e0       	ldi	r22, 0x01	; 1
    3a14:	28 17       	cp	r18, r24
    3a16:	39 07       	cpc	r19, r25
    3a18:	4a 07       	cpc	r20, r26
    3a1a:	5b 07       	cpc	r21, r27
    3a1c:	09 f4       	brne	.+2      	; 0x3a20 <_Z17handleLinkBusMsgsv+0xddc>
    3a1e:	60 e0       	ldi	r22, 0x00	; 0
    3a20:	66 23       	and	r22, r22
    3a22:	b9 f0       	breq	.+46     	; 0x3a52 <_Z17handleLinkBusMsgsv+0xe0e>
    3a24:	ce 01       	movw	r24, r28
    3a26:	c1 96       	adiw	r24, 0x31	; 49
    3a28:	61 e0       	ldi	r22, 0x01	; 1
    3a2a:	0e 94 73 48 	call	0x90e6	; 0x90e6 <_Z14txSetFrequencyPmb>
    3a2e:	98 2f       	mov	r25, r24
    3a30:	81 e0       	ldi	r24, 0x01	; 1
    3a32:	89 27       	eor	r24, r25
    3a34:	88 23       	and	r24, r24
    3a36:	69 f0       	breq	.+26     	; 0x3a52 <_Z17handleLinkBusMsgsv+0xe0e>
    3a38:	89 a9       	ldd	r24, Y+49	; 0x31
    3a3a:	9a a9       	ldd	r25, Y+50	; 0x32
    3a3c:	ab a9       	ldd	r26, Y+51	; 0x33
    3a3e:	bc a9       	ldd	r27, Y+52	; 0x34
    3a40:	88 87       	std	Y+8, r24	; 0x08
    3a42:	99 87       	std	Y+9, r25	; 0x09
    3a44:	aa 87       	std	Y+10, r26	; 0x0a
    3a46:	bb 87       	std	Y+11, r27	; 0x0b
    3a48:	80 91 6a 44 	lds	r24, 0x446A	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3a4c:	8f 5f       	subi	r24, 0xFF	; 255
    3a4e:	80 93 6a 44 	sts	0x446A, r24	; 0x80446a <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    3a52:	80 91 3d 44 	lds	r24, 0x443D	; 0x80443d <g_Event_Configuration_Check>
    3a56:	90 91 3e 44 	lds	r25, 0x443E	; 0x80443e <g_Event_Configuration_Check+0x1>
    3a5a:	80 68       	ori	r24, 0x80	; 128
    3a5c:	80 93 3d 44 	sts	0x443D, r24	; 0x80443d <g_Event_Configuration_Check>
    3a60:	90 93 3e 44 	sts	0x443E, r25	; 0x80443e <g_Event_Configuration_Check+0x1>
    3a64:	08 c0       	rjmp	.+16     	; 0x3a76 <_Z17handleLinkBusMsgsv+0xe32>
    3a66:	0e 94 ac 48 	call	0x9158	; 0x9158 <_Z14txGetFrequencyv>
    3a6a:	dc 01       	movw	r26, r24
    3a6c:	cb 01       	movw	r24, r22
    3a6e:	88 87       	std	Y+8, r24	; 0x08
    3a70:	99 87       	std	Y+9, r25	; 0x09
    3a72:	aa 87       	std	Y+10, r26	; 0x0a
    3a74:	bb 87       	std	Y+11, r27	; 0x0b
    3a76:	88 85       	ldd	r24, Y+8	; 0x08
    3a78:	99 85       	ldd	r25, Y+9	; 0x09
    3a7a:	aa 85       	ldd	r26, Y+10	; 0x0a
    3a7c:	bb 85       	ldd	r27, Y+11	; 0x0b
    3a7e:	89 2b       	or	r24, r25
    3a80:	8a 2b       	or	r24, r26
    3a82:	8b 2b       	or	r24, r27
    3a84:	09 f4       	brne	.+2      	; 0x3a88 <_Z17handleLinkBusMsgsv+0xe44>
    3a86:	72 c0       	rjmp	.+228    	; 0x3b6c <_Z17handleLinkBusMsgsv+0xf28>
    3a88:	8b 85       	ldd	r24, Y+11	; 0x0b
    3a8a:	8f 93       	push	r24
    3a8c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a8e:	8f 93       	push	r24
    3a90:	89 85       	ldd	r24, Y+9	; 0x09
    3a92:	8f 93       	push	r24
    3a94:	88 85       	ldd	r24, Y+8	; 0x08
    3a96:	8f 93       	push	r24
    3a98:	85 ed       	ldi	r24, 0xD5	; 213
    3a9a:	90 e4       	ldi	r25, 0x40	; 64
    3a9c:	89 2f       	mov	r24, r25
    3a9e:	8f 93       	push	r24
    3aa0:	85 ed       	ldi	r24, 0xD5	; 213
    3aa2:	90 e4       	ldi	r25, 0x40	; 64
    3aa4:	8f 93       	push	r24
    3aa6:	89 e5       	ldi	r24, 0x59	; 89
    3aa8:	93 e4       	ldi	r25, 0x43	; 67
    3aaa:	89 2f       	mov	r24, r25
    3aac:	8f 93       	push	r24
    3aae:	89 e5       	ldi	r24, 0x59	; 89
    3ab0:	93 e4       	ldi	r25, 0x43	; 67
    3ab2:	8f 93       	push	r24
    3ab4:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    3ab8:	8d b7       	in	r24, 0x3d	; 61
    3aba:	9e b7       	in	r25, 0x3e	; 62
    3abc:	08 96       	adiw	r24, 0x08	; 8
    3abe:	cd bf       	out	0x3d, r28	; 61
    3ac0:	de bf       	out	0x3e, r29	; 62
    3ac2:	49 e5       	ldi	r20, 0x59	; 89
    3ac4:	53 e4       	ldi	r21, 0x43	; 67
    3ac6:	6a ed       	ldi	r22, 0xDA	; 218
    3ac8:	70 e4       	ldi	r23, 0x40	; 64
    3aca:	83 e0       	ldi	r24, 0x03	; 3
    3acc:	90 e0       	ldi	r25, 0x00	; 0
    3ace:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3ad2:	4c c0       	rjmp	.+152    	; 0x3b6c <_Z17handleLinkBusMsgsv+0xf28>
    3ad4:	80 e0       	ldi	r24, 0x00	; 0
    3ad6:	0e 94 41 24 	call	0x4882	; 0x4882 <_Z15externBatStringb>
    3ada:	6e ed       	ldi	r22, 0xDE	; 222
    3adc:	70 e4       	ldi	r23, 0x40	; 64
    3ade:	0e 94 b3 3c 	call	0x7966	; 0x7966 <_Z16lb_broadcast_strPKcS0_>
    3ae2:	45 c0       	rjmp	.+138    	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3ae4:	0e 94 bb 25 	call	0x4b76	; 0x4b76 <_Z12temperatureCv>
    3ae8:	09 2e       	mov	r0, r25
    3aea:	00 0c       	add	r0, r0
    3aec:	aa 0b       	sbc	r26, r26
    3aee:	bb 0b       	sbc	r27, r27
    3af0:	bc 01       	movw	r22, r24
    3af2:	cd 01       	movw	r24, r26
    3af4:	0e 94 b8 4c 	call	0x9970	; 0x9970 <__floatsisf>
    3af8:	dc 01       	movw	r26, r24
    3afa:	cb 01       	movw	r24, r22
    3afc:	09 e5       	ldi	r16, 0x59	; 89
    3afe:	13 e4       	ldi	r17, 0x43	; 67
    3b00:	21 e0       	ldi	r18, 0x01	; 1
    3b02:	44 e0       	ldi	r20, 0x04	; 4
    3b04:	bc 01       	movw	r22, r24
    3b06:	cd 01       	movw	r24, r26
    3b08:	0e 94 85 4e 	call	0x9d0a	; 0x9d0a <dtostrf>
    3b0c:	10 92 5e 43 	sts	0x435E, r1	; 0x80435e <_ZL9g_tempStr+0x5>
    3b10:	63 ee       	ldi	r22, 0xE3	; 227
    3b12:	70 e4       	ldi	r23, 0x40	; 64
    3b14:	89 e5       	ldi	r24, 0x59	; 89
    3b16:	93 e4       	ldi	r25, 0x43	; 67
    3b18:	0e 94 b3 3c 	call	0x7966	; 0x7966 <_Z16lb_broadcast_strPKcS0_>
    3b1c:	28 c0       	rjmp	.+80     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b1e:	48 ee       	ldi	r20, 0xE8	; 232
    3b20:	50 e4       	ldi	r21, 0x40	; 64
    3b22:	6e ee       	ldi	r22, 0xEE	; 238
    3b24:	70 e4       	ldi	r23, 0x40	; 64
    3b26:	83 e0       	ldi	r24, 0x03	; 3
    3b28:	90 e0       	ldi	r25, 0x00	; 0
    3b2a:	0e 94 8a 3c 	call	0x7914	; 0x7914 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3b2e:	1f c0       	rjmp	.+62     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b30:	19 82       	std	Y+1, r1	; 0x01
    3b32:	82 ef       	ldi	r24, 0xF2	; 242
    3b34:	90 e4       	ldi	r25, 0x40	; 64
    3b36:	0e 94 33 3c 	call	0x7866	; 0x7866 <_Z12lb_send_textPc>
    3b3a:	19 c0       	rjmp	.+50     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b3c:	00 00       	nop
    3b3e:	17 c0       	rjmp	.+46     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b40:	00 00       	nop
    3b42:	15 c0       	rjmp	.+42     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b44:	00 00       	nop
    3b46:	13 c0       	rjmp	.+38     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b48:	00 00       	nop
    3b4a:	11 c0       	rjmp	.+34     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b4c:	00 00       	nop
    3b4e:	0f c0       	rjmp	.+30     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b50:	00 00       	nop
    3b52:	0d c0       	rjmp	.+26     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b54:	00 00       	nop
    3b56:	0b c0       	rjmp	.+22     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b58:	00 00       	nop
    3b5a:	09 c0       	rjmp	.+18     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b5c:	00 00       	nop
    3b5e:	07 c0       	rjmp	.+14     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b60:	00 00       	nop
    3b62:	05 c0       	rjmp	.+10     	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b64:	00 00       	nop
    3b66:	03 c0       	rjmp	.+6      	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b68:	00 00       	nop
    3b6a:	01 c0       	rjmp	.+2      	; 0x3b6e <_Z17handleLinkBusMsgsv+0xf2a>
    3b6c:	00 00       	nop
    3b6e:	89 81       	ldd	r24, Y+1	; 0x01
    3b70:	88 23       	and	r24, r24
    3b72:	21 f0       	breq	.+8      	; 0x3b7c <_Z17handleLinkBusMsgsv+0xf38>
    3b74:	88 ef       	ldi	r24, 0xF8	; 248
    3b76:	90 e4       	ldi	r25, 0x40	; 64
    3b78:	0e 94 33 3c 	call	0x7866	; 0x7866 <_Z12lb_send_textPc>
    3b7c:	8c 85       	ldd	r24, Y+12	; 0x0c
    3b7e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3b80:	fc 01       	movw	r30, r24
    3b82:	12 82       	std	Z+2, r1	; 0x02
    3b84:	13 82       	std	Z+3, r1	; 0x03
    3b86:	69 c8       	rjmp	.-3886   	; 0x2c5a <_Z17handleLinkBusMsgsv+0x16>
    3b88:	00 00       	nop
    3b8a:	e4 96       	adiw	r28, 0x34	; 52
    3b8c:	cd bf       	out	0x3d, r28	; 61
    3b8e:	de bf       	out	0x3e, r29	; 62
    3b90:	df 91       	pop	r29
    3b92:	cf 91       	pop	r28
    3b94:	1f 91       	pop	r17
    3b96:	0f 91       	pop	r16
    3b98:	08 95       	ret

00003b9a <_Z12eventEnabledv>:
    3b9a:	cf 93       	push	r28
    3b9c:	df 93       	push	r29
    3b9e:	cd b7       	in	r28, 0x3d	; 61
    3ba0:	de b7       	in	r29, 0x3e	; 62
    3ba2:	28 97       	sbiw	r28, 0x08	; 8
    3ba4:	cd bf       	out	0x3d, r28	; 61
    3ba6:	de bf       	out	0x3e, r29	; 62
    3ba8:	80 e0       	ldi	r24, 0x00	; 0
    3baa:	90 e0       	ldi	r25, 0x00	; 0
    3bac:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    3bb0:	dc 01       	movw	r26, r24
    3bb2:	cb 01       	movw	r24, r22
    3bb4:	89 83       	std	Y+1, r24	; 0x01
    3bb6:	9a 83       	std	Y+2, r25	; 0x02
    3bb8:	ab 83       	std	Y+3, r26	; 0x03
    3bba:	bc 83       	std	Y+4, r27	; 0x04
    3bbc:	20 91 18 44 	lds	r18, 0x4418	; 0x804418 <g_event_finish_epoch>
    3bc0:	30 91 19 44 	lds	r19, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    3bc4:	40 91 1a 44 	lds	r20, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    3bc8:	50 91 1b 44 	lds	r21, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    3bcc:	89 81       	ldd	r24, Y+1	; 0x01
    3bce:	9a 81       	ldd	r25, Y+2	; 0x02
    3bd0:	ab 81       	ldd	r26, Y+3	; 0x03
    3bd2:	bc 81       	ldd	r27, Y+4	; 0x04
    3bd4:	bc 01       	movw	r22, r24
    3bd6:	cd 01       	movw	r24, r26
    3bd8:	0e 94 97 4b 	call	0x972e	; 0x972e <_Z7timeDifmm>
    3bdc:	dc 01       	movw	r26, r24
    3bde:	cb 01       	movw	r24, r22
    3be0:	8d 83       	std	Y+5, r24	; 0x05
    3be2:	9e 83       	std	Y+6, r25	; 0x06
    3be4:	af 83       	std	Y+7, r26	; 0x07
    3be6:	b8 87       	std	Y+8, r27	; 0x08
    3be8:	10 92 23 44 	sts	0x4423, r1	; 0x804423 <_ZL17g_go_to_sleep_now>
    3bec:	8d 81       	ldd	r24, Y+5	; 0x05
    3bee:	9e 81       	ldd	r25, Y+6	; 0x06
    3bf0:	af 81       	ldd	r26, Y+7	; 0x07
    3bf2:	b8 85       	ldd	r27, Y+8	; 0x08
    3bf4:	bb 23       	and	r27, r27
    3bf6:	b4 f0       	brlt	.+44     	; 0x3c24 <_Z12eventEnabledv+0x8a>
    3bf8:	85 e0       	ldi	r24, 0x05	; 5
    3bfa:	90 e0       	ldi	r25, 0x00	; 0
    3bfc:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <_ZL11g_sleepType>
    3c00:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <_ZL11g_sleepType+0x1>
    3c04:	8f ef       	ldi	r24, 0xFF	; 255
    3c06:	9f ef       	ldi	r25, 0xFF	; 255
    3c08:	dc 01       	movw	r26, r24
    3c0a:	80 93 25 44 	sts	0x4425, r24	; 0x804425 <_ZL17g_time_to_wake_up>
    3c0e:	90 93 26 44 	sts	0x4426, r25	; 0x804426 <_ZL17g_time_to_wake_up+0x1>
    3c12:	a0 93 27 44 	sts	0x4427, r26	; 0x804427 <_ZL17g_time_to_wake_up+0x2>
    3c16:	b0 93 28 44 	sts	0x4428, r27	; 0x804428 <_ZL17g_time_to_wake_up+0x3>
    3c1a:	82 e0       	ldi	r24, 0x02	; 2
    3c1c:	80 93 cc 43 	sts	0x43CC, r24	; 0x8043cc <_ZL19g_wifi_enable_delay>
    3c20:	80 e0       	ldi	r24, 0x00	; 0
    3c22:	55 c0       	rjmp	.+170    	; 0x3cce <_Z12eventEnabledv+0x134>
    3c24:	81 e0       	ldi	r24, 0x01	; 1
    3c26:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    3c2a:	20 91 14 44 	lds	r18, 0x4414	; 0x804414 <g_event_start_epoch>
    3c2e:	30 91 15 44 	lds	r19, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    3c32:	40 91 16 44 	lds	r20, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    3c36:	50 91 17 44 	lds	r21, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    3c3a:	89 81       	ldd	r24, Y+1	; 0x01
    3c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c3e:	ab 81       	ldd	r26, Y+3	; 0x03
    3c40:	bc 81       	ldd	r27, Y+4	; 0x04
    3c42:	bc 01       	movw	r22, r24
    3c44:	cd 01       	movw	r24, r26
    3c46:	0e 94 97 4b 	call	0x972e	; 0x972e <_Z7timeDifmm>
    3c4a:	dc 01       	movw	r26, r24
    3c4c:	cb 01       	movw	r24, r22
    3c4e:	8d 83       	std	Y+5, r24	; 0x05
    3c50:	9e 83       	std	Y+6, r25	; 0x06
    3c52:	af 83       	std	Y+7, r26	; 0x07
    3c54:	b8 87       	std	Y+8, r27	; 0x08
    3c56:	8d 81       	ldd	r24, Y+5	; 0x05
    3c58:	9e 81       	ldd	r25, Y+6	; 0x06
    3c5a:	af 81       	ldd	r26, Y+7	; 0x07
    3c5c:	b8 85       	ldd	r27, Y+8	; 0x08
    3c5e:	88 38       	cpi	r24, 0x88	; 136
    3c60:	9f 4f       	sbci	r25, 0xFF	; 255
    3c62:	af 4f       	sbci	r26, 0xFF	; 255
    3c64:	bf 4f       	sbci	r27, 0xFF	; 255
    3c66:	cc f0       	brlt	.+50     	; 0x3c9a <_Z12eventEnabledv+0x100>
    3c68:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL11g_sleepType>
    3c6c:	10 92 19 40 	sts	0x4019, r1	; 0x804019 <_ZL11g_sleepType+0x1>
    3c70:	80 91 14 44 	lds	r24, 0x4414	; 0x804414 <g_event_start_epoch>
    3c74:	90 91 15 44 	lds	r25, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    3c78:	a0 91 16 44 	lds	r26, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    3c7c:	b0 91 17 44 	lds	r27, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    3c80:	0a 97       	sbiw	r24, 0x0a	; 10
    3c82:	a1 09       	sbc	r26, r1
    3c84:	b1 09       	sbc	r27, r1
    3c86:	80 93 25 44 	sts	0x4425, r24	; 0x804425 <_ZL17g_time_to_wake_up>
    3c8a:	90 93 26 44 	sts	0x4426, r25	; 0x804426 <_ZL17g_time_to_wake_up+0x1>
    3c8e:	a0 93 27 44 	sts	0x4427, r26	; 0x804427 <_ZL17g_time_to_wake_up+0x2>
    3c92:	b0 93 28 44 	sts	0x4428, r27	; 0x804428 <_ZL17g_time_to_wake_up+0x3>
    3c96:	81 e0       	ldi	r24, 0x01	; 1
    3c98:	1a c0       	rjmp	.+52     	; 0x3cce <_Z12eventEnabledv+0x134>
    3c9a:	80 91 14 44 	lds	r24, 0x4414	; 0x804414 <g_event_start_epoch>
    3c9e:	90 91 15 44 	lds	r25, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    3ca2:	a0 91 16 44 	lds	r26, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    3ca6:	b0 91 17 44 	lds	r27, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    3caa:	0a 97       	sbiw	r24, 0x0a	; 10
    3cac:	a1 09       	sbc	r26, r1
    3cae:	b1 09       	sbc	r27, r1
    3cb0:	80 93 25 44 	sts	0x4425, r24	; 0x804425 <_ZL17g_time_to_wake_up>
    3cb4:	90 93 26 44 	sts	0x4426, r25	; 0x804426 <_ZL17g_time_to_wake_up+0x1>
    3cb8:	a0 93 27 44 	sts	0x4427, r26	; 0x804427 <_ZL17g_time_to_wake_up+0x2>
    3cbc:	b0 93 28 44 	sts	0x4428, r27	; 0x804428 <_ZL17g_time_to_wake_up+0x3>
    3cc0:	81 e0       	ldi	r24, 0x01	; 1
    3cc2:	90 e0       	ldi	r25, 0x00	; 0
    3cc4:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <_ZL11g_sleepType>
    3cc8:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <_ZL11g_sleepType+0x1>
    3ccc:	81 e0       	ldi	r24, 0x01	; 1
    3cce:	28 96       	adiw	r28, 0x08	; 8
    3cd0:	cd bf       	out	0x3d, r28	; 61
    3cd2:	de bf       	out	0x3e, r29	; 62
    3cd4:	df 91       	pop	r29
    3cd6:	cf 91       	pop	r28
    3cd8:	08 95       	ret

00003cda <_Z13throttleValueh>:
    3cda:	85 31       	cpi	r24, 0x15	; 21
    3cdc:	4c f4       	brge	.+18     	; 0x3cf0 <_Z13throttleValueh+0x16>
    3cde:	08 2e       	mov	r0, r24
    3ce0:	00 0c       	add	r0, r0
    3ce2:	99 0b       	sbc	r25, r25
    3ce4:	85 30       	cpi	r24, 0x05	; 5
    3ce6:	91 05       	cpc	r25, r1
    3ce8:	2c f4       	brge	.+10     	; 0x3cf4 <_Z13throttleValueh+0x1a>
    3cea:	85 e0       	ldi	r24, 0x05	; 5
    3cec:	90 e0       	ldi	r25, 0x00	; 0
    3cee:	02 c0       	rjmp	.+4      	; 0x3cf4 <_Z13throttleValueh+0x1a>
    3cf0:	84 e1       	ldi	r24, 0x14	; 20
    3cf2:	90 e0       	ldi	r25, 0x00	; 0
    3cf4:	28 2f       	mov	r18, r24
    3cf6:	30 e0       	ldi	r19, 0x00	; 0
    3cf8:	50 e0       	ldi	r21, 0x00	; 0
    3cfa:	40 e0       	ldi	r20, 0x00	; 0
    3cfc:	68 ed       	ldi	r22, 0xD8	; 216
    3cfe:	7d e0       	ldi	r23, 0x0D	; 13
    3d00:	80 e0       	ldi	r24, 0x00	; 0
    3d02:	90 e0       	ldi	r25, 0x00	; 0
    3d04:	0e 94 34 4e 	call	0x9c68	; 0x9c68 <__divmodsi4>
    3d08:	ca 01       	movw	r24, r20
    3d0a:	b9 01       	movw	r22, r18
    3d0c:	2a e0       	ldi	r18, 0x0A	; 10
    3d0e:	30 e0       	ldi	r19, 0x00	; 0
    3d10:	40 e0       	ldi	r20, 0x00	; 0
    3d12:	50 e0       	ldi	r21, 0x00	; 0
    3d14:	0e 94 34 4e 	call	0x9c68	; 0x9c68 <__divmodsi4>
    3d18:	ca 01       	movw	r24, r20
    3d1a:	b9 01       	movw	r22, r18
    3d1c:	0e 94 b8 4c 	call	0x9970	; 0x9970 <__floatsisf>
    3d20:	0e 94 87 4c 	call	0x990e	; 0x990e <__fixunssfsi>
    3d24:	cb 01       	movw	r24, r22
    3d26:	08 95       	ret

00003d28 <_Z19syncSystemTimeToRTCv>:
    3d28:	cf 93       	push	r28
    3d2a:	df 93       	push	r29
    3d2c:	00 d0       	rcall	.+0      	; 0x3d2e <_Z19syncSystemTimeToRTCv+0x6>
    3d2e:	cd b7       	in	r28, 0x3d	; 61
    3d30:	de b7       	in	r29, 0x3e	; 62
    3d32:	10 92 21 44 	sts	0x4421, r1	; 0x804421 <g_seconds_transition>
    3d36:	80 91 21 44 	lds	r24, 0x4421	; 0x804421 <g_seconds_transition>
    3d3a:	88 23       	and	r24, r24
    3d3c:	e1 f3       	breq	.-8      	; 0x3d36 <_Z19syncSystemTimeToRTCv+0xe>
    3d3e:	ce 01       	movw	r24, r28
    3d40:	01 96       	adiw	r24, 0x01	; 1
    3d42:	0e 94 c7 28 	call	0x518e	; 0x518e <ds3231_get_epoch>
    3d46:	29 81       	ldd	r18, Y+1	; 0x01
    3d48:	3a 81       	ldd	r19, Y+2	; 0x02
    3d4a:	23 2b       	or	r18, r19
    3d4c:	39 f0       	breq	.+14     	; 0x3d5c <_Z19syncSystemTimeToRTCv+0x34>
    3d4e:	89 81       	ldd	r24, Y+1	; 0x01
    3d50:	9a 81       	ldd	r25, Y+2	; 0x02
    3d52:	0f 90       	pop	r0
    3d54:	0f 90       	pop	r0
    3d56:	df 91       	pop	r29
    3d58:	cf 91       	pop	r28
    3d5a:	08 95       	ret
    3d5c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <set_system_time>
    3d60:	f6 cf       	rjmp	.-20     	; 0x3d4e <_Z19syncSystemTimeToRTCv+0x26>

00003d62 <_Z11launchEventP2SC>:
    3d62:	cf 93       	push	r28
    3d64:	df 93       	push	r29
    3d66:	00 d0       	rcall	.+0      	; 0x3d68 <_Z11launchEventP2SC+0x6>
    3d68:	00 d0       	rcall	.+0      	; 0x3d6a <_Z11launchEventP2SC+0x8>
    3d6a:	cd b7       	in	r28, 0x3d	; 61
    3d6c:	de b7       	in	r29, 0x3e	; 62
    3d6e:	8b 83       	std	Y+3, r24	; 0x03
    3d70:	9c 83       	std	Y+4, r25	; 0x04
    3d72:	8b 81       	ldd	r24, Y+3	; 0x03
    3d74:	9c 81       	ldd	r25, Y+4	; 0x04
    3d76:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <_Z33activateEventUsingCurrentSettingsP2SC>
    3d7a:	89 83       	std	Y+1, r24	; 0x01
    3d7c:	9a 83       	std	Y+2, r25	; 0x02
    3d7e:	8b 81       	ldd	r24, Y+3	; 0x03
    3d80:	9c 81       	ldd	r25, Y+4	; 0x04
    3d82:	fc 01       	movw	r30, r24
    3d84:	80 81       	ld	r24, Z
    3d86:	91 81       	ldd	r25, Z+1	; 0x01
    3d88:	89 2b       	or	r24, r25
    3d8a:	49 f0       	breq	.+18     	; 0x3d9e <_Z11launchEventP2SC+0x3c>
    3d8c:	8b 81       	ldd	r24, Y+3	; 0x03
    3d8e:	9c 81       	ldd	r25, Y+4	; 0x04
    3d90:	fc 01       	movw	r30, r24
    3d92:	80 81       	ld	r24, Z
    3d94:	91 81       	ldd	r25, Z+1	; 0x01
    3d96:	80 93 bf 43 	sts	0x43BF, r24	; 0x8043bf <_ZL18g_last_status_code>
    3d9a:	90 93 c0 43 	sts	0x43C0, r25	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    3d9e:	89 81       	ldd	r24, Y+1	; 0x01
    3da0:	9a 81       	ldd	r25, Y+2	; 0x02
    3da2:	89 2b       	or	r24, r25
    3da4:	39 f0       	breq	.+14     	; 0x3db4 <_Z11launchEventP2SC+0x52>
    3da6:	89 81       	ldd	r24, Y+1	; 0x01
    3da8:	9a 81       	ldd	r25, Y+2	; 0x02
    3daa:	80 93 bd 43 	sts	0x43BD, r24	; 0x8043bd <_ZL17g_last_error_code>
    3dae:	90 93 be 43 	sts	0x43BE, r25	; 0x8043be <_ZL17g_last_error_code+0x1>
    3db2:	04 c0       	rjmp	.+8      	; 0x3dbc <_Z11launchEventP2SC+0x5a>
    3db4:	0e 94 cd 1d 	call	0x3b9a	; 0x3b9a <_Z12eventEnabledv>
    3db8:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <g_event_enabled>
    3dbc:	89 81       	ldd	r24, Y+1	; 0x01
    3dbe:	9a 81       	ldd	r25, Y+2	; 0x02
    3dc0:	24 96       	adiw	r28, 0x04	; 4
    3dc2:	cd bf       	out	0x3d, r28	; 61
    3dc4:	de bf       	out	0x3e, r29	; 62
    3dc6:	df 91       	pop	r29
    3dc8:	cf 91       	pop	r28
    3dca:	08 95       	ret

00003dcc <_Z33activateEventUsingCurrentSettingsP2SC>:
    3dcc:	ef 92       	push	r14
    3dce:	ff 92       	push	r15
    3dd0:	0f 93       	push	r16
    3dd2:	1f 93       	push	r17
    3dd4:	cf 93       	push	r28
    3dd6:	df 93       	push	r29
    3dd8:	40 91 14 44 	lds	r20, 0x4414	; 0x804414 <g_event_start_epoch>
    3ddc:	50 91 15 44 	lds	r21, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    3de0:	60 91 16 44 	lds	r22, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    3de4:	70 91 17 44 	lds	r23, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    3de8:	45 2b       	or	r20, r21
    3dea:	46 2b       	or	r20, r22
    3dec:	47 2b       	or	r20, r23
    3dee:	09 f4       	brne	.+2      	; 0x3df2 <_Z33activateEventUsingCurrentSettingsP2SC+0x26>
    3df0:	6a c1       	rjmp	.+724    	; 0x40c6 <__DATA_REGION_LENGTH__+0xc6>
    3df2:	00 91 14 44 	lds	r16, 0x4414	; 0x804414 <g_event_start_epoch>
    3df6:	10 91 15 44 	lds	r17, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    3dfa:	20 91 16 44 	lds	r18, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    3dfe:	30 91 17 44 	lds	r19, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    3e02:	40 91 18 44 	lds	r20, 0x4418	; 0x804418 <g_event_finish_epoch>
    3e06:	50 91 19 44 	lds	r21, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    3e0a:	60 91 1a 44 	lds	r22, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    3e0e:	70 91 1b 44 	lds	r23, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    3e12:	04 17       	cp	r16, r20
    3e14:	15 07       	cpc	r17, r21
    3e16:	26 07       	cpc	r18, r22
    3e18:	37 07       	cpc	r19, r23
    3e1a:	08 f0       	brcs	.+2      	; 0x3e1e <_Z33activateEventUsingCurrentSettingsP2SC+0x52>
    3e1c:	5d c1       	rjmp	.+698    	; 0x40d8 <__DATA_REGION_LENGTH__+0xd8>
    3e1e:	20 91 10 40 	lds	r18, 0x4010	; 0x804010 <g_on_air_seconds>
    3e22:	30 91 11 40 	lds	r19, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    3e26:	23 2b       	or	r18, r19
    3e28:	09 f4       	brne	.+2      	; 0x3e2c <_Z33activateEventUsingCurrentSettingsP2SC+0x60>
    3e2a:	59 c1       	rjmp	.+690    	; 0x40de <__DATA_REGION_LENGTH__+0xde>
    3e2c:	20 91 12 40 	lds	r18, 0x4012	; 0x804012 <g_off_air_seconds>
    3e30:	30 91 13 40 	lds	r19, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    3e34:	60 91 10 40 	lds	r22, 0x4010	; 0x804010 <g_on_air_seconds>
    3e38:	70 91 11 40 	lds	r23, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    3e3c:	40 91 12 44 	lds	r20, 0x4412	; 0x804412 <g_intra_cycle_delay_time>
    3e40:	50 91 13 44 	lds	r21, 0x4413	; 0x804413 <g_intra_cycle_delay_time+0x1>
    3e44:	26 0f       	add	r18, r22
    3e46:	37 1f       	adc	r19, r23
    3e48:	24 17       	cp	r18, r20
    3e4a:	35 07       	cpc	r19, r21
    3e4c:	0c f4       	brge	.+2      	; 0x3e50 <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    3e4e:	4a c1       	rjmp	.+660    	; 0x40e4 <__DATA_REGION_LENGTH__+0xe4>
    3e50:	20 91 d1 43 	lds	r18, 0x43D1	; 0x8043d1 <g_messages_text>
    3e54:	22 23       	and	r18, r18
    3e56:	09 f4       	brne	.+2      	; 0x3e5a <_Z33activateEventUsingCurrentSettingsP2SC+0x8e>
    3e58:	48 c1       	rjmp	.+656    	; 0x40ea <__DATA_REGION_LENGTH__+0xea>
    3e5a:	20 91 0e 40 	lds	r18, 0x400E	; 0x80400e <g_pattern_codespeed>
    3e5e:	25 30       	cpi	r18, 0x05	; 5
    3e60:	08 f4       	brcc	.+2      	; 0x3e64 <_Z33activateEventUsingCurrentSettingsP2SC+0x98>
    3e62:	46 c1       	rjmp	.+652    	; 0x40f0 <__DATA_REGION_LENGTH__+0xf0>
    3e64:	20 91 0e 40 	lds	r18, 0x400E	; 0x80400e <g_pattern_codespeed>
    3e68:	25 31       	cpi	r18, 0x15	; 21
    3e6a:	08 f0       	brcs	.+2      	; 0x3e6e <_Z33activateEventUsingCurrentSettingsP2SC+0xa2>
    3e6c:	44 c1       	rjmp	.+648    	; 0x40f6 <__DATA_REGION_LENGTH__+0xf6>
    3e6e:	ec 01       	movw	r28, r24
    3e70:	80 91 fb 43 	lds	r24, 0x43FB	; 0x8043fb <g_messages_text+0x2a>
    3e74:	88 23       	and	r24, r24
    3e76:	99 f0       	breq	.+38     	; 0x3e9e <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    3e78:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_id_codespeed>
    3e7c:	88 23       	and	r24, r24
    3e7e:	09 f4       	brne	.+2      	; 0x3e82 <_Z33activateEventUsingCurrentSettingsP2SC+0xb6>
    3e80:	3d c1       	rjmp	.+634    	; 0x40fc <__DATA_REGION_LENGTH__+0xfc>
    3e82:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <g_ID_period_seconds>
    3e86:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <g_ID_period_seconds+0x1>
    3e8a:	89 2b       	or	r24, r25
    3e8c:	09 f4       	brne	.+2      	; 0x3e90 <_Z33activateEventUsingCurrentSettingsP2SC+0xc4>
    3e8e:	39 c1       	rjmp	.+626    	; 0x4102 <__DATA_REGION_LENGTH__+0x102>
    3e90:	0e 94 97 23 	call	0x472e	; 0x472e <_Z15timeNeededForIDv>
    3e94:	80 93 10 44 	sts	0x4410, r24	; 0x804410 <g_time_needed_for_ID>
    3e98:	90 93 11 44 	sts	0x4411, r25	; 0x804411 <g_time_needed_for_ID+0x1>
    3e9c:	04 c0       	rjmp	.+8      	; 0x3ea6 <_Z33activateEventUsingCurrentSettingsP2SC+0xda>
    3e9e:	10 92 10 44 	sts	0x4410, r1	; 0x804410 <g_time_needed_for_ID>
    3ea2:	10 92 11 44 	sts	0x4411, r1	; 0x804411 <g_time_needed_for_ID+0x1>
    3ea6:	10 92 21 44 	sts	0x4421, r1	; 0x804421 <g_seconds_transition>
    3eaa:	80 91 21 44 	lds	r24, 0x4421	; 0x804421 <g_seconds_transition>
    3eae:	88 23       	and	r24, r24
    3eb0:	e1 f3       	breq	.-8      	; 0x3eaa <_Z33activateEventUsingCurrentSettingsP2SC+0xde>
    3eb2:	90 e0       	ldi	r25, 0x00	; 0
    3eb4:	80 e0       	ldi	r24, 0x00	; 0
    3eb6:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    3eba:	00 91 18 44 	lds	r16, 0x4418	; 0x804418 <g_event_finish_epoch>
    3ebe:	10 91 19 44 	lds	r17, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    3ec2:	20 91 1a 44 	lds	r18, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    3ec6:	30 91 1b 44 	lds	r19, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    3eca:	06 17       	cp	r16, r22
    3ecc:	17 07       	cpc	r17, r23
    3ece:	28 07       	cpc	r18, r24
    3ed0:	39 07       	cpc	r19, r25
    3ed2:	50 f4       	brcc	.+20     	; 0x3ee8 <_Z33activateEventUsingCurrentSettingsP2SC+0x11c>
    3ed4:	20 97       	sbiw	r28, 0x00	; 0
    3ed6:	09 f4       	brne	.+2      	; 0x3eda <_Z33activateEventUsingCurrentSettingsP2SC+0x10e>
    3ed8:	17 c1       	rjmp	.+558    	; 0x4108 <__DATA_REGION_LENGTH__+0x108>
    3eda:	8a ef       	ldi	r24, 0xFA	; 250
    3edc:	90 e0       	ldi	r25, 0x00	; 0
    3ede:	88 83       	st	Y, r24
    3ee0:	99 83       	std	Y+1, r25	; 0x01
    3ee2:	90 e0       	ldi	r25, 0x00	; 0
    3ee4:	80 e0       	ldi	r24, 0x00	; 0
    3ee6:	f1 c0       	rjmp	.+482    	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    3ee8:	20 91 14 44 	lds	r18, 0x4414	; 0x804414 <g_event_start_epoch>
    3eec:	30 91 15 44 	lds	r19, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    3ef0:	40 91 16 44 	lds	r20, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    3ef4:	50 91 17 44 	lds	r21, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    3ef8:	0e 94 97 4b 	call	0x972e	; 0x972e <_Z7timeDifmm>
    3efc:	99 23       	and	r25, r25
    3efe:	0c f4       	brge	.+2      	; 0x3f02 <_Z33activateEventUsingCurrentSettingsP2SC+0x136>
    3f00:	d8 c0       	rjmp	.+432    	; 0x40b2 <__DATA_REGION_LENGTH__+0xb2>
    3f02:	00 91 10 40 	lds	r16, 0x4010	; 0x804010 <g_on_air_seconds>
    3f06:	10 91 11 40 	lds	r17, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    3f0a:	20 91 12 40 	lds	r18, 0x4012	; 0x804012 <g_off_air_seconds>
    3f0e:	30 91 13 40 	lds	r19, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    3f12:	02 0f       	add	r16, r18
    3f14:	13 1f       	adc	r17, r19
    3f16:	e0 90 12 44 	lds	r14, 0x4412	; 0x804412 <g_intra_cycle_delay_time>
    3f1a:	f0 90 13 44 	lds	r15, 0x4413	; 0x804413 <g_intra_cycle_delay_time+0x1>
    3f1e:	98 01       	movw	r18, r16
    3f20:	01 2e       	mov	r0, r17
    3f22:	00 0c       	add	r0, r0
    3f24:	44 0b       	sbc	r20, r20
    3f26:	55 0b       	sbc	r21, r21
    3f28:	0e 94 34 4e 	call	0x9c68	; 0x9c68 <__divmodsi4>
    3f2c:	e6 1a       	sub	r14, r22
    3f2e:	f7 0a       	sbc	r15, r23
    3f30:	1e 14       	cp	r1, r14
    3f32:	1f 04       	cpc	r1, r15
    3f34:	cc f5       	brge	.+114    	; 0x3fa8 <_Z33activateEventUsingCurrentSettingsP2SC+0x1dc>
    3f36:	44 27       	eor	r20, r20
    3f38:	55 27       	eor	r21, r21
    3f3a:	4e 19       	sub	r20, r14
    3f3c:	5f 09       	sbc	r21, r15
    3f3e:	05 2e       	mov	r0, r21
    3f40:	00 0c       	add	r0, r0
    3f42:	66 0b       	sbc	r22, r22
    3f44:	77 0b       	sbc	r23, r23
    3f46:	40 93 c5 43 	sts	0x43C5, r20	; 0x8043c5 <_ZL12g_on_the_air>
    3f4a:	50 93 c6 43 	sts	0x43C6, r21	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    3f4e:	60 93 c7 43 	sts	0x43C7, r22	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    3f52:	70 93 c8 43 	sts	0x43C8, r23	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    3f56:	20 97       	sbiw	r28, 0x00	; 0
    3f58:	21 f0       	breq	.+8      	; 0x3f62 <_Z33activateEventUsingCurrentSettingsP2SC+0x196>
    3f5a:	2e ef       	ldi	r18, 0xFE	; 254
    3f5c:	30 e0       	ldi	r19, 0x00	; 0
    3f5e:	28 83       	st	Y, r18
    3f60:	39 83       	std	Y+1, r19	; 0x01
    3f62:	20 91 1c 44 	lds	r18, 0x441C	; 0x80441c <g_event_enabled>
    3f66:	21 11       	cpse	r18, r1
    3f68:	10 c0       	rjmp	.+32     	; 0x3f8a <_Z33activateEventUsingCurrentSettingsP2SC+0x1be>
    3f6a:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    3f6e:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    3f72:	40 91 10 44 	lds	r20, 0x4410	; 0x804410 <g_time_needed_for_ID>
    3f76:	50 91 11 44 	lds	r21, 0x4411	; 0x804411 <g_time_needed_for_ID+0x1>
    3f7a:	8e 0d       	add	r24, r14
    3f7c:	9f 1d       	adc	r25, r15
    3f7e:	84 1b       	sub	r24, r20
    3f80:	95 0b       	sbc	r25, r21
    3f82:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    3f86:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    3f8a:	80 e0       	ldi	r24, 0x00	; 0
    3f8c:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    3f90:	81 e0       	ldi	r24, 0x01	; 1
    3f92:	80 93 1e 44 	sts	0x441E, r24	; 0x80441e <g_event_commenced>
    3f96:	8f e3       	ldi	r24, 0x3F	; 63
    3f98:	94 e4       	ldi	r25, 0x44	; 68
    3f9a:	0e 94 bf 3a 	call	0x757e	; 0x757e <_ZN4leds4initEv>
    3f9e:	10 92 20 44 	sts	0x4420, r1	; 0x804420 <g_waiting_for_next_event>
    3fa2:	90 e0       	ldi	r25, 0x00	; 0
    3fa4:	80 e0       	ldi	r24, 0x00	; 0
    3fa6:	91 c0       	rjmp	.+290    	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    3fa8:	20 91 10 40 	lds	r18, 0x4010	; 0x804010 <g_on_air_seconds>
    3fac:	30 91 11 40 	lds	r19, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    3fb0:	44 27       	eor	r20, r20
    3fb2:	55 27       	eor	r21, r21
    3fb4:	4e 19       	sub	r20, r14
    3fb6:	5f 09       	sbc	r21, r15
    3fb8:	42 17       	cp	r20, r18
    3fba:	53 07       	cpc	r21, r19
    3fbc:	ac f1       	brlt	.+106    	; 0x4028 <__DATA_REGION_LENGTH__+0x28>
    3fbe:	c8 01       	movw	r24, r16
    3fc0:	8e 0d       	add	r24, r14
    3fc2:	9f 1d       	adc	r25, r15
    3fc4:	91 95       	neg	r25
    3fc6:	81 95       	neg	r24
    3fc8:	91 09       	sbc	r25, r1
    3fca:	09 2e       	mov	r0, r25
    3fcc:	00 0c       	add	r0, r0
    3fce:	aa 0b       	sbc	r26, r26
    3fd0:	bb 0b       	sbc	r27, r27
    3fd2:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    3fd6:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    3fda:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    3fde:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    3fe2:	20 97       	sbiw	r28, 0x00	; 0
    3fe4:	21 f0       	breq	.+8      	; 0x3fee <_Z33activateEventUsingCurrentSettingsP2SC+0x222>
    3fe6:	8e ef       	ldi	r24, 0xFE	; 254
    3fe8:	90 e0       	ldi	r25, 0x00	; 0
    3fea:	88 83       	st	Y, r24
    3fec:	99 83       	std	Y+1, r25	; 0x01
    3fee:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    3ff2:	81 11       	cpse	r24, r1
    3ff4:	ca cf       	rjmp	.-108    	; 0x3f8a <_Z33activateEventUsingCurrentSettingsP2SC+0x1be>
    3ff6:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    3ffa:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    3ffe:	40 91 c5 43 	lds	r20, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    4002:	50 91 c6 43 	lds	r21, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    4006:	60 91 c7 43 	lds	r22, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    400a:	70 91 c8 43 	lds	r23, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    400e:	20 91 10 44 	lds	r18, 0x4410	; 0x804410 <g_time_needed_for_ID>
    4012:	30 91 11 44 	lds	r19, 0x4411	; 0x804411 <g_time_needed_for_ID+0x1>
    4016:	84 1b       	sub	r24, r20
    4018:	95 0b       	sbc	r25, r21
    401a:	82 1b       	sub	r24, r18
    401c:	93 0b       	sbc	r25, r19
    401e:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    4022:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    4026:	b1 cf       	rjmp	.-158    	; 0x3f8a <_Z33activateEventUsingCurrentSettingsP2SC+0x1be>
    4028:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    402c:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    4030:	8e 0d       	add	r24, r14
    4032:	9f 1d       	adc	r25, r15
    4034:	09 2e       	mov	r0, r25
    4036:	00 0c       	add	r0, r0
    4038:	aa 0b       	sbc	r26, r26
    403a:	bb 0b       	sbc	r27, r27
    403c:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    4040:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    4044:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    4048:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    404c:	20 97       	sbiw	r28, 0x00	; 0
    404e:	21 f0       	breq	.+8      	; 0x4058 <__DATA_REGION_LENGTH__+0x58>
    4050:	8d ef       	ldi	r24, 0xFD	; 253
    4052:	90 e0       	ldi	r25, 0x00	; 0
    4054:	88 83       	st	Y, r24
    4056:	99 83       	std	Y+1, r25	; 0x01
    4058:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    405c:	81 11       	cpse	r24, r1
    405e:	25 c0       	rjmp	.+74     	; 0x40aa <__DATA_REGION_LENGTH__+0xaa>
    4060:	80 91 10 44 	lds	r24, 0x4410	; 0x804410 <g_time_needed_for_ID>
    4064:	90 91 11 44 	lds	r25, 0x4411	; 0x804411 <g_time_needed_for_ID+0x1>
    4068:	40 91 c5 43 	lds	r20, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    406c:	50 91 c6 43 	lds	r21, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    4070:	60 91 c7 43 	lds	r22, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    4074:	70 91 c8 43 	lds	r23, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    4078:	b0 e0       	ldi	r27, 0x00	; 0
    407a:	a0 e0       	ldi	r26, 0x00	; 0
    407c:	84 17       	cp	r24, r20
    407e:	95 07       	cpc	r25, r21
    4080:	a6 07       	cpc	r26, r22
    4082:	b7 07       	cpc	r27, r23
    4084:	94 f4       	brge	.+36     	; 0x40aa <__DATA_REGION_LENGTH__+0xaa>
    4086:	80 91 c5 43 	lds	r24, 0x43C5	; 0x8043c5 <_ZL12g_on_the_air>
    408a:	90 91 c6 43 	lds	r25, 0x43C6	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    408e:	a0 91 c7 43 	lds	r26, 0x43C7	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    4092:	b0 91 c8 43 	lds	r27, 0x43C8	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    4096:	20 91 10 44 	lds	r18, 0x4410	; 0x804410 <g_time_needed_for_ID>
    409a:	30 91 11 44 	lds	r19, 0x4411	; 0x804411 <g_time_needed_for_ID+0x1>
    409e:	82 1b       	sub	r24, r18
    40a0:	93 0b       	sbc	r25, r19
    40a2:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    40a6:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    40aa:	81 e0       	ldi	r24, 0x01	; 1
    40ac:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    40b0:	6f cf       	rjmp	.-290    	; 0x3f90 <_Z33activateEventUsingCurrentSettingsP2SC+0x1c4>
    40b2:	20 97       	sbiw	r28, 0x00	; 0
    40b4:	21 f0       	breq	.+8      	; 0x40be <__DATA_REGION_LENGTH__+0xbe>
    40b6:	8f ef       	ldi	r24, 0xFF	; 255
    40b8:	90 e0       	ldi	r25, 0x00	; 0
    40ba:	88 83       	st	Y, r24
    40bc:	99 83       	std	Y+1, r25	; 0x01
    40be:	80 e0       	ldi	r24, 0x00	; 0
    40c0:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    40c4:	6c cf       	rjmp	.-296    	; 0x3f9e <_Z33activateEventUsingCurrentSettingsP2SC+0x1d2>
    40c6:	8c ec       	ldi	r24, 0xCC	; 204
    40c8:	90 e0       	ldi	r25, 0x00	; 0
    40ca:	df 91       	pop	r29
    40cc:	cf 91       	pop	r28
    40ce:	1f 91       	pop	r17
    40d0:	0f 91       	pop	r16
    40d2:	ff 90       	pop	r15
    40d4:	ef 90       	pop	r14
    40d6:	08 95       	ret
    40d8:	8d ec       	ldi	r24, 0xCD	; 205
    40da:	90 e0       	ldi	r25, 0x00	; 0
    40dc:	f6 cf       	rjmp	.-20     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    40de:	8b ec       	ldi	r24, 0xCB	; 203
    40e0:	90 e0       	ldi	r25, 0x00	; 0
    40e2:	f3 cf       	rjmp	.-26     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    40e4:	8a ec       	ldi	r24, 0xCA	; 202
    40e6:	90 e0       	ldi	r25, 0x00	; 0
    40e8:	f0 cf       	rjmp	.-32     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    40ea:	89 ec       	ldi	r24, 0xC9	; 201
    40ec:	90 e0       	ldi	r25, 0x00	; 0
    40ee:	ed cf       	rjmp	.-38     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    40f0:	88 ec       	ldi	r24, 0xC8	; 200
    40f2:	90 e0       	ldi	r25, 0x00	; 0
    40f4:	ea cf       	rjmp	.-44     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    40f6:	88 ec       	ldi	r24, 0xC8	; 200
    40f8:	90 e0       	ldi	r25, 0x00	; 0
    40fa:	e7 cf       	rjmp	.-50     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    40fc:	87 ec       	ldi	r24, 0xC7	; 199
    40fe:	90 e0       	ldi	r25, 0x00	; 0
    4100:	e4 cf       	rjmp	.-56     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    4102:	87 ec       	ldi	r24, 0xC7	; 199
    4104:	90 e0       	ldi	r25, 0x00	; 0
    4106:	e1 cf       	rjmp	.-62     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>
    4108:	90 e0       	ldi	r25, 0x00	; 0
    410a:	80 e0       	ldi	r24, 0x00	; 0
    410c:	de cf       	rjmp	.-68     	; 0x40ca <__DATA_REGION_LENGTH__+0xca>

0000410e <_Z8rtc_initv>:
    410e:	cf 93       	push	r28
    4110:	60 e0       	ldi	r22, 0x00	; 0
    4112:	70 e0       	ldi	r23, 0x00	; 0
    4114:	cb 01       	movw	r24, r22
    4116:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    411a:	c1 e0       	ldi	r28, 0x01	; 1
    411c:	68 ee       	ldi	r22, 0xE8	; 232
    411e:	73 e0       	ldi	r23, 0x03	; 3
    4120:	80 e0       	ldi	r24, 0x00	; 0
    4122:	90 e0       	ldi	r25, 0x00	; 0
    4124:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    4128:	88 23       	and	r24, r24
    412a:	31 f0       	breq	.+12     	; 0x4138 <_Z8rtc_initv+0x2a>
    412c:	cc 23       	and	r28, r28
    412e:	51 f0       	breq	.+20     	; 0x4144 <_Z8rtc_initv+0x36>
    4130:	0e 94 bd 2a 	call	0x557a	; 0x557a <ds3231_init>
    4134:	c8 2f       	mov	r28, r24
    4136:	f2 cf       	rjmp	.-28     	; 0x411c <_Z8rtc_initv+0xe>
    4138:	8c ef       	ldi	r24, 0xFC	; 252
    413a:	90 e0       	ldi	r25, 0x00	; 0
    413c:	cc 23       	and	r28, r28
    413e:	11 f0       	breq	.+4      	; 0x4144 <_Z8rtc_initv+0x36>
    4140:	cf 91       	pop	r28
    4142:	08 95       	ret
    4144:	60 e0       	ldi	r22, 0x00	; 0
    4146:	70 e0       	ldi	r23, 0x00	; 0
    4148:	cb 01       	movw	r24, r22
    414a:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    414e:	c1 e0       	ldi	r28, 0x01	; 1
    4150:	68 ee       	ldi	r22, 0xE8	; 232
    4152:	73 e0       	ldi	r23, 0x03	; 3
    4154:	80 e0       	ldi	r24, 0x00	; 0
    4156:	90 e0       	ldi	r25, 0x00	; 0
    4158:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    415c:	88 23       	and	r24, r24
    415e:	51 f0       	breq	.+20     	; 0x4174 <_Z8rtc_initv+0x66>
    4160:	cc 23       	and	r28, r28
    4162:	29 f0       	breq	.+10     	; 0x416e <_Z8rtc_initv+0x60>
    4164:	81 e0       	ldi	r24, 0x01	; 1
    4166:	0e 94 4a 2a 	call	0x5494	; 0x5494 <ds3231_1s_sqw>
    416a:	c8 2f       	mov	r28, r24
    416c:	f1 cf       	rjmp	.-30     	; 0x4150 <_Z8rtc_initv+0x42>
    416e:	90 e0       	ldi	r25, 0x00	; 0
    4170:	80 e0       	ldi	r24, 0x00	; 0
    4172:	e6 cf       	rjmp	.-52     	; 0x4140 <_Z8rtc_initv+0x32>
    4174:	90 e0       	ldi	r25, 0x00	; 0
    4176:	80 e0       	ldi	r24, 0x00	; 0
    4178:	cc 23       	and	r28, r28
    417a:	11 f3       	breq	.-60     	; 0x4140 <_Z8rtc_initv+0x32>
    417c:	8c ef       	ldi	r24, 0xFC	; 252
    417e:	90 e0       	ldi	r25, 0x00	; 0
    4180:	df cf       	rjmp	.-66     	; 0x4140 <_Z8rtc_initv+0x32>

00004182 <_Z25setAntennaStateEnunciatorv>:
    4182:	cf 93       	push	r28
    4184:	df 93       	push	r29
    4186:	1f 92       	push	r1
    4188:	cd b7       	in	r28, 0x3d	; 61
    418a:	de b7       	in	r29, 0x3e	; 62
    418c:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    4190:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    4194:	21 e0       	ldi	r18, 0x01	; 1
    4196:	02 97       	sbiw	r24, 0x02	; 2
    4198:	09 f0       	breq	.+2      	; 0x419c <_Z25setAntennaStateEnunciatorv+0x1a>
    419a:	20 e0       	ldi	r18, 0x00	; 0
    419c:	29 83       	std	Y+1, r18	; 0x01
    419e:	80 91 cf 43 	lds	r24, 0x43CF	; 0x8043cf <_ZL16g_hardware_error>
    41a2:	90 91 d0 43 	lds	r25, 0x43D0	; 0x8043d0 <_ZL16g_hardware_error+0x1>
    41a6:	21 e0       	ldi	r18, 0x01	; 1
    41a8:	89 2b       	or	r24, r25
    41aa:	09 f0       	breq	.+2      	; 0x41ae <_Z25setAntennaStateEnunciatorv+0x2c>
    41ac:	20 e0       	ldi	r18, 0x00	; 0
    41ae:	22 23       	and	r18, r18
    41b0:	c9 f0       	breq	.+50     	; 0x41e4 <_Z25setAntennaStateEnunciatorv+0x62>
    41b2:	89 81       	ldd	r24, Y+1	; 0x01
    41b4:	88 23       	and	r24, r24
    41b6:	39 f0       	breq	.+14     	; 0x41c6 <_Z25setAntennaStateEnunciatorv+0x44>
    41b8:	88 e0       	ldi	r24, 0x08	; 8
    41ba:	90 e0       	ldi	r25, 0x00	; 0
    41bc:	80 93 71 44 	sts	0x4471, r24	; 0x804471 <_ZZ25setAntennaStateEnunciatorvE1b>
    41c0:	90 93 72 44 	sts	0x4472, r25	; 0x804472 <_ZZ25setAntennaStateEnunciatorvE1b+0x1>
    41c4:	06 c0       	rjmp	.+12     	; 0x41d2 <_Z25setAntennaStateEnunciatorv+0x50>
    41c6:	82 e0       	ldi	r24, 0x02	; 2
    41c8:	90 e0       	ldi	r25, 0x00	; 0
    41ca:	80 93 71 44 	sts	0x4471, r24	; 0x804471 <_ZZ25setAntennaStateEnunciatorvE1b>
    41ce:	90 93 72 44 	sts	0x4472, r25	; 0x804472 <_ZZ25setAntennaStateEnunciatorvE1b+0x1>
    41d2:	80 91 71 44 	lds	r24, 0x4471	; 0x804471 <_ZZ25setAntennaStateEnunciatorvE1b>
    41d6:	90 91 72 44 	lds	r25, 0x4472	; 0x804472 <_ZZ25setAntennaStateEnunciatorvE1b+0x1>
    41da:	bc 01       	movw	r22, r24
    41dc:	8f e3       	ldi	r24, 0x3F	; 63
    41de:	94 e4       	ldi	r25, 0x44	; 68
    41e0:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN4leds5blinkE7Blink_t>
    41e4:	89 81       	ldd	r24, Y+1	; 0x01
    41e6:	0f 90       	pop	r0
    41e8:	df 91       	pop	r29
    41ea:	cf 91       	pop	r28
    41ec:	08 95       	ret

000041ee <_Z12suspendEventv>:
    41ee:	10 92 1c 44 	sts	0x441C, r1	; 0x80441c <g_event_enabled>
    41f2:	10 92 c5 43 	sts	0x43C5, r1	; 0x8043c5 <_ZL12g_on_the_air>
    41f6:	10 92 c6 43 	sts	0x43C6, r1	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    41fa:	10 92 c7 43 	sts	0x43C7, r1	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    41fe:	10 92 c8 43 	sts	0x43C8, r1	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    4202:	10 92 1e 44 	sts	0x441E, r1	; 0x80441e <g_event_commenced>
    4206:	80 e0       	ldi	r24, 0x00	; 0
    4208:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    420c:	80 e0       	ldi	r24, 0x00	; 0
    420e:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    4212:	8f e3       	ldi	r24, 0x3F	; 63
    4214:	94 e4       	ldi	r25, 0x44	; 68
    4216:	0e 94 bf 3a 	call	0x757e	; 0x757e <_ZN4leds4initEv>
    421a:	08 95       	ret

0000421c <_Z13startEventNow19EventActionSource_t>:
    421c:	cf 93       	push	r28
    421e:	df 93       	push	r29
    4220:	ec 01       	movw	r28, r24
    4222:	0e 94 10 23 	call	0x4620	; 0x4620 <_Z23clockConfigurationCheckv>
    4226:	20 97       	sbiw	r28, 0x00	; 0
    4228:	91 f4       	brne	.+36     	; 0x424e <_Z13startEventNow19EventActionSource_t+0x32>
    422a:	02 97       	sbiw	r24, 0x02	; 2
    422c:	49 f0       	breq	.+18     	; 0x4240 <_Z13startEventNow19EventActionSource_t+0x24>
    422e:	63 e0       	ldi	r22, 0x03	; 3
    4230:	70 e0       	ldi	r23, 0x00	; 0
    4232:	84 e1       	ldi	r24, 0x14	; 20
    4234:	90 e0       	ldi	r25, 0x00	; 0
    4236:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    423a:	df 91       	pop	r29
    423c:	cf 91       	pop	r28
    423e:	08 95       	ret
    4240:	70 e0       	ldi	r23, 0x00	; 0
    4242:	60 e0       	ldi	r22, 0x00	; 0
    4244:	84 e1       	ldi	r24, 0x14	; 20
    4246:	90 e0       	ldi	r25, 0x00	; 0
    4248:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    424c:	f6 cf       	rjmp	.-20     	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>
    424e:	22 97       	sbiw	r28, 0x02	; 2
    4250:	79 f0       	breq	.+30     	; 0x4270 <_Z13startEventNow19EventActionSource_t+0x54>
    4252:	82 30       	cpi	r24, 0x02	; 2
    4254:	91 05       	cpc	r25, r1
    4256:	51 f1       	breq	.+84     	; 0x42ac <_Z13startEventNow19EventActionSource_t+0x90>
    4258:	81 30       	cpi	r24, 0x01	; 1
    425a:	91 05       	cpc	r25, r1
    425c:	71 f1       	breq	.+92     	; 0x42ba <_Z13startEventNow19EventActionSource_t+0x9e>
    425e:	04 97       	sbiw	r24, 0x04	; 4
    4260:	99 f1       	breq	.+102    	; 0x42c8 <_Z13startEventNow19EventActionSource_t+0xac>
    4262:	63 e0       	ldi	r22, 0x03	; 3
    4264:	70 e0       	ldi	r23, 0x00	; 0
    4266:	84 e1       	ldi	r24, 0x14	; 20
    4268:	90 e0       	ldi	r25, 0x00	; 0
    426a:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    426e:	e5 cf       	rjmp	.-54     	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>
    4270:	82 30       	cpi	r24, 0x02	; 2
    4272:	91 05       	cpc	r25, r1
    4274:	69 f0       	breq	.+26     	; 0x4290 <_Z13startEventNow19EventActionSource_t+0x74>
    4276:	81 30       	cpi	r24, 0x01	; 1
    4278:	91 05       	cpc	r25, r1
    427a:	19 f0       	breq	.+6      	; 0x4282 <_Z13startEventNow19EventActionSource_t+0x66>
    427c:	03 97       	sbiw	r24, 0x03	; 3
    427e:	02 97       	sbiw	r24, 0x02	; 2
    4280:	70 f4       	brcc	.+28     	; 0x429e <_Z13startEventNow19EventActionSource_t+0x82>
    4282:	61 e0       	ldi	r22, 0x01	; 1
    4284:	70 e0       	ldi	r23, 0x00	; 0
    4286:	84 e1       	ldi	r24, 0x14	; 20
    4288:	90 e0       	ldi	r25, 0x00	; 0
    428a:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    428e:	d5 cf       	rjmp	.-86     	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>
    4290:	61 e0       	ldi	r22, 0x01	; 1
    4292:	70 e0       	ldi	r23, 0x00	; 0
    4294:	84 e1       	ldi	r24, 0x14	; 20
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    429c:	ce cf       	rjmp	.-100    	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>
    429e:	63 e0       	ldi	r22, 0x03	; 3
    42a0:	70 e0       	ldi	r23, 0x00	; 0
    42a2:	84 e1       	ldi	r24, 0x14	; 20
    42a4:	90 e0       	ldi	r25, 0x00	; 0
    42a6:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    42aa:	c7 cf       	rjmp	.-114    	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>
    42ac:	61 e0       	ldi	r22, 0x01	; 1
    42ae:	70 e0       	ldi	r23, 0x00	; 0
    42b0:	84 e1       	ldi	r24, 0x14	; 20
    42b2:	90 e0       	ldi	r25, 0x00	; 0
    42b4:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    42b8:	c0 cf       	rjmp	.-128    	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>
    42ba:	62 e0       	ldi	r22, 0x02	; 2
    42bc:	70 e0       	ldi	r23, 0x00	; 0
    42be:	84 e1       	ldi	r24, 0x14	; 20
    42c0:	90 e0       	ldi	r25, 0x00	; 0
    42c2:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    42c6:	b9 cf       	rjmp	.-142    	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>
    42c8:	63 e0       	ldi	r22, 0x03	; 3
    42ca:	70 e0       	ldi	r23, 0x00	; 0
    42cc:	84 e1       	ldi	r24, 0x14	; 20
    42ce:	90 e0       	ldi	r25, 0x00	; 0
    42d0:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <_Z11setupForFox5Fox_t13EventAction_t>
    42d4:	b2 cf       	rjmp	.-156    	; 0x423a <_Z13startEventNow19EventActionSource_t+0x1e>

000042d6 <_Z11setupForFox5Fox_t13EventAction_t>:
    42d6:	ef 92       	push	r14
    42d8:	ff 92       	push	r15
    42da:	0f 93       	push	r16
    42dc:	1f 93       	push	r17
    42de:	cf 93       	push	r28
    42e0:	df 93       	push	r29
    42e2:	00 d0       	rcall	.+0      	; 0x42e4 <_Z11setupForFox5Fox_t13EventAction_t+0xe>
    42e4:	cd b7       	in	r28, 0x3d	; 61
    42e6:	de b7       	in	r29, 0x3e	; 62
    42e8:	8c 01       	movw	r16, r24
    42ea:	7b 01       	movw	r14, r22
    42ec:	44 97       	sbiw	r24, 0x14	; 20
    42ee:	49 f1       	breq	.+82     	; 0x4342 <_Z11setupForFox5Fox_t13EventAction_t+0x6c>
    42f0:	10 92 1c 44 	sts	0x441C, r1	; 0x80441c <g_event_enabled>
    42f4:	10 92 1e 44 	sts	0x441E, r1	; 0x80441e <g_event_commenced>
    42f8:	60 e0       	ldi	r22, 0x00	; 0
    42fa:	8f e3       	ldi	r24, 0x3F	; 63
    42fc:	94 e4       	ldi	r25, 0x44	; 68
    42fe:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    4302:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <_Z19syncSystemTimeToRTCv>
    4306:	01 50       	subi	r16, 0x01	; 1
    4308:	11 09       	sbc	r17, r1
    430a:	03 31       	cpi	r16, 0x13	; 19
    430c:	11 05       	cpc	r17, r1
    430e:	08 f0       	brcs	.+2      	; 0x4312 <_Z11setupForFox5Fox_t13EventAction_t+0x3c>
    4310:	df c0       	rjmp	.+446    	; 0x44d0 <_Z11setupForFox5Fox_t13EventAction_t+0x1fa>
    4312:	02 57       	subi	r16, 0x72	; 114
    4314:	1e 4d       	sbci	r17, 0xDE	; 222
    4316:	f8 01       	movw	r30, r16
    4318:	0c 94 53 4e 	jmp	0x9ca6	; 0x9ca6 <__tablejump2__>
    431c:	b3 21       	and	r27, r3
    431e:	ac 21       	and	r26, r12
    4320:	02 23       	and	r16, r18
    4322:	09 23       	and	r16, r25
    4324:	b8 21       	and	r27, r8
    4326:	68 22       	and	r6, r24
    4328:	e9 21       	and	r30, r9
    432a:	ee 21       	and	r30, r14
    432c:	f5 21       	and	r31, r5
    432e:	fc 21       	and	r31, r12
    4330:	03 22       	and	r0, r19
    4332:	1c 22       	and	r1, r28
    4334:	21 22       	and	r2, r17
    4336:	28 22       	and	r2, r24
    4338:	2f 22       	and	r2, r31
    433a:	36 22       	and	r3, r22
    433c:	4f 22       	and	r4, r31
    433e:	4f 22       	and	r4, r31
    4340:	4f 22       	and	r4, r31
    4342:	e0 91 87 44 	lds	r30, 0x4487	; 0x804487 <g_event>
    4346:	f0 91 88 44 	lds	r31, 0x4488	; 0x804488 <g_event+0x1>
    434a:	ee 0f       	add	r30, r30
    434c:	ff 1f       	adc	r31, r31
    434e:	ee 5d       	subi	r30, 0xDE	; 222
    4350:	ff 4b       	sbci	r31, 0xBF	; 191
    4352:	00 81       	ld	r16, Z
    4354:	11 81       	ldd	r17, Z+1	; 0x01
    4356:	cc cf       	rjmp	.-104    	; 0x42f0 <_Z11setupForFox5Fox_t13EventAction_t+0x1a>
    4358:	8c e3       	ldi	r24, 0x3C	; 60
    435a:	90 e0       	ldi	r25, 0x00	; 0
    435c:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    4360:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    4364:	0b c0       	rjmp	.+22     	; 0x437c <_Z11setupForFox5Fox_t13EventAction_t+0xa6>
    4366:	10 92 12 44 	sts	0x4412, r1	; 0x804412 <g_intra_cycle_delay_time>
    436a:	10 92 13 44 	sts	0x4413, r1	; 0x804413 <g_intra_cycle_delay_time+0x1>
    436e:	06 c0       	rjmp	.+12     	; 0x437c <_Z11setupForFox5Fox_t13EventAction_t+0xa6>
    4370:	80 ef       	ldi	r24, 0xF0	; 240
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    4378:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    437c:	8c e3       	ldi	r24, 0x3C	; 60
    437e:	90 e0       	ldi	r25, 0x00	; 0
    4380:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    4384:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    4388:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    438c:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
    4390:	80 ef       	ldi	r24, 0xF0	; 240
    4392:	90 e0       	ldi	r25, 0x00	; 0
    4394:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <g_off_air_seconds>
    4398:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <g_off_air_seconds+0x1>
    439c:	e1 14       	cp	r14, r1
    439e:	f1 04       	cpc	r15, r1
    43a0:	09 f4       	brne	.+2      	; 0x43a4 <_Z11setupForFox5Fox_t13EventAction_t+0xce>
    43a2:	ab c0       	rjmp	.+342    	; 0x44fa <_Z11setupForFox5Fox_t13EventAction_t+0x224>
    43a4:	81 e0       	ldi	r24, 0x01	; 1
    43a6:	e8 16       	cp	r14, r24
    43a8:	f1 04       	cpc	r15, r1
    43aa:	09 f4       	brne	.+2      	; 0x43ae <_Z11setupForFox5Fox_t13EventAction_t+0xd8>
    43ac:	ba c0       	rjmp	.+372    	; 0x4522 <_Z11setupForFox5Fox_t13EventAction_t+0x24c>
    43ae:	e2 e0       	ldi	r30, 0x02	; 2
    43b0:	ee 16       	cp	r14, r30
    43b2:	f1 04       	cpc	r15, r1
    43b4:	09 f4       	brne	.+2      	; 0x43b8 <_Z11setupForFox5Fox_t13EventAction_t+0xe2>
    43b6:	00 c1       	rjmp	.+512    	; 0x45b8 <_Z11setupForFox5Fox_t13EventAction_t+0x2e2>
    43b8:	8f eb       	ldi	r24, 0xBF	; 191
    43ba:	93 e4       	ldi	r25, 0x43	; 67
    43bc:	0e 94 b1 1e 	call	0x3d62	; 0x3d62 <_Z11launchEventP2SC>
    43c0:	0f 90       	pop	r0
    43c2:	0f 90       	pop	r0
    43c4:	df 91       	pop	r29
    43c6:	cf 91       	pop	r28
    43c8:	1f 91       	pop	r17
    43ca:	0f 91       	pop	r16
    43cc:	ff 90       	pop	r15
    43ce:	ef 90       	pop	r14
    43d0:	08 95       	ret
    43d2:	10 92 12 44 	sts	0x4412, r1	; 0x804412 <g_intra_cycle_delay_time>
    43d6:	10 92 13 44 	sts	0x4413, r1	; 0x804413 <g_intra_cycle_delay_time+0x1>
    43da:	1b c0       	rjmp	.+54     	; 0x4412 <_Z11setupForFox5Fox_t13EventAction_t+0x13c>
    43dc:	8c e0       	ldi	r24, 0x0C	; 12
    43de:	90 e0       	ldi	r25, 0x00	; 0
    43e0:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    43e4:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    43e8:	14 c0       	rjmp	.+40     	; 0x4412 <_Z11setupForFox5Fox_t13EventAction_t+0x13c>
    43ea:	88 e1       	ldi	r24, 0x18	; 24
    43ec:	90 e0       	ldi	r25, 0x00	; 0
    43ee:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    43f2:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    43f6:	0d c0       	rjmp	.+26     	; 0x4412 <_Z11setupForFox5Fox_t13EventAction_t+0x13c>
    43f8:	84 e2       	ldi	r24, 0x24	; 36
    43fa:	90 e0       	ldi	r25, 0x00	; 0
    43fc:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    4400:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    4404:	06 c0       	rjmp	.+12     	; 0x4412 <_Z11setupForFox5Fox_t13EventAction_t+0x13c>
    4406:	80 e3       	ldi	r24, 0x30	; 48
    4408:	90 e0       	ldi	r25, 0x00	; 0
    440a:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    440e:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    4412:	88 e5       	ldi	r24, 0x58	; 88
    4414:	92 e0       	ldi	r25, 0x02	; 2
    4416:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    441a:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    441e:	8c e0       	ldi	r24, 0x0C	; 12
    4420:	90 e0       	ldi	r25, 0x00	; 0
    4422:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    4426:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
    442a:	80 e3       	ldi	r24, 0x30	; 48
    442c:	90 e0       	ldi	r25, 0x00	; 0
    442e:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <g_off_air_seconds>
    4432:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <g_off_air_seconds+0x1>
    4436:	b2 cf       	rjmp	.-156    	; 0x439c <_Z11setupForFox5Fox_t13EventAction_t+0xc6>
    4438:	10 92 12 44 	sts	0x4412, r1	; 0x804412 <g_intra_cycle_delay_time>
    443c:	10 92 13 44 	sts	0x4413, r1	; 0x804413 <g_intra_cycle_delay_time+0x1>
    4440:	1b c0       	rjmp	.+54     	; 0x4478 <_Z11setupForFox5Fox_t13EventAction_t+0x1a2>
    4442:	8c e0       	ldi	r24, 0x0C	; 12
    4444:	90 e0       	ldi	r25, 0x00	; 0
    4446:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    444a:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    444e:	14 c0       	rjmp	.+40     	; 0x4478 <_Z11setupForFox5Fox_t13EventAction_t+0x1a2>
    4450:	88 e1       	ldi	r24, 0x18	; 24
    4452:	90 e0       	ldi	r25, 0x00	; 0
    4454:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    4458:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    445c:	0d c0       	rjmp	.+26     	; 0x4478 <_Z11setupForFox5Fox_t13EventAction_t+0x1a2>
    445e:	84 e2       	ldi	r24, 0x24	; 36
    4460:	90 e0       	ldi	r25, 0x00	; 0
    4462:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    4466:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    446a:	06 c0       	rjmp	.+12     	; 0x4478 <_Z11setupForFox5Fox_t13EventAction_t+0x1a2>
    446c:	80 e3       	ldi	r24, 0x30	; 48
    446e:	90 e0       	ldi	r25, 0x00	; 0
    4470:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    4474:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    4478:	88 e5       	ldi	r24, 0x58	; 88
    447a:	92 e0       	ldi	r25, 0x02	; 2
    447c:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    4480:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    4484:	8c e0       	ldi	r24, 0x0C	; 12
    4486:	90 e0       	ldi	r25, 0x00	; 0
    4488:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    448c:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
    4490:	80 e3       	ldi	r24, 0x30	; 48
    4492:	90 e0       	ldi	r25, 0x00	; 0
    4494:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <g_off_air_seconds>
    4498:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <g_off_air_seconds+0x1>
    449c:	7f cf       	rjmp	.-258    	; 0x439c <_Z11setupForFox5Fox_t13EventAction_t+0xc6>
    449e:	0e 94 ac 48 	call	0x9158	; 0x9158 <_Z14txGetFrequencyv>
    44a2:	0e 94 ed 49 	call	0x93da	; 0x93da <_Z16init_transmitterm>
    44a6:	10 92 12 44 	sts	0x4412, r1	; 0x804412 <g_intra_cycle_delay_time>
    44aa:	10 92 13 44 	sts	0x4413, r1	; 0x804413 <g_intra_cycle_delay_time+0x1>
    44ae:	88 e5       	ldi	r24, 0x58	; 88
    44b0:	92 e0       	ldi	r25, 0x02	; 2
    44b2:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    44b6:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    44ba:	8c e3       	ldi	r24, 0x3C	; 60
    44bc:	90 e0       	ldi	r25, 0x00	; 0
    44be:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    44c2:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
    44c6:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds>
    44ca:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <g_off_air_seconds+0x1>
    44ce:	66 cf       	rjmp	.-308    	; 0x439c <_Z11setupForFox5Fox_t13EventAction_t+0xc6>
    44d0:	10 92 12 44 	sts	0x4412, r1	; 0x804412 <g_intra_cycle_delay_time>
    44d4:	10 92 13 44 	sts	0x4413, r1	; 0x804413 <g_intra_cycle_delay_time+0x1>
    44d8:	88 e5       	ldi	r24, 0x58	; 88
    44da:	92 e0       	ldi	r25, 0x02	; 2
    44dc:	80 93 c9 43 	sts	0x43C9, r24	; 0x8043c9 <_ZL26g_sendID_seconds_countdown>
    44e0:	90 93 ca 43 	sts	0x43CA, r25	; 0x8043ca <_ZL26g_sendID_seconds_countdown+0x1>
    44e4:	8c e3       	ldi	r24, 0x3C	; 60
    44e6:	90 e0       	ldi	r25, 0x00	; 0
    44e8:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    44ec:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
    44f0:	10 92 12 40 	sts	0x4012, r1	; 0x804012 <g_off_air_seconds>
    44f4:	10 92 13 40 	sts	0x4013, r1	; 0x804013 <g_off_air_seconds+0x1>
    44f8:	51 cf       	rjmp	.-350    	; 0x439c <_Z11setupForFox5Fox_t13EventAction_t+0xc6>
    44fa:	10 92 1e 44 	sts	0x441E, r1	; 0x80441e <g_event_commenced>
    44fe:	10 92 1c 44 	sts	0x441C, r1	; 0x80441c <g_event_enabled>
    4502:	10 92 55 44 	sts	0x4455, r1	; 0x804455 <g_use_rtc_for_startstop>
    4506:	10 92 1c 44 	sts	0x441C, r1	; 0x80441c <g_event_enabled>
    450a:	80 e0       	ldi	r24, 0x00	; 0
    450c:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    4510:	60 e0       	ldi	r22, 0x00	; 0
    4512:	8f e3       	ldi	r24, 0x3F	; 63
    4514:	94 e4       	ldi	r25, 0x44	; 68
    4516:	0e 94 ec 37 	call	0x6fd8	; 0x6fd8 <_ZN4leds6setRedEb>
    451a:	80 e0       	ldi	r24, 0x00	; 0
    451c:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    4520:	4f cf       	rjmp	.-354    	; 0x43c0 <_Z11setupForFox5Fox_t13EventAction_t+0xea>
    4522:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <_Z19syncSystemTimeToRTCv>
    4526:	8c 01       	movw	r16, r24
    4528:	90 e0       	ldi	r25, 0x00	; 0
    452a:	80 e0       	ldi	r24, 0x00	; 0
    452c:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    4530:	01 2b       	or	r16, r17
    4532:	89 f5       	brne	.+98     	; 0x4596 <_Z11setupForFox5Fox_t13EventAction_t+0x2c0>
    4534:	60 93 14 44 	sts	0x4414, r22	; 0x804414 <g_event_start_epoch>
    4538:	70 93 15 44 	sts	0x4415, r23	; 0x804415 <g_event_start_epoch+0x1>
    453c:	80 93 16 44 	sts	0x4416, r24	; 0x804416 <g_event_start_epoch+0x2>
    4540:	90 93 17 44 	sts	0x4417, r25	; 0x804417 <g_event_start_epoch+0x3>
    4544:	40 91 14 44 	lds	r20, 0x4414	; 0x804414 <g_event_start_epoch>
    4548:	50 91 15 44 	lds	r21, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    454c:	60 91 16 44 	lds	r22, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    4550:	70 91 17 44 	lds	r23, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    4554:	80 91 18 44 	lds	r24, 0x4418	; 0x804418 <g_event_finish_epoch>
    4558:	90 91 19 44 	lds	r25, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    455c:	a0 91 1a 44 	lds	r26, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    4560:	b0 91 1b 44 	lds	r27, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    4564:	84 17       	cp	r24, r20
    4566:	95 07       	cpc	r25, r21
    4568:	a6 07       	cpc	r26, r22
    456a:	b7 07       	cpc	r27, r23
    456c:	a0 f4       	brcc	.+40     	; 0x4596 <_Z11setupForFox5Fox_t13EventAction_t+0x2c0>
    456e:	80 91 14 44 	lds	r24, 0x4414	; 0x804414 <g_event_start_epoch>
    4572:	90 91 15 44 	lds	r25, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    4576:	a0 91 16 44 	lds	r26, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    457a:	b0 91 17 44 	lds	r27, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    457e:	80 58       	subi	r24, 0x80	; 128
    4580:	9e 4a       	sbci	r25, 0xAE	; 174
    4582:	ae 4f       	sbci	r26, 0xFE	; 254
    4584:	bf 4f       	sbci	r27, 0xFF	; 255
    4586:	80 93 18 44 	sts	0x4418, r24	; 0x804418 <g_event_finish_epoch>
    458a:	90 93 19 44 	sts	0x4419, r25	; 0x804419 <g_event_finish_epoch+0x1>
    458e:	a0 93 1a 44 	sts	0x441A, r26	; 0x80441a <g_event_finish_epoch+0x2>
    4592:	b0 93 1b 44 	sts	0x441B, r27	; 0x80441b <g_event_finish_epoch+0x3>
    4596:	19 82       	std	Y+1, r1	; 0x01
    4598:	1a 82       	std	Y+2, r1	; 0x02
    459a:	ce 01       	movw	r24, r28
    459c:	01 96       	adiw	r24, 0x01	; 1
    459e:	0e 94 b1 1e 	call	0x3d62	; 0x3d62 <_Z11launchEventP2SC>
    45a2:	22 e0       	ldi	r18, 0x02	; 2
    45a4:	20 93 cc 43 	sts	0x43CC, r18	; 0x8043cc <_ZL19g_wifi_enable_delay>
    45a8:	89 2b       	or	r24, r25
    45aa:	09 f0       	breq	.+2      	; 0x45ae <_Z11setupForFox5Fox_t13EventAction_t+0x2d8>
    45ac:	09 cf       	rjmp	.-494    	; 0x43c0 <_Z11setupForFox5Fox_t13EventAction_t+0xea>
    45ae:	8a e4       	ldi	r24, 0x4A	; 74
    45b0:	94 e4       	ldi	r25, 0x44	; 68
    45b2:	0e 94 f5 2e 	call	0x5dea	; 0x5dea <_ZN13EepromManager13saveAllEEPROMEv>
    45b6:	04 cf       	rjmp	.-504    	; 0x43c0 <_Z11setupForFox5Fox_t13EventAction_t+0xea>
    45b8:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <g_pattern_codespeed>
    45bc:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <_Z13throttleValueh>
    45c0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    45c4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    45c8:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <g_on_air_seconds>
    45cc:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    45d0:	09 2e       	mov	r0, r25
    45d2:	00 0c       	add	r0, r0
    45d4:	aa 0b       	sbc	r26, r26
    45d6:	bb 0b       	sbc	r27, r27
    45d8:	80 93 c5 43 	sts	0x43C5, r24	; 0x8043c5 <_ZL12g_on_the_air>
    45dc:	90 93 c6 43 	sts	0x43C6, r25	; 0x8043c6 <_ZL12g_on_the_air+0x1>
    45e0:	a0 93 c7 43 	sts	0x43C7, r26	; 0x8043c7 <_ZL12g_on_the_air+0x2>
    45e4:	b0 93 c8 43 	sts	0x43C8, r27	; 0x8043c8 <_ZL12g_on_the_air+0x3>
    45e8:	81 e0       	ldi	r24, 0x01	; 1
    45ea:	80 93 1e 44 	sts	0x441E, r24	; 0x80441e <g_event_commenced>
    45ee:	2d ef       	ldi	r18, 0xFD	; 253
    45f0:	30 e0       	ldi	r19, 0x00	; 0
    45f2:	20 93 bf 43 	sts	0x43BF, r18	; 0x8043bf <_ZL18g_last_status_code>
    45f6:	30 93 c0 43 	sts	0x43C0, r19	; 0x8043c0 <_ZL18g_last_status_code+0x1>
    45fa:	10 92 55 44 	sts	0x4455, r1	; 0x804455 <g_use_rtc_for_startstop>
    45fe:	80 93 1c 44 	sts	0x441C, r24	; 0x80441c <g_event_enabled>
    4602:	de ce       	rjmp	.-580    	; 0x43c0 <_Z11setupForFox5Fox_t13EventAction_t+0xea>
    4604:	88 e7       	ldi	r24, 0x78	; 120
    4606:	90 e0       	ldi	r25, 0x00	; 0
    4608:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    460c:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    4610:	b5 ce       	rjmp	.-662    	; 0x437c <_Z11setupForFox5Fox_t13EventAction_t+0xa6>
    4612:	84 eb       	ldi	r24, 0xB4	; 180
    4614:	90 e0       	ldi	r25, 0x00	; 0
    4616:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    461a:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
    461e:	ae ce       	rjmp	.-676    	; 0x437c <_Z11setupForFox5Fox_t13EventAction_t+0xa6>

00004620 <_Z23clockConfigurationCheckv>:
    4620:	cf 92       	push	r12
    4622:	df 92       	push	r13
    4624:	ef 92       	push	r14
    4626:	ff 92       	push	r15
    4628:	0f 93       	push	r16
    462a:	1f 93       	push	r17
    462c:	90 e0       	ldi	r25, 0x00	; 0
    462e:	80 e0       	ldi	r24, 0x00	; 0
    4630:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
    4634:	00 91 18 44 	lds	r16, 0x4418	; 0x804418 <g_event_finish_epoch>
    4638:	10 91 19 44 	lds	r17, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    463c:	20 91 1a 44 	lds	r18, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    4640:	30 91 1b 44 	lds	r19, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    4644:	01 30       	cpi	r16, 0x01	; 1
    4646:	16 46       	sbci	r17, 0x66	; 102
    4648:	2e 4e       	sbci	r18, 0xEE	; 238
    464a:	3f 45       	sbci	r19, 0x5F	; 95
    464c:	08 f4       	brcc	.+2      	; 0x4650 <_Z23clockConfigurationCheckv+0x30>
    464e:	54 c0       	rjmp	.+168    	; 0x46f8 <_Z23clockConfigurationCheckv+0xd8>
    4650:	00 91 14 44 	lds	r16, 0x4414	; 0x804414 <g_event_start_epoch>
    4654:	10 91 15 44 	lds	r17, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    4658:	20 91 16 44 	lds	r18, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    465c:	30 91 17 44 	lds	r19, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    4660:	01 30       	cpi	r16, 0x01	; 1
    4662:	16 46       	sbci	r17, 0x66	; 102
    4664:	2e 4e       	sbci	r18, 0xEE	; 238
    4666:	3f 45       	sbci	r19, 0x5F	; 95
    4668:	08 f4       	brcc	.+2      	; 0x466c <_Z23clockConfigurationCheckv+0x4c>
    466a:	4f c0       	rjmp	.+158    	; 0x470a <_Z23clockConfigurationCheckv+0xea>
    466c:	61 30       	cpi	r22, 0x01	; 1
    466e:	26 e6       	ldi	r18, 0x66	; 102
    4670:	72 07       	cpc	r23, r18
    4672:	2e ee       	ldi	r18, 0xEE	; 238
    4674:	82 07       	cpc	r24, r18
    4676:	2f e5       	ldi	r18, 0x5F	; 95
    4678:	92 07       	cpc	r25, r18
    467a:	08 f4       	brcc	.+2      	; 0x467e <_Z23clockConfigurationCheckv+0x5e>
    467c:	49 c0       	rjmp	.+146    	; 0x4710 <_Z23clockConfigurationCheckv+0xf0>
    467e:	00 91 18 44 	lds	r16, 0x4418	; 0x804418 <g_event_finish_epoch>
    4682:	10 91 19 44 	lds	r17, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    4686:	20 91 1a 44 	lds	r18, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    468a:	30 91 1b 44 	lds	r19, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    468e:	c0 90 14 44 	lds	r12, 0x4414	; 0x804414 <g_event_start_epoch>
    4692:	d0 90 15 44 	lds	r13, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    4696:	e0 90 16 44 	lds	r14, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    469a:	f0 90 17 44 	lds	r15, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    469e:	c0 16       	cp	r12, r16
    46a0:	d1 06       	cpc	r13, r17
    46a2:	e2 06       	cpc	r14, r18
    46a4:	f3 06       	cpc	r15, r19
    46a6:	b8 f5       	brcc	.+110    	; 0x4716 <_Z23clockConfigurationCheckv+0xf6>
    46a8:	00 91 18 44 	lds	r16, 0x4418	; 0x804418 <g_event_finish_epoch>
    46ac:	10 91 19 44 	lds	r17, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    46b0:	20 91 1a 44 	lds	r18, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    46b4:	30 91 1b 44 	lds	r19, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    46b8:	06 17       	cp	r16, r22
    46ba:	17 07       	cpc	r17, r23
    46bc:	28 07       	cpc	r18, r24
    46be:	39 07       	cpc	r19, r25
    46c0:	68 f1       	brcs	.+90     	; 0x471c <_Z23clockConfigurationCheckv+0xfc>
    46c2:	00 91 14 44 	lds	r16, 0x4414	; 0x804414 <g_event_start_epoch>
    46c6:	10 91 15 44 	lds	r17, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    46ca:	20 91 16 44 	lds	r18, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    46ce:	30 91 17 44 	lds	r19, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    46d2:	06 17       	cp	r16, r22
    46d4:	17 07       	cpc	r17, r23
    46d6:	28 07       	cpc	r18, r24
    46d8:	39 07       	cpc	r19, r25
    46da:	38 f4       	brcc	.+14     	; 0x46ea <_Z23clockConfigurationCheckv+0xca>
    46dc:	80 91 1c 44 	lds	r24, 0x441C	; 0x80441c <g_event_enabled>
    46e0:	88 23       	and	r24, r24
    46e2:	f9 f0       	breq	.+62     	; 0x4722 <_Z23clockConfigurationCheckv+0x102>
    46e4:	85 e0       	ldi	r24, 0x05	; 5
    46e6:	90 e0       	ldi	r25, 0x00	; 0
    46e8:	09 c0       	rjmp	.+18     	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>
    46ea:	80 91 55 44 	lds	r24, 0x4455	; 0x804455 <g_use_rtc_for_startstop>
    46ee:	88 23       	and	r24, r24
    46f0:	d9 f0       	breq	.+54     	; 0x4728 <_Z23clockConfigurationCheckv+0x108>
    46f2:	81 e0       	ldi	r24, 0x01	; 1
    46f4:	90 e0       	ldi	r25, 0x00	; 0
    46f6:	02 c0       	rjmp	.+4      	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>
    46f8:	82 e0       	ldi	r24, 0x02	; 2
    46fa:	90 e0       	ldi	r25, 0x00	; 0
    46fc:	1f 91       	pop	r17
    46fe:	0f 91       	pop	r16
    4700:	ff 90       	pop	r15
    4702:	ef 90       	pop	r14
    4704:	df 90       	pop	r13
    4706:	cf 90       	pop	r12
    4708:	08 95       	ret
    470a:	82 e0       	ldi	r24, 0x02	; 2
    470c:	90 e0       	ldi	r25, 0x00	; 0
    470e:	f6 cf       	rjmp	.-20     	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>
    4710:	82 e0       	ldi	r24, 0x02	; 2
    4712:	90 e0       	ldi	r25, 0x00	; 0
    4714:	f3 cf       	rjmp	.-26     	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>
    4716:	82 e0       	ldi	r24, 0x02	; 2
    4718:	90 e0       	ldi	r25, 0x00	; 0
    471a:	f0 cf       	rjmp	.-32     	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>
    471c:	82 e0       	ldi	r24, 0x02	; 2
    471e:	90 e0       	ldi	r25, 0x00	; 0
    4720:	ed cf       	rjmp	.-38     	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>
    4722:	83 e0       	ldi	r24, 0x03	; 3
    4724:	90 e0       	ldi	r25, 0x00	; 0
    4726:	ea cf       	rjmp	.-44     	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>
    4728:	84 e0       	ldi	r24, 0x04	; 4
    472a:	90 e0       	ldi	r25, 0x00	; 0
    472c:	e7 cf       	rjmp	.-50     	; 0x46fc <_Z23clockConfigurationCheckv+0xdc>

0000472e <_Z15timeNeededForIDv>:
    472e:	60 91 0d 40 	lds	r22, 0x400D	; 0x80400d <g_id_codespeed>
    4732:	70 e0       	ldi	r23, 0x00	; 0
    4734:	8b ef       	ldi	r24, 0xFB	; 251
    4736:	93 e4       	ldi	r25, 0x43	; 67
    4738:	0e 94 3a 3f 	call	0x7e74	; 0x7e74 <_Z26timeRequiredToSendStrAtWPMPcj>
    473c:	bc 01       	movw	r22, r24
    473e:	90 e0       	ldi	r25, 0x00	; 0
    4740:	80 e0       	ldi	r24, 0x00	; 0
    4742:	0e 94 b6 4c 	call	0x996c	; 0x996c <__floatunsisf>
    4746:	20 e0       	ldi	r18, 0x00	; 0
    4748:	30 e0       	ldi	r19, 0x00	; 0
    474a:	4a e7       	ldi	r20, 0x7A	; 122
    474c:	54 e4       	ldi	r21, 0x44	; 68
    474e:	0e 94 0e 4c 	call	0x981c	; 0x981c <__divsf3>
    4752:	0e 94 87 4c 	call	0x990e	; 0x990e <__fixunssfsi>
    4756:	cb 01       	movw	r24, r22
    4758:	08 95       	ret

0000475a <_Z20eventScheduledForNowv>:

bool eventScheduledForNow(void)
{
    475a:	cf 92       	push	r12
    475c:	df 92       	push	r13
    475e:	ef 92       	push	r14
    4760:	ff 92       	push	r15
    4762:	0f 93       	push	r16
    4764:	1f 93       	push	r17
	time_t now = time(null);	
    4766:	90 e0       	ldi	r25, 0x00	; 0
    4768:	80 e0       	ldi	r24, 0x00	; 0
    476a:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
	bool result = false;
	
	if((now > MINIMUM_VALID_EPOCH) && (g_event_start_epoch > MINIMUM_VALID_EPOCH))
    476e:	61 30       	cpi	r22, 0x01	; 1
    4770:	26 e6       	ldi	r18, 0x66	; 102
    4772:	72 07       	cpc	r23, r18
    4774:	2e ee       	ldi	r18, 0xEE	; 238
    4776:	82 07       	cpc	r24, r18
    4778:	2f e5       	ldi	r18, 0x5F	; 95
    477a:	92 07       	cpc	r25, r18
    477c:	50 f1       	brcs	.+84     	; 0x47d2 <_Z20eventScheduledForNowv+0x78>
    477e:	00 91 14 44 	lds	r16, 0x4414	; 0x804414 <g_event_start_epoch>
    4782:	10 91 15 44 	lds	r17, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    4786:	20 91 16 44 	lds	r18, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    478a:	30 91 17 44 	lds	r19, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    478e:	01 30       	cpi	r16, 0x01	; 1
    4790:	16 46       	sbci	r17, 0x66	; 102
    4792:	2e 4e       	sbci	r18, 0xEE	; 238
    4794:	3f 45       	sbci	r19, 0x5F	; 95
    4796:	30 f1       	brcs	.+76     	; 0x47e4 <_Z20eventScheduledForNowv+0x8a>
	{
		result = ((g_event_start_epoch < now) && (g_event_finish_epoch > now));
    4798:	00 91 14 44 	lds	r16, 0x4414	; 0x804414 <g_event_start_epoch>
    479c:	10 91 15 44 	lds	r17, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    47a0:	20 91 16 44 	lds	r18, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    47a4:	30 91 17 44 	lds	r19, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    47a8:	06 17       	cp	r16, r22
    47aa:	17 07       	cpc	r17, r23
    47ac:	28 07       	cpc	r18, r24
    47ae:	39 07       	cpc	r19, r25
    47b0:	d8 f4       	brcc	.+54     	; 0x47e8 <_Z20eventScheduledForNowv+0x8e>
    47b2:	c0 90 18 44 	lds	r12, 0x4418	; 0x804418 <g_event_finish_epoch>
    47b6:	d0 90 19 44 	lds	r13, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    47ba:	e0 90 1a 44 	lds	r14, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    47be:	f0 90 1b 44 	lds	r15, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    47c2:	21 e0       	ldi	r18, 0x01	; 1
    47c4:	6c 15       	cp	r22, r12
    47c6:	7d 05       	cpc	r23, r13
    47c8:	8e 05       	cpc	r24, r14
    47ca:	9f 05       	cpc	r25, r15
    47cc:	18 f0       	brcs	.+6      	; 0x47d4 <_Z20eventScheduledForNowv+0x7a>
    47ce:	20 e0       	ldi	r18, 0x00	; 0
    47d0:	01 c0       	rjmp	.+2      	; 0x47d4 <_Z20eventScheduledForNowv+0x7a>
}

bool eventScheduledForNow(void)
{
	time_t now = time(null);	
	bool result = false;
    47d2:	20 e0       	ldi	r18, 0x00	; 0
	{
		result = ((g_event_start_epoch < now) && (g_event_finish_epoch > now));
	}
	
	return(result);
}
    47d4:	82 2f       	mov	r24, r18
    47d6:	1f 91       	pop	r17
    47d8:	0f 91       	pop	r16
    47da:	ff 90       	pop	r15
    47dc:	ef 90       	pop	r14
    47de:	df 90       	pop	r13
    47e0:	cf 90       	pop	r12
    47e2:	08 95       	ret
}

bool eventScheduledForNow(void)
{
	time_t now = time(null);	
	bool result = false;
    47e4:	20 e0       	ldi	r18, 0x00	; 0
    47e6:	f6 cf       	rjmp	.-20     	; 0x47d4 <_Z20eventScheduledForNowv+0x7a>
	
	if((now > MINIMUM_VALID_EPOCH) && (g_event_start_epoch > MINIMUM_VALID_EPOCH))
	{
		result = ((g_event_start_epoch < now) && (g_event_finish_epoch > now));
    47e8:	20 e0       	ldi	r18, 0x00	; 0
	}
	
	return(result);
    47ea:	f4 cf       	rjmp	.-24     	; 0x47d4 <_Z20eventScheduledForNowv+0x7a>

000047ec <_Z26eventScheduledForTheFuturev>:
}

bool eventScheduledForTheFuture(void)
{
    47ec:	0f 93       	push	r16
    47ee:	1f 93       	push	r17
	time_t now = time(null);	
    47f0:	90 e0       	ldi	r25, 0x00	; 0
    47f2:	80 e0       	ldi	r24, 0x00	; 0
    47f4:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
	bool result = false;
	
	if(now > MINIMUM_VALID_EPOCH)
    47f8:	61 30       	cpi	r22, 0x01	; 1
    47fa:	26 e6       	ldi	r18, 0x66	; 102
    47fc:	72 07       	cpc	r23, r18
    47fe:	2e ee       	ldi	r18, 0xEE	; 238
    4800:	82 07       	cpc	r24, r18
    4802:	2f e5       	ldi	r18, 0x5F	; 95
    4804:	92 07       	cpc	r25, r18
    4806:	28 f1       	brcs	.+74     	; 0x4852 <_Z26eventScheduledForTheFuturev+0x66>
	{
		result = ((g_event_start_epoch > now) && (g_event_finish_epoch > g_event_start_epoch));
    4808:	00 91 14 44 	lds	r16, 0x4414	; 0x804414 <g_event_start_epoch>
    480c:	10 91 15 44 	lds	r17, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    4810:	20 91 16 44 	lds	r18, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    4814:	30 91 17 44 	lds	r19, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    4818:	60 17       	cp	r22, r16
    481a:	71 07       	cpc	r23, r17
    481c:	82 07       	cpc	r24, r18
    481e:	93 07       	cpc	r25, r19
    4820:	e0 f4       	brcc	.+56     	; 0x485a <_Z26eventScheduledForTheFuturev+0x6e>
    4822:	00 91 18 44 	lds	r16, 0x4418	; 0x804418 <g_event_finish_epoch>
    4826:	10 91 19 44 	lds	r17, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    482a:	20 91 1a 44 	lds	r18, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    482e:	30 91 1b 44 	lds	r19, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    4832:	40 91 14 44 	lds	r20, 0x4414	; 0x804414 <g_event_start_epoch>
    4836:	50 91 15 44 	lds	r21, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    483a:	60 91 16 44 	lds	r22, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    483e:	70 91 17 44 	lds	r23, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    4842:	81 e0       	ldi	r24, 0x01	; 1
    4844:	40 17       	cp	r20, r16
    4846:	51 07       	cpc	r21, r17
    4848:	62 07       	cpc	r22, r18
    484a:	73 07       	cpc	r23, r19
    484c:	18 f0       	brcs	.+6      	; 0x4854 <_Z26eventScheduledForTheFuturev+0x68>
    484e:	80 e0       	ldi	r24, 0x00	; 0
    4850:	01 c0       	rjmp	.+2      	; 0x4854 <_Z26eventScheduledForTheFuturev+0x68>
}

bool eventScheduledForTheFuture(void)
{
	time_t now = time(null);	
	bool result = false;
    4852:	80 e0       	ldi	r24, 0x00	; 0
	{
		result = ((g_event_start_epoch > now) && (g_event_finish_epoch > g_event_start_epoch));
	}
	
	return(result);
}
    4854:	1f 91       	pop	r17
    4856:	0f 91       	pop	r16
    4858:	08 95       	ret
	time_t now = time(null);	
	bool result = false;
	
	if(now > MINIMUM_VALID_EPOCH)
	{
		result = ((g_event_start_epoch > now) && (g_event_finish_epoch > g_event_start_epoch));
    485a:	80 e0       	ldi	r24, 0x00	; 0
	}
	
	return(result);
    485c:	fb cf       	rjmp	.-10     	; 0x4854 <_Z26eventScheduledForTheFuturev+0x68>

0000485e <_Z14eventScheduledv>:
}

bool eventScheduled(void)
{
	time_t now = time(null);	
    485e:	90 e0       	ldi	r25, 0x00	; 0
    4860:	80 e0       	ldi	r24, 0x00	; 0
    4862:	0e 94 30 05 	call	0xa60	; 0xa60 <time>
	bool result = false;
	
	if(now > MINIMUM_VALID_EPOCH)
    4866:	61 30       	cpi	r22, 0x01	; 1
    4868:	76 46       	sbci	r23, 0x66	; 102
    486a:	8e 4e       	sbci	r24, 0xEE	; 238
    486c:	9f 45       	sbci	r25, 0x5F	; 95
    486e:	10 f4       	brcc	.+4      	; 0x4874 <_Z14eventScheduledv+0x16>
}

bool eventScheduled(void)
{
	time_t now = time(null);	
	bool result = false;
    4870:	80 e0       	ldi	r24, 0x00	; 0
	{
		result = eventScheduledForTheFuture() || eventScheduledForNow();
	}
	
	return(result);
}
    4872:	08 95       	ret
	time_t now = time(null);	
	bool result = false;
	
	if(now > MINIMUM_VALID_EPOCH)
	{
		result = eventScheduledForTheFuture() || eventScheduledForNow();
    4874:	0e 94 f6 23 	call	0x47ec	; 0x47ec <_Z26eventScheduledForTheFuturev>
    4878:	81 11       	cpse	r24, r1
    487a:	fb cf       	rjmp	.-10     	; 0x4872 <_Z14eventScheduledv+0x14>
    487c:	0e 94 ad 23 	call	0x475a	; 0x475a <_Z20eventScheduledForNowv>
    4880:	08 95       	ret

00004882 <_Z15externBatStringb>:
}


// Caller must provide a pointer to a string of length 6 or greater.
char* externBatString(bool volts)
{
    4882:	cf 92       	push	r12
    4884:	df 92       	push	r13
    4886:	ef 92       	push	r14
    4888:	ff 92       	push	r15
    488a:	0f 93       	push	r16
    488c:	1f 93       	push	r17
    488e:	cf 93       	push	r28
    4890:	c8 2f       	mov	r28, r24
	static char str[7] = "?";
	char* pstr = str;
	float bat = (float)g_lastConversionResult[EXTERNAL_BATTERY_VOLTAGE];
    4892:	60 91 2c 44 	lds	r22, 0x442C	; 0x80442c <_ZL22g_lastConversionResult>
    4896:	70 91 2d 44 	lds	r23, 0x442D	; 0x80442d <_ZL22g_lastConversionResult+0x1>
    489a:	90 e0       	ldi	r25, 0x00	; 0
    489c:	80 e0       	ldi	r24, 0x00	; 0
    489e:	0e 94 b6 4c 	call	0x996c	; 0x996c <__floatunsisf>
	bat *= 172.;
    48a2:	20 e0       	ldi	r18, 0x00	; 0
    48a4:	30 e0       	ldi	r19, 0x00	; 0
    48a6:	4c e2       	ldi	r20, 0x2C	; 44
    48a8:	53 e4       	ldi	r21, 0x43	; 67
    48aa:	0e 94 6d 4d 	call	0x9ada	; 0x9ada <__mulsf3>
	bat *= 0.0005;
    48ae:	2f e6       	ldi	r18, 0x6F	; 111
    48b0:	32 e1       	ldi	r19, 0x12	; 18
    48b2:	43 e0       	ldi	r20, 0x03	; 3
    48b4:	5a e3       	ldi	r21, 0x3A	; 58
    48b6:	0e 94 6d 4d 	call	0x9ada	; 0x9ada <__mulsf3>
	bat += 1.;
    48ba:	20 e0       	ldi	r18, 0x00	; 0
    48bc:	30 e0       	ldi	r19, 0x00	; 0
    48be:	40 e8       	ldi	r20, 0x80	; 128
    48c0:	5f e3       	ldi	r21, 0x3F	; 63
    48c2:	0e 94 9d 4b 	call	0x973a	; 0x973a <__addsf3>
    48c6:	6b 01       	movw	r12, r22
    48c8:	7c 01       	movw	r14, r24
	
	if((bat >= 0.) && (bat <= 180.))
    48ca:	20 e0       	ldi	r18, 0x00	; 0
    48cc:	30 e0       	ldi	r19, 0x00	; 0
    48ce:	a9 01       	movw	r20, r18
    48d0:	0e 94 68 4d 	call	0x9ad0	; 0x9ad0 <__gesf2>
    48d4:	88 23       	and	r24, r24
    48d6:	64 f1       	brlt	.+88     	; 0x4930 <_Z15externBatStringb+0xae>
    48d8:	20 e0       	ldi	r18, 0x00	; 0
    48da:	30 e0       	ldi	r19, 0x00	; 0
    48dc:	44 e3       	ldi	r20, 0x34	; 52
    48de:	53 e4       	ldi	r21, 0x43	; 67
    48e0:	c7 01       	movw	r24, r14
    48e2:	b6 01       	movw	r22, r12
    48e4:	0e 94 09 4c 	call	0x9812	; 0x9812 <__cmpsf2>
    48e8:	18 16       	cp	r1, r24
    48ea:	64 f1       	brlt	.+88     	; 0x4944 <_Z15externBatStringb+0xc2>
	{
		if(volts)
    48ec:	c1 11       	cpse	r28, r1
    48ee:	0c c0       	rjmp	.+24     	; 0x4908 <_Z15externBatStringb+0x86>
			pstr = trimwhitespace(str);
			return pstr;
		}
		else
		{
			dtostrf(bat, 4, 0, str);		
    48f0:	01 e4       	ldi	r16, 0x41	; 65
    48f2:	10 e4       	ldi	r17, 0x40	; 64
    48f4:	20 e0       	ldi	r18, 0x00	; 0
    48f6:	44 e0       	ldi	r20, 0x04	; 4
    48f8:	c7 01       	movw	r24, r14
    48fa:	b6 01       	movw	r22, r12
    48fc:	0e 94 85 4e 	call	0x9d0a	; 0x9d0a <dtostrf>
			str[5] = '\0';
    4900:	10 92 46 40 	sts	0x4046, r1	; 0x804046 <_ZZ15externBatStringbE3str+0x5>
			return str;
    4904:	c8 01       	movw	r24, r16
    4906:	16 c0       	rjmp	.+44     	; 0x4934 <_Z15externBatStringb+0xb2>
	
	if((bat >= 0.) && (bat <= 180.))
	{
		if(volts)
		{
			dtostrf(bat/10., 5, 1, str);
    4908:	20 e0       	ldi	r18, 0x00	; 0
    490a:	30 e0       	ldi	r19, 0x00	; 0
    490c:	40 e2       	ldi	r20, 0x20	; 32
    490e:	51 e4       	ldi	r21, 0x41	; 65
    4910:	c7 01       	movw	r24, r14
    4912:	b6 01       	movw	r22, r12
    4914:	0e 94 0e 4c 	call	0x981c	; 0x981c <__divsf3>
    4918:	01 e4       	ldi	r16, 0x41	; 65
    491a:	10 e4       	ldi	r17, 0x40	; 64
    491c:	21 e0       	ldi	r18, 0x01	; 1
    491e:	45 e0       	ldi	r20, 0x05	; 5
    4920:	0e 94 85 4e 	call	0x9d0a	; 0x9d0a <dtostrf>
			str[6] = '\0';
    4924:	10 92 47 40 	sts	0x4047, r1	; 0x804047 <_ZZ15externBatStringbE3str+0x6>
			pstr = trimwhitespace(str);
    4928:	c8 01       	movw	r24, r16
    492a:	0e 94 c0 24 	call	0x4980	; 0x4980 <_Z14trimwhitespacePc>
			return pstr;
    492e:	02 c0       	rjmp	.+4      	; 0x4934 <_Z15externBatStringb+0xb2>
			str[5] = '\0';
			return str;
		}
	}
				
	return str;
    4930:	81 e4       	ldi	r24, 0x41	; 65
    4932:	90 e4       	ldi	r25, 0x40	; 64
}
    4934:	cf 91       	pop	r28
    4936:	1f 91       	pop	r17
    4938:	0f 91       	pop	r16
    493a:	ff 90       	pop	r15
    493c:	ef 90       	pop	r14
    493e:	df 90       	pop	r13
    4940:	cf 90       	pop	r12
    4942:	08 95       	ret
			str[5] = '\0';
			return str;
		}
	}
				
	return str;
    4944:	81 e4       	ldi	r24, 0x41	; 65
    4946:	90 e4       	ldi	r25, 0x40	; 64
    4948:	f5 cf       	rjmp	.-22     	; 0x4934 <_Z15externBatStringb+0xb2>

0000494a <_Z7repCharPccc>:
The repChar() function replaces all occurences of \orig with \rep in the passed
character array str.

\returns The repChar() function returns the number of replaced characters. */
int repChar(char *str, char orig, char rep) 
{
    494a:	ff 92       	push	r15
    494c:	0f 93       	push	r16
    494e:	1f 93       	push	r17
    4950:	cf 93       	push	r28
    4952:	df 93       	push	r29
    4954:	f4 2e       	mov	r15, r20
	char *p = str;
	int n = 0;
    4956:	d0 e0       	ldi	r29, 0x00	; 0
    4958:	c0 e0       	ldi	r28, 0x00	; 0
	while((p = strchr(p, orig)) != NULL) 
    495a:	06 2f       	mov	r16, r22
    495c:	10 e0       	ldi	r17, 0x00	; 0
    495e:	b8 01       	movw	r22, r16
    4960:	0e 94 1e 50 	call	0xa03c	; 0xa03c <strchr>
    4964:	fc 01       	movw	r30, r24
    4966:	00 97       	sbiw	r24, 0x00	; 0
    4968:	21 f0       	breq	.+8      	; 0x4972 <_Z7repCharPccc+0x28>
	{
		*p++ = rep;
    496a:	01 96       	adiw	r24, 0x01	; 1
    496c:	f0 82       	st	Z, r15
		n++;
    496e:	21 96       	adiw	r28, 0x01	; 1
\returns The repChar() function returns the number of replaced characters. */
int repChar(char *str, char orig, char rep) 
{
	char *p = str;
	int n = 0;
	while((p = strchr(p, orig)) != NULL) 
    4970:	f6 cf       	rjmp	.-20     	; 0x495e <_Z7repCharPccc+0x14>
	{
		*p++ = rep;
		n++;
	}
	return n;
}
    4972:	ce 01       	movw	r24, r28
    4974:	df 91       	pop	r29
    4976:	cf 91       	pop	r28
    4978:	1f 91       	pop	r17
    497a:	0f 91       	pop	r16
    497c:	ff 90       	pop	r15
    497e:	08 95       	ret

00004980 <_Z14trimwhitespacePc>:

char *trimwhitespace(char *str)
{
    4980:	ef 92       	push	r14
    4982:	ff 92       	push	r15
    4984:	1f 93       	push	r17
    4986:	cf 93       	push	r28
    4988:	df 93       	push	r29
    498a:	ec 01       	movw	r28, r24
    498c:	7e 01       	movw	r14, r28
  char *end;

  // Trim leading space
  while(isspace((unsigned char)*str)) str++;
    498e:	19 91       	ld	r17, Y+
    4990:	81 2f       	mov	r24, r17
    4992:	90 e0       	ldi	r25, 0x00	; 0
    4994:	0e 94 0d 50 	call	0xa01a	; 0xa01a <isspace>
    4998:	89 2b       	or	r24, r25
    499a:	c1 f7       	brne	.-16     	; 0x498c <_Z14trimwhitespacePc+0xc>

  if(*str == '\0')  // All spaces?
    499c:	11 23       	and	r17, r17
    499e:	99 f0       	breq	.+38     	; 0x49c6 <_Z14trimwhitespacePc+0x46>
    return str;

  // Trim trailing space
  end = str + strlen(str) - 1;
    49a0:	e7 01       	movw	r28, r14
    49a2:	09 90       	ld	r0, Y+
    49a4:	00 20       	and	r0, r0
    49a6:	e9 f7       	brne	.-6      	; 0x49a2 <_Z14trimwhitespacePc+0x22>
    49a8:	22 97       	sbiw	r28, 0x02	; 2
  while(end > str && isspace((unsigned char)*end)) end--;
    49aa:	ec 16       	cp	r14, r28
    49ac:	fd 06       	cpc	r15, r29
    49ae:	50 f4       	brcc	.+20     	; 0x49c4 <_Z14trimwhitespacePc+0x44>
    49b0:	88 81       	ld	r24, Y
    49b2:	90 e0       	ldi	r25, 0x00	; 0
    49b4:	0e 94 0d 50 	call	0xa01a	; 0xa01a <isspace>
    49b8:	89 2b       	or	r24, r25
    49ba:	21 f0       	breq	.+8      	; 0x49c4 <_Z14trimwhitespacePc+0x44>
    49bc:	21 97       	sbiw	r28, 0x01	; 1
    49be:	ec 16       	cp	r14, r28
    49c0:	fd 06       	cpc	r15, r29
    49c2:	b1 f7       	brne	.-20     	; 0x49b0 <_Z14trimwhitespacePc+0x30>

  // Write new null terminator character
  end[1] = '\0';
    49c4:	19 82       	std	Y+1, r1	; 0x01

  return str;
    49c6:	c7 01       	movw	r24, r14
    49c8:	df 91       	pop	r29
    49ca:	cf 91       	pop	r28
    49cc:	1f 91       	pop	r17
    49ce:	ff 90       	pop	r15
    49d0:	ef 90       	pop	r14
    49d2:	08 95       	ret

000049d4 <_GLOBAL__sub_I_g_antenna_connect_state>:
Enunciation_t g_enunciator = LED_ONLY;
static volatile bool g_do_powerup_xmsn = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    49d4:	8f e3       	ldi	r24, 0x3F	; 63
    49d6:	94 e4       	ldi	r25, 0x44	; 68
    49d8:	0e 94 a8 36 	call	0x6d50	; 0x6d50 <_ZN4ledsC1Ev>
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    49dc:	64 e6       	ldi	r22, 0x64	; 100
    49de:	70 e0       	ldi	r23, 0x00	; 0
    49e0:	80 e4       	ldi	r24, 0x40	; 64
    49e2:	94 e4       	ldi	r25, 0x44	; 68
    49e4:	0e 94 7d 27 	call	0x4efa	; 0x4efa <_ZN18CircularStringBuffC1Ej>

EepromManager g_ee_mgr;
    49e8:	8a e4       	ldi	r24, 0x4A	; 74
    49ea:	94 e4       	ldi	r25, 0x44	; 68
    49ec:	0e 94 f9 2a 	call	0x55f2	; 0x55f2 <_ZN13EepromManagerC1Ev>

  // Write new null terminator character
  end[1] = '\0';

  return str;
    49f0:	08 95       	ret

000049f2 <_GLOBAL__sub_D_g_antenna_connect_state>:
uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);

EepromManager g_ee_mgr;
    49f2:	8a e4       	ldi	r24, 0x4A	; 74
    49f4:	94 e4       	ldi	r25, 0x44	; 68
    49f6:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <_ZN13EepromManagerD1Ev>
static volatile bool g_do_powerup_xmsn = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
CircularStringBuff g_text_buff = CircularStringBuff(TEXT_BUFF_SIZE);
    49fa:	80 e4       	ldi	r24, 0x40	; 64
    49fc:	94 e4       	ldi	r25, 0x44	; 68
    49fe:	0e 94 95 27 	call	0x4f2a	; 0x4f2a <_ZN18CircularStringBuffD1Ev>
Enunciation_t g_enunciator = LED_ONLY;
static volatile bool g_do_powerup_xmsn = false;

uint16_t g_Event_Configuration_Check = 0;

leds LEDS = leds();
    4a02:	8f e3       	ldi	r24, 0x3F	; 63
    4a04:	94 e4       	ldi	r25, 0x44	; 68
    4a06:	0e 94 a9 36 	call	0x6d52	; 0x6d52 <_ZN4ledsD1Ev>

  // Write new null terminator character
  end[1] = '\0';

  return str;
    4a0a:	08 95       	ret

00004a0c <_ZL16ADC0_SYSTEM_initb>:


static void PORT_init(void)
{
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    4a0c:	e0 e6       	ldi	r30, 0x60	; 96
    4a0e:	f4 e0       	ldi	r31, 0x04	; 4
    4a10:	92 89       	ldd	r25, Z+18	; 0x12
    4a12:	98 7f       	andi	r25, 0xF8	; 248
    4a14:	92 8b       	std	Z+18, r25	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    4a16:	92 89       	ldd	r25, Z+18	; 0x12
    4a18:	94 60       	ori	r25, 0x04	; 4
    4a1a:	92 8b       	std	Z+18, r25	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    4a1c:	93 89       	ldd	r25, Z+19	; 0x13
    4a1e:	98 7f       	andi	r25, 0xF8	; 248
    4a20:	93 8b       	std	Z+19, r25	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    4a22:	93 89       	ldd	r25, Z+19	; 0x13
    4a24:	94 60       	ori	r25, 0x04	; 4
    4a26:	93 8b       	std	Z+19, r25	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    4a28:	94 89       	ldd	r25, Z+20	; 0x14
    4a2a:	98 7f       	andi	r25, 0xF8	; 248
    4a2c:	94 8b       	std	Z+20, r25	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    4a2e:	94 89       	ldd	r25, Z+20	; 0x14
    4a30:	94 60       	ori	r25, 0x04	; 4
    4a32:	94 8b       	std	Z+20, r25	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    4a34:	95 89       	ldd	r25, Z+21	; 0x15
    4a36:	98 7f       	andi	r25, 0xF8	; 248
    4a38:	95 8b       	std	Z+21, r25	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    4a3a:	95 89       	ldd	r25, Z+21	; 0x15
    4a3c:	94 60       	ori	r25, 0x04	; 4
    4a3e:	95 8b       	std	Z+21, r25	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    4a40:	92 89       	ldd	r25, Z+18	; 0x12
    4a42:	97 7f       	andi	r25, 0xF7	; 247
    4a44:	92 8b       	std	Z+18, r25	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    4a46:	93 89       	ldd	r25, Z+19	; 0x13
    4a48:	97 7f       	andi	r25, 0xF7	; 247
    4a4a:	93 8b       	std	Z+19, r25	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    4a4c:	94 89       	ldd	r25, Z+20	; 0x14
    4a4e:	97 7f       	andi	r25, 0xF7	; 247
    4a50:	94 8b       	std	Z+20, r25	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    4a52:	95 89       	ldd	r25, Z+21	; 0x15
    4a54:	97 7f       	andi	r25, 0xF7	; 247
    4a56:	95 8b       	std	Z+21, r25	; 0x15
}

static void VREF0_init(void)
{
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    4a58:	91 e0       	ldi	r25, 0x01	; 1
    4a5a:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
}

static void ADC0_init(bool freerun)
{
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    4a5e:	9a e0       	ldi	r25, 0x0A	; 10
    4a60:	90 93 02 06 	sts	0x0602, r25	; 0x800602 <__TEXT_REGION_LENGTH__+0x7e0602>
	
	if(freerun)
    4a64:	81 11       	cpse	r24, r1
    4a66:	0c c0       	rjmp	.+24     	; 0x4a80 <_ZL16ADC0_SYSTEM_initb+0x74>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    4a68:	e0 e0       	ldi	r30, 0x00	; 0
    4a6a:	f6 e0       	ldi	r31, 0x06	; 6
    4a6c:	81 e0       	ldi	r24, 0x01	; 1
    4a6e:	80 83       	st	Z, r24
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    4a70:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    4a72:	82 e0       	ldi	r24, 0x02	; 2
    4a74:	90 e0       	ldi	r25, 0x00	; 0
    4a76:	80 93 73 44 	sts	0x4473, r24	; 0x804473 <_ZL20g_adc_initialization>
    4a7a:	90 93 74 44 	sts	0x4474, r25	; 0x804474 <_ZL20g_adc_initialization+0x1>
static void ADC0_SYSTEM_init(bool freerun)
{
	PORT_init();
	VREF0_init();
	ADC0_init(freerun);
}
    4a7e:	08 95       	ret
{
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
	
	if(freerun)
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    4a80:	e0 e0       	ldi	r30, 0x00	; 0
    4a82:	f6 e0       	ldi	r31, 0x06	; 6
    4a84:	83 e0       	ldi	r24, 0x03	; 3
    4a86:	80 83       	st	Z, r24
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    4a88:	81 e0       	ldi	r24, 0x01	; 1
    4a8a:	84 87       	std	Z+12, r24	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    4a8c:	82 87       	std	Z+10, r24	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    4a8e:	81 e0       	ldi	r24, 0x01	; 1
    4a90:	90 e0       	ldi	r25, 0x00	; 0
    4a92:	80 93 73 44 	sts	0x4473, r24	; 0x804473 <_ZL20g_adc_initialization>
    4a96:	90 93 74 44 	sts	0x4474, r25	; 0x804474 <_ZL20g_adc_initialization+0x1>
    4a9a:	08 95       	ret

00004a9c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
	switch(chan)
    4a9c:	82 30       	cpi	r24, 0x02	; 2
    4a9e:	91 05       	cpc	r25, r1
    4aa0:	91 f1       	breq	.+100    	; 0x4b06 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x6a>
    4aa2:	90 f4       	brcc	.+36     	; 0x4ac8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x2c>
    4aa4:	00 97       	sbiw	r24, 0x00	; 0
    4aa6:	11 f1       	breq	.+68     	; 0x4aec <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x50>
    4aa8:	01 97       	sbiw	r24, 0x01	; 1
    4aaa:	09 f0       	breq	.+2      	; 0x4aae <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x12>
    4aac:	46 c0       	rjmp	.+140    	; 0x4b3a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9e>
		}
		break;
		
		case ADCExternalBatteryVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    4aae:	80 91 73 44 	lds	r24, 0x4473	; 0x804473 <_ZL20g_adc_initialization>
    4ab2:	90 91 74 44 	lds	r25, 0x4474	; 0x804474 <_ZL20g_adc_initialization+0x1>
    4ab6:	02 97       	sbiw	r24, 0x02	; 2
    4ab8:	19 f0       	breq	.+6      	; 0x4ac0 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x24>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    4aba:	80 e0       	ldi	r24, 0x00	; 0
    4abc:	0e 94 06 25 	call	0x4a0c	; 0x4a0c <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN3_gc;
    4ac0:	83 e0       	ldi	r24, 0x03	; 3
    4ac2:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
		}
		break;
    4ac6:	08 95       	ret
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
	switch(chan)
    4ac8:	83 30       	cpi	r24, 0x03	; 3
    4aca:	91 05       	cpc	r25, r1
    4acc:	49 f1       	breq	.+82     	; 0x4b20 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x84>
    4ace:	04 97       	sbiw	r24, 0x04	; 4
    4ad0:	a1 f5       	brne	.+104    	; 0x4b3a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9e>
		}
		break;
		
		case ADCTemperature:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    4ad2:	80 91 73 44 	lds	r24, 0x4473	; 0x804473 <_ZL20g_adc_initialization>
    4ad6:	90 91 74 44 	lds	r25, 0x4474	; 0x804474 <_ZL20g_adc_initialization+0x1>
    4ada:	02 97       	sbiw	r24, 0x02	; 2
    4adc:	19 f0       	breq	.+6      	; 0x4ae4 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x48>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    4ade:	80 e0       	ldi	r24, 0x00	; 0
    4ae0:	0e 94 06 25 	call	0x4a0c	; 0x4a0c <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    4ae4:	82 e4       	ldi	r24, 0x42	; 66
    4ae6:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
		}
		break;
    4aea:	08 95       	ret
{
	switch(chan)
	{
		case ADCAudioInput:
		{
			if(g_adc_initialization != ADC_FREE_RUN_INITIALIZED)
    4aec:	80 91 73 44 	lds	r24, 0x4473	; 0x804473 <_ZL20g_adc_initialization>
    4af0:	90 91 74 44 	lds	r25, 0x4474	; 0x804474 <_ZL20g_adc_initialization+0x1>
    4af4:	01 97       	sbiw	r24, 0x01	; 1
    4af6:	19 f0       	breq	.+6      	; 0x4afe <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x62>
			{
				ADC0_SYSTEM_init(FREE_RUNNING); 
    4af8:	81 e0       	ldi	r24, 0x01	; 1
    4afa:	0e 94 06 25 	call	0x4a0c	; 0x4a0c <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
    4afe:	82 e0       	ldi	r24, 0x02	; 2
    4b00:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
		}
		break;
    4b04:	08 95       	ret
		}
		break;
		
		case ADC12VRegulatedVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    4b06:	80 91 73 44 	lds	r24, 0x4473	; 0x804473 <_ZL20g_adc_initialization>
    4b0a:	90 91 74 44 	lds	r25, 0x4474	; 0x804474 <_ZL20g_adc_initialization+0x1>
    4b0e:	02 97       	sbiw	r24, 0x02	; 2
    4b10:	19 f0       	breq	.+6      	; 0x4b18 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x7c>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    4b12:	80 e0       	ldi	r24, 0x00	; 0
    4b14:	0e 94 06 25 	call	0x4a0c	; 0x4a0c <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
    4b18:	84 e0       	ldi	r24, 0x04	; 4
    4b1a:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
		}
		break;
    4b1e:	08 95       	ret
		
		case ADCTXAdjustableVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    4b20:	80 91 73 44 	lds	r24, 0x4473	; 0x804473 <_ZL20g_adc_initialization>
    4b24:	90 91 74 44 	lds	r25, 0x4474	; 0x804474 <_ZL20g_adc_initialization+0x1>
    4b28:	02 97       	sbiw	r24, 0x02	; 2
    4b2a:	19 f0       	breq	.+6      	; 0x4b32 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    4b2c:	80 e0       	ldi	r24, 0x00	; 0
    4b2e:	0e 94 06 25 	call	0x4a0c	; 0x4a0c <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
    4b32:	85 e0       	ldi	r24, 0x05	; 5
    4b34:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
		}
		break;
    4b38:	08 95       	ret
	ADC0_init(freerun);
}

static void ADC0_SYSTEM_shutdown(void)
{
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    4b3a:	e0 e0       	ldi	r30, 0x00	; 0
    4b3c:	f6 e0       	ldi	r31, 0x06	; 6
    4b3e:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    4b40:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    4b42:	10 92 73 44 	sts	0x4473, r1	; 0x804473 <_ZL20g_adc_initialization>
    4b46:	10 92 74 44 	sts	0x4474, r1	; 0x804474 <_ZL20g_adc_initialization+0x1>
		{
			ADC0_SYSTEM_shutdown();
		}
		break;	
	}
}
    4b4a:	08 95       	ret

00004b4c <_Z20ADC0_startConversionv>:

void ADC0_startConversion(void)
{
	if(g_adc_initialization != ADC_NOT_INITIALIZED)
    4b4c:	80 91 73 44 	lds	r24, 0x4473	; 0x804473 <_ZL20g_adc_initialization>
    4b50:	90 91 74 44 	lds	r25, 0x4474	; 0x804474 <_ZL20g_adc_initialization+0x1>
    4b54:	89 2b       	or	r24, r25
    4b56:	29 f0       	breq	.+10     	; 0x4b62 <_Z20ADC0_startConversionv+0x16>
	{
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    4b58:	e0 e0       	ldi	r30, 0x00	; 0
    4b5a:	f6 e0       	ldi	r31, 0x06	; 6
    4b5c:	14 86       	std	Z+12, r1	; 0x0c
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    4b5e:	81 e0       	ldi	r24, 0x01	; 1
    4b60:	82 87       	std	Z+10, r24	; 0x0a
	}
}
    4b62:	08 95       	ret

00004b64 <_Z19ADC0_conversionDonev>:

bool ADC0_conversionDone(void)
{
	/* Check if the conversion is done  */
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
    4b64:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
}
    4b68:	81 70       	andi	r24, 0x01	; 1
    4b6a:	08 95       	ret

00004b6c <_Z9ADC0_readv>:

int ADC0_read(void)
{
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    4b6c:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    4b70:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
}
    4b74:	08 95       	ret

00004b76 <_Z12temperatureCv>:

int16_t temperatureC(void)
{
    4b76:	cf 92       	push	r12
    4b78:	df 92       	push	r13
    4b7a:	ff 92       	push	r15
    4b7c:	0f 93       	push	r16
    4b7e:	1f 93       	push	r17
    4b80:	cf 93       	push	r28
    4b82:	df 93       	push	r29
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    4b84:	e0 e0       	ldi	r30, 0x00	; 0
    4b86:	f1 e1       	ldi	r31, 0x11	; 17
    4b88:	c6 81       	ldd	r28, Z+6	; 0x06
    4b8a:	d7 81       	ldd	r29, Z+7	; 0x07
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    4b8c:	04 81       	ldd	r16, Z+4	; 0x04
    4b8e:	15 81       	ldd	r17, Z+5	; 0x05
	static uint32_t wait = 10000;
	uint16_t adc_reading;
	int16_t temperature_in_C = -273.15;
	uint8_t holdMux;
	
	holdMux = ADC0.MUXPOS;
    4b90:	0f 2e       	mov	r0, r31
    4b92:	c1 2c       	mov	r12, r1
    4b94:	f6 e0       	ldi	r31, 0x06	; 6
    4b96:	df 2e       	mov	r13, r31
    4b98:	f0 2d       	mov	r31, r0
    4b9a:	f6 01       	movw	r30, r12
    4b9c:	f0 84       	ldd	r15, Z+8	; 0x08
	ADC0_SYSTEM_init(SINGLE_CONVERSION);
    4b9e:	80 e0       	ldi	r24, 0x00	; 0
    4ba0:	0e 94 06 25 	call	0x4a0c	; 0x4a0c <_ZL16ADC0_SYSTEM_initb>
	ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    4ba4:	82 e4       	ldi	r24, 0x42	; 66
    4ba6:	f6 01       	movw	r30, r12
    4ba8:	80 87       	std	Z+8, r24	; 0x08
	ADC0_startConversion();
    4baa:	0e 94 a6 25 	call	0x4b4c	; 0x4b4c <_Z20ADC0_startConversionv>
	
	while((!ADC0_conversionDone()) && wait--);
    4bae:	0e 94 b2 25 	call	0x4b64	; 0x4b64 <_Z19ADC0_conversionDonev>
    4bb2:	81 11       	cpse	r24, r1
    4bb4:	1a c0       	rjmp	.+52     	; 0x4bea <_Z12temperatureCv+0x74>
    4bb6:	80 91 48 40 	lds	r24, 0x4048	; 0x804048 <_ZZ12temperatureCvE4wait>
    4bba:	90 91 49 40 	lds	r25, 0x4049	; 0x804049 <_ZZ12temperatureCvE4wait+0x1>
    4bbe:	a0 91 4a 40 	lds	r26, 0x404A	; 0x80404a <_ZZ12temperatureCvE4wait+0x2>
    4bc2:	b0 91 4b 40 	lds	r27, 0x404B	; 0x80404b <_ZZ12temperatureCvE4wait+0x3>
    4bc6:	ac 01       	movw	r20, r24
    4bc8:	bd 01       	movw	r22, r26
    4bca:	41 50       	subi	r20, 0x01	; 1
    4bcc:	51 09       	sbc	r21, r1
    4bce:	61 09       	sbc	r22, r1
    4bd0:	71 09       	sbc	r23, r1
    4bd2:	40 93 48 40 	sts	0x4048, r20	; 0x804048 <_ZZ12temperatureCvE4wait>
    4bd6:	50 93 49 40 	sts	0x4049, r21	; 0x804049 <_ZZ12temperatureCvE4wait+0x1>
    4bda:	60 93 4a 40 	sts	0x404A, r22	; 0x80404a <_ZZ12temperatureCvE4wait+0x2>
    4bde:	70 93 4b 40 	sts	0x404B, r23	; 0x80404b <_ZZ12temperatureCvE4wait+0x3>
    4be2:	89 2b       	or	r24, r25
    4be4:	8a 2b       	or	r24, r26
    4be6:	8b 2b       	or	r24, r27
    4be8:	11 f7       	brne	.-60     	; 0x4bae <_Z12temperatureCv+0x38>
	
	if(wait)
    4bea:	80 91 48 40 	lds	r24, 0x4048	; 0x804048 <_ZZ12temperatureCvE4wait>
    4bee:	90 91 49 40 	lds	r25, 0x4049	; 0x804049 <_ZZ12temperatureCvE4wait+0x1>
    4bf2:	a0 91 4a 40 	lds	r26, 0x404A	; 0x80404a <_ZZ12temperatureCvE4wait+0x2>
    4bf6:	b0 91 4b 40 	lds	r27, 0x404B	; 0x80404b <_ZZ12temperatureCvE4wait+0x3>
    4bfa:	89 2b       	or	r24, r25
    4bfc:	8a 2b       	or	r24, r26
    4bfe:	8b 2b       	or	r24, r27
    4c00:	21 f1       	breq	.+72     	; 0x4c4a <_Z12temperatureCv+0xd4>
	{
		adc_reading = ADC0.RES;
    4c02:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    4c06:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
		int32_t temp = sigrow_offset - adc_reading;
    4c0a:	9e 01       	movw	r18, r28
    4c0c:	28 1b       	sub	r18, r24
    4c0e:	39 0b       	sbc	r19, r25
		temp *= sigrow_slope; // Result will overflow 16-bit variable
    4c10:	d8 01       	movw	r26, r16
    4c12:	0e 94 5c 4e 	call	0x9cb8	; 0x9cb8 <__umulhisi3>
		temp += 0x0800; // Add 4096/2 to get correct rounding on division below
    4c16:	dc 01       	movw	r26, r24
    4c18:	cb 01       	movw	r24, r22
    4c1a:	98 5f       	subi	r25, 0xF8	; 248
    4c1c:	af 4f       	sbci	r26, 0xFF	; 255
    4c1e:	bf 4f       	sbci	r27, 0xFF	; 255
		temp >>= 12; // Round off to nearest degree in Kelvin, by dividing with 2^12 (4096)
    4c20:	07 2e       	mov	r0, r23
    4c22:	7c e0       	ldi	r23, 0x0C	; 12
    4c24:	b5 95       	asr	r27
    4c26:	a7 95       	ror	r26
    4c28:	97 95       	ror	r25
    4c2a:	87 95       	ror	r24
    4c2c:	7a 95       	dec	r23
    4c2e:	d1 f7       	brne	.-12     	; 0x4c24 <_Z12temperatureCv+0xae>
    4c30:	70 2d       	mov	r23, r0
		temperature_in_C += (int16_t)temp;
    4c32:	81 51       	subi	r24, 0x11	; 17
    4c34:	91 40       	sbci	r25, 0x01	; 1
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
    4c36:	f0 92 08 06 	sts	0x0608, r15	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
	
	return(temperature_in_C);
}
    4c3a:	df 91       	pop	r29
    4c3c:	cf 91       	pop	r28
    4c3e:	1f 91       	pop	r17
    4c40:	0f 91       	pop	r16
    4c42:	ff 90       	pop	r15
    4c44:	df 90       	pop	r13
    4c46:	cf 90       	pop	r12
    4c48:	08 95       	ret
{
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
	static uint32_t wait = 10000;
	uint16_t adc_reading;
	int16_t temperature_in_C = -273.15;
    4c4a:	8f ee       	ldi	r24, 0xEF	; 239
    4c4c:	9e ef       	ldi	r25, 0xFE	; 254
    4c4e:	f3 cf       	rjmp	.-26     	; 0x4c36 <_Z12temperatureCv+0xc0>

00004c50 <__vector_24>:
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
	g_adc_initialization = ADC_NOT_INITIALIZED;
}

ISR(ADC0_RESRDY_vect)
{
    4c50:	1f 92       	push	r1
    4c52:	0f 92       	push	r0
    4c54:	0f b6       	in	r0, 0x3f	; 63
    4c56:	0f 92       	push	r0
    4c58:	11 24       	eor	r1, r1
    4c5a:	0b b6       	in	r0, 0x3b	; 59
    4c5c:	0f 92       	push	r0
    4c5e:	2f 93       	push	r18
    4c60:	3f 93       	push	r19
    4c62:	4f 93       	push	r20
    4c64:	5f 93       	push	r21
    4c66:	6f 93       	push	r22
    4c68:	7f 93       	push	r23
    4c6a:	8f 93       	push	r24
    4c6c:	9f 93       	push	r25
    4c6e:	af 93       	push	r26
    4c70:	bf 93       	push	r27
    4c72:	ef 93       	push	r30
    4c74:	ff 93       	push	r31
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
}

int ADC0_read(void)
{
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    4c76:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
    4c7a:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
ISR(ADC0_RESRDY_vect)
{
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    4c7e:	85 e7       	ldi	r24, 0x75	; 117
    4c80:	94 e4       	ldi	r25, 0x44	; 68
    4c82:	0e 94 b6 34 	call	0x696c	; 0x696c <_ZN8Goertzel9DataPointEi>
    4c86:	81 11       	cpse	r24, r1
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    4c88:	10 92 0c 06 	sts	0x060C, r1	; 0x80060c <__TEXT_REGION_LENGTH__+0x7e060c>
	}
    4c8c:	ff 91       	pop	r31
    4c8e:	ef 91       	pop	r30
    4c90:	bf 91       	pop	r27
    4c92:	af 91       	pop	r26
    4c94:	9f 91       	pop	r25
    4c96:	8f 91       	pop	r24
    4c98:	7f 91       	pop	r23
    4c9a:	6f 91       	pop	r22
    4c9c:	5f 91       	pop	r21
    4c9e:	4f 91       	pop	r20
    4ca0:	3f 91       	pop	r19
    4ca2:	2f 91       	pop	r18
    4ca4:	0f 90       	pop	r0
    4ca6:	0b be       	out	0x3b, r0	; 59
    4ca8:	0f 90       	pop	r0
    4caa:	0f be       	out	0x3f, r0	; 63
    4cac:	0f 90       	pop	r0
    4cae:	1f 90       	pop	r1
    4cb0:	18 95       	reti

00004cb2 <_GLOBAL__sub_I_g_adcVal>:
    4cb2:	0f 93       	push	r16
    4cb4:	1f 93       	push	r17
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    4cb6:	00 e0       	ldi	r16, 0x00	; 0
    4cb8:	10 e4       	ldi	r17, 0x40	; 64
    4cba:	2c eb       	ldi	r18, 0xBC	; 188
    4cbc:	36 e4       	ldi	r19, 0x46	; 70
    4cbe:	40 e0       	ldi	r20, 0x00	; 0
    4cc0:	50 e0       	ldi	r21, 0x00	; 0
    4cc2:	69 e4       	ldi	r22, 0x49	; 73
    4cc4:	73 e4       	ldi	r23, 0x43	; 67
    4cc6:	85 e7       	ldi	r24, 0x75	; 117
    4cc8:	94 e4       	ldi	r25, 0x44	; 68
    4cca:	0e 94 5f 34 	call	0x68be	; 0x68be <_ZN8GoertzelC1Eff>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    4cce:	1f 91       	pop	r17
    4cd0:	0f 91       	pop	r16
    4cd2:	08 95       	ret

00004cd4 <_GLOBAL__sub_D_g_adcVal>:
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    4cd4:	85 e7       	ldi	r24, 0x75	; 117
    4cd6:	94 e4       	ldi	r25, 0x44	; 68
    4cd8:	0e 94 af 34 	call	0x695e	; 0x695e <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    4cdc:	08 95       	ret

00004cde <_Z8debouncev>:

// This function is called approximately each 1/60 to 1/30 sec.
void debounce(void)
{
	// Move previously sampled raw input bits one step down the line.
	portDpinReadings[2] = portDpinReadings[1];
    4cde:	e8 e7       	ldi	r30, 0x78	; 120
    4ce0:	f4 e4       	ldi	r31, 0x44	; 68
    4ce2:	21 81       	ldd	r18, Z+1	; 0x01
    4ce4:	22 83       	std	Z+2, r18	; 0x02
	portDpinReadings[1] = portDpinReadings[0];
    4ce6:	30 81       	ld	r19, Z
    4ce8:	31 83       	std	Z+1, r19	; 0x01
	
	portCpinReadings[2] = portCpinReadings[1];
    4cea:	ab e7       	ldi	r26, 0x7B	; 123
    4cec:	b4 e4       	ldi	r27, 0x44	; 68
    4cee:	11 96       	adiw	r26, 0x01	; 1
    4cf0:	5c 91       	ld	r21, X
    4cf2:	11 97       	sbiw	r26, 0x01	; 1
    4cf4:	12 96       	adiw	r26, 0x02	; 2
    4cf6:	5c 93       	st	X, r21
    4cf8:	12 97       	sbiw	r26, 0x02	; 2
	portCpinReadings[1] = portCpinReadings[0];
    4cfa:	6c 91       	ld	r22, X
    4cfc:	11 96       	adiw	r26, 0x01	; 1
    4cfe:	6c 93       	st	X, r22
    4d00:	11 97       	sbiw	r26, 0x01	; 1
 * Read the input level on pins connected to a port
 *
 */
static inline uint8_t PORTC_get_port_level()
{
	return VPORTC.IN;
    4d02:	9a b1       	in	r25, 0x0a	; 10
	
	// Sample new raw input bits from PORT_A.
	portCpinReadings[0] = PORTC_get_port_level();
    4d04:	9c 93       	st	X, r25
 * Read the input level on pins connected to a port
 *
 */
static inline uint8_t PORTD_get_port_level()
{
	return VPORTD.IN;
    4d06:	8e b1       	in	r24, 0x0e	; 14
	portDpinReadings[0] = PORTD_get_port_level();
    4d08:	80 83       	st	Z, r24

	// Debounce output bits using low-pass filtering.
	portCdebounced = portCdebounced ^ (
	(portCdebounced ^ portCpinReadings[0])
    4d0a:	40 91 77 44 	lds	r20, 0x4477	; 0x804477 <portCdebounced>
    4d0e:	94 27       	eor	r25, r20
	& (portCdebounced ^ portCpinReadings[1])
    4d10:	64 27       	eor	r22, r20
    4d12:	96 23       	and	r25, r22
	& (portCdebounced ^ portCpinReadings[2]));
    4d14:	54 27       	eor	r21, r20
    4d16:	95 23       	and	r25, r21
	// Sample new raw input bits from PORT_A.
	portCpinReadings[0] = PORTC_get_port_level();
	portDpinReadings[0] = PORTD_get_port_level();

	// Debounce output bits using low-pass filtering.
	portCdebounced = portCdebounced ^ (
    4d18:	94 27       	eor	r25, r20
    4d1a:	90 93 77 44 	sts	0x4477, r25	; 0x804477 <portCdebounced>
	(portCdebounced ^ portCpinReadings[0])
	& (portCdebounced ^ portCpinReadings[1])
	& (portCdebounced ^ portCpinReadings[2]));
	
	portDdebounced = portDdebounced ^ (
	(portDdebounced ^ portDpinReadings[0])
    4d1e:	90 91 76 44 	lds	r25, 0x4476	; 0x804476 <portDdebounced>
    4d22:	89 27       	eor	r24, r25
	& (portDdebounced ^ portDpinReadings[1])
    4d24:	39 27       	eor	r19, r25
    4d26:	83 23       	and	r24, r19
	& (portDdebounced ^ portDpinReadings[2]));
    4d28:	29 27       	eor	r18, r25
    4d2a:	82 23       	and	r24, r18
	portCdebounced = portCdebounced ^ (
	(portCdebounced ^ portCpinReadings[0])
	& (portCdebounced ^ portCpinReadings[1])
	& (portCdebounced ^ portCpinReadings[2]));
	
	portDdebounced = portDdebounced ^ (
    4d2c:	89 27       	eor	r24, r25
    4d2e:	80 93 76 44 	sts	0x4476, r24	; 0x804476 <portDdebounced>
	(portDdebounced ^ portDpinReadings[0])
	& (portDdebounced ^ portDpinReadings[1])
	& (portDdebounced ^ portDpinReadings[2]));
}
    4d32:	08 95       	ret

00004d34 <_Z18portCdebouncedValsv>:

uint8_t portCdebouncedVals(void)
{
	return portCdebounced;
}
    4d34:	80 91 77 44 	lds	r24, 0x4477	; 0x804477 <portCdebounced>
    4d38:	08 95       	ret

00004d3a <_Z18portDdebouncedValsv>:

uint8_t portDdebouncedVals(void)
{
	return portDdebounced;
}
    4d3a:	80 91 76 44 	lds	r24, 0x4476	; 0x804476 <portDdebounced>
    4d3e:	08 95       	ret

00004d40 <_Z10BINIO_initv>:
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4d40:	01 9a       	sbi	0x00, 1	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4d42:	09 98       	cbi	0x01, 1	; 1
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
    4d44:	02 98       	cbi	0x00, 2	; 0
static inline void PORTA_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    4d46:	e2 e1       	ldi	r30, 0x12	; 18
    4d48:	f4 e0       	ldi	r31, 0x04	; 4
    4d4a:	80 81       	ld	r24, Z
    4d4c:	88 60       	ori	r24, 0x08	; 8
    4d4e:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    4d50:	80 81       	ld	r24, Z
    4d52:	88 7f       	andi	r24, 0xF8	; 248
    4d54:	82 60       	ori	r24, 0x02	; 2
    4d56:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4d58:	03 9a       	sbi	0x00, 3	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4d5a:	0b 98       	cbi	0x01, 3	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4d5c:	05 9a       	sbi	0x00, 5	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4d5e:	0d 98       	cbi	0x01, 5	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4d60:	06 9a       	sbi	0x00, 6	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4d62:	0e 98       	cbi	0x01, 6	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4d64:	07 9a       	sbi	0x00, 7	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4d66:	0f 98       	cbi	0x01, 7	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4d68:	20 9a       	sbi	0x04, 0	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4d6a:	28 98       	cbi	0x05, 0	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4d6c:	21 9a       	sbi	0x04, 1	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4d6e:	29 98       	cbi	0x05, 1	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4d70:	24 9a       	sbi	0x04, 4	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4d72:	2c 98       	cbi	0x05, 4	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4d74:	25 9a       	sbi	0x04, 5	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4d76:	2d 98       	cbi	0x05, 5	; 5
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    4d78:	42 98       	cbi	0x08, 2	; 8
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    4d7a:	e2 e5       	ldi	r30, 0x52	; 82
    4d7c:	f4 e0       	ldi	r31, 0x04	; 4
    4d7e:	80 81       	ld	r24, Z
    4d80:	88 60       	ori	r24, 0x08	; 8
    4d82:	80 83       	st	Z, r24
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    4d84:	43 98       	cbi	0x08, 3	; 8
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    4d86:	e3 e5       	ldi	r30, 0x53	; 83
    4d88:	f4 e0       	ldi	r31, 0x04	; 4
    4d8a:	80 81       	ld	r24, Z
    4d8c:	88 60       	ori	r24, 0x08	; 8
    4d8e:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    4d90:	45 9a       	sbi	0x08, 5	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    4d92:	4d 98       	cbi	0x09, 5	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    4d94:	46 9a       	sbi	0x08, 6	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    4d96:	4e 98       	cbi	0x09, 6	; 9
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    4d98:	47 98       	cbi	0x08, 7	; 8
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    4d9a:	e7 e5       	ldi	r30, 0x57	; 87
    4d9c:	f4 e0       	ldi	r31, 0x04	; 4
    4d9e:	80 81       	ld	r24, Z
    4da0:	88 60       	ori	r24, 0x08	; 8
    4da2:	80 83       	st	Z, r24
 *
 */
static inline void PORTC_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);
	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    4da4:	80 81       	ld	r24, Z
    4da6:	88 7f       	andi	r24, 0xF8	; 248
    4da8:	82 60       	ori	r24, 0x02	; 2
    4daa:	80 83       	st	Z, r24
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
    4dac:	60 98       	cbi	0x0c, 0	; 12
    4dae:	61 98       	cbi	0x0c, 1	; 12
static inline void PORTD_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    4db0:	e1 e7       	ldi	r30, 0x71	; 113
    4db2:	f4 e0       	ldi	r31, 0x04	; 4
    4db4:	80 81       	ld	r24, Z
    4db6:	88 60       	ori	r24, 0x08	; 8
    4db8:	80 83       	st	Z, r24
 */
static inline void PORTD_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
    4dba:	80 81       	ld	r24, Z
    4dbc:	88 7f       	andi	r24, 0xF8	; 248
    4dbe:	81 60       	ori	r24, 0x01	; 1
    4dc0:	80 83       	st	Z, r24
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
    4dc2:	67 98       	cbi	0x0c, 7	; 12
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    4dc4:	e7 e7       	ldi	r30, 0x77	; 119
    4dc6:	f4 e0       	ldi	r31, 0x04	; 4
    4dc8:	80 81       	ld	r24, Z
    4dca:	87 7f       	andi	r24, 0xF7	; 247
    4dcc:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTE.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTE + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    4dce:	e0 e9       	ldi	r30, 0x90	; 144
    4dd0:	f4 e0       	ldi	r31, 0x04	; 4
    4dd2:	80 81       	ld	r24, Z
    4dd4:	88 60       	ori	r24, 0x08	; 8
    4dd6:	80 83       	st	Z, r24
    4dd8:	e1 e9       	ldi	r30, 0x91	; 145
    4dda:	f4 e0       	ldi	r31, 0x04	; 4
    4ddc:	80 81       	ld	r24, Z
    4dde:	88 60       	ori	r24, 0x08	; 8
    4de0:	80 83       	st	Z, r24
    4de2:	e2 e9       	ldi	r30, 0x92	; 146
    4de4:	f4 e0       	ldi	r31, 0x04	; 4
    4de6:	80 81       	ld	r24, Z
    4de8:	88 60       	ori	r24, 0x08	; 8
    4dea:	80 83       	st	Z, r24
    4dec:	e3 e9       	ldi	r30, 0x93	; 147
    4dee:	f4 e0       	ldi	r31, 0x04	; 4
    4df0:	80 81       	ld	r24, Z
    4df2:	88 60       	ori	r24, 0x08	; 8
    4df4:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTF + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    4df6:	e0 eb       	ldi	r30, 0xB0	; 176
    4df8:	f4 e0       	ldi	r31, 0x04	; 4
    4dfa:	80 81       	ld	r24, Z
    4dfc:	88 60       	ori	r24, 0x08	; 8
    4dfe:	80 83       	st	Z, r24
    4e00:	e1 eb       	ldi	r30, 0xB1	; 177
    4e02:	f4 e0       	ldi	r31, 0x04	; 4
    4e04:	80 81       	ld	r24, Z
    4e06:	88 60       	ori	r24, 0x08	; 8
    4e08:	80 83       	st	Z, r24
    4e0a:	e2 eb       	ldi	r30, 0xB2	; 178
    4e0c:	f4 e0       	ldi	r31, 0x04	; 4
    4e0e:	80 81       	ld	r24, Z
    4e10:	88 60       	ori	r24, 0x08	; 8
    4e12:	80 83       	st	Z, r24
    4e14:	e3 eb       	ldi	r30, 0xB3	; 179
    4e16:	f4 e0       	ldi	r31, 0x04	; 4
    4e18:	80 81       	ld	r24, Z
    4e1a:	88 60       	ori	r24, 0x08	; 8
    4e1c:	80 83       	st	Z, r24
    4e1e:	e4 eb       	ldi	r30, 0xB4	; 180
    4e20:	f4 e0       	ldi	r31, 0x04	; 4
    4e22:	80 81       	ld	r24, Z
    4e24:	88 60       	ori	r24, 0x08	; 8
    4e26:	80 83       	st	Z, r24
    4e28:	e5 eb       	ldi	r30, 0xB5	; 181
    4e2a:	f4 e0       	ldi	r31, 0x04	; 4
    4e2c:	80 81       	ld	r24, Z
    4e2e:	88 60       	ori	r24, 0x08	; 8
    4e30:	80 83       	st	Z, r24
    4e32:	e6 eb       	ldi	r30, 0xB6	; 182
    4e34:	f4 e0       	ldi	r31, 0x04	; 4
    4e36:	80 81       	ld	r24, Z
    4e38:	88 60       	ori	r24, 0x08	; 8
    4e3a:	80 83       	st	Z, r24
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
	PORTF_set_pin_dir(6, PORT_DIR_OFF); /* Reset */
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    4e3c:	8a e0       	ldi	r24, 0x0A	; 10
    4e3e:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7e0412>
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    4e42:	89 e0       	ldi	r24, 0x09	; 9
    4e44:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <__TEXT_REGION_LENGTH__+0x7e0471>
}
    4e48:	08 95       	ret

00004e4a <_Z11BINIO_sleepv>:
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4e4a:	01 9a       	sbi	0x00, 1	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4e4c:	09 98       	cbi	0x01, 1	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4e4e:	03 9a       	sbi	0x00, 3	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4e50:	0b 98       	cbi	0x01, 3	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4e52:	05 9a       	sbi	0x00, 5	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4e54:	0d 98       	cbi	0x01, 5	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4e56:	06 9a       	sbi	0x00, 6	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4e58:	0e 98       	cbi	0x01, 6	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    4e5a:	07 9a       	sbi	0x00, 7	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    4e5c:	0f 98       	cbi	0x01, 7	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4e5e:	20 9a       	sbi	0x04, 0	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4e60:	28 98       	cbi	0x05, 0	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4e62:	21 9a       	sbi	0x04, 1	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4e64:	29 98       	cbi	0x05, 1	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4e66:	24 9a       	sbi	0x04, 4	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4e68:	2c 98       	cbi	0x05, 4	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    4e6a:	25 9a       	sbi	0x04, 5	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    4e6c:	2d 98       	cbi	0x05, 5	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    4e6e:	45 9a       	sbi	0x08, 5	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    4e70:	4d 98       	cbi	0x09, 5	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    4e72:	46 9a       	sbi	0x08, 6	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    4e74:	4e 98       	cbi	0x09, 6	; 9
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTD.DIR &= ~(1 << pin);
    4e76:	67 98       	cbi	0x0c, 7	; 12
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTD + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    4e78:	e7 e7       	ldi	r30, 0x77	; 119
    4e7a:	f4 e0       	ldi	r31, 0x04	; 4
    4e7c:	80 81       	ld	r24, Z
    4e7e:	87 7f       	andi	r24, 0xF7	; 247
    4e80:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTE.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTE + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    4e82:	e0 e9       	ldi	r30, 0x90	; 144
    4e84:	f4 e0       	ldi	r31, 0x04	; 4
    4e86:	80 81       	ld	r24, Z
    4e88:	88 60       	ori	r24, 0x08	; 8
    4e8a:	80 83       	st	Z, r24
    4e8c:	e1 e9       	ldi	r30, 0x91	; 145
    4e8e:	f4 e0       	ldi	r31, 0x04	; 4
    4e90:	80 81       	ld	r24, Z
    4e92:	88 60       	ori	r24, 0x08	; 8
    4e94:	80 83       	st	Z, r24
    4e96:	e2 e9       	ldi	r30, 0x92	; 146
    4e98:	f4 e0       	ldi	r31, 0x04	; 4
    4e9a:	80 81       	ld	r24, Z
    4e9c:	88 60       	ori	r24, 0x08	; 8
    4e9e:	80 83       	st	Z, r24
    4ea0:	e3 e9       	ldi	r30, 0x93	; 147
    4ea2:	f4 e0       	ldi	r31, 0x04	; 4
    4ea4:	80 81       	ld	r24, Z
    4ea6:	88 60       	ori	r24, 0x08	; 8
    4ea8:	80 83       	st	Z, r24
		break;
	case PORT_DIR_OUT:
		VPORTF.DIR |= (1 << pin);
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTF + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    4eaa:	e0 eb       	ldi	r30, 0xB0	; 176
    4eac:	f4 e0       	ldi	r31, 0x04	; 4
    4eae:	80 81       	ld	r24, Z
    4eb0:	88 60       	ori	r24, 0x08	; 8
    4eb2:	80 83       	st	Z, r24
    4eb4:	e1 eb       	ldi	r30, 0xB1	; 177
    4eb6:	f4 e0       	ldi	r31, 0x04	; 4
    4eb8:	80 81       	ld	r24, Z
    4eba:	88 60       	ori	r24, 0x08	; 8
    4ebc:	80 83       	st	Z, r24
    4ebe:	e2 eb       	ldi	r30, 0xB2	; 178
    4ec0:	f4 e0       	ldi	r31, 0x04	; 4
    4ec2:	80 81       	ld	r24, Z
    4ec4:	88 60       	ori	r24, 0x08	; 8
    4ec6:	80 83       	st	Z, r24
    4ec8:	e3 eb       	ldi	r30, 0xB3	; 179
    4eca:	f4 e0       	ldi	r31, 0x04	; 4
    4ecc:	80 81       	ld	r24, Z
    4ece:	88 60       	ori	r24, 0x08	; 8
    4ed0:	80 83       	st	Z, r24
    4ed2:	e4 eb       	ldi	r30, 0xB4	; 180
    4ed4:	f4 e0       	ldi	r31, 0x04	; 4
    4ed6:	80 81       	ld	r24, Z
    4ed8:	88 60       	ori	r24, 0x08	; 8
    4eda:	80 83       	st	Z, r24
    4edc:	e5 eb       	ldi	r30, 0xB5	; 181
    4ede:	f4 e0       	ldi	r31, 0x04	; 4
    4ee0:	80 81       	ld	r24, Z
    4ee2:	88 60       	ori	r24, 0x08	; 8
    4ee4:	80 83       	st	Z, r24
    4ee6:	e6 eb       	ldi	r30, 0xB6	; 182
    4ee8:	f4 e0       	ldi	r31, 0x04	; 4
    4eea:	80 81       	ld	r24, Z
    4eec:	88 60       	ori	r24, 0x08	; 8
    4eee:	80 83       	st	Z, r24
	PORTF_set_pin_dir(6, PORT_DIR_OFF); /* Reset */
	
	/* PORT Pin Interrupts */
// 	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
// 	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
}
    4ef0:	08 95       	ret

00004ef2 <BOD_init>:
int8_t BOD_init()
{

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    4ef2:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    4ef6:	80 e0       	ldi	r24, 0x00	; 0
    4ef8:	08 95       	ret

00004efa <_ZN18CircularStringBuffC1Ej>:

  if (!full_)
  {
    if (head_ >= tail_)
    {
      size = head_ - tail_;
    4efa:	0f 93       	push	r16
    4efc:	1f 93       	push	r17
    4efe:	cf 93       	push	r28
    4f00:	df 93       	push	r29
    4f02:	ec 01       	movw	r28, r24
    4f04:	8b 01       	movw	r16, r22
    4f06:	cb 01       	movw	r24, r22
    4f08:	0e 94 a3 4e 	call	0x9d46	; 0x9d46 <malloc>
    4f0c:	8d 83       	std	Y+5, r24	; 0x05
    4f0e:	9e 83       	std	Y+6, r25	; 0x06
    4f10:	0f 83       	std	Y+7, r16	; 0x07
    4f12:	18 87       	std	Y+8, r17	; 0x08
    4f14:	18 82       	st	Y, r1
    4f16:	19 82       	std	Y+1, r1	; 0x01
    4f18:	1a 82       	std	Y+2, r1	; 0x02
    4f1a:	1b 82       	std	Y+3, r1	; 0x03
    4f1c:	1c 82       	std	Y+4, r1	; 0x04
    4f1e:	19 86       	std	Y+9, r1	; 0x09
    4f20:	df 91       	pop	r29
    4f22:	cf 91       	pop	r28
    4f24:	1f 91       	pop	r17
    4f26:	0f 91       	pop	r16
    4f28:	08 95       	ret

00004f2a <_ZN18CircularStringBuffD1Ev>:
    4f2a:	fc 01       	movw	r30, r24
    4f2c:	85 81       	ldd	r24, Z+5	; 0x05
    4f2e:	96 81       	ldd	r25, Z+6	; 0x06
    4f30:	0e 94 3f 4f 	call	0x9e7e	; 0x9e7e <free>
    4f34:	08 95       	ret

00004f36 <_ZN18CircularStringBuff5resetEv>:
    4f36:	fc 01       	movw	r30, r24
    4f38:	82 81       	ldd	r24, Z+2	; 0x02
    4f3a:	93 81       	ldd	r25, Z+3	; 0x03
    4f3c:	80 83       	st	Z, r24
    4f3e:	91 83       	std	Z+1, r25	; 0x01
    4f40:	14 82       	std	Z+4, r1	; 0x04
    4f42:	11 86       	std	Z+9, r1	; 0x09
    4f44:	08 95       	ret

00004f46 <_ZNK18CircularStringBuff5emptyEv>:
    4f46:	fc 01       	movw	r30, r24
    4f48:	84 81       	ldd	r24, Z+4	; 0x04
    4f4a:	81 11       	cpse	r24, r1
    4f4c:	0a c0       	rjmp	.+20     	; 0x4f62 <_ZNK18CircularStringBuff5emptyEv+0x1c>
    4f4e:	81 e0       	ldi	r24, 0x01	; 1
    4f50:	40 81       	ld	r20, Z
    4f52:	51 81       	ldd	r21, Z+1	; 0x01
    4f54:	22 81       	ldd	r18, Z+2	; 0x02
    4f56:	33 81       	ldd	r19, Z+3	; 0x03
    4f58:	42 17       	cp	r20, r18
    4f5a:	53 07       	cpc	r21, r19
    4f5c:	19 f0       	breq	.+6      	; 0x4f64 <_ZNK18CircularStringBuff5emptyEv+0x1e>
    4f5e:	80 e0       	ldi	r24, 0x00	; 0
    4f60:	08 95       	ret
    4f62:	80 e0       	ldi	r24, 0x00	; 0
    4f64:	08 95       	ret

00004f66 <_ZN18CircularStringBuff7setBusyEb>:
    4f66:	61 11       	cpse	r22, r1
    4f68:	03 c0       	rjmp	.+6      	; 0x4f70 <_ZN18CircularStringBuff7setBusyEb+0xa>
    4f6a:	fc 01       	movw	r30, r24
    4f6c:	11 86       	std	Z+9, r1	; 0x09
    4f6e:	08 95       	ret
    4f70:	21 e0       	ldi	r18, 0x01	; 1
    4f72:	fc 01       	movw	r30, r24
    4f74:	21 87       	std	Z+9, r18	; 0x09
    4f76:	08 95       	ret

00004f78 <_ZN18CircularStringBuff6isBusyEv>:
    4f78:	fc 01       	movw	r30, r24
    4f7a:	81 85       	ldd	r24, Z+9	; 0x09
    4f7c:	08 95       	ret

00004f7e <_ZNK18CircularStringBuff4fullEv>:
    4f7e:	fc 01       	movw	r30, r24
    4f80:	84 81       	ldd	r24, Z+4	; 0x04
    4f82:	08 95       	ret

00004f84 <_ZN18CircularStringBuff3putEc>:

/** 
 * Place another item in the buffer
 */
void CircularStringBuff::put(char item)
{
    4f84:	cf 93       	push	r28
    4f86:	df 93       	push	r29
    4f88:	ec 01       	movw	r28, r24
  buf_[head_] = toupper(item);
    4f8a:	86 2f       	mov	r24, r22
    4f8c:	90 e0       	ldi	r25, 0x00	; 0
    4f8e:	0e 94 16 50 	call	0xa02c	; 0xa02c <toupper>
    4f92:	ed 81       	ldd	r30, Y+5	; 0x05
    4f94:	fe 81       	ldd	r31, Y+6	; 0x06
    4f96:	28 81       	ld	r18, Y
    4f98:	39 81       	ldd	r19, Y+1	; 0x01
    4f9a:	e2 0f       	add	r30, r18
    4f9c:	f3 1f       	adc	r31, r19
    4f9e:	80 83       	st	Z, r24

  if (full_)
    4fa0:	8c 81       	ldd	r24, Y+4	; 0x04
    4fa2:	88 23       	and	r24, r24
    4fa4:	49 f0       	breq	.+18     	; 0x4fb8 <_ZN18CircularStringBuff3putEc+0x34>
  {
    tail_ = (tail_ + 1) % max_size_;
    4fa6:	8a 81       	ldd	r24, Y+2	; 0x02
    4fa8:	9b 81       	ldd	r25, Y+3	; 0x03
    4faa:	01 96       	adiw	r24, 0x01	; 1
    4fac:	6f 81       	ldd	r22, Y+7	; 0x07
    4fae:	78 85       	ldd	r23, Y+8	; 0x08
    4fb0:	0e 94 ea 4d 	call	0x9bd4	; 0x9bd4 <__udivmodhi4>
    4fb4:	8a 83       	std	Y+2, r24	; 0x02
    4fb6:	9b 83       	std	Y+3, r25	; 0x03
  }

  head_ = (head_ + 1) % max_size_;
    4fb8:	88 81       	ld	r24, Y
    4fba:	99 81       	ldd	r25, Y+1	; 0x01
    4fbc:	01 96       	adiw	r24, 0x01	; 1
    4fbe:	6f 81       	ldd	r22, Y+7	; 0x07
    4fc0:	78 85       	ldd	r23, Y+8	; 0x08
    4fc2:	0e 94 ea 4d 	call	0x9bd4	; 0x9bd4 <__udivmodhi4>
    4fc6:	88 83       	st	Y, r24
    4fc8:	99 83       	std	Y+1, r25	; 0x01

  full_ = head_ == tail_;
    4fca:	21 e0       	ldi	r18, 0x01	; 1
    4fcc:	4a 81       	ldd	r20, Y+2	; 0x02
    4fce:	5b 81       	ldd	r21, Y+3	; 0x03
    4fd0:	48 17       	cp	r20, r24
    4fd2:	59 07       	cpc	r21, r25
    4fd4:	09 f0       	breq	.+2      	; 0x4fd8 <_ZN18CircularStringBuff3putEc+0x54>
    4fd6:	20 e0       	ldi	r18, 0x00	; 0
    4fd8:	2c 83       	std	Y+4, r18	; 0x04
}
    4fda:	df 91       	pop	r29
    4fdc:	cf 91       	pop	r28
    4fde:	08 95       	ret

00004fe0 <_ZN18CircularStringBuff3popEv>:

/** 
 * Return the last put item and remove it from the buffer
 */
char CircularStringBuff::pop()
{
    4fe0:	cf 93       	push	r28
    4fe2:	df 93       	push	r29
    4fe4:	ec 01       	movw	r28, r24
  if (empty())
    4fe6:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <_ZNK18CircularStringBuff5emptyEv>
    4fea:	81 11       	cpse	r24, r1
    4fec:	19 c0       	rjmp	.+50     	; 0x5020 <_ZN18CircularStringBuff3popEv+0x40>
  {
	  return ('\0');
  }

  /*Read data and decrement the head (we now have one more free space) */
  char val = buf_[head_];
    4fee:	28 81       	ld	r18, Y
    4ff0:	39 81       	ldd	r19, Y+1	; 0x01
    4ff2:	ed 81       	ldd	r30, Y+5	; 0x05
    4ff4:	fe 81       	ldd	r31, Y+6	; 0x06
    4ff6:	e2 0f       	add	r30, r18
    4ff8:	f3 1f       	adc	r31, r19
    4ffa:	80 81       	ld	r24, Z
  if(head_) 
    4ffc:	21 15       	cp	r18, r1
    4ffe:	31 05       	cpc	r19, r1
    5000:	41 f0       	breq	.+16     	; 0x5012 <_ZN18CircularStringBuff3popEv+0x32>
  {
	  head_--;
    5002:	21 50       	subi	r18, 0x01	; 1
    5004:	31 09       	sbc	r19, r1
    5006:	28 83       	st	Y, r18
    5008:	39 83       	std	Y+1, r19	; 0x01
  else
  {
	  head_ = (max_size_-1);
  }
  
  full_ = false;
    500a:	1c 82       	std	Y+4, r1	; 0x04

  return (val);
}
    500c:	df 91       	pop	r29
    500e:	cf 91       	pop	r28
    5010:	08 95       	ret
  {
	  head_--;
  }
  else
  {
	  head_ = (max_size_-1);
    5012:	2f 81       	ldd	r18, Y+7	; 0x07
    5014:	38 85       	ldd	r19, Y+8	; 0x08
    5016:	21 50       	subi	r18, 0x01	; 1
    5018:	31 09       	sbc	r19, r1
    501a:	28 83       	st	Y, r18
    501c:	39 83       	std	Y+1, r19	; 0x01
    501e:	f5 cf       	rjmp	.-22     	; 0x500a <_ZN18CircularStringBuff3popEv+0x2a>
 */
char CircularStringBuff::pop()
{
  if (empty())
  {
	  return ('\0');
    5020:	80 e0       	ldi	r24, 0x00	; 0
    5022:	f4 cf       	rjmp	.-24     	; 0x500c <_ZN18CircularStringBuff3popEv+0x2c>

00005024 <_ZN18CircularStringBuff3getEv>:

/** 
 * Return the FIFO entry and delete it from the buffer
 */
char CircularStringBuff::get()
{
    5024:	cf 93       	push	r28
    5026:	df 93       	push	r29
    5028:	ec 01       	movw	r28, r24
  if (empty())
    502a:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <_ZNK18CircularStringBuff5emptyEv>
  {
    return ('\0');
    502e:	20 e0       	ldi	r18, 0x00	; 0
/** 
 * Return the FIFO entry and delete it from the buffer
 */
char CircularStringBuff::get()
{
  if (empty())
    5030:	81 11       	cpse	r24, r1
    5032:	0f c0       	rjmp	.+30     	; 0x5052 <_ZN18CircularStringBuff3getEv+0x2e>
  {
    return ('\0');
  }

  /*Read data and advance the tail (we now have a free space) */
  char val = buf_[tail_];
    5034:	8a 81       	ldd	r24, Y+2	; 0x02
    5036:	9b 81       	ldd	r25, Y+3	; 0x03
    5038:	ed 81       	ldd	r30, Y+5	; 0x05
    503a:	fe 81       	ldd	r31, Y+6	; 0x06
    503c:	e8 0f       	add	r30, r24
    503e:	f9 1f       	adc	r31, r25
    5040:	20 81       	ld	r18, Z
  full_ = false;
    5042:	1c 82       	std	Y+4, r1	; 0x04
  tail_ = (tail_ + 1) % max_size_;
    5044:	01 96       	adiw	r24, 0x01	; 1
    5046:	6f 81       	ldd	r22, Y+7	; 0x07
    5048:	78 85       	ldd	r23, Y+8	; 0x08
    504a:	0e 94 ea 4d 	call	0x9bd4	; 0x9bd4 <__udivmodhi4>
    504e:	8a 83       	std	Y+2, r24	; 0x02
    5050:	9b 83       	std	Y+3, r25	; 0x03

  return (val);
}
    5052:	82 2f       	mov	r24, r18
    5054:	df 91       	pop	r29
    5056:	cf 91       	pop	r28
    5058:	08 95       	ret

0000505a <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    505a:	44 e2       	ldi	r20, 0x24	; 36
    505c:	68 ed       	ldi	r22, 0xD8	; 216
    505e:	88 e6       	ldi	r24, 0x68	; 104
    5060:	90 e0       	ldi	r25, 0x00	; 0
    5062:	0e 94 71 3f 	call	0x7ee2	; 0x7ee2 <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    5066:	80 e0       	ldi	r24, 0x00	; 0
    5068:	08 95       	ret

0000506a <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    506a:	78 94       	sei

	return 0;
}
    506c:	80 e0       	ldi	r24, 0x00	; 0
    506e:	08 95       	ret

00005070 <_Z9DAC0_initv>:

static void VREF_init(void)
{
//	VREF.DAC0REF = VREF_REFSEL_VDD_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.500V Internal Voltage Reference for DAC */
    5070:	83 e0       	ldi	r24, 0x03	; 3
    5072:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7e00a2>
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    5076:	6a e0       	ldi	r22, 0x0A	; 10
    5078:	70 e0       	ldi	r23, 0x00	; 0
    507a:	80 e0       	ldi	r24, 0x00	; 0
    507c:	90 e0       	ldi	r25, 0x00	; 0
    507e:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <util_delay_ms>
    5082:	81 11       	cpse	r24, r1
    5084:	f8 cf       	rjmp	.-16     	; 0x5076 <_Z9DAC0_initv+0x6>
void DAC0_init(void)
{
	VREF_init();
	
    /* Disable digital input buffer */
    PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    5086:	e0 e6       	ldi	r30, 0x60	; 96
    5088:	f4 e0       	ldi	r31, 0x04	; 4
    508a:	86 89       	ldd	r24, Z+22	; 0x16
    508c:	88 7f       	andi	r24, 0xF8	; 248
    508e:	86 8b       	std	Z+22, r24	; 0x16
    PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    5090:	86 89       	ldd	r24, Z+22	; 0x16
    5092:	84 60       	ori	r24, 0x04	; 4
    5094:	86 8b       	std	Z+22, r24	; 0x16
    /* Disable pull-up resistor */
    PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;   
    5096:	86 89       	ldd	r24, Z+22	; 0x16
    5098:	87 7f       	andi	r24, 0xF7	; 247
    509a:	86 8b       	std	Z+22, r24	; 0x16
    DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    509c:	81 ec       	ldi	r24, 0xC1	; 193
    509e:	80 93 a0 06 	sts	0x06A0, r24	; 0x8006a0 <__TEXT_REGION_LENGTH__+0x7e06a0>
// 	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
// 	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
// 	| DAC_OUTEN_bm;           /* Enable output buffer */
// 	
// 	DAC0_setVal(DAC_DEFAULT_VALUE);
}
    50a2:	08 95       	ret

000050a4 <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    50a4:	28 2f       	mov	r18, r24
    50a6:	22 95       	swap	r18
    50a8:	22 0f       	add	r18, r18
    50aa:	22 0f       	add	r18, r18
    50ac:	20 7c       	andi	r18, 0xC0	; 192
    50ae:	e0 ea       	ldi	r30, 0xA0	; 160
    50b0:	f6 e0       	ldi	r31, 0x06	; 6
    50b2:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    50b4:	96 95       	lsr	r25
    50b6:	87 95       	ror	r24
    50b8:	96 95       	lsr	r25
    50ba:	87 95       	ror	r24
    50bc:	83 83       	std	Z+3, r24	; 0x03
}
    50be:	08 95       	ret

000050c0 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    50c0:	e0 e1       	ldi	r30, 0x10	; 16
    50c2:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    50c4:	80 81       	ld	r24, Z
    50c6:	88 60       	ori	r24, 0x08	; 8
    50c8:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    50ca:	e8 31       	cpi	r30, 0x18	; 24
    50cc:	84 e0       	ldi	r24, 0x04	; 4
    50ce:	f8 07       	cpc	r31, r24
    50d0:	c9 f7       	brne	.-14     	; 0x50c4 <mcu_init+0x4>
    50d2:	e0 e3       	ldi	r30, 0x30	; 48
    50d4:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    50d6:	80 81       	ld	r24, Z
    50d8:	88 60       	ori	r24, 0x08	; 8
    50da:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    50dc:	e8 33       	cpi	r30, 0x38	; 56
    50de:	84 e0       	ldi	r24, 0x04	; 4
    50e0:	f8 07       	cpc	r31, r24
    50e2:	c9 f7       	brne	.-14     	; 0x50d6 <mcu_init+0x16>
    50e4:	e0 e5       	ldi	r30, 0x50	; 80
    50e6:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    50e8:	80 81       	ld	r24, Z
    50ea:	88 60       	ori	r24, 0x08	; 8
    50ec:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    50ee:	e8 35       	cpi	r30, 0x58	; 88
    50f0:	84 e0       	ldi	r24, 0x04	; 4
    50f2:	f8 07       	cpc	r31, r24
    50f4:	c9 f7       	brne	.-14     	; 0x50e8 <mcu_init+0x28>
    50f6:	e0 e7       	ldi	r30, 0x70	; 112
    50f8:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    50fa:	80 81       	ld	r24, Z
    50fc:	88 60       	ori	r24, 0x08	; 8
    50fe:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    5100:	e8 37       	cpi	r30, 0x78	; 120
    5102:	84 e0       	ldi	r24, 0x04	; 4
    5104:	f8 07       	cpc	r31, r24
    5106:	c9 f7       	brne	.-14     	; 0x50fa <mcu_init+0x3a>
    5108:	e0 e9       	ldi	r30, 0x90	; 144
    510a:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    510c:	80 81       	ld	r24, Z
    510e:	88 60       	ori	r24, 0x08	; 8
    5110:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    5112:	e8 39       	cpi	r30, 0x98	; 152
    5114:	84 e0       	ldi	r24, 0x04	; 4
    5116:	f8 07       	cpc	r31, r24
    5118:	c9 f7       	brne	.-14     	; 0x510c <mcu_init+0x4c>
    511a:	e0 eb       	ldi	r30, 0xB0	; 176
    511c:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    511e:	80 81       	ld	r24, Z
    5120:	88 60       	ori	r24, 0x08	; 8
    5122:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    5124:	e8 3b       	cpi	r30, 0xB8	; 184
    5126:	84 e0       	ldi	r24, 0x04	; 4
    5128:	f8 07       	cpc	r31, r24
    512a:	c9 f7       	brne	.-14     	; 0x511e <mcu_init+0x5e>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    512c:	08 95       	ret

0000512e <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    512e:	0e 94 60 28 	call	0x50c0	; 0x50c0 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    5132:	0e 94 2d 28 	call	0x505a	; 0x505a <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    5136:	0e 94 34 47 	call	0x8e68	; 0x8e68 <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    513a:	0e 94 35 28 	call	0x506a	; 0x506a <CPUINT_init>
	BINIO_init();
    513e:	0e 94 a0 26 	call	0x4d40	; 0x4d40 <_Z10BINIO_initv>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    5142:	46 9a       	sbi	0x08, 6	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    5144:	4e 98       	cbi	0x09, 6	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    5146:	45 9a       	sbi	0x08, 5	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    5148:	4d 98       	cbi	0x09, 5	; 9
	LED_set_RED_dir(PORT_DIR_OUT);
	LED_set_RED_level(OFF);
	LED_set_GREEN_dir(PORT_DIR_OUT);
	LED_set_GREEN_level(OFF);

	SLPCTRL_init();
    514a:	0e 94 28 47 	call	0x8e50	; 0x8e50 <SLPCTRL_init>
	
	DAC0_init();
    514e:	0e 94 38 28 	call	0x5070	; 0x5070 <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    5152:	41 e0       	ldi	r20, 0x01	; 1
    5154:	50 e0       	ldi	r21, 0x00	; 0
    5156:	60 e8       	ldi	r22, 0x80	; 128
    5158:	75 e2       	ldi	r23, 0x25	; 37
    515a:	80 e0       	ldi	r24, 0x00	; 0
    515c:	90 e0       	ldi	r25, 0x00	; 0
    515e:	0e 94 b6 3b 	call	0x776c	; 0x776c <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    5162:	44 e0       	ldi	r20, 0x04	; 4
    5164:	50 e0       	ldi	r21, 0x00	; 0
    5166:	60 e8       	ldi	r22, 0x80	; 128
    5168:	75 e2       	ldi	r23, 0x25	; 37
    516a:	80 e0       	ldi	r24, 0x00	; 0
    516c:	90 e0       	ldi	r25, 0x00	; 0
    516e:	0e 94 d4 3f 	call	0x7fa8	; 0x7fa8 <serialbus_init>

	BOD_init();
    5172:	0e 94 79 27 	call	0x4ef2	; 0x4ef2 <BOD_init>
}
    5176:	08 95       	ret

00005178 <system_sleep_settings>:

void system_sleep_settings()
{
	mcu_init();
    5178:	0e 94 60 28 	call	0x50c0	; 0x50c0 <mcu_init>

//	CLKCTRL_init(); /* Set CPU clock speed appropriately */
	TIMERB_sleep(); /* Timers must be initialized before utility_delay functions will work */
    517c:	0e 94 61 48 	call	0x90c2	; 0x90c2 <TIMERB_sleep>
//	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
	BINIO_sleep();
    5180:	0e 94 25 27 	call	0x4e4a	; 0x4e4a <_Z11BINIO_sleepv>
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    5184:	46 9a       	sbi	0x08, 6	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    5186:	4e 98       	cbi	0x09, 6	; 9
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    5188:	45 9a       	sbi	0x08, 5	; 8
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    518a:	4d 98       	cbi	0x09, 5	; 9
	LED_set_RED_dir(PORT_DIR_OUT);
	LED_set_RED_level(OFF);
	LED_set_GREEN_dir(PORT_DIR_OUT);
	LED_set_GREEN_level(OFF);

}
    518c:	08 95       	ret

0000518e <ds3231_get_epoch>:
				}
			}

			data[2] |= hours % 10;
			
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
    518e:	7f 92       	push	r7
    5190:	8f 92       	push	r8
    5192:	9f 92       	push	r9
    5194:	af 92       	push	r10
    5196:	bf 92       	push	r11
    5198:	cf 92       	push	r12
    519a:	df 92       	push	r13
    519c:	ef 92       	push	r14
    519e:	ff 92       	push	r15
    51a0:	0f 93       	push	r16
    51a2:	1f 93       	push	r17
    51a4:	cf 93       	push	r28
    51a6:	df 93       	push	r29
    51a8:	cd b7       	in	r28, 0x3d	; 61
    51aa:	de b7       	in	r29, 0x3e	; 62
    51ac:	27 97       	sbiw	r28, 0x07	; 7
    51ae:	cd bf       	out	0x3d, r28	; 61
    51b0:	de bf       	out	0x3e, r29	; 62
    51b2:	5c 01       	movw	r10, r24
    51b4:	87 e0       	ldi	r24, 0x07	; 7
    51b6:	fe 01       	movw	r30, r28
    51b8:	31 96       	adiw	r30, 0x01	; 1
    51ba:	df 01       	movw	r26, r30
    51bc:	1d 92       	st	X+, r1
    51be:	8a 95       	dec	r24
    51c0:	e9 f7       	brne	.-6      	; 0x51bc <ds3231_get_epoch+0x2e>
    51c2:	1a e0       	ldi	r17, 0x0A	; 10
    51c4:	27 e0       	ldi	r18, 0x07	; 7
    51c6:	ae 01       	movw	r20, r28
    51c8:	4f 5f       	subi	r20, 0xFF	; 255
    51ca:	5f 4f       	sbci	r21, 0xFF	; 255
    51cc:	60 e0       	ldi	r22, 0x00	; 0
    51ce:	80 ed       	ldi	r24, 0xD0	; 208
    51d0:	0e 94 96 35 	call	0x6b2c	; 0x6b2c <I2C_0_GetData>
    51d4:	87 30       	cpi	r24, 0x07	; 7
    51d6:	f9 f0       	breq	.+62     	; 0x5216 <ds3231_get_epoch+0x88>
    51d8:	11 50       	subi	r17, 0x01	; 1
    51da:	a1 f7       	brne	.-24     	; 0x51c4 <ds3231_get_epoch+0x36>
    51dc:	60 e0       	ldi	r22, 0x00	; 0
    51de:	70 e0       	ldi	r23, 0x00	; 0
    51e0:	cb 01       	movw	r24, r22
    51e2:	2c ef       	ldi	r18, 0xFC	; 252
    51e4:	30 e0       	ldi	r19, 0x00	; 0
    51e6:	a1 14       	cp	r10, r1
    51e8:	b1 04       	cpc	r11, r1
    51ea:	09 f4       	brne	.+2      	; 0x51ee <ds3231_get_epoch+0x60>
    51ec:	ff c0       	rjmp	.+510    	; 0x53ec <ds3231_get_epoch+0x25e>
    51ee:	d5 01       	movw	r26, r10
    51f0:	2d 93       	st	X+, r18
    51f2:	3c 93       	st	X, r19
    51f4:	27 96       	adiw	r28, 0x07	; 7
    51f6:	cd bf       	out	0x3d, r28	; 61
    51f8:	de bf       	out	0x3e, r29	; 62
    51fa:	df 91       	pop	r29
    51fc:	cf 91       	pop	r28
    51fe:	1f 91       	pop	r17
    5200:	0f 91       	pop	r16
    5202:	ff 90       	pop	r15
    5204:	ef 90       	pop	r14
    5206:	df 90       	pop	r13
    5208:	cf 90       	pop	r12
    520a:	bf 90       	pop	r11
    520c:	af 90       	pop	r10
    520e:	9f 90       	pop	r9
    5210:	8f 90       	pop	r8
    5212:	7f 90       	pop	r7
    5214:	08 95       	ret
    5216:	2f 81       	ldd	r18, Y+7	; 0x07
    5218:	42 2f       	mov	r20, r18
    521a:	4f 70       	andi	r20, 0x0F	; 15
    521c:	50 e0       	ldi	r21, 0x00	; 0
    521e:	4c 59       	subi	r20, 0x9C	; 156
    5220:	5f 4f       	sbci	r21, 0xFF	; 255
    5222:	22 95       	swap	r18
    5224:	2f 70       	andi	r18, 0x0F	; 15
    5226:	30 e0       	ldi	r19, 0x00	; 0
    5228:	49 01       	movw	r8, r18
    522a:	88 0c       	add	r8, r8
    522c:	99 1c       	adc	r9, r9
    522e:	88 0c       	add	r8, r8
    5230:	99 1c       	adc	r9, r9
    5232:	82 0e       	add	r8, r18
    5234:	93 1e       	adc	r9, r19
    5236:	88 0c       	add	r8, r8
    5238:	99 1c       	adc	r9, r9
    523a:	84 0e       	add	r8, r20
    523c:	95 1e       	adc	r9, r21
    523e:	64 01       	movw	r12, r8
    5240:	b4 e9       	ldi	r27, 0x94	; 148
    5242:	cb 1a       	sub	r12, r27
    5244:	b8 ef       	ldi	r27, 0xF8	; 248
    5246:	db 0a       	sbc	r13, r27
    5248:	8e 81       	ldd	r24, Y+6	; 0x06
    524a:	98 2f       	mov	r25, r24
    524c:	9f 70       	andi	r25, 0x0F	; 15
    524e:	82 95       	swap	r24
    5250:	8f 70       	andi	r24, 0x0F	; 15
    5252:	08 2f       	mov	r16, r24
    5254:	00 0f       	add	r16, r16
    5256:	00 0f       	add	r16, r16
    5258:	08 0f       	add	r16, r24
    525a:	00 0f       	add	r16, r16
    525c:	09 0f       	add	r16, r25
    525e:	4d 81       	ldd	r20, Y+5	; 0x05
    5260:	84 2f       	mov	r24, r20
    5262:	8f 70       	andi	r24, 0x0F	; 15
    5264:	74 2e       	mov	r7, r20
    5266:	76 94       	lsr	r7
    5268:	76 94       	lsr	r7
    526a:	76 94       	lsr	r7
    526c:	76 94       	lsr	r7
    526e:	47 2d       	mov	r20, r7
    5270:	44 0f       	add	r20, r20
    5272:	44 0f       	add	r20, r20
    5274:	47 0d       	add	r20, r7
    5276:	44 0f       	add	r20, r20
    5278:	74 2e       	mov	r7, r20
    527a:	78 0e       	add	r7, r24
    527c:	02 30       	cpi	r16, 0x02	; 2
    527e:	08 f4       	brcc	.+2      	; 0x5282 <ds3231_get_epoch+0xf4>
    5280:	ab c0       	rjmp	.+342    	; 0x53d8 <ds3231_get_epoch+0x24a>
    5282:	f1 2c       	mov	r15, r1
    5284:	e1 2c       	mov	r14, r1
    5286:	11 e0       	ldi	r17, 0x01	; 1
    5288:	61 2f       	mov	r22, r17
    528a:	c6 01       	movw	r24, r12
    528c:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <month_length>
    5290:	e8 0e       	add	r14, r24
    5292:	f1 1c       	adc	r15, r1
    5294:	1f 5f       	subi	r17, 0xFF	; 255
    5296:	01 13       	cpse	r16, r17
    5298:	f7 cf       	rjmp	.-18     	; 0x5288 <ds3231_get_epoch+0xfa>
    529a:	47 2d       	mov	r20, r7
    529c:	77 0c       	add	r7, r7
    529e:	55 0b       	sbc	r21, r21
    52a0:	41 50       	subi	r20, 0x01	; 1
    52a2:	51 09       	sbc	r21, r1
    52a4:	4e 0d       	add	r20, r14
    52a6:	5f 1d       	adc	r21, r15
    52a8:	89 81       	ldd	r24, Y+1	; 0x01
    52aa:	98 2f       	mov	r25, r24
    52ac:	92 95       	swap	r25
    52ae:	9f 70       	andi	r25, 0x0F	; 15
    52b0:	c9 2e       	mov	r12, r25
    52b2:	cc 0c       	add	r12, r12
    52b4:	cc 0c       	add	r12, r12
    52b6:	c9 0e       	add	r12, r25
    52b8:	9c 2d       	mov	r25, r12
    52ba:	99 0f       	add	r25, r25
    52bc:	8f 70       	andi	r24, 0x0F	; 15
    52be:	c8 2e       	mov	r12, r24
    52c0:	c9 0e       	add	r12, r25
    52c2:	8a 81       	ldd	r24, Y+2	; 0x02
    52c4:	28 2f       	mov	r18, r24
    52c6:	22 95       	swap	r18
    52c8:	2f 70       	andi	r18, 0x0F	; 15
    52ca:	92 2f       	mov	r25, r18
    52cc:	99 0f       	add	r25, r25
    52ce:	99 0f       	add	r25, r25
    52d0:	92 0f       	add	r25, r18
    52d2:	99 0f       	add	r25, r25
    52d4:	8f 70       	andi	r24, 0x0F	; 15
    52d6:	89 0f       	add	r24, r25
    52d8:	2b 81       	ldd	r18, Y+3	; 0x03
    52da:	32 2f       	mov	r19, r18
    52dc:	30 72       	andi	r19, 0x20	; 32
    52de:	24 fb       	bst	r18, 4
    52e0:	99 27       	eor	r25, r25
    52e2:	90 f9       	bld	r25, 0
    52e4:	a9 2f       	mov	r26, r25
    52e6:	aa 0f       	add	r26, r26
    52e8:	aa 0f       	add	r26, r26
    52ea:	a9 0f       	add	r26, r25
    52ec:	9a 2f       	mov	r25, r26
    52ee:	99 0f       	add	r25, r25
    52f0:	a2 2f       	mov	r26, r18
    52f2:	af 70       	andi	r26, 0x0F	; 15
    52f4:	a9 0f       	add	r26, r25
    52f6:	26 ff       	sbrs	r18, 6
    52f8:	72 c0       	rjmp	.+228    	; 0x53de <ds3231_get_epoch+0x250>
    52fa:	31 11       	cpse	r19, r1
    52fc:	a4 5f       	subi	r26, 0xF4	; 244
    52fe:	0c 2c       	mov	r0, r12
    5300:	00 0c       	add	r0, r0
    5302:	dd 08       	sbc	r13, r13
    5304:	ec e3       	ldi	r30, 0x3C	; 60
    5306:	8e 02       	muls	r24, r30
    5308:	c0 0c       	add	r12, r0
    530a:	d1 1c       	adc	r13, r1
    530c:	11 24       	eor	r1, r1
    530e:	0d 2c       	mov	r0, r13
    5310:	00 0c       	add	r0, r0
    5312:	ee 08       	sbc	r14, r14
    5314:	ff 08       	sbc	r15, r15
    5316:	0a 2e       	mov	r0, r26
    5318:	00 0c       	add	r0, r0
    531a:	bb 0b       	sbc	r27, r27
    531c:	20 e1       	ldi	r18, 0x10	; 16
    531e:	3e e0       	ldi	r19, 0x0E	; 14
    5320:	0e 94 6b 4e 	call	0x9cd6	; 0x9cd6 <__usmulhisi3>
    5324:	c6 0e       	add	r12, r22
    5326:	d7 1e       	adc	r13, r23
    5328:	e8 1e       	adc	r14, r24
    532a:	f9 1e       	adc	r15, r25
    532c:	da 01       	movw	r26, r20
    532e:	20 e8       	ldi	r18, 0x80	; 128
    5330:	31 e5       	ldi	r19, 0x51	; 81
    5332:	41 e0       	ldi	r20, 0x01	; 1
    5334:	50 e0       	ldi	r21, 0x00	; 0
    5336:	0e 94 7d 4e 	call	0x9cfa	; 0x9cfa <__mulshisi3>
    533a:	c6 0e       	add	r12, r22
    533c:	d7 1e       	adc	r13, r23
    533e:	e8 1e       	adc	r14, r24
    5340:	f9 1e       	adc	r15, r25
    5342:	d4 01       	movw	r26, r8
    5344:	a6 54       	subi	r26, 0x46	; 70
    5346:	b1 09       	sbc	r27, r1
    5348:	20 e8       	ldi	r18, 0x80	; 128
    534a:	33 e3       	ldi	r19, 0x33	; 51
    534c:	41 ee       	ldi	r20, 0xE1	; 225
    534e:	51 e0       	ldi	r21, 0x01	; 1
    5350:	0e 94 7d 4e 	call	0x9cfa	; 0x9cfa <__mulshisi3>
    5354:	c6 0e       	add	r12, r22
    5356:	d7 1e       	adc	r13, r23
    5358:	e8 1e       	adc	r14, r24
    535a:	f9 1e       	adc	r15, r25
    535c:	c4 01       	movw	r24, r8
    535e:	85 54       	subi	r24, 0x45	; 69
    5360:	91 09       	sbc	r25, r1
    5362:	dc 01       	movw	r26, r24
    5364:	0a f4       	brpl	.+2      	; 0x5368 <ds3231_get_epoch+0x1da>
    5366:	40 c0       	rjmp	.+128    	; 0x53e8 <ds3231_get_epoch+0x25a>
    5368:	b5 95       	asr	r27
    536a:	a7 95       	ror	r26
    536c:	b5 95       	asr	r27
    536e:	a7 95       	ror	r26
    5370:	20 e8       	ldi	r18, 0x80	; 128
    5372:	31 e5       	ldi	r19, 0x51	; 81
    5374:	41 e0       	ldi	r20, 0x01	; 1
    5376:	50 e0       	ldi	r21, 0x00	; 0
    5378:	0e 94 7d 4e 	call	0x9cfa	; 0x9cfa <__mulshisi3>
    537c:	c6 0e       	add	r12, r22
    537e:	d7 1e       	adc	r13, r23
    5380:	e8 1e       	adc	r14, r24
    5382:	f9 1e       	adc	r15, r25
    5384:	c4 01       	movw	r24, r8
    5386:	01 97       	sbiw	r24, 0x01	; 1
    5388:	64 e6       	ldi	r22, 0x64	; 100
    538a:	70 e0       	ldi	r23, 0x00	; 0
    538c:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
    5390:	db 01       	movw	r26, r22
    5392:	20 e8       	ldi	r18, 0x80	; 128
    5394:	3e ea       	ldi	r19, 0xAE	; 174
    5396:	4e ef       	ldi	r20, 0xFE	; 254
    5398:	5f ef       	ldi	r21, 0xFF	; 255
    539a:	0e 94 7d 4e 	call	0x9cfa	; 0x9cfa <__mulshisi3>
    539e:	c6 0e       	add	r12, r22
    53a0:	d7 1e       	adc	r13, r23
    53a2:	e8 1e       	adc	r14, r24
    53a4:	f9 1e       	adc	r15, r25
    53a6:	c4 01       	movw	r24, r8
    53a8:	85 5d       	subi	r24, 0xD5	; 213
    53aa:	9e 4f       	sbci	r25, 0xFE	; 254
    53ac:	60 e9       	ldi	r22, 0x90	; 144
    53ae:	71 e0       	ldi	r23, 0x01	; 1
    53b0:	0e 94 fe 4d 	call	0x9bfc	; 0x9bfc <__divmodhi4>
    53b4:	db 01       	movw	r26, r22
    53b6:	20 e8       	ldi	r18, 0x80	; 128
    53b8:	31 e5       	ldi	r19, 0x51	; 81
    53ba:	41 e0       	ldi	r20, 0x01	; 1
    53bc:	50 e0       	ldi	r21, 0x00	; 0
    53be:	0e 94 7d 4e 	call	0x9cfa	; 0x9cfa <__mulshisi3>
    53c2:	6c 0d       	add	r22, r12
    53c4:	7d 1d       	adc	r23, r13
    53c6:	8e 1d       	adc	r24, r14
    53c8:	9f 1d       	adc	r25, r15
    53ca:	a1 14       	cp	r10, r1
    53cc:	b1 04       	cpc	r11, r1
    53ce:	09 f4       	brne	.+2      	; 0x53d2 <ds3231_get_epoch+0x244>
    53d0:	11 cf       	rjmp	.-478    	; 0x51f4 <ds3231_get_epoch+0x66>
    53d2:	30 e0       	ldi	r19, 0x00	; 0
    53d4:	20 e0       	ldi	r18, 0x00	; 0
    53d6:	0b cf       	rjmp	.-490    	; 0x51ee <ds3231_get_epoch+0x60>
    53d8:	f1 2c       	mov	r15, r1
    53da:	e1 2c       	mov	r14, r1
    53dc:	5e cf       	rjmp	.-324    	; 0x529a <ds3231_get_epoch+0x10c>
    53de:	33 23       	and	r19, r19
    53e0:	09 f4       	brne	.+2      	; 0x53e4 <ds3231_get_epoch+0x256>
    53e2:	8d cf       	rjmp	.-230    	; 0x52fe <ds3231_get_epoch+0x170>
    53e4:	ac 5e       	subi	r26, 0xEC	; 236
    53e6:	8b cf       	rjmp	.-234    	; 0x52fe <ds3231_get_epoch+0x170>
    53e8:	13 96       	adiw	r26, 0x03	; 3
    53ea:	be cf       	rjmp	.-132    	; 0x5368 <ds3231_get_epoch+0x1da>
    53ec:	60 e0       	ldi	r22, 0x00	; 0
    53ee:	70 e0       	ldi	r23, 0x00	; 0
    53f0:	cb 01       	movw	r24, r22
    53f2:	00 cf       	rjmp	.-512    	; 0x51f4 <ds3231_get_epoch+0x66>

000053f4 <ds3231_set_date_time>:
    53f4:	0f 93       	push	r16
    53f6:	1f 93       	push	r17
    53f8:	cf 93       	push	r28
    53fa:	df 93       	push	r29
    53fc:	cd b7       	in	r28, 0x3d	; 61
    53fe:	de b7       	in	r29, 0x3e	; 62
    5400:	27 97       	sbiw	r28, 0x07	; 7
    5402:	cd bf       	out	0x3d, r28	; 61
    5404:	de bf       	out	0x3e, r29	; 62
    5406:	fc 01       	movw	r30, r24
    5408:	81 e0       	ldi	r24, 0x01	; 1
    540a:	8c 83       	std	Y+4, r24	; 0x04
    540c:	81 89       	ldd	r24, Z+17	; 0x11
    540e:	82 95       	swap	r24
    5410:	80 7f       	andi	r24, 0xF0	; 240
    5412:	92 89       	ldd	r25, Z+18	; 0x12
    5414:	90 53       	subi	r25, 0x30	; 48
    5416:	89 2b       	or	r24, r25
    5418:	89 83       	std	Y+1, r24	; 0x01
    541a:	86 85       	ldd	r24, Z+14	; 0x0e
    541c:	82 95       	swap	r24
    541e:	80 7f       	andi	r24, 0xF0	; 240
    5420:	97 85       	ldd	r25, Z+15	; 0x0f
    5422:	90 53       	subi	r25, 0x30	; 48
    5424:	89 2b       	or	r24, r25
    5426:	8a 83       	std	Y+2, r24	; 0x02
    5428:	83 85       	ldd	r24, Z+11	; 0x0b
    542a:	82 95       	swap	r24
    542c:	80 7f       	andi	r24, 0xF0	; 240
    542e:	94 85       	ldd	r25, Z+12	; 0x0c
    5430:	90 53       	subi	r25, 0x30	; 48
    5432:	89 2b       	or	r24, r25
    5434:	8b 83       	std	Y+3, r24	; 0x03
    5436:	80 85       	ldd	r24, Z+8	; 0x08
    5438:	82 95       	swap	r24
    543a:	80 7f       	andi	r24, 0xF0	; 240
    543c:	91 85       	ldd	r25, Z+9	; 0x09
    543e:	90 53       	subi	r25, 0x30	; 48
    5440:	89 2b       	or	r24, r25
    5442:	8d 83       	std	Y+5, r24	; 0x05
    5444:	85 81       	ldd	r24, Z+5	; 0x05
    5446:	82 95       	swap	r24
    5448:	80 7f       	andi	r24, 0xF0	; 240
    544a:	96 81       	ldd	r25, Z+6	; 0x06
    544c:	90 53       	subi	r25, 0x30	; 48
    544e:	89 2b       	or	r24, r25
    5450:	8e 83       	std	Y+6, r24	; 0x06
    5452:	82 81       	ldd	r24, Z+2	; 0x02
    5454:	82 95       	swap	r24
    5456:	80 7f       	andi	r24, 0xF0	; 240
    5458:	93 81       	ldd	r25, Z+3	; 0x03
    545a:	90 53       	subi	r25, 0x30	; 48
    545c:	89 2b       	or	r24, r25
    545e:	8f 83       	std	Y+7, r24	; 0x07
    5460:	06 2f       	mov	r16, r22
    5462:	00 0f       	add	r16, r16
    5464:	00 0f       	add	r16, r16
    5466:	00 0f       	add	r16, r16
    5468:	06 1b       	sub	r16, r22
    546a:	1a e0       	ldi	r17, 0x0A	; 10
    546c:	27 e0       	ldi	r18, 0x07	; 7
    546e:	ae 01       	movw	r20, r28
    5470:	4f 5f       	subi	r20, 0xFF	; 255
    5472:	5f 4f       	sbci	r21, 0xFF	; 255
    5474:	60 2f       	mov	r22, r16
    5476:	80 ed       	ldi	r24, 0xD0	; 208
    5478:	0e 94 52 35 	call	0x6aa4	; 0x6aa4 <I2C_0_SendData>
    547c:	87 30       	cpi	r24, 0x07	; 7
    547e:	11 f0       	breq	.+4      	; 0x5484 <ds3231_set_date_time+0x90>
    5480:	11 50       	subi	r17, 0x01	; 1
    5482:	a1 f7       	brne	.-24     	; 0x546c <ds3231_set_date_time+0x78>
    5484:	27 96       	adiw	r28, 0x07	; 7
    5486:	cd bf       	out	0x3d, r28	; 61
    5488:	de bf       	out	0x3e, r29	; 62
    548a:	df 91       	pop	r29
    548c:	cf 91       	pop	r28
    548e:	1f 91       	pop	r17
    5490:	0f 91       	pop	r16
    5492:	08 95       	ret

00005494 <ds3231_1s_sqw>:
    5494:	1f 93       	push	r17
    5496:	cf 93       	push	r28
    5498:	df 93       	push	r29
    549a:	1f 92       	push	r1
    549c:	cd b7       	in	r28, 0x3d	; 61
    549e:	de b7       	in	r29, 0x3e	; 62
    54a0:	81 11       	cpse	r24, r1
    54a2:	15 c0       	rjmp	.+42     	; 0x54ce <ds3231_1s_sqw+0x3a>
    54a4:	84 e0       	ldi	r24, 0x04	; 4
    54a6:	89 83       	std	Y+1, r24	; 0x01
    54a8:	1a e0       	ldi	r17, 0x0A	; 10
    54aa:	21 e0       	ldi	r18, 0x01	; 1
    54ac:	ae 01       	movw	r20, r28
    54ae:	4f 5f       	subi	r20, 0xFF	; 255
    54b0:	5f 4f       	sbci	r21, 0xFF	; 255
    54b2:	6e e0       	ldi	r22, 0x0E	; 14
    54b4:	80 ed       	ldi	r24, 0xD0	; 208
    54b6:	0e 94 52 35 	call	0x6aa4	; 0x6aa4 <I2C_0_SendData>
    54ba:	81 30       	cpi	r24, 0x01	; 1
    54bc:	51 f0       	breq	.+20     	; 0x54d2 <ds3231_1s_sqw+0x3e>
    54be:	11 50       	subi	r17, 0x01	; 1
    54c0:	a1 f7       	brne	.-24     	; 0x54aa <ds3231_1s_sqw+0x16>
    54c2:	81 e0       	ldi	r24, 0x01	; 1
    54c4:	0f 90       	pop	r0
    54c6:	df 91       	pop	r29
    54c8:	cf 91       	pop	r28
    54ca:	1f 91       	pop	r17
    54cc:	08 95       	ret
    54ce:	80 e0       	ldi	r24, 0x00	; 0
    54d0:	ea cf       	rjmp	.-44     	; 0x54a6 <ds3231_1s_sqw+0x12>
    54d2:	80 e0       	ldi	r24, 0x00	; 0
    54d4:	f7 cf       	rjmp	.-18     	; 0x54c4 <ds3231_1s_sqw+0x30>

000054d6 <ds3231_set_aging>:
    54d6:	1f 93       	push	r17
    54d8:	cf 93       	push	r28
    54da:	df 93       	push	r29
    54dc:	1f 92       	push	r1
    54de:	cd b7       	in	r28, 0x3d	; 61
    54e0:	de b7       	in	r29, 0x3e	; 62
    54e2:	89 83       	std	Y+1, r24	; 0x01
    54e4:	1a e0       	ldi	r17, 0x0A	; 10
    54e6:	21 e0       	ldi	r18, 0x01	; 1
    54e8:	ae 01       	movw	r20, r28
    54ea:	4f 5f       	subi	r20, 0xFF	; 255
    54ec:	5f 4f       	sbci	r21, 0xFF	; 255
    54ee:	60 e1       	ldi	r22, 0x10	; 16
    54f0:	80 ed       	ldi	r24, 0xD0	; 208
    54f2:	0e 94 52 35 	call	0x6aa4	; 0x6aa4 <I2C_0_SendData>
    54f6:	81 30       	cpi	r24, 0x01	; 1
    54f8:	41 f0       	breq	.+16     	; 0x550a <ds3231_set_aging+0x34>
    54fa:	11 50       	subi	r17, 0x01	; 1
    54fc:	a1 f7       	brne	.-24     	; 0x54e6 <ds3231_set_aging+0x10>
    54fe:	81 e0       	ldi	r24, 0x01	; 1
    5500:	0f 90       	pop	r0
    5502:	df 91       	pop	r29
    5504:	cf 91       	pop	r28
    5506:	1f 91       	pop	r17
    5508:	08 95       	ret
    550a:	80 e0       	ldi	r24, 0x00	; 0
    550c:	f9 cf       	rjmp	.-14     	; 0x5500 <ds3231_set_aging+0x2a>

0000550e <ds3231_get_aging>:
    550e:	1f 93       	push	r17
    5510:	cf 93       	push	r28
    5512:	df 93       	push	r29
    5514:	1f 92       	push	r1
    5516:	cd b7       	in	r28, 0x3d	; 61
    5518:	de b7       	in	r29, 0x3e	; 62
    551a:	1a e0       	ldi	r17, 0x0A	; 10
    551c:	21 e0       	ldi	r18, 0x01	; 1
    551e:	ae 01       	movw	r20, r28
    5520:	4f 5f       	subi	r20, 0xFF	; 255
    5522:	5f 4f       	sbci	r21, 0xFF	; 255
    5524:	60 e1       	ldi	r22, 0x10	; 16
    5526:	80 ed       	ldi	r24, 0xD0	; 208
    5528:	0e 94 96 35 	call	0x6b2c	; 0x6b2c <I2C_0_GetData>
    552c:	81 30       	cpi	r24, 0x01	; 1
    552e:	11 f0       	breq	.+4      	; 0x5534 <ds3231_get_aging+0x26>
    5530:	11 50       	subi	r17, 0x01	; 1
    5532:	a1 f7       	brne	.-24     	; 0x551c <ds3231_get_aging+0xe>
    5534:	89 81       	ldd	r24, Y+1	; 0x01
    5536:	0f 90       	pop	r0
    5538:	df 91       	pop	r29
    553a:	cf 91       	pop	r28
    553c:	1f 91       	pop	r17
    553e:	08 95       	ret

00005540 <ds3231_responding>:
    5540:	1f 93       	push	r17
    5542:	cf 93       	push	r28
    5544:	df 93       	push	r29
    5546:	1f 92       	push	r1
    5548:	cd b7       	in	r28, 0x3d	; 61
    554a:	de b7       	in	r29, 0x3e	; 62
    554c:	14 e6       	ldi	r17, 0x64	; 100
    554e:	21 e0       	ldi	r18, 0x01	; 1
    5550:	ae 01       	movw	r20, r28
    5552:	4f 5f       	subi	r20, 0xFF	; 255
    5554:	5f 4f       	sbci	r21, 0xFF	; 255
    5556:	60 e1       	ldi	r22, 0x10	; 16
    5558:	80 ed       	ldi	r24, 0xD0	; 208
    555a:	0e 94 96 35 	call	0x6b2c	; 0x6b2c <I2C_0_GetData>
    555e:	81 30       	cpi	r24, 0x01	; 1
    5560:	11 f0       	breq	.+4      	; 0x5566 <ds3231_responding+0x26>
    5562:	11 50       	subi	r17, 0x01	; 1
    5564:	a1 f7       	brne	.-24     	; 0x554e <ds3231_responding+0xe>
    5566:	91 e0       	ldi	r25, 0x01	; 1
    5568:	81 30       	cpi	r24, 0x01	; 1
    556a:	09 f0       	breq	.+2      	; 0x556e <ds3231_responding+0x2e>
    556c:	90 e0       	ldi	r25, 0x00	; 0
    556e:	89 2f       	mov	r24, r25
    5570:	0f 90       	pop	r0
    5572:	df 91       	pop	r29
    5574:	cf 91       	pop	r28
    5576:	1f 91       	pop	r17
    5578:	08 95       	ret

0000557a <ds3231_init>:
    557a:	0e 94 40 35 	call	0x6a80	; 0x6a80 <I2C_0_Init>
    557e:	0e 94 a0 2a 	call	0x5540	; 0x5540 <ds3231_responding>
    5582:	91 e0       	ldi	r25, 0x01	; 1
    5584:	89 27       	eor	r24, r25
    5586:	08 95       	ret

00005588 <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    5588:	ef 92       	push	r14
    558a:	ff 92       	push	r15
    558c:	0f 93       	push	r16
    558e:	1f 93       	push	r17
    5590:	cf 93       	push	r28
    5592:	df 93       	push	r29
    5594:	cd b7       	in	r28, 0x3d	; 61
    5596:	de b7       	in	r29, 0x3e	; 62
    5598:	60 97       	sbiw	r28, 0x10	; 16
    559a:	cd bf       	out	0x3d, r28	; 61
    559c:	de bf       	out	0x3e, r29	; 62
    559e:	8a 01       	movw	r16, r20
    55a0:	79 01       	movw	r14, r18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    55a2:	60 58       	subi	r22, 0x80	; 128
    55a4:	73 44       	sbci	r23, 0x43	; 67
    55a6:	8d 46       	sbci	r24, 0x6D	; 109
    55a8:	98 43       	sbci	r25, 0x38	; 56
    55aa:	6d 87       	std	Y+13, r22	; 0x0d
    55ac:	7e 87       	std	Y+14, r23	; 0x0e
    55ae:	8f 87       	std	Y+15, r24	; 0x0f
    55b0:	98 8b       	std	Y+16, r25	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    55b2:	ce 01       	movw	r24, r28
    55b4:	0d 96       	adiw	r24, 0x0d	; 13
    55b6:	0e 94 9b 01 	call	0x336	; 0x336 <localtime>
    55ba:	fc 01       	movw	r30, r24
    55bc:	9c e0       	ldi	r25, 0x0C	; 12
    55be:	de 01       	movw	r26, r28
    55c0:	11 96       	adiw	r26, 0x01	; 1
    55c2:	01 90       	ld	r0, Z+
    55c4:	0d 92       	st	X+, r0
    55c6:	9a 95       	dec	r25
    55c8:	e1 f7       	brne	.-8      	; 0x55c2 <convertEpochToTimeString+0x3a>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    55ca:	9e 01       	movw	r18, r28
    55cc:	2f 5f       	subi	r18, 0xFF	; 255
    55ce:	3f 4f       	sbci	r19, 0xFF	; 255
    55d0:	45 ea       	ldi	r20, 0xA5	; 165
    55d2:	52 e4       	ldi	r21, 0x42	; 66
    55d4:	b7 01       	movw	r22, r14
    55d6:	c8 01       	movw	r24, r16
    55d8:	0e 94 36 02 	call	0x46c	; 0x46c <strftime>
   return buf;
 }
    55dc:	c8 01       	movw	r24, r16
    55de:	60 96       	adiw	r28, 0x10	; 16
    55e0:	cd bf       	out	0x3d, r28	; 61
    55e2:	de bf       	out	0x3e, r29	; 62
    55e4:	df 91       	pop	r29
    55e6:	cf 91       	pop	r28
    55e8:	1f 91       	pop	r17
    55ea:	0f 91       	pop	r16
    55ec:	ff 90       	pop	r15
    55ee:	ef 90       	pop	r14
    55f0:	08 95       	ret

000055f2 <_ZN13EepromManagerC1Ev>:
extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
{
}   /*EepromManager */
    55f2:	08 95       	ret

000055f4 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
{
}   /*~EepromManager */
    55f4:	08 95       	ret

000055f6 <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    55f6:	9c 01       	movw	r18, r24
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    55f8:	e0 e0       	ldi	r30, 0x00	; 0
    55fa:	f0 e1       	ldi	r31, 0x10	; 16
    55fc:	92 81       	ldd	r25, Z+2	; 0x02
    55fe:	91 fd       	sbrc	r25, 1
    5600:	fd cf       	rjmp	.-6      	; 0x55fc <_Z21avr_eeprom_write_bytejh+0x6>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    5602:	8d e9       	ldi	r24, 0x9D	; 157
    5604:	93 e1       	ldi	r25, 0x13	; 19
    5606:	84 bf       	out	0x34, r24	; 52
    5608:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    560c:	3c 5e       	subi	r19, 0xEC	; 236
    560e:	f9 01       	movw	r30, r18
    5610:	60 83       	st	Z, r22
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    5612:	90 e0       	ldi	r25, 0x00	; 0
    5614:	84 bf       	out	0x34, r24	; 52
    5616:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    561a:	08 95       	ret

0000561c <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    561c:	9c 01       	movw	r18, r24
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    561e:	e0 e0       	ldi	r30, 0x00	; 0
    5620:	f0 e1       	ldi	r31, 0x10	; 16
    5622:	92 81       	ldd	r25, Z+2	; 0x02
    5624:	91 fd       	sbrc	r25, 1
    5626:	fd cf       	rjmp	.-6      	; 0x5622 <_Z21avr_eeprom_write_wordjj+0x6>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    5628:	8d e9       	ldi	r24, 0x9D	; 157
    562a:	93 e1       	ldi	r25, 0x13	; 19
    562c:	84 bf       	out	0x34, r24	; 52
    562e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    5632:	3c 5e       	subi	r19, 0xEC	; 236
    5634:	f9 01       	movw	r30, r18
    5636:	60 83       	st	Z, r22
    5638:	71 83       	std	Z+1, r23	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    563a:	90 e0       	ldi	r25, 0x00	; 0
    563c:	84 bf       	out	0x34, r24	; 52
    563e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    5642:	08 95       	ret

00005644 <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    5644:	9c 01       	movw	r18, r24
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    5646:	e0 e0       	ldi	r30, 0x00	; 0
    5648:	f0 e1       	ldi	r31, 0x10	; 16
    564a:	92 81       	ldd	r25, Z+2	; 0x02
    564c:	91 fd       	sbrc	r25, 1
    564e:	fd cf       	rjmp	.-6      	; 0x564a <_Z22avr_eeprom_write_dwordjm+0x6>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    5650:	8d e9       	ldi	r24, 0x9D	; 157
    5652:	93 e1       	ldi	r25, 0x13	; 19
    5654:	84 bf       	out	0x34, r24	; 52
    5656:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    565a:	3c 5e       	subi	r19, 0xEC	; 236
    565c:	f9 01       	movw	r30, r18
    565e:	40 83       	st	Z, r20
    5660:	51 83       	std	Z+1, r21	; 0x01
    5662:	62 83       	std	Z+2, r22	; 0x02
    5664:	73 83       	std	Z+3, r23	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    5666:	90 e0       	ldi	r25, 0x00	; 0
    5668:	84 bf       	out	0x34, r24	; 52
    566a:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    566e:	08 95       	ret

00005670 <_Z22avr_eeprom_write_floatjf>:

void avr_eeprom_write_float(eeprom_addr_t index, float in) {
    5670:	9c 01       	movw	r18, r24
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    5672:	e0 e0       	ldi	r30, 0x00	; 0
    5674:	f0 e1       	ldi	r31, 0x10	; 16
    5676:	92 81       	ldd	r25, Z+2	; 0x02
    5678:	91 fd       	sbrc	r25, 1
    567a:	fd cf       	rjmp	.-6      	; 0x5676 <_Z22avr_eeprom_write_floatjf+0x6>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    567c:	8d e9       	ldi	r24, 0x9D	; 157
    567e:	93 e1       	ldi	r25, 0x13	; 19
    5680:	84 bf       	out	0x34, r24	; 52
    5682:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(float*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    5686:	3c 5e       	subi	r19, 0xEC	; 236
    5688:	f9 01       	movw	r30, r18
    568a:	40 83       	st	Z, r20
    568c:	51 83       	std	Z+1, r21	; 0x01
    568e:	62 83       	std	Z+2, r22	; 0x02
    5690:	73 83       	std	Z+3, r23	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    5692:	90 e0       	ldi	r25, 0x00	; 0
    5694:	84 bf       	out	0x34, r24	; 52
    5696:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    569a:	08 95       	ret

0000569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    569c:	cf 92       	push	r12
    569e:	df 92       	push	r13
    56a0:	ef 92       	push	r14
    56a2:	ff 92       	push	r15
    56a4:	1f 93       	push	r17
    56a6:	cf 93       	push	r28
    56a8:	df 93       	push	r29
	if(!val)
    56aa:	41 15       	cp	r20, r1
    56ac:	51 05       	cpc	r21, r1
    56ae:	09 f4       	brne	.+2      	; 0x56b2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x16>
    56b0:	64 c1       	rjmp	.+712    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
	{
		return;
	}

	switch(v)
    56b2:	e6 2f       	mov	r30, r22
    56b4:	f7 2f       	mov	r31, r23
    56b6:	e1 31       	cpi	r30, 0x11	; 17
    56b8:	81 e0       	ldi	r24, 0x01	; 1
    56ba:	f8 07       	cpc	r31, r24
    56bc:	08 f0       	brcs	.+2      	; 0x56c0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x24>
    56be:	5d c1       	rjmp	.+698    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
    56c0:	ea 01       	movw	r28, r20
    56c2:	eb 59       	subi	r30, 0x9B	; 155
    56c4:	f4 4d       	sbci	r31, 0xD4	; 212
    56c6:	0c 94 53 4e 	jmp	0x9ca6	; 0x9ca6 <__tablejump2__>
    56ca:	9e 2e       	mov	r9, r30
    56cc:	bd 2c       	mov	r11, r13
    56ce:	bd 2c       	mov	r11, r13
    56d0:	bd 2c       	mov	r11, r13
    56d2:	bd 2c       	mov	r11, r13
    56d4:	bd 2c       	mov	r11, r13
    56d6:	26 2e       	mov	r2, r22
    56d8:	bd 2c       	mov	r11, r13
    56da:	bd 2c       	mov	r11, r13
    56dc:	bd 2c       	mov	r11, r13
    56de:	bd 2c       	mov	r11, r13
    56e0:	bd 2c       	mov	r11, r13
    56e2:	bd 2c       	mov	r11, r13
    56e4:	bd 2c       	mov	r11, r13
    56e6:	3b 2e       	mov	r3, r27
    56e8:	bd 2c       	mov	r11, r13
    56ea:	bd 2c       	mov	r11, r13
    56ec:	bd 2c       	mov	r11, r13
    56ee:	bd 2c       	mov	r11, r13
    56f0:	bd 2c       	mov	r11, r13
    56f2:	bd 2c       	mov	r11, r13
    56f4:	bd 2c       	mov	r11, r13
    56f6:	c5 2c       	mov	r12, r5
    56f8:	bd 2c       	mov	r11, r13
    56fa:	bd 2c       	mov	r11, r13
    56fc:	bd 2c       	mov	r11, r13
    56fe:	bd 2c       	mov	r11, r13
    5700:	bd 2c       	mov	r11, r13
    5702:	bd 2c       	mov	r11, r13
    5704:	bd 2c       	mov	r11, r13
    5706:	bd 2c       	mov	r11, r13
    5708:	bd 2c       	mov	r11, r13
    570a:	bd 2c       	mov	r11, r13
    570c:	bd 2c       	mov	r11, r13
    570e:	bd 2c       	mov	r11, r13
    5710:	bd 2c       	mov	r11, r13
    5712:	bd 2c       	mov	r11, r13
    5714:	bd 2c       	mov	r11, r13
    5716:	bd 2c       	mov	r11, r13
    5718:	bd 2c       	mov	r11, r13
    571a:	bd 2c       	mov	r11, r13
    571c:	bd 2c       	mov	r11, r13
    571e:	bd 2c       	mov	r11, r13
    5720:	bd 2c       	mov	r11, r13
    5722:	bd 2c       	mov	r11, r13
    5724:	bd 2c       	mov	r11, r13
    5726:	bd 2c       	mov	r11, r13
    5728:	bd 2c       	mov	r11, r13
    572a:	e9 2c       	mov	r14, r9
    572c:	bd 2c       	mov	r11, r13
    572e:	bd 2c       	mov	r11, r13
    5730:	bd 2c       	mov	r11, r13
    5732:	bd 2c       	mov	r11, r13
    5734:	bd 2c       	mov	r11, r13
    5736:	bd 2c       	mov	r11, r13
    5738:	bd 2c       	mov	r11, r13
    573a:	bd 2c       	mov	r11, r13
    573c:	bd 2c       	mov	r11, r13
    573e:	bd 2c       	mov	r11, r13
    5740:	bd 2c       	mov	r11, r13
    5742:	bd 2c       	mov	r11, r13
    5744:	bd 2c       	mov	r11, r13
    5746:	bd 2c       	mov	r11, r13
    5748:	bd 2c       	mov	r11, r13
    574a:	bd 2c       	mov	r11, r13
    574c:	bd 2c       	mov	r11, r13
    574e:	bd 2c       	mov	r11, r13
    5750:	bd 2c       	mov	r11, r13
    5752:	bd 2c       	mov	r11, r13
    5754:	bd 2c       	mov	r11, r13
    5756:	bd 2c       	mov	r11, r13
    5758:	bd 2c       	mov	r11, r13
    575a:	bd 2c       	mov	r11, r13
    575c:	bd 2c       	mov	r11, r13
    575e:	9a 2c       	mov	r9, r10
    5760:	bd 2c       	mov	r11, r13
    5762:	bd 2c       	mov	r11, r13
    5764:	bd 2c       	mov	r11, r13
    5766:	bd 2c       	mov	r11, r13
    5768:	bd 2c       	mov	r11, r13
    576a:	bd 2c       	mov	r11, r13
    576c:	bd 2c       	mov	r11, r13
    576e:	bd 2c       	mov	r11, r13
    5770:	bd 2c       	mov	r11, r13
    5772:	bd 2c       	mov	r11, r13
    5774:	bd 2c       	mov	r11, r13
    5776:	bd 2c       	mov	r11, r13
    5778:	bd 2c       	mov	r11, r13
    577a:	bd 2c       	mov	r11, r13
    577c:	bd 2c       	mov	r11, r13
    577e:	bd 2c       	mov	r11, r13
    5780:	bd 2c       	mov	r11, r13
    5782:	bd 2c       	mov	r11, r13
    5784:	bd 2c       	mov	r11, r13
    5786:	bd 2c       	mov	r11, r13
    5788:	bd 2c       	mov	r11, r13
    578a:	bd 2c       	mov	r11, r13
    578c:	bd 2c       	mov	r11, r13
    578e:	bd 2c       	mov	r11, r13
    5790:	bd 2c       	mov	r11, r13
    5792:	0d 2d       	mov	r16, r13
    5794:	bd 2c       	mov	r11, r13
    5796:	bd 2c       	mov	r11, r13
    5798:	bd 2c       	mov	r11, r13
    579a:	bd 2c       	mov	r11, r13
    579c:	bd 2c       	mov	r11, r13
    579e:	bd 2c       	mov	r11, r13
    57a0:	bd 2c       	mov	r11, r13
    57a2:	bd 2c       	mov	r11, r13
    57a4:	bd 2c       	mov	r11, r13
    57a6:	bd 2c       	mov	r11, r13
    57a8:	bd 2c       	mov	r11, r13
    57aa:	bd 2c       	mov	r11, r13
    57ac:	bd 2c       	mov	r11, r13
    57ae:	5b 2d       	mov	r21, r11
    57b0:	bd 2c       	mov	r11, r13
    57b2:	bd 2c       	mov	r11, r13
    57b4:	bd 2c       	mov	r11, r13
    57b6:	bd 2c       	mov	r11, r13
    57b8:	bd 2c       	mov	r11, r13
    57ba:	69 2d       	mov	r22, r9
    57bc:	bd 2c       	mov	r11, r13
    57be:	bd 2c       	mov	r11, r13
    57c0:	bd 2c       	mov	r11, r13
    57c2:	bd 2c       	mov	r11, r13
    57c4:	bd 2c       	mov	r11, r13
    57c6:	77 2d       	mov	r23, r7
    57c8:	bd 2c       	mov	r11, r13
    57ca:	bd 2c       	mov	r11, r13
    57cc:	bd 2c       	mov	r11, r13
    57ce:	bd 2c       	mov	r11, r13
    57d0:	bd 2c       	mov	r11, r13
    57d2:	85 2d       	mov	r24, r5
    57d4:	bd 2c       	mov	r11, r13
    57d6:	bd 2c       	mov	r11, r13
    57d8:	bd 2c       	mov	r11, r13
    57da:	bd 2c       	mov	r11, r13
    57dc:	bd 2c       	mov	r11, r13
    57de:	93 2d       	mov	r25, r3
    57e0:	bd 2c       	mov	r11, r13
    57e2:	bd 2c       	mov	r11, r13
    57e4:	bd 2c       	mov	r11, r13
    57e6:	bd 2c       	mov	r11, r13
    57e8:	bd 2c       	mov	r11, r13
    57ea:	50 2e       	mov	r5, r16
    57ec:	bd 2c       	mov	r11, r13
    57ee:	bd 2c       	mov	r11, r13
    57f0:	bd 2c       	mov	r11, r13
    57f2:	bd 2c       	mov	r11, r13
    57f4:	76 2c       	mov	r7, r6
    57f6:	bd 2c       	mov	r11, r13
    57f8:	bd 2c       	mov	r11, r13
    57fa:	bd 2c       	mov	r11, r13
    57fc:	bd 2c       	mov	r11, r13
    57fe:	bd 2c       	mov	r11, r13
    5800:	bd 2c       	mov	r11, r13
    5802:	bd 2c       	mov	r11, r13
    5804:	8a 2c       	mov	r8, r10
    5806:	bd 2c       	mov	r11, r13
    5808:	bd 2c       	mov	r11, r13
    580a:	bd 2c       	mov	r11, r13
    580c:	bd 2c       	mov	r11, r13
    580e:	bd 2c       	mov	r11, r13
    5810:	31 2d       	mov	r19, r1
    5812:	bd 2c       	mov	r11, r13
    5814:	bd 2c       	mov	r11, r13
    5816:	bd 2c       	mov	r11, r13
    5818:	bd 2c       	mov	r11, r13
    581a:	3f 2d       	mov	r19, r15
    581c:	bd 2c       	mov	r11, r13
    581e:	bd 2c       	mov	r11, r13
    5820:	bd 2c       	mov	r11, r13
    5822:	bd 2c       	mov	r11, r13
    5824:	4d 2d       	mov	r20, r13
    5826:	bd 2c       	mov	r11, r13
    5828:	bd 2c       	mov	r11, r13
    582a:	bd 2c       	mov	r11, r13
    582c:	bd 2c       	mov	r11, r13
    582e:	5e 2e       	mov	r5, r30
    5830:	bd 2c       	mov	r11, r13
    5832:	bd 2c       	mov	r11, r13
    5834:	bd 2c       	mov	r11, r13
    5836:	bd 2c       	mov	r11, r13
    5838:	bd 2c       	mov	r11, r13
    583a:	6e 2e       	mov	r6, r30
    583c:	bd 2c       	mov	r11, r13
    583e:	bd 2c       	mov	r11, r13
    5840:	bd 2c       	mov	r11, r13
    5842:	bd 2c       	mov	r11, r13
    5844:	bd 2c       	mov	r11, r13
    5846:	7e 2e       	mov	r7, r30
    5848:	bd 2c       	mov	r11, r13
    584a:	bd 2c       	mov	r11, r13
    584c:	bd 2c       	mov	r11, r13
    584e:	bd 2c       	mov	r11, r13
    5850:	bd 2c       	mov	r11, r13
    5852:	8e 2e       	mov	r8, r30
    5854:	bd 2c       	mov	r11, r13
    5856:	bd 2c       	mov	r11, r13
    5858:	bd 2c       	mov	r11, r13
    585a:	bd 2c       	mov	r11, r13
    585c:	bd 2c       	mov	r11, r13
    585e:	af 2d       	mov	r26, r15
    5860:	bd 2c       	mov	r11, r13
    5862:	bd 2c       	mov	r11, r13
    5864:	bd 2c       	mov	r11, r13
    5866:	bd 2c       	mov	r11, r13
    5868:	bd 2c       	mov	r11, r13
    586a:	bd 2d       	mov	r27, r13
    586c:	bd 2c       	mov	r11, r13
    586e:	bd 2c       	mov	r11, r13
    5870:	bd 2c       	mov	r11, r13
    5872:	bd 2c       	mov	r11, r13
    5874:	bd 2c       	mov	r11, r13
    5876:	bd 2c       	mov	r11, r13
    5878:	bd 2c       	mov	r11, r13
    587a:	d2 2d       	mov	r29, r2
    587c:	bd 2c       	mov	r11, r13
    587e:	bd 2c       	mov	r11, r13
    5880:	bd 2c       	mov	r11, r13
    5882:	bd 2c       	mov	r11, r13
    5884:	bd 2c       	mov	r11, r13
    5886:	bd 2c       	mov	r11, r13
    5888:	bd 2c       	mov	r11, r13
    588a:	e7 2d       	mov	r30, r7
    588c:	bd 2c       	mov	r11, r13
    588e:	bd 2c       	mov	r11, r13
    5890:	bd 2c       	mov	r11, r13
    5892:	bd 2c       	mov	r11, r13
    5894:	bd 2c       	mov	r11, r13
    5896:	bd 2c       	mov	r11, r13
    5898:	bd 2c       	mov	r11, r13
    589a:	fc 2d       	mov	r31, r12
    589c:	bd 2c       	mov	r11, r13
    589e:	bd 2c       	mov	r11, r13
    58a0:	bd 2c       	mov	r11, r13
    58a2:	bd 2c       	mov	r11, r13
    58a4:	bd 2c       	mov	r11, r13
    58a6:	bd 2c       	mov	r11, r13
    58a8:	bd 2c       	mov	r11, r13
    58aa:	11 2e       	mov	r1, r17
    58ac:	bd 2c       	mov	r11, r13
    58ae:	bd 2c       	mov	r11, r13
    58b0:	bd 2c       	mov	r11, r13
    58b2:	bd 2c       	mov	r11, r13
    58b4:	bd 2c       	mov	r11, r13
    58b6:	bd 2c       	mov	r11, r13
    58b8:	bd 2c       	mov	r11, r13
    58ba:	a1 2d       	mov	r26, r1
    58bc:	bd 2c       	mov	r11, r13
    58be:	bd 2c       	mov	r11, r13
    58c0:	bd 2c       	mov	r11, r13
    58c2:	bd 2c       	mov	r11, r13
    58c4:	ae 2e       	mov	r10, r30
    58c6:	bd 2c       	mov	r11, r13
    58c8:	bd 2c       	mov	r11, r13
    58ca:	bd 2c       	mov	r11, r13
    58cc:	bd 2c       	mov	r11, r13
    58ce:	bd 2c       	mov	r11, r13
    58d0:	bd 2c       	mov	r11, r13
    58d2:	bd 2c       	mov	r11, r13
    58d4:	c6 2e       	mov	r12, r22
    58d6:	bd 2c       	mov	r11, r13
    58d8:	bd 2c       	mov	r11, r13
    58da:	bd 2c       	mov	r11, r13
    58dc:	bd 2c       	mov	r11, r13
    58de:	bd 2c       	mov	r11, r13
    58e0:	d7 2e       	mov	r13, r23
    58e2:	bd 2c       	mov	r11, r13
    58e4:	bd 2c       	mov	r11, r13
    58e6:	bd 2c       	mov	r11, r13
    58e8:	bd 2c       	mov	r11, r13
    58ea:	e5 2e       	mov	r14, r21
	{
		case RTTY_offset:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    58ec:	c8 80       	ld	r12, Y
    58ee:	d9 80       	ldd	r13, Y+1	; 0x01
    58f0:	ea 80       	ldd	r14, Y+2	; 0x02
    58f2:	fb 80       	ldd	r15, Y+3	; 0x03
    58f4:	85 e9       	ldi	r24, 0x95	; 149
    58f6:	90 e0       	ldi	r25, 0x00	; 0
    58f8:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    58fc:	c6 16       	cp	r12, r22
    58fe:	d7 06       	cpc	r13, r23
    5900:	e8 06       	cpc	r14, r24
    5902:	f9 06       	cpc	r15, r25
    5904:	d1 f1       	breq	.+116    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    5906:	b7 01       	movw	r22, r14
    5908:	a6 01       	movw	r20, r12
    590a:	85 e9       	ldi	r24, 0x95	; 149
    590c:	90 e0       	ldi	r25, 0x00	; 0
    590e:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5912:	33 c0       	rjmp	.+102    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case RF_Power:
		{
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    5914:	09 90       	ld	r0, Y+
    5916:	d8 81       	ld	r29, Y
    5918:	c0 2d       	mov	r28, r0
    591a:	8d e9       	ldi	r24, 0x9D	; 157
    591c:	90 e0       	ldi	r25, 0x00	; 0
    591e:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5922:	c8 17       	cp	r28, r24
    5924:	d9 07       	cpc	r29, r25
    5926:	49 f1       	breq	.+82     	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_word(RF_Power, *(uint16_t*)val);
    5928:	be 01       	movw	r22, r28
    592a:	8d e9       	ldi	r24, 0x9D	; 157
    592c:	90 e0       	ldi	r25, 0x00	; 0
    592e:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
    5932:	23 c0       	rjmp	.+70     	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		
		case StationID_text:
		{
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
    5934:	7a 01       	movw	r14, r20
    5936:	ef ef       	ldi	r30, 0xFF	; 255
    5938:	ee 1a       	sub	r14, r30
    593a:	fe 0a       	sbc	r15, r30
    593c:	18 81       	ld	r17, Y
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    593e:	11 23       	and	r17, r17
    5940:	b1 f0       	breq	.+44     	; 0x596e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2d2>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    5942:	ca e4       	ldi	r28, 0x4A	; 74
    5944:	d0 e0       	ldi	r29, 0x00	; 0
    5946:	09 c0       	rjmp	.+18     	; 0x595a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2be>
				{
					avr_eeprom_write_byte(j, c);
				}
				
				cnt++;
				c = *char_addr++;
    5948:	f7 01       	movw	r30, r14
    594a:	11 91       	ld	r17, Z+
    594c:	7f 01       	movw	r14, r30
				j++;
    594e:	21 96       	adiw	r28, 0x01	; 1
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    5950:	11 23       	and	r17, r17
    5952:	79 f0       	breq	.+30     	; 0x5972 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2d6>
    5954:	ce 35       	cpi	r28, 0x5E	; 94
    5956:	d1 05       	cpc	r29, r1
    5958:	61 f0       	breq	.+24     	; 0x5972 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2d6>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    595a:	ce 01       	movw	r24, r28
    595c:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
				if(c != q)
    5960:	81 17       	cp	r24, r17
    5962:	91 f3       	breq	.-28     	; 0x5948 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2ac>
				{
					avr_eeprom_write_byte(j, c);
    5964:	61 2f       	mov	r22, r17
    5966:	ce 01       	movw	r24, r28
    5968:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    596c:	ed cf       	rjmp	.-38     	; 0x5948 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2ac>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    596e:	ca e4       	ldi	r28, 0x4A	; 74
    5970:	d0 e0       	ldi	r29, 0x00	; 0
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    5972:	60 e0       	ldi	r22, 0x00	; 0
    5974:	ce 01       	movw	r24, r28
    5976:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
		{

		}
		break;
	}
}
    597a:	df 91       	pop	r29
    597c:	cf 91       	pop	r28
    597e:	1f 91       	pop	r17
    5980:	ff 90       	pop	r15
    5982:	ef 90       	pop	r14
    5984:	df 90       	pop	r13
    5986:	cf 90       	pop	r12
    5988:	08 95       	ret

		case Pattern_text:
		{
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
    598a:	7a 01       	movw	r14, r20
    598c:	ff ef       	ldi	r31, 0xFF	; 255
    598e:	ef 1a       	sub	r14, r31
    5990:	ff 0a       	sbc	r15, r31
    5992:	18 81       	ld	r17, Y
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    5994:	11 23       	and	r17, r17
    5996:	b1 f0       	breq	.+44     	; 0x59c4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x328>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    5998:	c6 e1       	ldi	r28, 0x16	; 22
    599a:	d0 e0       	ldi	r29, 0x00	; 0
    599c:	09 c0       	rjmp	.+18     	; 0x59b0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x314>
				{
					avr_eeprom_write_byte(j, c);
				}
				
				cnt++;
				c = *char_addr++;
    599e:	f7 01       	movw	r30, r14
    59a0:	11 91       	ld	r17, Z+
    59a2:	7f 01       	movw	r14, r30
				j++;
    59a4:	21 96       	adiw	r28, 0x01	; 1
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    59a6:	11 23       	and	r17, r17
    59a8:	79 f0       	breq	.+30     	; 0x59c8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x32c>
    59aa:	ca 32       	cpi	r28, 0x2A	; 42
    59ac:	d1 05       	cpc	r29, r1
    59ae:	61 f0       	breq	.+24     	; 0x59c8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x32c>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    59b0:	ce 01       	movw	r24, r28
    59b2:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
				if(c != q)
    59b6:	81 17       	cp	r24, r17
    59b8:	91 f3       	breq	.-28     	; 0x599e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x302>
				{
					avr_eeprom_write_byte(j, c);
    59ba:	61 2f       	mov	r22, r17
    59bc:	ce 01       	movw	r24, r28
    59be:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    59c2:	ed cf       	rjmp	.-38     	; 0x599e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x302>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    59c4:	c6 e1       	ldi	r28, 0x16	; 22
    59c6:	d0 e0       	ldi	r29, 0x00	; 0
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    59c8:	60 e0       	ldi	r22, 0x00	; 0
    59ca:	ce 01       	movw	r24, r28
    59cc:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    59d0:	d4 cf       	rjmp	.-88     	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
				
		case Foxoring_pattern_text:
		{
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
    59d2:	7a 01       	movw	r14, r20
    59d4:	ff ef       	ldi	r31, 0xFF	; 255
    59d6:	ef 1a       	sub	r14, r31
    59d8:	ff 0a       	sbc	r15, r31
    59da:	18 81       	ld	r17, Y
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Foxoring_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    59dc:	11 23       	and	r17, r17
    59de:	b1 f0       	breq	.+44     	; 0x5a0c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x370>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Foxoring_pattern_text;
    59e0:	c0 e3       	ldi	r28, 0x30	; 48
    59e2:	d0 e0       	ldi	r29, 0x00	; 0
    59e4:	09 c0       	rjmp	.+18     	; 0x59f8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x35c>
				{
					avr_eeprom_write_byte(j, c);
				}
				
				cnt++;
				c = *char_addr++;
    59e6:	f7 01       	movw	r30, r14
    59e8:	11 91       	ld	r17, Z+
    59ea:	7f 01       	movw	r14, r30
				j++;
    59ec:	21 96       	adiw	r28, 0x01	; 1
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Foxoring_pattern_text;

			while(c && (cnt<MAX_PATTERN_TEXT_LENGTH))
    59ee:	11 23       	and	r17, r17
    59f0:	79 f0       	breq	.+30     	; 0x5a10 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x374>
    59f2:	c4 34       	cpi	r28, 0x44	; 68
    59f4:	d1 05       	cpc	r29, r1
    59f6:	61 f0       	breq	.+24     	; 0x5a10 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x374>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    59f8:	ce 01       	movw	r24, r28
    59fa:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
				if(c != q)
    59fe:	81 17       	cp	r24, r17
    5a00:	91 f3       	breq	.-28     	; 0x59e6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x34a>
				{
					avr_eeprom_write_byte(j, c);
    5a02:	61 2f       	mov	r22, r17
    5a04:	ce 01       	movw	r24, r28
    5a06:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5a0a:	ed cf       	rjmp	.-38     	; 0x59e6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x34a>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)Foxoring_pattern_text;
    5a0c:	c0 e3       	ldi	r28, 0x30	; 48
    5a0e:	d0 e0       	ldi	r29, 0x00	; 0
				cnt++;
				c = *char_addr++;
				j++;
			}

			avr_eeprom_write_byte(j, 0);
    5a10:	60 e0       	ldi	r22, 0x00	; 0
    5a12:	ce 01       	movw	r24, r28
    5a14:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    5a18:	b0 cf       	rjmp	.-160    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>

		case UnlockCode:
		{
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
    5a1a:	7a 01       	movw	r14, r20
    5a1c:	ff ef       	ldi	r31, 0xFF	; 255
    5a1e:	ef 1a       	sub	r14, r31
    5a20:	ff 0a       	sbc	r15, r31
    5a22:	18 81       	ld	r17, Y
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;

			while(c && (cnt<MAX_UNLOCK_CODE_LENGTH))
    5a24:	11 23       	and	r17, r17
    5a26:	b1 f0       	breq	.+44     	; 0x5a54 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3b8>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;
    5a28:	c4 e6       	ldi	r28, 0x64	; 100
    5a2a:	d0 e0       	ldi	r29, 0x00	; 0
    5a2c:	09 c0       	rjmp	.+18     	; 0x5a40 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3a4>
				{
					avr_eeprom_write_byte(j, c);
				}
				
				cnt++;
				j++;
    5a2e:	21 96       	adiw	r28, 0x01	; 1
				c = *char_addr++;
    5a30:	f7 01       	movw	r30, r14
    5a32:	11 91       	ld	r17, Z+
    5a34:	7f 01       	movw	r14, r30
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;

			while(c && (cnt<MAX_UNLOCK_CODE_LENGTH))
    5a36:	11 23       	and	r17, r17
    5a38:	79 f0       	breq	.+30     	; 0x5a58 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3bc>
    5a3a:	cc 36       	cpi	r28, 0x6C	; 108
    5a3c:	d1 05       	cpc	r29, r1
    5a3e:	61 f0       	breq	.+24     	; 0x5a58 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3bc>
			{
				q = (char)eeprom_read_byte((uint8_t*)j);
    5a40:	ce 01       	movw	r24, r28
    5a42:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
				if(c != q)
    5a46:	81 17       	cp	r24, r17
    5a48:	91 f3       	breq	.-28     	; 0x5a2e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x392>
				{
					avr_eeprom_write_byte(j, c);
    5a4a:	61 2f       	mov	r22, r17
    5a4c:	ce 01       	movw	r24, r28
    5a4e:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5a52:	ed cf       	rjmp	.-38     	; 0x5a2e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x392>
			int cnt = 0;
			char* char_addr = (char*)val;
			char c = *char_addr++;
			char q;
			
			eeprom_addr_t j = (eeprom_addr_t)UnlockCode;
    5a54:	c4 e6       	ldi	r28, 0x64	; 100
    5a56:	d0 e0       	ldi	r29, 0x00	; 0
				cnt++;
				j++;
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    5a58:	60 e0       	ldi	r22, 0x00	; 0
    5a5a:	ce 01       	movw	r24, r28
    5a5c:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    5a60:	8c cf       	rjmp	.-232    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>

		case Id_codespeed:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    5a62:	c8 81       	ld	r28, Y
    5a64:	83 ea       	ldi	r24, 0xA3	; 163
    5a66:	90 e0       	ldi	r25, 0x00	; 0
    5a68:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5a6c:	c8 17       	cp	r28, r24
    5a6e:	09 f4       	brne	.+2      	; 0x5a72 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3d6>
    5a70:	84 cf       	rjmp	.-248    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    5a72:	6c 2f       	mov	r22, r28
    5a74:	83 ea       	ldi	r24, 0xA3	; 163
    5a76:	90 e0       	ldi	r25, 0x00	; 0
    5a78:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5a7c:	7e cf       	rjmp	.-260    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Pattern_Code_Speed:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
    5a7e:	c8 81       	ld	r28, Y
    5a80:	88 ea       	ldi	r24, 0xA8	; 168
    5a82:	90 e0       	ldi	r25, 0x00	; 0
    5a84:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5a88:	c8 17       	cp	r28, r24
    5a8a:	09 f4       	brne	.+2      	; 0x5a8e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x3f2>
    5a8c:	76 cf       	rjmp	.-276    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
    5a8e:	6c 2f       	mov	r22, r28
    5a90:	88 ea       	ldi	r24, 0xA8	; 168
    5a92:	90 e0       	ldi	r25, 0x00	; 0
    5a94:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5a98:	70 cf       	rjmp	.-288    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Foxoring_Pattern_Code_Speed:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.foxoring_pattern_codespeed)))
    5a9a:	c8 81       	ld	r28, Y
    5a9c:	8d ea       	ldi	r24, 0xAD	; 173
    5a9e:	90 e0       	ldi	r25, 0x00	; 0
    5aa0:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5aa4:	c8 17       	cp	r28, r24
    5aa6:	09 f4       	brne	.+2      	; 0x5aaa <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x40e>
    5aa8:	68 cf       	rjmp	.-304    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Foxoring_Pattern_Code_Speed, *(uint8_t*)val);
    5aaa:	6c 2f       	mov	r22, r28
    5aac:	8d ea       	ldi	r24, 0xAD	; 173
    5aae:	90 e0       	ldi	r25, 0x00	; 0
    5ab0:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5ab4:	62 cf       	rjmp	.-316    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;

		case Fox_setting_none:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_none)))
    5ab6:	c8 81       	ld	r28, Y
    5ab8:	82 e7       	ldi	r24, 0x72	; 114
    5aba:	90 e0       	ldi	r25, 0x00	; 0
    5abc:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5ac0:	c8 17       	cp	r28, r24
    5ac2:	09 f4       	brne	.+2      	; 0x5ac6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x42a>
    5ac4:	5a cf       	rjmp	.-332    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Fox_setting_none, *(uint8_t*)val);
    5ac6:	6c 2f       	mov	r22, r28
    5ac8:	82 e7       	ldi	r24, 0x72	; 114
    5aca:	90 e0       	ldi	r25, 0x00	; 0
    5acc:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5ad0:	54 cf       	rjmp	.-344    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Fox_setting_classic:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_classic)))
    5ad2:	c8 81       	ld	r28, Y
    5ad4:	88 e7       	ldi	r24, 0x78	; 120
    5ad6:	90 e0       	ldi	r25, 0x00	; 0
    5ad8:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5adc:	c8 17       	cp	r28, r24
    5ade:	09 f4       	brne	.+2      	; 0x5ae2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x446>
    5ae0:	4c cf       	rjmp	.-360    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Fox_setting_classic, *(uint8_t*)val);
    5ae2:	6c 2f       	mov	r22, r28
    5ae4:	88 e7       	ldi	r24, 0x78	; 120
    5ae6:	90 e0       	ldi	r25, 0x00	; 0
    5ae8:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5aec:	46 cf       	rjmp	.-372    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Fox_setting_sprint:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_sprint)))
    5aee:	c8 81       	ld	r28, Y
    5af0:	8e e7       	ldi	r24, 0x7E	; 126
    5af2:	90 e0       	ldi	r25, 0x00	; 0
    5af4:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5af8:	c8 17       	cp	r28, r24
    5afa:	09 f4       	brne	.+2      	; 0x5afe <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x462>
    5afc:	3e cf       	rjmp	.-388    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Fox_setting_sprint, *(uint8_t*)val);
    5afe:	6c 2f       	mov	r22, r28
    5b00:	8e e7       	ldi	r24, 0x7E	; 126
    5b02:	90 e0       	ldi	r25, 0x00	; 0
    5b04:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5b08:	38 cf       	rjmp	.-400    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Fox_setting_foxoring:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_foxoring)))
    5b0a:	c8 81       	ld	r28, Y
    5b0c:	84 e8       	ldi	r24, 0x84	; 132
    5b0e:	90 e0       	ldi	r25, 0x00	; 0
    5b10:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5b14:	c8 17       	cp	r28, r24
    5b16:	09 f4       	brne	.+2      	; 0x5b1a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x47e>
    5b18:	30 cf       	rjmp	.-416    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Fox_setting_foxoring, *(uint8_t*)val);
    5b1a:	6c 2f       	mov	r22, r28
    5b1c:	84 e8       	ldi	r24, 0x84	; 132
    5b1e:	90 e0       	ldi	r25, 0x00	; 0
    5b20:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5b24:	2a cf       	rjmp	.-428    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Fox_setting_blind:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_blind)))
    5b26:	c8 81       	ld	r28, Y
    5b28:	8a e8       	ldi	r24, 0x8A	; 138
    5b2a:	90 e0       	ldi	r25, 0x00	; 0
    5b2c:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5b30:	c8 17       	cp	r28, r24
    5b32:	09 f4       	brne	.+2      	; 0x5b36 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x49a>
    5b34:	22 cf       	rjmp	.-444    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Fox_setting_blind, *(uint8_t*)val);
    5b36:	6c 2f       	mov	r22, r28
    5b38:	8a e8       	ldi	r24, 0x8A	; 138
    5b3a:	90 e0       	ldi	r25, 0x00	; 0
    5b3c:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5b40:	1c cf       	rjmp	.-456    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Master_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.master_setting)))
    5b42:	c8 81       	ld	r28, Y
    5b44:	88 ef       	ldi	r24, 0xF8	; 248
    5b46:	90 e0       	ldi	r25, 0x00	; 0
    5b48:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5b4c:	c8 17       	cp	r28, r24
    5b4e:	09 f4       	brne	.+2      	; 0x5b52 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4b6>
    5b50:	14 cf       	rjmp	.-472    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Master_setting, *(uint8_t*)val);
    5b52:	6c 2f       	mov	r22, r28
    5b54:	88 ef       	ldi	r24, 0xF8	; 248
    5b56:	90 e0       	ldi	r25, 0x00	; 0
    5b58:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5b5c:	0e cf       	rjmp	.-484    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Event_setting:
		{
			if(*(uint8_t*)val != eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.event_setting)))
    5b5e:	c8 81       	ld	r28, Y
    5b60:	8a ec       	ldi	r24, 0xCA	; 202
    5b62:	90 e0       	ldi	r25, 0x00	; 0
    5b64:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5b68:	c8 17       	cp	r28, r24
    5b6a:	09 f4       	brne	.+2      	; 0x5b6e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4d2>
    5b6c:	06 cf       	rjmp	.-500    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Event_setting, *(uint8_t*)val);
    5b6e:	6c 2f       	mov	r22, r28
    5b70:	8a ec       	ldi	r24, 0xCA	; 202
    5b72:	90 e0       	ldi	r25, 0x00	; 0
    5b74:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5b78:	00 cf       	rjmp	.-512    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Frequency:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    5b7a:	c8 80       	ld	r12, Y
    5b7c:	d9 80       	ldd	r13, Y+1	; 0x01
    5b7e:	ea 80       	ldd	r14, Y+2	; 0x02
    5b80:	fb 80       	ldd	r15, Y+3	; 0x03
    5b82:	80 ed       	ldi	r24, 0xD0	; 208
    5b84:	90 e0       	ldi	r25, 0x00	; 0
    5b86:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5b8a:	c6 16       	cp	r12, r22
    5b8c:	d7 06       	cpc	r13, r23
    5b8e:	e8 06       	cpc	r14, r24
    5b90:	f9 06       	cpc	r15, r25
    5b92:	09 f4       	brne	.+2      	; 0x5b96 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x4fa>
    5b94:	f2 ce       	rjmp	.-540    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    5b96:	b7 01       	movw	r22, r14
    5b98:	a6 01       	movw	r20, r12
    5b9a:	80 ed       	ldi	r24, 0xD0	; 208
    5b9c:	90 e0       	ldi	r25, 0x00	; 0
    5b9e:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5ba2:	eb ce       	rjmp	.-554    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Frequency_Low:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency_low)))
    5ba4:	c8 80       	ld	r12, Y
    5ba6:	d9 80       	ldd	r13, Y+1	; 0x01
    5ba8:	ea 80       	ldd	r14, Y+2	; 0x02
    5baa:	fb 80       	ldd	r15, Y+3	; 0x03
    5bac:	88 ed       	ldi	r24, 0xD8	; 216
    5bae:	90 e0       	ldi	r25, 0x00	; 0
    5bb0:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5bb4:	c6 16       	cp	r12, r22
    5bb6:	d7 06       	cpc	r13, r23
    5bb8:	e8 06       	cpc	r14, r24
    5bba:	f9 06       	cpc	r15, r25
    5bbc:	09 f4       	brne	.+2      	; 0x5bc0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x524>
    5bbe:	dd ce       	rjmp	.-582    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(Frequency_Low, *(uint32_t*)val);
    5bc0:	b7 01       	movw	r22, r14
    5bc2:	a6 01       	movw	r20, r12
    5bc4:	88 ed       	ldi	r24, 0xD8	; 216
    5bc6:	90 e0       	ldi	r25, 0x00	; 0
    5bc8:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5bcc:	d6 ce       	rjmp	.-596    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Frequency_Med:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency_med)))
    5bce:	c8 80       	ld	r12, Y
    5bd0:	d9 80       	ldd	r13, Y+1	; 0x01
    5bd2:	ea 80       	ldd	r14, Y+2	; 0x02
    5bd4:	fb 80       	ldd	r15, Y+3	; 0x03
    5bd6:	80 ee       	ldi	r24, 0xE0	; 224
    5bd8:	90 e0       	ldi	r25, 0x00	; 0
    5bda:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5bde:	c6 16       	cp	r12, r22
    5be0:	d7 06       	cpc	r13, r23
    5be2:	e8 06       	cpc	r14, r24
    5be4:	f9 06       	cpc	r15, r25
    5be6:	09 f4       	brne	.+2      	; 0x5bea <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x54e>
    5be8:	c8 ce       	rjmp	.-624    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(Frequency_Med, *(uint32_t*)val);
    5bea:	b7 01       	movw	r22, r14
    5bec:	a6 01       	movw	r20, r12
    5bee:	80 ee       	ldi	r24, 0xE0	; 224
    5bf0:	90 e0       	ldi	r25, 0x00	; 0
    5bf2:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5bf6:	c1 ce       	rjmp	.-638    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Frequency_Hi:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency_high)))
    5bf8:	c8 80       	ld	r12, Y
    5bfa:	d9 80       	ldd	r13, Y+1	; 0x01
    5bfc:	ea 80       	ldd	r14, Y+2	; 0x02
    5bfe:	fb 80       	ldd	r15, Y+3	; 0x03
    5c00:	88 ee       	ldi	r24, 0xE8	; 232
    5c02:	90 e0       	ldi	r25, 0x00	; 0
    5c04:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5c08:	c6 16       	cp	r12, r22
    5c0a:	d7 06       	cpc	r13, r23
    5c0c:	e8 06       	cpc	r14, r24
    5c0e:	f9 06       	cpc	r15, r25
    5c10:	09 f4       	brne	.+2      	; 0x5c14 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x578>
    5c12:	b3 ce       	rjmp	.-666    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(Frequency_Hi, *(uint32_t*)val);
    5c14:	b7 01       	movw	r22, r14
    5c16:	a6 01       	movw	r20, r12
    5c18:	88 ee       	ldi	r24, 0xE8	; 232
    5c1a:	90 e0       	ldi	r25, 0x00	; 0
    5c1c:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5c20:	ac ce       	rjmp	.-680    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Frequency_Beacon:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.frequency_beacon)))
    5c22:	c8 80       	ld	r12, Y
    5c24:	d9 80       	ldd	r13, Y+1	; 0x01
    5c26:	ea 80       	ldd	r14, Y+2	; 0x02
    5c28:	fb 80       	ldd	r15, Y+3	; 0x03
    5c2a:	80 ef       	ldi	r24, 0xF0	; 240
    5c2c:	90 e0       	ldi	r25, 0x00	; 0
    5c2e:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5c32:	c6 16       	cp	r12, r22
    5c34:	d7 06       	cpc	r13, r23
    5c36:	e8 06       	cpc	r14, r24
    5c38:	f9 06       	cpc	r15, r25
    5c3a:	09 f4       	brne	.+2      	; 0x5c3e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5a2>
    5c3c:	9e ce       	rjmp	.-708    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(Frequency_Beacon, *(uint32_t*)val);
    5c3e:	b7 01       	movw	r22, r14
    5c40:	a6 01       	movw	r20, r12
    5c42:	80 ef       	ldi	r24, 0xF0	; 240
    5c44:	90 e0       	ldi	r25, 0x00	; 0
    5c46:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5c4a:	97 ce       	rjmp	.-722    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;

		case Event_start_epoch:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    5c4c:	c8 80       	ld	r12, Y
    5c4e:	d9 80       	ldd	r13, Y+1	; 0x01
    5c50:	ea 80       	ldd	r14, Y+2	; 0x02
    5c52:	fb 80       	ldd	r15, Y+3	; 0x03
    5c54:	86 e0       	ldi	r24, 0x06	; 6
    5c56:	90 e0       	ldi	r25, 0x00	; 0
    5c58:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5c5c:	c6 16       	cp	r12, r22
    5c5e:	d7 06       	cpc	r13, r23
    5c60:	e8 06       	cpc	r14, r24
    5c62:	f9 06       	cpc	r15, r25
    5c64:	09 f4       	brne	.+2      	; 0x5c68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5cc>
    5c66:	89 ce       	rjmp	.-750    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    5c68:	b7 01       	movw	r22, r14
    5c6a:	a6 01       	movw	r20, r12
    5c6c:	86 e0       	ldi	r24, 0x06	; 6
    5c6e:	90 e0       	ldi	r25, 0x00	; 0
    5c70:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5c74:	82 ce       	rjmp	.-764    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;

		case Event_finish_epoch:
		{
			if(*(uint32_t*)val != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    5c76:	c8 80       	ld	r12, Y
    5c78:	d9 80       	ldd	r13, Y+1	; 0x01
    5c7a:	ea 80       	ldd	r14, Y+2	; 0x02
    5c7c:	fb 80       	ldd	r15, Y+3	; 0x03
    5c7e:	8e e0       	ldi	r24, 0x0E	; 14
    5c80:	90 e0       	ldi	r25, 0x00	; 0
    5c82:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5c86:	c6 16       	cp	r12, r22
    5c88:	d7 06       	cpc	r13, r23
    5c8a:	e8 06       	cpc	r14, r24
    5c8c:	f9 06       	cpc	r15, r25
    5c8e:	09 f4       	brne	.+2      	; 0x5c92 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x5f6>
    5c90:	74 ce       	rjmp	.-792    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    5c92:	b7 01       	movw	r22, r14
    5c94:	a6 01       	movw	r20, r12
    5c96:	8e e0       	ldi	r24, 0x0E	; 14
    5c98:	90 e0       	ldi	r25, 0x00	; 0
    5c9a:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
    5c9e:	6d ce       	rjmp	.-806    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;

		case Utc_offset:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    5ca0:	c8 81       	ld	r28, Y
    5ca2:	80 e9       	ldi	r24, 0x90	; 144
    5ca4:	90 e0       	ldi	r25, 0x00	; 0
    5ca6:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5caa:	c8 17       	cp	r28, r24
    5cac:	09 f4       	brne	.+2      	; 0x5cb0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x614>
    5cae:	65 ce       	rjmp	.-822    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    5cb0:	6c 2f       	mov	r22, r28
    5cb2:	80 e9       	ldi	r24, 0x90	; 144
    5cb4:	90 e0       	ldi	r25, 0x00	; 0
    5cb6:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5cba:	5f ce       	rjmp	.-834    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Off_Air_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
    5cbc:	82 eb       	ldi	r24, 0xB2	; 178
    5cbe:	90 e0       	ldi	r25, 0x00	; 0
    5cc0:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5cc4:	28 81       	ld	r18, Y
    5cc6:	39 81       	ldd	r19, Y+1	; 0x01
    5cc8:	28 17       	cp	r18, r24
    5cca:	39 07       	cpc	r19, r25
    5ccc:	09 f4       	brne	.+2      	; 0x5cd0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x634>
    5cce:	55 ce       	rjmp	.-854    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
    5cd0:	b9 01       	movw	r22, r18
    5cd2:	82 eb       	ldi	r24, 0xB2	; 178
    5cd4:	90 e0       	ldi	r25, 0x00	; 0
    5cd6:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
    5cda:	4f ce       	rjmp	.-866    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case On_Air_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
    5cdc:	88 eb       	ldi	r24, 0xB8	; 184
    5cde:	90 e0       	ldi	r25, 0x00	; 0
    5ce0:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5ce4:	28 81       	ld	r18, Y
    5ce6:	39 81       	ldd	r19, Y+1	; 0x01
    5ce8:	28 17       	cp	r18, r24
    5cea:	39 07       	cpc	r19, r25
    5cec:	09 f4       	brne	.+2      	; 0x5cf0 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x654>
    5cee:	45 ce       	rjmp	.-886    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
    5cf0:	b9 01       	movw	r22, r18
    5cf2:	88 eb       	ldi	r24, 0xB8	; 184
    5cf4:	90 e0       	ldi	r25, 0x00	; 0
    5cf6:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
    5cfa:	3f ce       	rjmp	.-898    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case ID_Period_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
    5cfc:	8e eb       	ldi	r24, 0xBE	; 190
    5cfe:	90 e0       	ldi	r25, 0x00	; 0
    5d00:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5d04:	28 81       	ld	r18, Y
    5d06:	39 81       	ldd	r19, Y+1	; 0x01
    5d08:	28 17       	cp	r18, r24
    5d0a:	39 07       	cpc	r19, r25
    5d0c:	09 f4       	brne	.+2      	; 0x5d10 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x674>
    5d0e:	35 ce       	rjmp	.-918    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
    5d10:	b9 01       	movw	r22, r18
    5d12:	8e eb       	ldi	r24, 0xBE	; 190
    5d14:	90 e0       	ldi	r25, 0x00	; 0
    5d16:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
    5d1a:	2f ce       	rjmp	.-930    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Intra_Cycle_Delay_Seconds:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
    5d1c:	84 ec       	ldi	r24, 0xC4	; 196
    5d1e:	90 e0       	ldi	r25, 0x00	; 0
    5d20:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5d24:	28 81       	ld	r18, Y
    5d26:	39 81       	ldd	r19, Y+1	; 0x01
    5d28:	28 17       	cp	r18, r24
    5d2a:	39 07       	cpc	r19, r25
    5d2c:	09 f4       	brne	.+2      	; 0x5d30 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x694>
    5d2e:	25 ce       	rjmp	.-950    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
    5d30:	b9 01       	movw	r22, r18
    5d32:	84 ec       	ldi	r24, 0xC4	; 196
    5d34:	90 e0       	ldi	r25, 0x00	; 0
    5d36:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
    5d3a:	1f ce       	rjmp	.-962    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;

		case Eeprom_initialization_flag:
		{
			if(*(int16_t*)val != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.eeprom_initialization_flag)))
    5d3c:	80 e0       	ldi	r24, 0x00	; 0
    5d3e:	90 e0       	ldi	r25, 0x00	; 0
    5d40:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5d44:	28 81       	ld	r18, Y
    5d46:	39 81       	ldd	r19, Y+1	; 0x01
    5d48:	28 17       	cp	r18, r24
    5d4a:	39 07       	cpc	r19, r25
    5d4c:	09 f4       	brne	.+2      	; 0x5d50 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x6b4>
    5d4e:	15 ce       	rjmp	.-982    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    5d50:	b9 01       	movw	r22, r18
    5d52:	90 e0       	ldi	r25, 0x00	; 0
    5d54:	80 e0       	ldi	r24, 0x00	; 0
    5d56:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
    5d5a:	0f ce       	rjmp	.-994    	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Voltage_threshold:
		{
			if(*(float*)val != eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)))
    5d5c:	c8 80       	ld	r12, Y
    5d5e:	d9 80       	ldd	r13, Y+1	; 0x01
    5d60:	ea 80       	ldd	r14, Y+2	; 0x02
    5d62:	fb 80       	ldd	r15, Y+3	; 0x03
    5d64:	8d ef       	ldi	r24, 0xFD	; 253
    5d66:	90 e0       	ldi	r25, 0x00	; 0
    5d68:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    5d6c:	9b 01       	movw	r18, r22
    5d6e:	ac 01       	movw	r20, r24
    5d70:	c7 01       	movw	r24, r14
    5d72:	b6 01       	movw	r22, r12
    5d74:	0e 94 09 4c 	call	0x9812	; 0x9812 <__cmpsf2>
    5d78:	88 23       	and	r24, r24
    5d7a:	09 f4       	brne	.+2      	; 0x5d7e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x6e2>
    5d7c:	fe cd       	rjmp	.-1028   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_float(Voltage_threshold, *(float*)val);
    5d7e:	b7 01       	movw	r22, r14
    5d80:	a6 01       	movw	r20, r12
    5d82:	8d ef       	ldi	r24, 0xFD	; 253
    5d84:	90 e0       	ldi	r25, 0x00	; 0
    5d86:	0e 94 38 2b 	call	0x5670	; 0x5670 <_Z22avr_eeprom_write_floatjf>
    5d8a:	f7 cd       	rjmp	.-1042   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		}
		break;
		
		case Clock_calibration:
		{
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.clock_calibration)))
    5d8c:	09 90       	ld	r0, Y+
    5d8e:	d8 81       	ld	r29, Y
    5d90:	c0 2d       	mov	r28, r0
    5d92:	85 e0       	ldi	r24, 0x05	; 5
    5d94:	91 e0       	ldi	r25, 0x01	; 1
    5d96:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5d9a:	c8 17       	cp	r28, r24
    5d9c:	d9 07       	cpc	r29, r25
    5d9e:	09 f4       	brne	.+2      	; 0x5da2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x706>
    5da0:	ec cd       	rjmp	.-1064   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_word(Clock_calibration, *(uint16_t*)val);
    5da2:	be 01       	movw	r22, r28
    5da4:	85 e0       	ldi	r24, 0x05	; 5
    5da6:	91 e0       	ldi	r25, 0x01	; 1
    5da8:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
    5dac:	e6 cd       	rjmp	.-1076   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		break;
		
		
		case Days_to_run:
		{
			if(*(uint8_t*)val != eeprom_read_byte(&(EepromManager::ee_vars.days_to_run)))
    5dae:	c8 81       	ld	r28, Y
    5db0:	8b e0       	ldi	r24, 0x0B	; 11
    5db2:	91 e0       	ldi	r25, 0x01	; 1
    5db4:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5db8:	c8 17       	cp	r28, r24
    5dba:	09 f4       	brne	.+2      	; 0x5dbe <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x722>
    5dbc:	de cd       	rjmp	.-1092   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(Days_to_run, *(uint8_t*)val);
    5dbe:	6c 2f       	mov	r22, r28
    5dc0:	8b e0       	ldi	r24, 0x0B	; 11
    5dc2:	91 e0       	ldi	r25, 0x01	; 1
    5dc4:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5dc8:	d8 cd       	rjmp	.-1104   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
		break;
		
		
		case I2C_failure_count:
		{
			if(*(uint16_t*)val != eeprom_read_word(&(EepromManager::ee_vars.i2c_failure_count)))
    5dca:	80 e1       	ldi	r24, 0x10	; 16
    5dcc:	91 e0       	ldi	r25, 0x01	; 1
    5dce:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    5dd2:	28 81       	ld	r18, Y
    5dd4:	39 81       	ldd	r19, Y+1	; 0x01
    5dd6:	28 17       	cp	r18, r24
    5dd8:	39 07       	cpc	r19, r25
    5dda:	09 f4       	brne	.+2      	; 0x5dde <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x742>
    5ddc:	ce cd       	rjmp	.-1124   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>
			{
				avr_eeprom_write_byte(I2C_failure_count, *(uint8_t*)val);
    5dde:	68 81       	ld	r22, Y
    5de0:	80 e1       	ldi	r24, 0x10	; 16
    5de2:	91 e0       	ldi	r25, 0x01	; 1
    5de4:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    5de8:	c8 cd       	rjmp	.-1136   	; 0x597a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2de>

00005dea <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    5dea:	cf 93       	push	r28
    5dec:	df 93       	push	r29
    5dee:	ec 01       	movw	r28, r24
	updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);	
    5df0:	4d e0       	ldi	r20, 0x0D	; 13
    5df2:	50 e4       	ldi	r21, 0x40	; 64
    5df4:	63 ea       	ldi	r22, 0xA3	; 163
    5df6:	70 e0       	ldi	r23, 0x00	; 0
    5df8:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Fox_setting_none, (void*)&g_fox[EVENT_NONE]);
    5dfc:	42 e2       	ldi	r20, 0x22	; 34
    5dfe:	50 e4       	ldi	r21, 0x40	; 64
    5e00:	62 e7       	ldi	r22, 0x72	; 114
    5e02:	70 e0       	ldi	r23, 0x00	; 0
    5e04:	ce 01       	movw	r24, r28
    5e06:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Fox_setting_classic, (void*)&g_fox[EVENT_CLASSIC]);
    5e0a:	44 e2       	ldi	r20, 0x24	; 36
    5e0c:	50 e4       	ldi	r21, 0x40	; 64
    5e0e:	68 e7       	ldi	r22, 0x78	; 120
    5e10:	70 e0       	ldi	r23, 0x00	; 0
    5e12:	ce 01       	movw	r24, r28
    5e14:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Fox_setting_sprint, (void*)&g_fox[EVENT_SPRINT]);
    5e18:	46 e2       	ldi	r20, 0x26	; 38
    5e1a:	50 e4       	ldi	r21, 0x40	; 64
    5e1c:	6e e7       	ldi	r22, 0x7E	; 126
    5e1e:	70 e0       	ldi	r23, 0x00	; 0
    5e20:	ce 01       	movw	r24, r28
    5e22:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Fox_setting_foxoring, (void*)&g_fox[EVENT_FOXORING]);
    5e26:	48 e2       	ldi	r20, 0x28	; 40
    5e28:	50 e4       	ldi	r21, 0x40	; 64
    5e2a:	64 e8       	ldi	r22, 0x84	; 132
    5e2c:	70 e0       	ldi	r23, 0x00	; 0
    5e2e:	ce 01       	movw	r24, r28
    5e30:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Fox_setting_blind, (void*)&g_fox[EVENT_BLIND_ARDF]);
    5e34:	4a e2       	ldi	r20, 0x2A	; 42
    5e36:	50 e4       	ldi	r21, 0x40	; 64
    5e38:	6a e8       	ldi	r22, 0x8A	; 138
    5e3a:	70 e0       	ldi	r23, 0x00	; 0
    5e3c:	ce 01       	movw	r24, r28
    5e3e:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_setting, (void*)&g_event);
    5e42:	47 e8       	ldi	r20, 0x87	; 135
    5e44:	54 e4       	ldi	r21, 0x44	; 68
    5e46:	6a ec       	ldi	r22, 0xCA	; 202
    5e48:	70 e0       	ldi	r23, 0x00	; 0
    5e4a:	ce 01       	movw	r24, r28
    5e4c:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Frequency, (void*)&g_tx_frequency);
    5e50:	43 e6       	ldi	r20, 0x63	; 99
    5e52:	50 e4       	ldi	r21, 0x40	; 64
    5e54:	60 ed       	ldi	r22, 0xD0	; 208
    5e56:	70 e0       	ldi	r23, 0x00	; 0
    5e58:	ce 01       	movw	r24, r28
    5e5a:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Frequency_Low, (void*)&g_frequency_low);
    5e5e:	4c e2       	ldi	r20, 0x2C	; 44
    5e60:	50 e4       	ldi	r21, 0x40	; 64
    5e62:	68 ed       	ldi	r22, 0xD8	; 216
    5e64:	70 e0       	ldi	r23, 0x00	; 0
    5e66:	ce 01       	movw	r24, r28
    5e68:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Frequency_Med, (void*)&g_frequency_med); /* use for sprint slow */
    5e6c:	40 e3       	ldi	r20, 0x30	; 48
    5e6e:	50 e4       	ldi	r21, 0x40	; 64
    5e70:	60 ee       	ldi	r22, 0xE0	; 224
    5e72:	70 e0       	ldi	r23, 0x00	; 0
    5e74:	ce 01       	movw	r24, r28
    5e76:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Frequency_Hi, (void*)&g_frequency_hi); /* use for sprint high - will also need sprint spectator and beacon */
    5e7a:	44 e3       	ldi	r20, 0x34	; 52
    5e7c:	50 e4       	ldi	r21, 0x40	; 64
    5e7e:	68 ee       	ldi	r22, 0xE8	; 232
    5e80:	70 e0       	ldi	r23, 0x00	; 0
    5e82:	ce 01       	movw	r24, r28
    5e84:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Frequency_Beacon, (void*)&g_frequency_beacon);
    5e88:	48 e3       	ldi	r20, 0x38	; 56
    5e8a:	50 e4       	ldi	r21, 0x40	; 64
    5e8c:	60 ef       	ldi	r22, 0xF0	; 240
    5e8e:	70 e0       	ldi	r23, 0x00	; 0
    5e90:	ce 01       	movw	r24, r28
    5e92:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    5e96:	44 e1       	ldi	r20, 0x14	; 20
    5e98:	54 e4       	ldi	r21, 0x44	; 68
    5e9a:	66 e0       	ldi	r22, 0x06	; 6
    5e9c:	70 e0       	ldi	r23, 0x00	; 0
    5e9e:	ce 01       	movw	r24, r28
    5ea0:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    5ea4:	48 e1       	ldi	r20, 0x18	; 24
    5ea6:	54 e4       	ldi	r21, 0x44	; 68
    5ea8:	6e e0       	ldi	r22, 0x0E	; 14
    5eaa:	70 e0       	ldi	r23, 0x00	; 0
    5eac:	ce 01       	movw	r24, r28
    5eae:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    5eb2:	4b e4       	ldi	r20, 0x4B	; 75
    5eb4:	54 e4       	ldi	r21, 0x44	; 68
    5eb6:	60 e9       	ldi	r22, 0x90	; 144
    5eb8:	70 e0       	ldi	r23, 0x00	; 0
    5eba:	ce 01       	movw	r24, r28
    5ebc:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
    5ec0:	41 ed       	ldi	r20, 0xD1	; 209
    5ec2:	53 e4       	ldi	r21, 0x43	; 67
    5ec4:	66 e1       	ldi	r22, 0x16	; 22
    5ec6:	70 e0       	ldi	r23, 0x00	; 0
    5ec8:	ce 01       	movw	r24, r28
    5eca:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_pattern_text, (void*)g_messages_text[FOXORING_PATTERN_TEXT]);
    5ece:	46 ee       	ldi	r20, 0xE6	; 230
    5ed0:	53 e4       	ldi	r21, 0x43	; 67
    5ed2:	60 e3       	ldi	r22, 0x30	; 48
    5ed4:	70 e0       	ldi	r23, 0x00	; 0
    5ed6:	ce 01       	movw	r24, r28
    5ed8:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    5edc:	4b ef       	ldi	r20, 0xFB	; 251
    5ede:	53 e4       	ldi	r21, 0x43	; 67
    5ee0:	6a e4       	ldi	r22, 0x4A	; 74
    5ee2:	70 e0       	ldi	r23, 0x00	; 0
    5ee4:	ce 01       	movw	r24, r28
    5ee6:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    5eea:	4c e4       	ldi	r20, 0x4C	; 76
    5eec:	54 e4       	ldi	r21, 0x44	; 68
    5eee:	64 e6       	ldi	r22, 0x64	; 100
    5ef0:	70 e0       	ldi	r23, 0x00	; 0
    5ef2:	ce 01       	movw	r24, r28
    5ef4:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    5ef8:	49 e6       	ldi	r20, 0x69	; 105
    5efa:	50 e4       	ldi	r21, 0x40	; 64
    5efc:	65 e9       	ldi	r22, 0x95	; 149
    5efe:	70 e0       	ldi	r23, 0x00	; 0
    5f00:	ce 01       	movw	r24, r28
    5f02:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    5f06:	47 e6       	ldi	r20, 0x67	; 103
    5f08:	50 e4       	ldi	r21, 0x40	; 64
    5f0a:	6d e9       	ldi	r22, 0x9D	; 157
    5f0c:	70 e0       	ldi	r23, 0x00	; 0
    5f0e:	ce 01       	movw	r24, r28
    5f10:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Pattern_Code_Speed, (void*)&g_pattern_codespeed);
    5f14:	4e e0       	ldi	r20, 0x0E	; 14
    5f16:	50 e4       	ldi	r21, 0x40	; 64
    5f18:	68 ea       	ldi	r22, 0xA8	; 168
    5f1a:	70 e0       	ldi	r23, 0x00	; 0
    5f1c:	ce 01       	movw	r24, r28
    5f1e:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Foxoring_Pattern_Code_Speed, (void*)&g_foxoring_pattern_codespeed);
    5f22:	4f e0       	ldi	r20, 0x0F	; 15
    5f24:	50 e4       	ldi	r21, 0x40	; 64
    5f26:	6d ea       	ldi	r22, 0xAD	; 173
    5f28:	70 e0       	ldi	r23, 0x00	; 0
    5f2a:	ce 01       	movw	r24, r28
    5f2c:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Off_Air_Seconds, (void*)&g_off_air_seconds);
    5f30:	42 e1       	ldi	r20, 0x12	; 18
    5f32:	50 e4       	ldi	r21, 0x40	; 64
    5f34:	62 eb       	ldi	r22, 0xB2	; 178
    5f36:	70 e0       	ldi	r23, 0x00	; 0
    5f38:	ce 01       	movw	r24, r28
    5f3a:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(On_Air_Seconds, (void*)&g_on_air_seconds);
    5f3e:	40 e1       	ldi	r20, 0x10	; 16
    5f40:	50 e4       	ldi	r21, 0x40	; 64
    5f42:	68 eb       	ldi	r22, 0xB8	; 184
    5f44:	70 e0       	ldi	r23, 0x00	; 0
    5f46:	ce 01       	movw	r24, r28
    5f48:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(ID_Period_Seconds, (void*)&g_ID_period_seconds);
    5f4c:	44 e1       	ldi	r20, 0x14	; 20
    5f4e:	50 e4       	ldi	r21, 0x40	; 64
    5f50:	6e eb       	ldi	r22, 0xBE	; 190
    5f52:	70 e0       	ldi	r23, 0x00	; 0
    5f54:	ce 01       	movw	r24, r28
    5f56:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Intra_Cycle_Delay_Seconds, (void*)&g_intra_cycle_delay_time);
    5f5a:	42 e1       	ldi	r20, 0x12	; 18
    5f5c:	54 e4       	ldi	r21, 0x44	; 68
    5f5e:	64 ec       	ldi	r22, 0xC4	; 196
    5f60:	70 e0       	ldi	r23, 0x00	; 0
    5f62:	ce 01       	movw	r24, r28
    5f64:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Voltage_threshold, (void*)&g_voltage_threshold);
    5f68:	43 e8       	ldi	r20, 0x83	; 131
    5f6a:	54 e4       	ldi	r21, 0x44	; 68
    5f6c:	6d ef       	ldi	r22, 0xFD	; 253
    5f6e:	70 e0       	ldi	r23, 0x00	; 0
    5f70:	ce 01       	movw	r24, r28
    5f72:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Clock_calibration, (void*)&g_clock_calibration);
    5f76:	41 e8       	ldi	r20, 0x81	; 129
    5f78:	54 e4       	ldi	r21, 0x44	; 68
    5f7a:	65 e0       	ldi	r22, 0x05	; 5
    5f7c:	71 e0       	ldi	r23, 0x01	; 1
    5f7e:	ce 01       	movw	r24, r28
    5f80:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(Days_to_run, (void*)&g_days_to_run);
    5f84:	40 e8       	ldi	r20, 0x80	; 128
    5f86:	54 e4       	ldi	r21, 0x44	; 68
    5f88:	6b e0       	ldi	r22, 0x0B	; 11
    5f8a:	71 e0       	ldi	r23, 0x01	; 1
    5f8c:	ce 01       	movw	r24, r28
    5f8e:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	updateEEPROMVar(I2C_failure_count, (void*)&g_i2c_failure_count);
    5f92:	4e e7       	ldi	r20, 0x7E	; 126
    5f94:	54 e4       	ldi	r21, 0x44	; 68
    5f96:	60 e1       	ldi	r22, 0x10	; 16
    5f98:	71 e0       	ldi	r23, 0x01	; 1
    5f9a:	ce 01       	movw	r24, r28
    5f9c:	0e 94 4e 2b 	call	0x569c	; 0x569c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
}
    5fa0:	df 91       	pop	r29
    5fa2:	cf 91       	pop	r28
    5fa4:	08 95       	ret

00005fa6 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    5fa6:	cf 92       	push	r12
    5fa8:	df 92       	push	r13
    5faa:	ef 92       	push	r14
    5fac:	ff 92       	push	r15
    5fae:	0f 93       	push	r16
    5fb0:	1f 93       	push	r17
    5fb2:	cf 93       	push	r28
    5fb4:	df 93       	push	r29
	bool failure = true;
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    5fb6:	90 e0       	ldi	r25, 0x00	; 0
    5fb8:	80 e0       	ldi	r24, 0x00	; 0
    5fba:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    5fbe:	88 30       	cpi	r24, 0x08	; 8
    5fc0:	91 40       	sbci	r25, 0x01	; 1
    5fc2:	51 f0       	breq	.+20     	; 0x5fd8 <_ZN13EepromManager11readNonVolsEv+0x32>
}


bool EepromManager::readNonVols(void)
{
	bool failure = true;
    5fc4:	81 e0       	ldi	r24, 0x01	; 1

		failure = false;
	}

	return( failure);
}
    5fc6:	df 91       	pop	r29
    5fc8:	cf 91       	pop	r28
    5fca:	1f 91       	pop	r17
    5fcc:	0f 91       	pop	r16
    5fce:	ff 90       	pop	r15
    5fd0:	ef 90       	pop	r14
    5fd2:	df 90       	pop	r13
    5fd4:	cf 90       	pop	r12
    5fd6:	08 95       	ret
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
	{
		g_isMaster = EEPROM_MASTER_SETTING_DEFAULT; // (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.master_setting));
    5fd8:	10 92 89 44 	sts	0x4489, r1	; 0x804489 <g_isMaster>
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    5fdc:	83 ea       	ldi	r24, 0xA3	; 163
    5fde:	90 e0       	ldi	r25, 0x00	; 0
    5fe0:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5fe4:	85 30       	cpi	r24, 0x05	; 5
    5fe6:	08 f4       	brcc	.+2      	; 0x5fea <_ZN13EepromManager11readNonVolsEv+0x44>
    5fe8:	85 e0       	ldi	r24, 0x05	; 5
    5fea:	85 31       	cpi	r24, 0x15	; 21
    5fec:	08 f0       	brcs	.+2      	; 0x5ff0 <_ZN13EepromManager11readNonVolsEv+0x4a>
    5fee:	84 e1       	ldi	r24, 0x14	; 20
    5ff0:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_id_codespeed>
		g_event = (Event_t)eeprom_read_byte((const uint8_t*)&(EepromManager::ee_vars.event_setting));
    5ff4:	8a ec       	ldi	r24, 0xCA	; 202
    5ff6:	90 e0       	ldi	r25, 0x00	; 0
    5ff8:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    5ffc:	90 e0       	ldi	r25, 0x00	; 0
    5ffe:	80 93 87 44 	sts	0x4487, r24	; 0x804487 <g_event>
    6002:	90 93 88 44 	sts	0x4488, r25	; 0x804488 <g_event+0x1>
		g_tx_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    6006:	80 ed       	ldi	r24, 0xD0	; 208
    6008:	90 e0       	ldi	r25, 0x00	; 0
    600a:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    600e:	60 3e       	cpi	r22, 0xE0	; 224
    6010:	e7 e6       	ldi	r30, 0x67	; 103
    6012:	7e 07       	cpc	r23, r30
    6014:	e5 e3       	ldi	r30, 0x35	; 53
    6016:	8e 07       	cpc	r24, r30
    6018:	91 05       	cpc	r25, r1
    601a:	20 f4       	brcc	.+8      	; 0x6024 <_ZN13EepromManager11readNonVolsEv+0x7e>
    601c:	60 ee       	ldi	r22, 0xE0	; 224
    601e:	77 e6       	ldi	r23, 0x67	; 103
    6020:	85 e3       	ldi	r24, 0x35	; 53
    6022:	90 e0       	ldi	r25, 0x00	; 0
    6024:	61 30       	cpi	r22, 0x01	; 1
    6026:	f9 e0       	ldi	r31, 0x09	; 9
    6028:	7f 07       	cpc	r23, r31
    602a:	fd e3       	ldi	r31, 0x3D	; 61
    602c:	8f 07       	cpc	r24, r31
    602e:	91 05       	cpc	r25, r1
    6030:	20 f0       	brcs	.+8      	; 0x603a <_ZN13EepromManager11readNonVolsEv+0x94>
    6032:	60 e0       	ldi	r22, 0x00	; 0
    6034:	79 e0       	ldi	r23, 0x09	; 9
    6036:	8d e3       	ldi	r24, 0x3D	; 61
    6038:	90 e0       	ldi	r25, 0x00	; 0
    603a:	60 93 63 40 	sts	0x4063, r22	; 0x804063 <g_tx_frequency>
    603e:	70 93 64 40 	sts	0x4064, r23	; 0x804064 <g_tx_frequency+0x1>
    6042:	80 93 65 40 	sts	0x4065, r24	; 0x804065 <g_tx_frequency+0x2>
    6046:	90 93 66 40 	sts	0x4066, r25	; 0x804066 <g_tx_frequency+0x3>
		g_frequency_low = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency_low)), TX_MAXIMUM_80M_FREQUENCY);
    604a:	88 ed       	ldi	r24, 0xD8	; 216
    604c:	90 e0       	ldi	r25, 0x00	; 0
    604e:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    6052:	60 3e       	cpi	r22, 0xE0	; 224
    6054:	27 e6       	ldi	r18, 0x67	; 103
    6056:	72 07       	cpc	r23, r18
    6058:	25 e3       	ldi	r18, 0x35	; 53
    605a:	82 07       	cpc	r24, r18
    605c:	91 05       	cpc	r25, r1
    605e:	20 f4       	brcc	.+8      	; 0x6068 <_ZN13EepromManager11readNonVolsEv+0xc2>
    6060:	60 ee       	ldi	r22, 0xE0	; 224
    6062:	77 e6       	ldi	r23, 0x67	; 103
    6064:	85 e3       	ldi	r24, 0x35	; 53
    6066:	90 e0       	ldi	r25, 0x00	; 0
    6068:	61 30       	cpi	r22, 0x01	; 1
    606a:	e9 e0       	ldi	r30, 0x09	; 9
    606c:	7e 07       	cpc	r23, r30
    606e:	ed e3       	ldi	r30, 0x3D	; 61
    6070:	8e 07       	cpc	r24, r30
    6072:	91 05       	cpc	r25, r1
    6074:	20 f0       	brcs	.+8      	; 0x607e <_ZN13EepromManager11readNonVolsEv+0xd8>
    6076:	60 e0       	ldi	r22, 0x00	; 0
    6078:	79 e0       	ldi	r23, 0x09	; 9
    607a:	8d e3       	ldi	r24, 0x3D	; 61
    607c:	90 e0       	ldi	r25, 0x00	; 0
    607e:	60 93 2c 40 	sts	0x402C, r22	; 0x80402c <g_frequency_low>
    6082:	70 93 2d 40 	sts	0x402D, r23	; 0x80402d <g_frequency_low+0x1>
    6086:	80 93 2e 40 	sts	0x402E, r24	; 0x80402e <g_frequency_low+0x2>
    608a:	90 93 2f 40 	sts	0x402F, r25	; 0x80402f <g_frequency_low+0x3>
 		g_frequency_med = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency_med)), TX_MAXIMUM_80M_FREQUENCY);
    608e:	80 ee       	ldi	r24, 0xE0	; 224
    6090:	90 e0       	ldi	r25, 0x00	; 0
    6092:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    6096:	60 3e       	cpi	r22, 0xE0	; 224
    6098:	f7 e6       	ldi	r31, 0x67	; 103
    609a:	7f 07       	cpc	r23, r31
    609c:	f5 e3       	ldi	r31, 0x35	; 53
    609e:	8f 07       	cpc	r24, r31
    60a0:	91 05       	cpc	r25, r1
    60a2:	20 f4       	brcc	.+8      	; 0x60ac <_ZN13EepromManager11readNonVolsEv+0x106>
    60a4:	60 ee       	ldi	r22, 0xE0	; 224
    60a6:	77 e6       	ldi	r23, 0x67	; 103
    60a8:	85 e3       	ldi	r24, 0x35	; 53
    60aa:	90 e0       	ldi	r25, 0x00	; 0
    60ac:	61 30       	cpi	r22, 0x01	; 1
    60ae:	29 e0       	ldi	r18, 0x09	; 9
    60b0:	72 07       	cpc	r23, r18
    60b2:	2d e3       	ldi	r18, 0x3D	; 61
    60b4:	82 07       	cpc	r24, r18
    60b6:	91 05       	cpc	r25, r1
    60b8:	20 f0       	brcs	.+8      	; 0x60c2 <_ZN13EepromManager11readNonVolsEv+0x11c>
    60ba:	60 e0       	ldi	r22, 0x00	; 0
    60bc:	79 e0       	ldi	r23, 0x09	; 9
    60be:	8d e3       	ldi	r24, 0x3D	; 61
    60c0:	90 e0       	ldi	r25, 0x00	; 0
    60c2:	60 93 30 40 	sts	0x4030, r22	; 0x804030 <g_frequency_med>
    60c6:	70 93 31 40 	sts	0x4031, r23	; 0x804031 <g_frequency_med+0x1>
    60ca:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_frequency_med+0x2>
    60ce:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_frequency_med+0x3>
 		g_frequency_hi = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency_high)), TX_MAXIMUM_80M_FREQUENCY);
    60d2:	88 ee       	ldi	r24, 0xE8	; 232
    60d4:	90 e0       	ldi	r25, 0x00	; 0
    60d6:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    60da:	60 3e       	cpi	r22, 0xE0	; 224
    60dc:	e7 e6       	ldi	r30, 0x67	; 103
    60de:	7e 07       	cpc	r23, r30
    60e0:	e5 e3       	ldi	r30, 0x35	; 53
    60e2:	8e 07       	cpc	r24, r30
    60e4:	91 05       	cpc	r25, r1
    60e6:	20 f4       	brcc	.+8      	; 0x60f0 <_ZN13EepromManager11readNonVolsEv+0x14a>
    60e8:	60 ee       	ldi	r22, 0xE0	; 224
    60ea:	77 e6       	ldi	r23, 0x67	; 103
    60ec:	85 e3       	ldi	r24, 0x35	; 53
    60ee:	90 e0       	ldi	r25, 0x00	; 0
    60f0:	61 30       	cpi	r22, 0x01	; 1
    60f2:	f9 e0       	ldi	r31, 0x09	; 9
    60f4:	7f 07       	cpc	r23, r31
    60f6:	fd e3       	ldi	r31, 0x3D	; 61
    60f8:	8f 07       	cpc	r24, r31
    60fa:	91 05       	cpc	r25, r1
    60fc:	20 f0       	brcs	.+8      	; 0x6106 <_ZN13EepromManager11readNonVolsEv+0x160>
    60fe:	60 e0       	ldi	r22, 0x00	; 0
    6100:	79 e0       	ldi	r23, 0x09	; 9
    6102:	8d e3       	ldi	r24, 0x3D	; 61
    6104:	90 e0       	ldi	r25, 0x00	; 0
    6106:	60 93 34 40 	sts	0x4034, r22	; 0x804034 <g_frequency_hi>
    610a:	70 93 35 40 	sts	0x4035, r23	; 0x804035 <g_frequency_hi+0x1>
    610e:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_frequency_hi+0x2>
    6112:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_frequency_hi+0x3>
 		g_frequency_beacon = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency_beacon)), TX_MAXIMUM_80M_FREQUENCY);
    6116:	80 ef       	ldi	r24, 0xF0	; 240
    6118:	90 e0       	ldi	r25, 0x00	; 0
    611a:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    611e:	60 3e       	cpi	r22, 0xE0	; 224
    6120:	27 e6       	ldi	r18, 0x67	; 103
    6122:	72 07       	cpc	r23, r18
    6124:	25 e3       	ldi	r18, 0x35	; 53
    6126:	82 07       	cpc	r24, r18
    6128:	91 05       	cpc	r25, r1
    612a:	20 f4       	brcc	.+8      	; 0x6134 <_ZN13EepromManager11readNonVolsEv+0x18e>
    612c:	60 ee       	ldi	r22, 0xE0	; 224
    612e:	77 e6       	ldi	r23, 0x67	; 103
    6130:	85 e3       	ldi	r24, 0x35	; 53
    6132:	90 e0       	ldi	r25, 0x00	; 0
    6134:	61 30       	cpi	r22, 0x01	; 1
    6136:	e9 e0       	ldi	r30, 0x09	; 9
    6138:	7e 07       	cpc	r23, r30
    613a:	ed e3       	ldi	r30, 0x3D	; 61
    613c:	8e 07       	cpc	r24, r30
    613e:	91 05       	cpc	r25, r1
    6140:	20 f0       	brcs	.+8      	; 0x614a <_ZN13EepromManager11readNonVolsEv+0x1a4>
    6142:	60 e0       	ldi	r22, 0x00	; 0
    6144:	79 e0       	ldi	r23, 0x09	; 9
    6146:	8d e3       	ldi	r24, 0x3D	; 61
    6148:	90 e0       	ldi	r25, 0x00	; 0
    614a:	60 93 38 40 	sts	0x4038, r22	; 0x804038 <g_frequency_beacon>
    614e:	70 93 39 40 	sts	0x4039, r23	; 0x804039 <g_frequency_beacon+0x1>
    6152:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_frequency_beacon+0x2>
    6156:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_frequency_beacon+0x3>
		g_fox[EVENT_NONE] = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_none)), SPRINT_F5));
    615a:	82 e7       	ldi	r24, 0x72	; 114
    615c:	90 e0       	ldi	r25, 0x00	; 0
    615e:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    6162:	81 31       	cpi	r24, 0x11	; 17
    6164:	10 f4       	brcc	.+4      	; 0x616a <_ZN13EepromManager11readNonVolsEv+0x1c4>
    6166:	90 e0       	ldi	r25, 0x00	; 0
    6168:	02 c0       	rjmp	.+4      	; 0x616e <_ZN13EepromManager11readNonVolsEv+0x1c8>
    616a:	80 e1       	ldi	r24, 0x10	; 16
    616c:	90 e0       	ldi	r25, 0x00	; 0
    616e:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
    6172:	90 93 23 40 	sts	0x4023, r25	; 0x804023 <g_fox+0x1>
		g_fox[EVENT_CLASSIC] = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_classic)), FOX_5));
    6176:	88 e7       	ldi	r24, 0x78	; 120
    6178:	90 e0       	ldi	r25, 0x00	; 0
    617a:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    617e:	86 30       	cpi	r24, 0x06	; 6
    6180:	10 f4       	brcc	.+4      	; 0x6186 <_ZN13EepromManager11readNonVolsEv+0x1e0>
    6182:	90 e0       	ldi	r25, 0x00	; 0
    6184:	02 c0       	rjmp	.+4      	; 0x618a <_ZN13EepromManager11readNonVolsEv+0x1e4>
    6186:	85 e0       	ldi	r24, 0x05	; 5
    6188:	90 e0       	ldi	r25, 0x00	; 0
    618a:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <g_fox+0x2>
    618e:	90 93 25 40 	sts	0x4025, r25	; 0x804025 <g_fox+0x3>
		g_fox[EVENT_SPRINT] = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_sprint)), SPRINT_F5));
    6192:	8e e7       	ldi	r24, 0x7E	; 126
    6194:	90 e0       	ldi	r25, 0x00	; 0
    6196:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    619a:	81 31       	cpi	r24, 0x11	; 17
    619c:	10 f4       	brcc	.+4      	; 0x61a2 <_ZN13EepromManager11readNonVolsEv+0x1fc>
    619e:	90 e0       	ldi	r25, 0x00	; 0
    61a0:	02 c0       	rjmp	.+4      	; 0x61a6 <_ZN13EepromManager11readNonVolsEv+0x200>
    61a2:	80 e1       	ldi	r24, 0x10	; 16
    61a4:	90 e0       	ldi	r25, 0x00	; 0
    61a6:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_fox+0x4>
    61aa:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <g_fox+0x5>
		g_fox[EVENT_FOXORING] = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_foxoring)), FOXORING_FOX3));
    61ae:	84 e8       	ldi	r24, 0x84	; 132
    61b0:	90 e0       	ldi	r25, 0x00	; 0
    61b2:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    61b6:	84 31       	cpi	r24, 0x14	; 20
    61b8:	10 f4       	brcc	.+4      	; 0x61be <_ZN13EepromManager11readNonVolsEv+0x218>
    61ba:	90 e0       	ldi	r25, 0x00	; 0
    61bc:	02 c0       	rjmp	.+4      	; 0x61c2 <_ZN13EepromManager11readNonVolsEv+0x21c>
    61be:	83 e1       	ldi	r24, 0x13	; 19
    61c0:	90 e0       	ldi	r25, 0x00	; 0
    61c2:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_fox+0x6>
    61c6:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_fox+0x7>
		g_fox[EVENT_BLIND_ARDF] = (Fox_t)(CLAMP(BEACON, eeprom_read_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting_blind)), FOX_5));
    61ca:	8a e8       	ldi	r24, 0x8A	; 138
    61cc:	90 e0       	ldi	r25, 0x00	; 0
    61ce:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    61d2:	86 30       	cpi	r24, 0x06	; 6
    61d4:	10 f4       	brcc	.+4      	; 0x61da <_ZN13EepromManager11readNonVolsEv+0x234>
    61d6:	90 e0       	ldi	r25, 0x00	; 0
    61d8:	02 c0       	rjmp	.+4      	; 0x61de <_ZN13EepromManager11readNonVolsEv+0x238>
    61da:	85 e0       	ldi	r24, 0x05	; 5
    61dc:	90 e0       	ldi	r25, 0x00	; 0
    61de:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <g_fox+0x8>
    61e2:	90 93 2b 40 	sts	0x402B, r25	; 0x80402b <g_fox+0x9>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    61e6:	86 e0       	ldi	r24, 0x06	; 6
    61e8:	90 e0       	ldi	r25, 0x00	; 0
    61ea:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    61ee:	60 93 14 44 	sts	0x4414, r22	; 0x804414 <g_event_start_epoch>
    61f2:	70 93 15 44 	sts	0x4415, r23	; 0x804415 <g_event_start_epoch+0x1>
    61f6:	80 93 16 44 	sts	0x4416, r24	; 0x804416 <g_event_start_epoch+0x2>
    61fa:	90 93 17 44 	sts	0x4417, r25	; 0x804417 <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    61fe:	8e e0       	ldi	r24, 0x0E	; 14
    6200:	90 e0       	ldi	r25, 0x00	; 0
    6202:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    6206:	60 93 18 44 	sts	0x4418, r22	; 0x804418 <g_event_finish_epoch>
    620a:	70 93 19 44 	sts	0x4419, r23	; 0x804419 <g_event_finish_epoch+0x1>
    620e:	80 93 1a 44 	sts	0x441A, r24	; 0x80441a <g_event_finish_epoch+0x2>
    6212:	90 93 1b 44 	sts	0x441B, r25	; 0x80441b <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    6216:	80 e9       	ldi	r24, 0x90	; 144
    6218:	90 e0       	ldi	r25, 0x00	; 0
    621a:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    621e:	80 93 4b 44 	sts	0x444B, r24	; 0x80444b <g_utc_offset>
    6222:	0f 2e       	mov	r0, r31
    6224:	f1 ed       	ldi	r31, 0xD1	; 209
    6226:	ef 2e       	mov	r14, r31
    6228:	f3 e4       	ldi	r31, 0x43	; 67
    622a:	ff 2e       	mov	r15, r31
    622c:	f0 2d       	mov	r31, r0

		char c;
		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    622e:	d0 e0       	ldi	r29, 0x00	; 0
    6230:	c0 e0       	ldi	r28, 0x00	; 0
    6232:	00 e0       	ldi	r16, 0x00	; 0
    6234:	10 e0       	ldi	r17, 0x00	; 0
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));			
    6236:	ce 01       	movw	r24, r28
    6238:	8a 5e       	subi	r24, 0xEA	; 234
    623a:	9f 4f       	sbci	r25, 0xFF	; 255
    623c:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
			if(c==255) c=0;
    6240:	8f 3f       	cpi	r24, 0xFF	; 255
    6242:	51 f0       	breq	.+20     	; 0x6258 <_ZN13EepromManager11readNonVolsEv+0x2b2>
			g_messages_text[PATTERN_TEXT][i] = c;
    6244:	f7 01       	movw	r30, r14
    6246:	81 93       	st	Z+, r24
    6248:	7f 01       	movw	r14, r30
			if(!c)
    624a:	88 23       	and	r24, r24
    624c:	41 f0       	breq	.+16     	; 0x625e <_ZN13EepromManager11readNonVolsEv+0x2b8>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		char c;
		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    624e:	21 96       	adiw	r28, 0x01	; 1
    6250:	c4 31       	cpi	r28, 0x14	; 20
    6252:	d1 05       	cpc	r29, r1
    6254:	81 f7       	brne	.-32     	; 0x6236 <_ZN13EepromManager11readNonVolsEv+0x290>
    6256:	03 c0       	rjmp	.+6      	; 0x625e <_ZN13EepromManager11readNonVolsEv+0x2b8>
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));			
			if(c==255) c=0;
			g_messages_text[PATTERN_TEXT][i] = c;
    6258:	cf 52       	subi	r28, 0x2F	; 47
    625a:	dc 4b       	sbci	r29, 0xBC	; 188
    625c:	18 82       	st	Y, r1
    625e:	0f 2e       	mov	r0, r31
    6260:	f6 ee       	ldi	r31, 0xE6	; 230
    6262:	ef 2e       	mov	r14, r31
    6264:	f3 e4       	ldi	r31, 0x43	; 67
    6266:	ff 2e       	mov	r15, r31
    6268:	f0 2d       	mov	r31, r0
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		char c;
		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    626a:	d0 e0       	ldi	r29, 0x00	; 0
    626c:	c0 e0       	ldi	r28, 0x00	; 0
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxoring_pattern_text[i])));			
    626e:	68 01       	movw	r12, r16
    6270:	f0 e3       	ldi	r31, 0x30	; 48
    6272:	cf 0e       	add	r12, r31
    6274:	d1 1c       	adc	r13, r1
    6276:	c6 01       	movw	r24, r12
    6278:	8c 0f       	add	r24, r28
    627a:	9d 1f       	adc	r25, r29
    627c:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
			if(c==255) c=0;
    6280:	8f 3f       	cpi	r24, 0xFF	; 255
    6282:	51 f0       	breq	.+20     	; 0x6298 <_ZN13EepromManager11readNonVolsEv+0x2f2>
			g_messages_text[FOXORING_PATTERN_TEXT][i] = c;
    6284:	f7 01       	movw	r30, r14
    6286:	81 93       	st	Z+, r24
    6288:	7f 01       	movw	r14, r30
			if(!c)
    628a:	88 23       	and	r24, r24
    628c:	41 f0       	breq	.+16     	; 0x629e <_ZN13EepromManager11readNonVolsEv+0x2f8>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    628e:	21 96       	adiw	r28, 0x01	; 1
    6290:	c4 31       	cpi	r28, 0x14	; 20
    6292:	d1 05       	cpc	r29, r1
    6294:	81 f7       	brne	.-32     	; 0x6276 <_ZN13EepromManager11readNonVolsEv+0x2d0>
    6296:	03 c0       	rjmp	.+6      	; 0x629e <_ZN13EepromManager11readNonVolsEv+0x2f8>
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxoring_pattern_text[i])));			
			if(c==255) c=0;
			g_messages_text[FOXORING_PATTERN_TEXT][i] = c;
    6298:	cf 52       	subi	r28, 0x2F	; 47
    629a:	dc 4b       	sbci	r29, 0xBC	; 188
    629c:	1d 8a       	std	Y+21, r1	; 0x15
    629e:	0f 2e       	mov	r0, r31
    62a0:	fb ef       	ldi	r31, 0xFB	; 251
    62a2:	ef 2e       	mov	r14, r31
    62a4:	f3 e4       	ldi	r31, 0x43	; 67
    62a6:	ff 2e       	mov	r15, r31
    62a8:	f0 2d       	mov	r31, r0
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		char c;
		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    62aa:	d0 e0       	ldi	r29, 0x00	; 0
    62ac:	c0 e0       	ldi	r28, 0x00	; 0
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    62ae:	68 01       	movw	r12, r16
    62b0:	fa e4       	ldi	r31, 0x4A	; 74
    62b2:	cf 0e       	add	r12, r31
    62b4:	d1 1c       	adc	r13, r1
    62b6:	c6 01       	movw	r24, r12
    62b8:	8c 0f       	add	r24, r28
    62ba:	9d 1f       	adc	r25, r29
    62bc:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
			if(c == 255) c= 0;
    62c0:	8f 3f       	cpi	r24, 0xFF	; 255
    62c2:	51 f0       	breq	.+20     	; 0x62d8 <_ZN13EepromManager11readNonVolsEv+0x332>
			g_messages_text[STATION_ID][i] = c;
    62c4:	f7 01       	movw	r30, r14
    62c6:	81 93       	st	Z+, r24
    62c8:	7f 01       	movw	r14, r30
			if(!c)
    62ca:	88 23       	and	r24, r24
    62cc:	41 f0       	breq	.+16     	; 0x62de <_ZN13EepromManager11readNonVolsEv+0x338>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    62ce:	21 96       	adiw	r28, 0x01	; 1
    62d0:	c4 31       	cpi	r28, 0x14	; 20
    62d2:	d1 05       	cpc	r29, r1
    62d4:	81 f7       	brne	.-32     	; 0x62b6 <_ZN13EepromManager11readNonVolsEv+0x310>
    62d6:	03 c0       	rjmp	.+6      	; 0x62de <_ZN13EepromManager11readNonVolsEv+0x338>
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(c == 255) c= 0;
			g_messages_text[STATION_ID][i] = c;
    62d8:	cf 52       	subi	r28, 0x2F	; 47
    62da:	dc 4b       	sbci	r29, 0xBC	; 188
    62dc:	1a a6       	std	Y+42, r1	; 0x2a
    62de:	0f 2e       	mov	r0, r31
    62e0:	fc e4       	ldi	r31, 0x4C	; 76
    62e2:	ef 2e       	mov	r14, r31
    62e4:	f4 e4       	ldi	r31, 0x44	; 68
    62e6:	ff 2e       	mov	r15, r31
    62e8:	f0 2d       	mov	r31, r0
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		char c;
		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    62ea:	d0 e0       	ldi	r29, 0x00	; 0
    62ec:	c0 e0       	ldi	r28, 0x00	; 0
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));	
    62ee:	0c 59       	subi	r16, 0x9C	; 156
    62f0:	1f 4f       	sbci	r17, 0xFF	; 255
    62f2:	c8 01       	movw	r24, r16
    62f4:	8c 0f       	add	r24, r28
    62f6:	9d 1f       	adc	r25, r29
    62f8:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
			if(c==255) c=0;
    62fc:	8f 3f       	cpi	r24, 0xFF	; 255
    62fe:	09 f4       	brne	.+2      	; 0x6302 <_ZN13EepromManager11readNonVolsEv+0x35c>
    6300:	a0 c0       	rjmp	.+320    	; 0x6442 <_ZN13EepromManager11readNonVolsEv+0x49c>
			g_unlockCode[i] = c;
    6302:	f7 01       	movw	r30, r14
    6304:	81 93       	st	Z+, r24
    6306:	7f 01       	movw	r14, r30
			if(!c)
    6308:	88 23       	and	r24, r24
    630a:	21 f0       	breq	.+8      	; 0x6314 <_ZN13EepromManager11readNonVolsEv+0x36e>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    630c:	21 96       	adiw	r28, 0x01	; 1
    630e:	c8 30       	cpi	r28, 0x08	; 8
    6310:	d1 05       	cpc	r29, r1
    6312:	79 f7       	brne	.-34     	; 0x62f2 <_ZN13EepromManager11readNonVolsEv+0x34c>
			{
				break;
			}
		}
		
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    6314:	85 e9       	ldi	r24, 0x95	; 149
    6316:	90 e0       	ldi	r25, 0x00	; 0
    6318:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    631c:	60 93 69 40 	sts	0x4069, r22	; 0x804069 <g_rtty_offset>
    6320:	70 93 6a 40 	sts	0x406A, r23	; 0x80406a <g_rtty_offset+0x1>
    6324:	80 93 6b 40 	sts	0x406B, r24	; 0x80406b <g_rtty_offset+0x2>
    6328:	90 93 6c 40 	sts	0x406C, r25	; 0x80406c <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    632c:	8d e9       	ldi	r24, 0x9D	; 157
    632e:	90 e0       	ldi	r25, 0x00	; 0
    6330:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    6334:	89 38       	cpi	r24, 0x89	; 137
    6336:	f3 e1       	ldi	r31, 0x13	; 19
    6338:	9f 07       	cpc	r25, r31
    633a:	10 f0       	brcs	.+4      	; 0x6340 <_ZN13EepromManager11readNonVolsEv+0x39a>
    633c:	88 e8       	ldi	r24, 0x88	; 136
    633e:	93 e1       	ldi	r25, 0x13	; 19
    6340:	80 93 67 40 	sts	0x4067, r24	; 0x804067 <g_80m_power_level_mW>
    6344:	90 93 68 40 	sts	0x4068, r25	; 0x804068 <g_80m_power_level_mW+0x1>

		g_pattern_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_codespeed))), MAX_CODE_SPEED_WPM);
    6348:	88 ea       	ldi	r24, 0xA8	; 168
    634a:	90 e0       	ldi	r25, 0x00	; 0
    634c:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    6350:	85 30       	cpi	r24, 0x05	; 5
    6352:	08 f4       	brcc	.+2      	; 0x6356 <_ZN13EepromManager11readNonVolsEv+0x3b0>
    6354:	85 e0       	ldi	r24, 0x05	; 5
    6356:	85 31       	cpi	r24, 0x15	; 21
    6358:	08 f0       	brcs	.+2      	; 0x635c <_ZN13EepromManager11readNonVolsEv+0x3b6>
    635a:	84 e1       	ldi	r24, 0x14	; 20
    635c:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <g_pattern_codespeed>
		g_foxoring_pattern_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.foxoring_pattern_codespeed))), MAX_CODE_SPEED_WPM);
    6360:	8d ea       	ldi	r24, 0xAD	; 173
    6362:	90 e0       	ldi	r25, 0x00	; 0
    6364:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    6368:	85 30       	cpi	r24, 0x05	; 5
    636a:	08 f4       	brcc	.+2      	; 0x636e <_ZN13EepromManager11readNonVolsEv+0x3c8>
    636c:	85 e0       	ldi	r24, 0x05	; 5
    636e:	85 31       	cpi	r24, 0x15	; 21
    6370:	08 f0       	brcs	.+2      	; 0x6374 <_ZN13EepromManager11readNonVolsEv+0x3ce>
    6372:	84 e1       	ldi	r24, 0x14	; 20
    6374:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_foxoring_pattern_codespeed>

		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
    6378:	82 eb       	ldi	r24, 0xB2	; 178
    637a:	90 e0       	ldi	r25, 0x00	; 0
    637c:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    6380:	99 23       	and	r25, r25
    6382:	0c f4       	brge	.+2      	; 0x6386 <_ZN13EepromManager11readNonVolsEv+0x3e0>
    6384:	62 c0       	rjmp	.+196    	; 0x644a <_ZN13EepromManager11readNonVolsEv+0x4a4>
    6386:	81 31       	cpi	r24, 0x11	; 17
    6388:	2e e0       	ldi	r18, 0x0E	; 14
    638a:	92 07       	cpc	r25, r18
    638c:	14 f0       	brlt	.+4      	; 0x6392 <_ZN13EepromManager11readNonVolsEv+0x3ec>
    638e:	80 e1       	ldi	r24, 0x10	; 16
    6390:	9e e0       	ldi	r25, 0x0E	; 14
    6392:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <g_off_air_seconds>
    6396:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <g_off_air_seconds+0x1>
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
    639a:	88 eb       	ldi	r24, 0xB8	; 184
    639c:	90 e0       	ldi	r25, 0x00	; 0
    639e:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    63a2:	99 23       	and	r25, r25
    63a4:	0c f4       	brge	.+2      	; 0x63a8 <_ZN13EepromManager11readNonVolsEv+0x402>
    63a6:	54 c0       	rjmp	.+168    	; 0x6450 <_ZN13EepromManager11readNonVolsEv+0x4aa>
    63a8:	81 31       	cpi	r24, 0x11	; 17
    63aa:	ee e0       	ldi	r30, 0x0E	; 14
    63ac:	9e 07       	cpc	r25, r30
    63ae:	14 f0       	brlt	.+4      	; 0x63b4 <_ZN13EepromManager11readNonVolsEv+0x40e>
    63b0:	80 e1       	ldi	r24, 0x10	; 16
    63b2:	9e e0       	ldi	r25, 0x0E	; 14
    63b4:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    63b8:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
    63bc:	8e eb       	ldi	r24, 0xBE	; 190
    63be:	90 e0       	ldi	r25, 0x00	; 0
    63c0:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    63c4:	99 23       	and	r25, r25
    63c6:	0c f4       	brge	.+2      	; 0x63ca <_ZN13EepromManager11readNonVolsEv+0x424>
    63c8:	46 c0       	rjmp	.+140    	; 0x6456 <_ZN13EepromManager11readNonVolsEv+0x4b0>
    63ca:	81 31       	cpi	r24, 0x11	; 17
    63cc:	fe e0       	ldi	r31, 0x0E	; 14
    63ce:	9f 07       	cpc	r25, r31
    63d0:	14 f0       	brlt	.+4      	; 0x63d6 <_ZN13EepromManager11readNonVolsEv+0x430>
    63d2:	80 e1       	ldi	r24, 0x10	; 16
    63d4:	9e e0       	ldi	r25, 0x0E	; 14
    63d6:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <g_ID_period_seconds>
    63da:	90 93 15 40 	sts	0x4015, r25	; 0x804015 <g_ID_period_seconds+0x1>
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
    63de:	84 ec       	ldi	r24, 0xC4	; 196
    63e0:	90 e0       	ldi	r25, 0x00	; 0
    63e2:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    63e6:	99 23       	and	r25, r25
    63e8:	cc f1       	brlt	.+114    	; 0x645c <_ZN13EepromManager11readNonVolsEv+0x4b6>
    63ea:	81 31       	cpi	r24, 0x11	; 17
    63ec:	2e e0       	ldi	r18, 0x0E	; 14
    63ee:	92 07       	cpc	r25, r18
    63f0:	14 f0       	brlt	.+4      	; 0x63f6 <_ZN13EepromManager11readNonVolsEv+0x450>
    63f2:	80 e1       	ldi	r24, 0x10	; 16
    63f4:	9e e0       	ldi	r25, 0x0E	; 14
    63f6:	80 93 12 44 	sts	0x4412, r24	; 0x804412 <g_intra_cycle_delay_time>
    63fa:	90 93 13 44 	sts	0x4413, r25	; 0x804413 <g_intra_cycle_delay_time+0x1>
		
		g_voltage_threshold = CLAMP(0.1, eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)), 15.0);
    63fe:	8d ef       	ldi	r24, 0xFD	; 253
    6400:	90 e0       	ldi	r25, 0x00	; 0
    6402:	0e 94 a2 55 	call	0xab44	; 0xab44 <eeprom_read_dword>
    6406:	6b 01       	movw	r12, r22
    6408:	7c 01       	movw	r14, r24
    640a:	20 e0       	ldi	r18, 0x00	; 0
    640c:	30 e0       	ldi	r19, 0x00	; 0
    640e:	40 e7       	ldi	r20, 0x70	; 112
    6410:	51 e4       	ldi	r21, 0x41	; 65
    6412:	0e 94 68 4d 	call	0x9ad0	; 0x9ad0 <__gesf2>
    6416:	18 16       	cp	r1, r24
    6418:	24 f1       	brlt	.+72     	; 0x6462 <_ZN13EepromManager11readNonVolsEv+0x4bc>
    641a:	2d ec       	ldi	r18, 0xCD	; 205
    641c:	3c ec       	ldi	r19, 0xCC	; 204
    641e:	4c ec       	ldi	r20, 0xCC	; 204
    6420:	5d e3       	ldi	r21, 0x3D	; 61
    6422:	c7 01       	movw	r24, r14
    6424:	b6 01       	movw	r22, r12
    6426:	0e 94 09 4c 	call	0x9812	; 0x9812 <__cmpsf2>
    642a:	88 23       	and	r24, r24
    642c:	14 f5       	brge	.+68     	; 0x6472 <_ZN13EepromManager11readNonVolsEv+0x4cc>
    642e:	0f 2e       	mov	r0, r31
    6430:	fd ec       	ldi	r31, 0xCD	; 205
    6432:	cf 2e       	mov	r12, r31
    6434:	fc ec       	ldi	r31, 0xCC	; 204
    6436:	df 2e       	mov	r13, r31
    6438:	ed 2c       	mov	r14, r13
    643a:	fd e3       	ldi	r31, 0x3D	; 61
    643c:	ff 2e       	mov	r15, r31
    643e:	f0 2d       	mov	r31, r0
    6440:	18 c0       	rjmp	.+48     	; 0x6472 <_ZN13EepromManager11readNonVolsEv+0x4cc>

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
		{
			c = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));	
			if(c==255) c=0;
			g_unlockCode[i] = c;
    6442:	c4 5b       	subi	r28, 0xB4	; 180
    6444:	db 4b       	sbci	r29, 0xBB	; 187
    6446:	18 82       	st	Y, r1
    6448:	65 cf       	rjmp	.-310    	; 0x6314 <_ZN13EepromManager11readNonVolsEv+0x36e>
    644a:	90 e0       	ldi	r25, 0x00	; 0
    644c:	80 e0       	ldi	r24, 0x00	; 0
    644e:	9b cf       	rjmp	.-202    	; 0x6386 <_ZN13EepromManager11readNonVolsEv+0x3e0>
    6450:	90 e0       	ldi	r25, 0x00	; 0
    6452:	80 e0       	ldi	r24, 0x00	; 0
    6454:	a9 cf       	rjmp	.-174    	; 0x63a8 <_ZN13EepromManager11readNonVolsEv+0x402>
    6456:	90 e0       	ldi	r25, 0x00	; 0
    6458:	80 e0       	ldi	r24, 0x00	; 0
    645a:	b7 cf       	rjmp	.-146    	; 0x63ca <_ZN13EepromManager11readNonVolsEv+0x424>
    645c:	90 e0       	ldi	r25, 0x00	; 0
    645e:	80 e0       	ldi	r24, 0x00	; 0
    6460:	c4 cf       	rjmp	.-120    	; 0x63ea <_ZN13EepromManager11readNonVolsEv+0x444>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
		
		g_voltage_threshold = CLAMP(0.1, eeprom_read_float(&(EepromManager::ee_vars.voltage_threshold)), 15.0);
    6462:	0f 2e       	mov	r0, r31
    6464:	c1 2c       	mov	r12, r1
    6466:	d1 2c       	mov	r13, r1
    6468:	f0 e7       	ldi	r31, 0x70	; 112
    646a:	ef 2e       	mov	r14, r31
    646c:	f1 e4       	ldi	r31, 0x41	; 65
    646e:	ff 2e       	mov	r15, r31
    6470:	f0 2d       	mov	r31, r0
    6472:	c0 92 83 44 	sts	0x4483, r12	; 0x804483 <g_voltage_threshold>
    6476:	d0 92 84 44 	sts	0x4484, r13	; 0x804484 <g_voltage_threshold+0x1>
    647a:	e0 92 85 44 	sts	0x4485, r14	; 0x804485 <g_voltage_threshold+0x2>
    647e:	f0 92 86 44 	sts	0x4486, r15	; 0x804486 <g_voltage_threshold+0x3>
		
		g_clock_calibration = eeprom_read_word(&(EepromManager::ee_vars.clock_calibration));
    6482:	85 e0       	ldi	r24, 0x05	; 5
    6484:	91 e0       	ldi	r25, 0x01	; 1
    6486:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    648a:	80 93 81 44 	sts	0x4481, r24	; 0x804481 <g_clock_calibration>
    648e:	90 93 82 44 	sts	0x4482, r25	; 0x804482 <g_clock_calibration+0x1>

		g_days_to_run = eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.days_to_run)));
    6492:	8b e0       	ldi	r24, 0x0B	; 11
    6494:	91 e0       	ldi	r25, 0x01	; 1
    6496:	0e 94 9a 55 	call	0xab34	; 0xab34 <eeprom_read_byte>
    649a:	80 93 80 44 	sts	0x4480, r24	; 0x804480 <g_days_to_run>
		
		g_i2c_failure_count = eeprom_read_word((uint16_t*)(&(EepromManager::ee_vars.i2c_failure_count)));
    649e:	80 e1       	ldi	r24, 0x10	; 16
    64a0:	91 e0       	ldi	r25, 0x01	; 1
    64a2:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>
    64a6:	80 93 7e 44 	sts	0x447E, r24	; 0x80447e <g_i2c_failure_count>
    64aa:	90 93 7f 44 	sts	0x447F, r25	; 0x80447f <g_i2c_failure_count+0x1>

		failure = false;
    64ae:	80 e0       	ldi	r24, 0x00	; 0
    64b0:	8a cd       	rjmp	.-1260   	; 0x5fc6 <_ZN13EepromManager11readNonVolsEv+0x20>

000064b2 <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    64b2:	ef 92       	push	r14
    64b4:	ff 92       	push	r15
    64b6:	0f 93       	push	r16
    64b8:	1f 93       	push	r17
    64ba:	cf 93       	push	r28
    64bc:	df 93       	push	r29
		bool err = false;
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    64be:	90 e0       	ldi	r25, 0x00	; 0
    64c0:	80 e0       	ldi	r24, 0x00	; 0
    64c2:	0e 94 a9 55 	call	0xab52	; 0xab52 <eeprom_read_word>

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    64c6:	88 30       	cpi	r24, 0x08	; 8
    64c8:	91 40       	sbci	r25, 0x01	; 1
    64ca:	09 f4       	brne	.+2      	; 0x64ce <_ZN13EepromManager20initializeEEPROMVarsEv+0x1c>
    64cc:	f0 c1       	rjmp	.+992    	; 0x68ae <_ZN13EepromManager20initializeEEPROMVarsEv+0x3fc>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    64ce:	84 e1       	ldi	r24, 0x14	; 20
    64d0:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    64d4:	60 91 0d 40 	lds	r22, 0x400D	; 0x80400d <g_id_codespeed>
    64d8:	83 ea       	ldi	r24, 0xA3	; 163
    64da:	90 e0       	ldi	r25, 0x00	; 0
    64dc:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_isMaster = EEPROM_MASTER_SETTING_DEFAULT;
    64e0:	10 92 89 44 	sts	0x4489, r1	; 0x804489 <g_isMaster>
			avr_eeprom_write_byte(Master_setting, g_isMaster);
    64e4:	60 e0       	ldi	r22, 0x00	; 0
    64e6:	88 ef       	ldi	r24, 0xF8	; 248
    64e8:	90 e0       	ldi	r25, 0x00	; 0
    64ea:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			g_fox[EVENT_NONE] = EEPROM_FOX_SETTING_NONE_DEFAULT;
    64ee:	c2 e2       	ldi	r28, 0x22	; 34
    64f0:	d0 e4       	ldi	r29, 0x40	; 64
    64f2:	18 82       	st	Y, r1
    64f4:	19 82       	std	Y+1, r1	; 0x01
			avr_eeprom_write_byte(Fox_setting_none, (uint8_t)g_fox[EVENT_NONE]);
    64f6:	68 81       	ld	r22, Y
    64f8:	79 81       	ldd	r23, Y+1	; 0x01
    64fa:	82 e7       	ldi	r24, 0x72	; 114
    64fc:	90 e0       	ldi	r25, 0x00	; 0
    64fe:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_fox[EVENT_CLASSIC] = EEPROM_FOX_SETTING_CLASSIC_DEFAULT;
    6502:	01 e0       	ldi	r16, 0x01	; 1
    6504:	10 e0       	ldi	r17, 0x00	; 0
    6506:	0a 83       	std	Y+2, r16	; 0x02
    6508:	1b 83       	std	Y+3, r17	; 0x03
			avr_eeprom_write_byte(Fox_setting_classic, (uint8_t)g_fox[EVENT_CLASSIC]);
    650a:	6a 81       	ldd	r22, Y+2	; 0x02
    650c:	7b 81       	ldd	r23, Y+3	; 0x03
    650e:	88 e7       	ldi	r24, 0x78	; 120
    6510:	90 e0       	ldi	r25, 0x00	; 0
    6512:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_fox[EVENT_SPRINT] = EEPROM_FOX_SETTING_SPRINT_DEFAULT;
    6516:	87 e0       	ldi	r24, 0x07	; 7
    6518:	90 e0       	ldi	r25, 0x00	; 0
    651a:	8c 83       	std	Y+4, r24	; 0x04
    651c:	9d 83       	std	Y+5, r25	; 0x05
			avr_eeprom_write_byte(Fox_setting_sprint, (uint8_t)g_fox[EVENT_SPRINT]);
    651e:	6c 81       	ldd	r22, Y+4	; 0x04
    6520:	7d 81       	ldd	r23, Y+5	; 0x05
    6522:	8e e7       	ldi	r24, 0x7E	; 126
    6524:	90 e0       	ldi	r25, 0x00	; 0
    6526:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_fox[EVENT_FOXORING] = EEPROM_FOX_SETTING_FOXORING_DEFAULT;
    652a:	81 e1       	ldi	r24, 0x11	; 17
    652c:	90 e0       	ldi	r25, 0x00	; 0
    652e:	8e 83       	std	Y+6, r24	; 0x06
    6530:	9f 83       	std	Y+7, r25	; 0x07
			avr_eeprom_write_byte(Fox_setting_foxoring, (uint8_t)g_fox[EVENT_FOXORING]);
    6532:	6e 81       	ldd	r22, Y+6	; 0x06
    6534:	7f 81       	ldd	r23, Y+7	; 0x07
    6536:	84 e8       	ldi	r24, 0x84	; 132
    6538:	90 e0       	ldi	r25, 0x00	; 0
    653a:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_fox[EVENT_BLIND_ARDF] = EEPROM_FOX_SETTING_BLIND_DEFAULT;
    653e:	08 87       	std	Y+8, r16	; 0x08
    6540:	19 87       	std	Y+9, r17	; 0x09
			avr_eeprom_write_byte(Fox_setting_blind, (uint8_t)g_fox[EVENT_BLIND_ARDF]);
    6542:	68 85       	ldd	r22, Y+8	; 0x08
    6544:	79 85       	ldd	r23, Y+9	; 0x09
    6546:	8a e8       	ldi	r24, 0x8A	; 138
    6548:	90 e0       	ldi	r25, 0x00	; 0
    654a:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_event = EEPROM_EVENT_SETTING_DEFAULT;
    654e:	83 e0       	ldi	r24, 0x03	; 3
    6550:	90 e0       	ldi	r25, 0x00	; 0
    6552:	80 93 87 44 	sts	0x4487, r24	; 0x804487 <g_event>
    6556:	90 93 88 44 	sts	0x4488, r25	; 0x804488 <g_event+0x1>
			avr_eeprom_write_byte(Event_setting, (uint8_t)g_event);
    655a:	60 91 87 44 	lds	r22, 0x4487	; 0x804487 <g_event>
    655e:	70 91 88 44 	lds	r23, 0x4488	; 0x804488 <g_event+0x1>
    6562:	8a ec       	ldi	r24, 0xCA	; 202
    6564:	90 e0       	ldi	r25, 0x00	; 0
    6566:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_tx_frequency = EEPROM_FREQUENCY_DEFAULT;
    656a:	80 e2       	ldi	r24, 0x20	; 32
    656c:	95 e7       	ldi	r25, 0x75	; 117
    656e:	a8 e3       	ldi	r26, 0x38	; 56
    6570:	b0 e0       	ldi	r27, 0x00	; 0
    6572:	80 93 63 40 	sts	0x4063, r24	; 0x804063 <g_tx_frequency>
    6576:	90 93 64 40 	sts	0x4064, r25	; 0x804064 <g_tx_frequency+0x1>
    657a:	a0 93 65 40 	sts	0x4065, r26	; 0x804065 <g_tx_frequency+0x2>
    657e:	b0 93 66 40 	sts	0x4066, r27	; 0x804066 <g_tx_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_tx_frequency);
    6582:	40 91 63 40 	lds	r20, 0x4063	; 0x804063 <g_tx_frequency>
    6586:	50 91 64 40 	lds	r21, 0x4064	; 0x804064 <g_tx_frequency+0x1>
    658a:	60 91 65 40 	lds	r22, 0x4065	; 0x804065 <g_tx_frequency+0x2>
    658e:	70 91 66 40 	lds	r23, 0x4066	; 0x804066 <g_tx_frequency+0x3>
    6592:	80 ed       	ldi	r24, 0xD0	; 208
    6594:	90 e0       	ldi	r25, 0x00	; 0
    6596:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
			
			g_frequency_low = EEPROM_FREQUENCY_LOW_DEFAULT;
    659a:	80 e1       	ldi	r24, 0x10	; 16
    659c:	9d ed       	ldi	r25, 0xDD	; 221
    659e:	a5 e3       	ldi	r26, 0x35	; 53
    65a0:	b0 e0       	ldi	r27, 0x00	; 0
    65a2:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <g_frequency_low>
    65a6:	90 93 2d 40 	sts	0x402D, r25	; 0x80402d <g_frequency_low+0x1>
    65aa:	a0 93 2e 40 	sts	0x402E, r26	; 0x80402e <g_frequency_low+0x2>
    65ae:	b0 93 2f 40 	sts	0x402F, r27	; 0x80402f <g_frequency_low+0x3>
			avr_eeprom_write_dword(Frequency_Low, g_frequency_low);
    65b2:	40 91 2c 40 	lds	r20, 0x402C	; 0x80402c <g_frequency_low>
    65b6:	50 91 2d 40 	lds	r21, 0x402D	; 0x80402d <g_frequency_low+0x1>
    65ba:	60 91 2e 40 	lds	r22, 0x402E	; 0x80402e <g_frequency_low+0x2>
    65be:	70 91 2f 40 	lds	r23, 0x402F	; 0x80402f <g_frequency_low+0x3>
    65c2:	88 ed       	ldi	r24, 0xD8	; 216
    65c4:	90 e0       	ldi	r25, 0x00	; 0
    65c6:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
			
			g_frequency_med = EEPROM_FREQUENCY_MED_DEFAULT;
    65ca:	80 e3       	ldi	r24, 0x30	; 48
    65cc:	9b e2       	ldi	r25, 0x2B	; 43
    65ce:	a6 e3       	ldi	r26, 0x36	; 54
    65d0:	b0 e0       	ldi	r27, 0x00	; 0
    65d2:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_frequency_med>
    65d6:	90 93 31 40 	sts	0x4031, r25	; 0x804031 <g_frequency_med+0x1>
    65da:	a0 93 32 40 	sts	0x4032, r26	; 0x804032 <g_frequency_med+0x2>
    65de:	b0 93 33 40 	sts	0x4033, r27	; 0x804033 <g_frequency_med+0x3>
			avr_eeprom_write_dword(Frequency_Med, g_frequency_med);
    65e2:	40 91 30 40 	lds	r20, 0x4030	; 0x804030 <g_frequency_med>
    65e6:	50 91 31 40 	lds	r21, 0x4031	; 0x804031 <g_frequency_med+0x1>
    65ea:	60 91 32 40 	lds	r22, 0x4032	; 0x804032 <g_frequency_med+0x2>
    65ee:	70 91 33 40 	lds	r23, 0x4033	; 0x804033 <g_frequency_med+0x3>
    65f2:	80 ee       	ldi	r24, 0xE0	; 224
    65f4:	90 e0       	ldi	r25, 0x00	; 0
    65f6:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
			
			g_frequency_hi = EEPROM_FREQUENCY_HI_DEFAULT;
    65fa:	80 e5       	ldi	r24, 0x50	; 80
    65fc:	99 e7       	ldi	r25, 0x79	; 121
    65fe:	a6 e3       	ldi	r26, 0x36	; 54
    6600:	b0 e0       	ldi	r27, 0x00	; 0
    6602:	80 93 34 40 	sts	0x4034, r24	; 0x804034 <g_frequency_hi>
    6606:	90 93 35 40 	sts	0x4035, r25	; 0x804035 <g_frequency_hi+0x1>
    660a:	a0 93 36 40 	sts	0x4036, r26	; 0x804036 <g_frequency_hi+0x2>
    660e:	b0 93 37 40 	sts	0x4037, r27	; 0x804037 <g_frequency_hi+0x3>
			avr_eeprom_write_dword(Frequency_Hi, g_frequency_hi);
    6612:	40 91 34 40 	lds	r20, 0x4034	; 0x804034 <g_frequency_hi>
    6616:	50 91 35 40 	lds	r21, 0x4035	; 0x804035 <g_frequency_hi+0x1>
    661a:	60 91 36 40 	lds	r22, 0x4036	; 0x804036 <g_frequency_hi+0x2>
    661e:	70 91 37 40 	lds	r23, 0x4037	; 0x804037 <g_frequency_hi+0x3>
    6622:	88 ee       	ldi	r24, 0xE8	; 232
    6624:	90 e0       	ldi	r25, 0x00	; 0
    6626:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
			
			g_frequency_beacon = EEPROM_FREQUENCY_BEACON_DEFAULT;
    662a:	80 e8       	ldi	r24, 0x80	; 128
    662c:	9e ee       	ldi	r25, 0xEE	; 238
    662e:	a6 e3       	ldi	r26, 0x36	; 54
    6630:	b0 e0       	ldi	r27, 0x00	; 0
    6632:	80 93 38 40 	sts	0x4038, r24	; 0x804038 <g_frequency_beacon>
    6636:	90 93 39 40 	sts	0x4039, r25	; 0x804039 <g_frequency_beacon+0x1>
    663a:	a0 93 3a 40 	sts	0x403A, r26	; 0x80403a <g_frequency_beacon+0x2>
    663e:	b0 93 3b 40 	sts	0x403B, r27	; 0x80403b <g_frequency_beacon+0x3>
			avr_eeprom_write_dword(Frequency_Beacon, g_frequency_beacon);
    6642:	40 91 38 40 	lds	r20, 0x4038	; 0x804038 <g_frequency_beacon>
    6646:	50 91 39 40 	lds	r21, 0x4039	; 0x804039 <g_frequency_beacon+0x1>
    664a:	60 91 3a 40 	lds	r22, 0x403A	; 0x80403a <g_frequency_beacon+0x2>
    664e:	70 91 3b 40 	lds	r23, 0x403B	; 0x80403b <g_frequency_beacon+0x3>
    6652:	80 ef       	ldi	r24, 0xF0	; 240
    6654:	90 e0       	ldi	r25, 0x00	; 0
    6656:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    665a:	10 92 14 44 	sts	0x4414, r1	; 0x804414 <g_event_start_epoch>
    665e:	10 92 15 44 	sts	0x4415, r1	; 0x804415 <g_event_start_epoch+0x1>
    6662:	10 92 16 44 	sts	0x4416, r1	; 0x804416 <g_event_start_epoch+0x2>
    6666:	10 92 17 44 	sts	0x4417, r1	; 0x804417 <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    666a:	40 91 14 44 	lds	r20, 0x4414	; 0x804414 <g_event_start_epoch>
    666e:	50 91 15 44 	lds	r21, 0x4415	; 0x804415 <g_event_start_epoch+0x1>
    6672:	60 91 16 44 	lds	r22, 0x4416	; 0x804416 <g_event_start_epoch+0x2>
    6676:	70 91 17 44 	lds	r23, 0x4417	; 0x804417 <g_event_start_epoch+0x3>
    667a:	86 e0       	ldi	r24, 0x06	; 6
    667c:	90 e0       	ldi	r25, 0x00	; 0
    667e:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    6682:	10 92 18 44 	sts	0x4418, r1	; 0x804418 <g_event_finish_epoch>
    6686:	10 92 19 44 	sts	0x4419, r1	; 0x804419 <g_event_finish_epoch+0x1>
    668a:	10 92 1a 44 	sts	0x441A, r1	; 0x80441a <g_event_finish_epoch+0x2>
    668e:	10 92 1b 44 	sts	0x441B, r1	; 0x80441b <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    6692:	40 91 18 44 	lds	r20, 0x4418	; 0x804418 <g_event_finish_epoch>
    6696:	50 91 19 44 	lds	r21, 0x4419	; 0x804419 <g_event_finish_epoch+0x1>
    669a:	60 91 1a 44 	lds	r22, 0x441A	; 0x80441a <g_event_finish_epoch+0x2>
    669e:	70 91 1b 44 	lds	r23, 0x441B	; 0x80441b <g_event_finish_epoch+0x3>
    66a2:	8e e0       	ldi	r24, 0x0E	; 14
    66a4:	90 e0       	ldi	r25, 0x00	; 0
    66a6:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    66aa:	10 92 4b 44 	sts	0x444B, r1	; 0x80444b <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    66ae:	60 91 4b 44 	lds	r22, 0x444B	; 0x80444b <g_utc_offset>
    66b2:	80 e9       	ldi	r24, 0x90	; 144
    66b4:	90 e0       	ldi	r25, 0x00	; 0
    66b6:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    66ba:	c1 ed       	ldi	r28, 0xD1	; 209
    66bc:	d3 e4       	ldi	r29, 0x43	; 67
    66be:	1a a6       	std	Y+42, r1	; 0x2a
			avr_eeprom_write_byte(StationID_text, 0);
    66c0:	60 e0       	ldi	r22, 0x00	; 0
    66c2:	8a e4       	ldi	r24, 0x4A	; 74
    66c4:	90 e0       	ldi	r25, 0x00	; 0
    66c6:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_FOX_PATTERN_DEFAULT;
			i = Pattern_text;
			for(j = 0; j < strlen(EEPROM_FOX_PATTERN_DEFAULT); j++)
			{
				g_messages_text[PATTERN_TEXT][j] = *v;
    66ca:	0d e4       	ldi	r16, 0x4D	; 77
    66cc:	08 83       	st	Y, r16
				avr_eeprom_write_byte(i++, *v++);
    66ce:	6d e4       	ldi	r22, 0x4D	; 77
    66d0:	86 e1       	ldi	r24, 0x16	; 22
    66d2:	90 e0       	ldi	r25, 0x00	; 0
    66d4:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_FOX_PATTERN_DEFAULT;
			i = Pattern_text;
			for(j = 0; j < strlen(EEPROM_FOX_PATTERN_DEFAULT); j++)
			{
				g_messages_text[PATTERN_TEXT][j] = *v;
    66d8:	8f e4       	ldi	r24, 0x4F	; 79
    66da:	89 83       	std	Y+1, r24	; 0x01
				avr_eeprom_write_byte(i++, *v++);
    66dc:	6f e4       	ldi	r22, 0x4F	; 79
    66de:	87 e1       	ldi	r24, 0x17	; 23
    66e0:	90 e0       	ldi	r25, 0x00	; 0
    66e2:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_FOX_PATTERN_DEFAULT;
			i = Pattern_text;
			for(j = 0; j < strlen(EEPROM_FOX_PATTERN_DEFAULT); j++)
			{
				g_messages_text[PATTERN_TEXT][j] = *v;
    66e6:	15 e4       	ldi	r17, 0x45	; 69
    66e8:	1a 83       	std	Y+2, r17	; 0x02
				avr_eeprom_write_byte(i++, *v++);
    66ea:	65 e4       	ldi	r22, 0x45	; 69
    66ec:	88 e1       	ldi	r24, 0x18	; 24
    66ee:	90 e0       	ldi	r25, 0x00	; 0
    66f0:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			}
			
			avr_eeprom_write_byte(i, '\0');
    66f4:	60 e0       	ldi	r22, 0x00	; 0
    66f6:	89 e1       	ldi	r24, 0x19	; 25
    66f8:	90 e0       	ldi	r25, 0x00	; 0
    66fa:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			v = (uint8_t*)EEPROM_FOXORING_PATTERN_DEFAULT;
			i = Foxoring_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_PATTERN_DEFAULT); j++)
			{
				g_messages_text[FOXORING_PATTERN_TEXT][j] = *v;
    66fe:	0d 8b       	std	Y+21, r16	; 0x15
				avr_eeprom_write_byte(i++, *v++);
    6700:	6d e4       	ldi	r22, 0x4D	; 77
    6702:	80 e3       	ldi	r24, 0x30	; 48
    6704:	90 e0       	ldi	r25, 0x00	; 0
    6706:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			v = (uint8_t*)EEPROM_FOXORING_PATTERN_DEFAULT;
			i = Foxoring_pattern_text;
			for(j = 0; j < strlen(EEPROM_FOXORING_PATTERN_DEFAULT); j++)
			{
				g_messages_text[FOXORING_PATTERN_TEXT][j] = *v;
    670a:	1e 8b       	std	Y+22, r17	; 0x16
				avr_eeprom_write_byte(i++, *v++);
    670c:	65 e4       	ldi	r22, 0x45	; 69
    670e:	81 e3       	ldi	r24, 0x31	; 49
    6710:	90 e0       	ldi	r25, 0x00	; 0
    6712:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			}
			
			avr_eeprom_write_byte(i, '\0');
    6716:	60 e0       	ldi	r22, 0x00	; 0
    6718:	82 e3       	ldi	r24, 0x32	; 50
    671a:	90 e0       	ldi	r25, 0x00	; 0
    671c:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    6720:	0a eb       	ldi	r16, 0xBA	; 186
    6722:	12 e4       	ldi	r17, 0x42	; 66
    6724:	cc e4       	ldi	r28, 0x4C	; 76
    6726:	d4 e4       	ldi	r29, 0x44	; 68

			v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
    6728:	84 e6       	ldi	r24, 0x64	; 100
    672a:	90 e0       	ldi	r25, 0x00	; 0
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
			{
				g_unlockCode[j] = *v;
    672c:	f8 01       	movw	r30, r16
    672e:	61 91       	ld	r22, Z+
    6730:	8f 01       	movw	r16, r30
    6732:	69 93       	st	Y+, r22
				avr_eeprom_write_byte(i++, *v++);
    6734:	7c 01       	movw	r14, r24
    6736:	ff ef       	ldi	r31, 0xFF	; 255
    6738:	ef 1a       	sub	r14, r31
    673a:	ff 0a       	sbc	r15, r31
    673c:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
    6740:	c7 01       	movw	r24, r14
			
			avr_eeprom_write_byte(i, '\0');

			v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    6742:	88 36       	cpi	r24, 0x68	; 104
    6744:	91 05       	cpc	r25, r1
    6746:	91 f7       	brne	.-28     	; 0x672c <_ZN13EepromManager20initializeEEPROMVarsEv+0x27a>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, '\0');
    6748:	60 e0       	ldi	r22, 0x00	; 0
    674a:	88 e6       	ldi	r24, 0x68	; 104
    674c:	90 e0       	ldi	r25, 0x00	; 0
    674e:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    6752:	10 92 50 44 	sts	0x4450, r1	; 0x804450 <g_unlockCode+0x4>
			
			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    6756:	8a ea       	ldi	r24, 0xAA	; 170
    6758:	90 e0       	ldi	r25, 0x00	; 0
    675a:	a0 e0       	ldi	r26, 0x00	; 0
    675c:	b0 e0       	ldi	r27, 0x00	; 0
    675e:	80 93 69 40 	sts	0x4069, r24	; 0x804069 <g_rtty_offset>
    6762:	90 93 6a 40 	sts	0x406A, r25	; 0x80406a <g_rtty_offset+0x1>
    6766:	a0 93 6b 40 	sts	0x406B, r26	; 0x80406b <g_rtty_offset+0x2>
    676a:	b0 93 6c 40 	sts	0x406C, r27	; 0x80406c <g_rtty_offset+0x3>
			avr_eeprom_write_dword(RTTY_offset, g_rtty_offset);
    676e:	4a ea       	ldi	r20, 0xAA	; 170
    6770:	50 e0       	ldi	r21, 0x00	; 0
    6772:	60 e0       	ldi	r22, 0x00	; 0
    6774:	70 e0       	ldi	r23, 0x00	; 0
    6776:	85 e9       	ldi	r24, 0x95	; 149
    6778:	90 e0       	ldi	r25, 0x00	; 0
    677a:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    677e:	84 ef       	ldi	r24, 0xF4	; 244
    6780:	91 e0       	ldi	r25, 0x01	; 1
    6782:	80 93 67 40 	sts	0x4067, r24	; 0x804067 <g_80m_power_level_mW>
    6786:	90 93 68 40 	sts	0x4068, r25	; 0x804068 <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    678a:	44 ef       	ldi	r20, 0xF4	; 244
    678c:	51 e0       	ldi	r21, 0x01	; 1
    678e:	60 e0       	ldi	r22, 0x00	; 0
    6790:	70 e0       	ldi	r23, 0x00	; 0
    6792:	8d e9       	ldi	r24, 0x9D	; 157
    6794:	90 e0       	ldi	r25, 0x00	; 0
    6796:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
			
			g_pattern_codespeed = EEPROM_PATTERN_CODE_SPEED_DEFAULT;
    679a:	c8 e0       	ldi	r28, 0x08	; 8
    679c:	c0 93 0e 40 	sts	0x400E, r28	; 0x80400e <g_pattern_codespeed>
			avr_eeprom_write_byte(Pattern_Code_Speed, g_pattern_codespeed);
    67a0:	60 91 0e 40 	lds	r22, 0x400E	; 0x80400e <g_pattern_codespeed>
    67a4:	88 ea       	ldi	r24, 0xA8	; 168
    67a6:	90 e0       	ldi	r25, 0x00	; 0
    67a8:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_foxoring_pattern_codespeed = EEPROM_FOXORING_PATTERN_CODESPEED_DEFAULT;
    67ac:	c0 93 0f 40 	sts	0x400F, r28	; 0x80400f <g_foxoring_pattern_codespeed>
			avr_eeprom_write_byte(Foxoring_Pattern_Code_Speed, g_foxoring_pattern_codespeed);
    67b0:	60 91 0f 40 	lds	r22, 0x400F	; 0x80400f <g_foxoring_pattern_codespeed>
    67b4:	8d ea       	ldi	r24, 0xAD	; 173
    67b6:	90 e0       	ldi	r25, 0x00	; 0
    67b8:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_off_air_seconds = EEPROM_OFF_AIR_TIME_DEFAULT;
    67bc:	80 ef       	ldi	r24, 0xF0	; 240
    67be:	90 e0       	ldi	r25, 0x00	; 0
    67c0:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <g_off_air_seconds>
    67c4:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <g_off_air_seconds+0x1>
			avr_eeprom_write_word(Off_Air_Seconds, g_off_air_seconds);
    67c8:	60 91 12 40 	lds	r22, 0x4012	; 0x804012 <g_off_air_seconds>
    67cc:	70 91 13 40 	lds	r23, 0x4013	; 0x804013 <g_off_air_seconds+0x1>
    67d0:	82 eb       	ldi	r24, 0xB2	; 178
    67d2:	90 e0       	ldi	r25, 0x00	; 0
    67d4:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
			
			g_on_air_seconds = EEPROM_ON_AIR_TIME_DEFAULT;
    67d8:	8c e3       	ldi	r24, 0x3C	; 60
    67da:	90 e0       	ldi	r25, 0x00	; 0
    67dc:	80 93 10 40 	sts	0x4010, r24	; 0x804010 <g_on_air_seconds>
    67e0:	90 93 11 40 	sts	0x4011, r25	; 0x804011 <g_on_air_seconds+0x1>
			avr_eeprom_write_word(On_Air_Seconds, g_on_air_seconds);
    67e4:	60 91 10 40 	lds	r22, 0x4010	; 0x804010 <g_on_air_seconds>
    67e8:	70 91 11 40 	lds	r23, 0x4011	; 0x804011 <g_on_air_seconds+0x1>
    67ec:	88 eb       	ldi	r24, 0xB8	; 184
    67ee:	90 e0       	ldi	r25, 0x00	; 0
    67f0:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
		
			g_ID_period_seconds = EEPROM_ID_TIME_INTERVAL_DEFAULT;
    67f4:	8c e2       	ldi	r24, 0x2C	; 44
    67f6:	91 e0       	ldi	r25, 0x01	; 1
    67f8:	80 93 14 40 	sts	0x4014, r24	; 0x804014 <g_ID_period_seconds>
    67fc:	90 93 15 40 	sts	0x4015, r25	; 0x804015 <g_ID_period_seconds+0x1>
			avr_eeprom_write_word(ID_Period_Seconds, g_ID_period_seconds);
    6800:	60 91 14 40 	lds	r22, 0x4014	; 0x804014 <g_ID_period_seconds>
    6804:	70 91 15 40 	lds	r23, 0x4015	; 0x804015 <g_ID_period_seconds+0x1>
    6808:	8e eb       	ldi	r24, 0xBE	; 190
    680a:	90 e0       	ldi	r25, 0x00	; 0
    680c:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
			
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
    6810:	10 92 12 44 	sts	0x4412, r1	; 0x804412 <g_intra_cycle_delay_time>
    6814:	10 92 13 44 	sts	0x4413, r1	; 0x804413 <g_intra_cycle_delay_time+0x1>
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);
    6818:	60 91 12 44 	lds	r22, 0x4412	; 0x804412 <g_intra_cycle_delay_time>
    681c:	70 91 13 44 	lds	r23, 0x4413	; 0x804413 <g_intra_cycle_delay_time+0x1>
    6820:	84 ec       	ldi	r24, 0xC4	; 196
    6822:	90 e0       	ldi	r25, 0x00	; 0
    6824:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>

			avr_eeprom_write_byte(i, '\0');
    6828:	60 e0       	ldi	r22, 0x00	; 0
    682a:	88 e6       	ldi	r24, 0x68	; 104
    682c:	90 e0       	ldi	r25, 0x00	; 0
    682e:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>

			g_voltage_threshold = EEPROM_BATTERY_THRESHOLD_V;
    6832:	83 e3       	ldi	r24, 0x33	; 51
    6834:	93 e3       	ldi	r25, 0x33	; 51
    6836:	a3 e7       	ldi	r26, 0x73	; 115
    6838:	b0 e4       	ldi	r27, 0x40	; 64
    683a:	80 93 83 44 	sts	0x4483, r24	; 0x804483 <g_voltage_threshold>
    683e:	90 93 84 44 	sts	0x4484, r25	; 0x804484 <g_voltage_threshold+0x1>
    6842:	a0 93 85 44 	sts	0x4485, r26	; 0x804485 <g_voltage_threshold+0x2>
    6846:	b0 93 86 44 	sts	0x4486, r27	; 0x804486 <g_voltage_threshold+0x3>
			avr_eeprom_write_float(Voltage_threshold, g_voltage_threshold);
    684a:	40 91 83 44 	lds	r20, 0x4483	; 0x804483 <g_voltage_threshold>
    684e:	50 91 84 44 	lds	r21, 0x4484	; 0x804484 <g_voltage_threshold+0x1>
    6852:	60 91 85 44 	lds	r22, 0x4485	; 0x804485 <g_voltage_threshold+0x2>
    6856:	70 91 86 44 	lds	r23, 0x4486	; 0x804486 <g_voltage_threshold+0x3>
    685a:	8d ef       	ldi	r24, 0xFD	; 253
    685c:	90 e0       	ldi	r25, 0x00	; 0
    685e:	0e 94 38 2b 	call	0x5670	; 0x5670 <_Z22avr_eeprom_write_floatjf>
			
			g_clock_calibration = EEPROM_CLOCK_CALIBRATION_DEFAULT;
    6862:	8f ef       	ldi	r24, 0xFF	; 255
    6864:	9f e7       	ldi	r25, 0x7F	; 127
    6866:	80 93 81 44 	sts	0x4481, r24	; 0x804481 <g_clock_calibration>
    686a:	90 93 82 44 	sts	0x4482, r25	; 0x804482 <g_clock_calibration+0x1>
			avr_eeprom_write_word(Clock_calibration, g_clock_calibration);
    686e:	6f ef       	ldi	r22, 0xFF	; 255
    6870:	7f e7       	ldi	r23, 0x7F	; 127
    6872:	85 e0       	ldi	r24, 0x05	; 5
    6874:	91 e0       	ldi	r25, 0x01	; 1
    6876:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>

			g_days_to_run = 1;
    687a:	81 e0       	ldi	r24, 0x01	; 1
    687c:	80 93 80 44 	sts	0x4480, r24	; 0x804480 <g_days_to_run>
			avr_eeprom_write_byte(Days_to_run, g_days_to_run);
    6880:	60 91 80 44 	lds	r22, 0x4480	; 0x804480 <g_days_to_run>
    6884:	8b e0       	ldi	r24, 0x0B	; 11
    6886:	91 e0       	ldi	r25, 0x01	; 1
    6888:	0e 94 fb 2a 	call	0x55f6	; 0x55f6 <_Z21avr_eeprom_write_bytejh>
			
			g_i2c_failure_count = 0;
    688c:	10 92 7e 44 	sts	0x447E, r1	; 0x80447e <g_i2c_failure_count>
    6890:	10 92 7f 44 	sts	0x447F, r1	; 0x80447f <g_i2c_failure_count+0x1>
			avr_eeprom_write_dword(I2C_failure_count, g_i2c_failure_count);
    6894:	40 e0       	ldi	r20, 0x00	; 0
    6896:	50 e0       	ldi	r21, 0x00	; 0
    6898:	ba 01       	movw	r22, r20
    689a:	80 e1       	ldi	r24, 0x10	; 16
    689c:	91 e0       	ldi	r25, 0x01	; 1
    689e:	0e 94 22 2b 	call	0x5644	; 0x5644 <_Z22avr_eeprom_write_dwordjm>
			
			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    68a2:	68 e0       	ldi	r22, 0x08	; 8
    68a4:	71 e0       	ldi	r23, 0x01	; 1
    68a6:	90 e0       	ldi	r25, 0x00	; 0
    68a8:	80 e0       	ldi	r24, 0x00	; 0
    68aa:	0e 94 0e 2b 	call	0x561c	; 0x561c <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
	}
    68ae:	80 e0       	ldi	r24, 0x00	; 0
    68b0:	df 91       	pop	r29
    68b2:	cf 91       	pop	r28
    68b4:	1f 91       	pop	r17
    68b6:	0f 91       	pop	r16
    68b8:	ff 90       	pop	r15
    68ba:	ef 90       	pop	r14
    68bc:	08 95       	ret

000068be <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    68be:	cf 92       	push	r12
    68c0:	df 92       	push	r13
    68c2:	ef 92       	push	r14
    68c4:	ff 92       	push	r15
    68c6:	0f 93       	push	r16
    68c8:	1f 93       	push	r17
    68ca:	6a 01       	movw	r12, r20
    68cc:	7b 01       	movw	r14, r22
    68ce:	00 93 91 44 	sts	0x4491, r16	; 0x804491 <_SAMPLING_FREQUENCY>
    68d2:	10 93 92 44 	sts	0x4492, r17	; 0x804492 <_SAMPLING_FREQUENCY+0x1>
    68d6:	20 93 93 44 	sts	0x4493, r18	; 0x804493 <_SAMPLING_FREQUENCY+0x2>
    68da:	30 93 94 44 	sts	0x4494, r19	; 0x804494 <_SAMPLING_FREQUENCY+0x3>
    68de:	20 e0       	ldi	r18, 0x00	; 0
    68e0:	30 e0       	ldi	r19, 0x00	; 0
    68e2:	41 e5       	ldi	r20, 0x51	; 81
    68e4:	53 e4       	ldi	r21, 0x43	; 67
    68e6:	cb 01       	movw	r24, r22
    68e8:	b6 01       	movw	r22, r12
    68ea:	0e 94 68 4d 	call	0x9ad0	; 0x9ad0 <__gesf2>
    68ee:	18 16       	cp	r1, r24
    68f0:	9c f0       	brlt	.+38     	; 0x6918 <_ZN8GoertzelC1Eff+0x5a>
    68f2:	20 e0       	ldi	r18, 0x00	; 0
    68f4:	30 e0       	ldi	r19, 0x00	; 0
    68f6:	48 ec       	ldi	r20, 0xC8	; 200
    68f8:	52 e4       	ldi	r21, 0x42	; 66
    68fa:	c7 01       	movw	r24, r14
    68fc:	b6 01       	movw	r22, r12
    68fe:	0e 94 09 4c 	call	0x9812	; 0x9812 <__cmpsf2>
    6902:	88 23       	and	r24, r24
    6904:	8c f4       	brge	.+34     	; 0x6928 <_ZN8GoertzelC1Eff+0x6a>
    6906:	0f 2e       	mov	r0, r31
    6908:	c1 2c       	mov	r12, r1
    690a:	d1 2c       	mov	r13, r1
    690c:	f8 ec       	ldi	r31, 0xC8	; 200
    690e:	ef 2e       	mov	r14, r31
    6910:	f2 e4       	ldi	r31, 0x42	; 66
    6912:	ff 2e       	mov	r15, r31
    6914:	f0 2d       	mov	r31, r0
    6916:	08 c0       	rjmp	.+16     	; 0x6928 <_ZN8GoertzelC1Eff+0x6a>
    6918:	0f 2e       	mov	r0, r31
    691a:	c1 2c       	mov	r12, r1
    691c:	d1 2c       	mov	r13, r1
    691e:	f1 e5       	ldi	r31, 0x51	; 81
    6920:	ef 2e       	mov	r14, r31
    6922:	f3 e4       	ldi	r31, 0x43	; 67
    6924:	ff 2e       	mov	r15, r31
    6926:	f0 2d       	mov	r31, r0
    6928:	c7 01       	movw	r24, r14
    692a:	b6 01       	movw	r22, r12
    692c:	0e 94 80 4c 	call	0x9900	; 0x9900 <__fixsfsi>
    6930:	60 93 8f 44 	sts	0x448F, r22	; 0x80448f <_N>
    6934:	70 93 90 44 	sts	0x4490, r23	; 0x804490 <_N+0x1>
    6938:	80 91 8f 44 	lds	r24, 0x448F	; 0x80448f <_N>
    693c:	90 91 90 44 	lds	r25, 0x4490	; 0x804490 <_N+0x1>
    6940:	88 0f       	add	r24, r24
    6942:	99 1f       	adc	r25, r25
    6944:	0e 94 a3 4e 	call	0x9d46	; 0x9d46 <malloc>
    6948:	80 93 8a 44 	sts	0x448A, r24	; 0x80448a <testData>
    694c:	90 93 8b 44 	sts	0x448B, r25	; 0x80448b <testData+0x1>
    6950:	1f 91       	pop	r17
    6952:	0f 91       	pop	r16
    6954:	ff 90       	pop	r15
    6956:	ef 90       	pop	r14
    6958:	df 90       	pop	r13
    695a:	cf 90       	pop	r12
    695c:	08 95       	ret

0000695e <_ZN8GoertzelD1Ev>:
    695e:	80 91 8a 44 	lds	r24, 0x448A	; 0x80448a <testData>
    6962:	90 91 8b 44 	lds	r25, 0x448B	; 0x80448b <testData+0x1>
    6966:	0e 94 3f 4f 	call	0x9e7e	; 0x9e7e <free>
    696a:	08 95       	ret

0000696c <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
	if(_samplesReady)
    696c:	80 91 8c 44 	lds	r24, 0x448C	; 0x80448c <_samplesReady>
    6970:	81 11       	cpse	r24, r1
    6972:	2c c0       	rjmp	.+88     	; 0x69cc <_ZN8Goertzel9DataPointEi+0x60>
	{
		return(_samplesReady);
	}

	testData[_index] = data;
    6974:	80 91 8d 44 	lds	r24, 0x448D	; 0x80448d <_index>
    6978:	90 91 8e 44 	lds	r25, 0x448E	; 0x80448e <_index+0x1>
    697c:	88 0f       	add	r24, r24
    697e:	99 1f       	adc	r25, r25
    6980:	e0 91 8a 44 	lds	r30, 0x448A	; 0x80448a <testData>
    6984:	f0 91 8b 44 	lds	r31, 0x448B	; 0x80448b <testData+0x1>
    6988:	e8 0f       	add	r30, r24
    698a:	f9 1f       	adc	r31, r25
    698c:	60 83       	st	Z, r22
    698e:	71 83       	std	Z+1, r23	; 0x01
	_index++;
    6990:	80 91 8d 44 	lds	r24, 0x448D	; 0x80448d <_index>
    6994:	90 91 8e 44 	lds	r25, 0x448E	; 0x80448e <_index+0x1>
    6998:	01 96       	adiw	r24, 0x01	; 1
    699a:	80 93 8d 44 	sts	0x448D, r24	; 0x80448d <_index>
    699e:	90 93 8e 44 	sts	0x448E, r25	; 0x80448e <_index+0x1>
	if(_index >= _N)
    69a2:	20 91 8d 44 	lds	r18, 0x448D	; 0x80448d <_index>
    69a6:	30 91 8e 44 	lds	r19, 0x448E	; 0x80448e <_index+0x1>
    69aa:	80 91 8f 44 	lds	r24, 0x448F	; 0x80448f <_N>
    69ae:	90 91 90 44 	lds	r25, 0x4490	; 0x804490 <_N+0x1>
    69b2:	28 17       	cp	r18, r24
    69b4:	39 07       	cpc	r19, r25
    69b6:	3c f0       	brlt	.+14     	; 0x69c6 <_ZN8Goertzel9DataPointEi+0x5a>
	{
		_index = 0;
    69b8:	10 92 8d 44 	sts	0x448D, r1	; 0x80448d <_index>
    69bc:	10 92 8e 44 	sts	0x448E, r1	; 0x80448e <_index+0x1>
		_samplesReady = true;
    69c0:	81 e0       	ldi	r24, 0x01	; 1
    69c2:	80 93 8c 44 	sts	0x448C, r24	; 0x80448c <_samplesReady>
	}

	return(_samplesReady);
    69c6:	80 91 8c 44 	lds	r24, 0x448C	; 0x80448c <_samplesReady>
}
    69ca:	08 95       	ret

bool Goertzel::DataPoint(int data)
{
	if(_samplesReady)
	{
		return(_samplesReady);
    69cc:	80 91 8c 44 	lds	r24, 0x448C	; 0x80448c <_samplesReady>
    69d0:	08 95       	ret

000069d2 <_Z10wifi_powerb>:
#define WIFI_POWER_gc (1 << 5)  /* WiFi enable power port pin on PORTA */
#define WIFI_MODULE_DETECT_gc (1 << 7) /* WiFi module detect pin on PORTD */

void wifi_power(bool state)
{
	if(state == ON)
    69d2:	81 11       	cpse	r24, r1
    69d4:	02 c0       	rjmp	.+4      	; 0x69da <_Z10wifi_powerb+0x8>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    69d6:	0d 98       	cbi	0x01, 5	; 1
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    69d8:	08 95       	ret
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
    69da:	0d 9a       	sbi	0x01, 5	; 1
    69dc:	08 95       	ret

000069de <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
	if(state == ON)
    69de:	81 11       	cpse	r24, r1
    69e0:	02 c0       	rjmp	.+4      	; 0x69e6 <_Z10wifi_resetb+0x8>
    69e2:	0e 9a       	sbi	0x01, 6	; 1
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    69e4:	08 95       	ret
	} else {
		VPORTA.OUT &= ~(1 << pin);
    69e6:	0e 98       	cbi	0x01, 6	; 1
    69e8:	08 95       	ret

000069ea <_Z11wifiPresentv>:

bool wifiPresent(void)
{
	return(VPORTD.IN & WIFI_MODULE_DETECT_gc);
    69ea:	8e b1       	in	r24, 0x0e	; 14
}
    69ec:	88 1f       	adc	r24, r24
    69ee:	88 27       	eor	r24, r24
    69f0:	88 1f       	adc	r24, r24
    69f2:	08 95       	ret

000069f4 <_ZL11i2c_0_WaitWv>:
}

void I2C_0_EndSession(void)
{
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
}
    69f4:	82 e3       	ldi	r24, 0x32	; 50
    69f6:	90 e0       	ldi	r25, 0x00	; 0
    69f8:	80 93 4e 40 	sts	0x404E, r24	; 0x80404e <g_i2c0_timeout_ticks>
    69fc:	90 93 4f 40 	sts	0x404F, r25	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    6a00:	e0 e0       	ldi	r30, 0x00	; 0
    6a02:	f9 e0       	ldi	r31, 0x09	; 9
    6a04:	85 81       	ldd	r24, Z+5	; 0x05
    6a06:	80 7c       	andi	r24, 0xC0	; 192
    6a08:	59 f4       	brne	.+22     	; 0x6a20 <_ZL11i2c_0_WaitWv+0x2c>
    6a0a:	85 81       	ldd	r24, Z+5	; 0x05
    6a0c:	8c 70       	andi	r24, 0x0C	; 12
    6a0e:	81 f4       	brne	.+32     	; 0x6a30 <_ZL11i2c_0_WaitWv+0x3c>
    6a10:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_i2c0_timeout_ticks>
    6a14:	90 91 4f 40 	lds	r25, 0x404F	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    6a18:	89 2b       	or	r24, r25
    6a1a:	a1 f7       	brne	.-24     	; 0x6a04 <_ZL11i2c_0_WaitWv+0x10>
    6a1c:	80 e0       	ldi	r24, 0x00	; 0
    6a1e:	09 c0       	rjmp	.+18     	; 0x6a32 <_ZL11i2c_0_WaitWv+0x3e>
    6a20:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    6a24:	84 ff       	sbrs	r24, 4
    6a26:	02 c0       	rjmp	.+4      	; 0x6a2c <_ZL11i2c_0_WaitWv+0x38>
    6a28:	82 e0       	ldi	r24, 0x02	; 2
    6a2a:	03 c0       	rjmp	.+6      	; 0x6a32 <_ZL11i2c_0_WaitWv+0x3e>
    6a2c:	81 e0       	ldi	r24, 0x01	; 1
    6a2e:	01 c0       	rjmp	.+2      	; 0x6a32 <_ZL11i2c_0_WaitWv+0x3e>
    6a30:	84 e0       	ldi	r24, 0x04	; 4
    6a32:	20 91 4e 40 	lds	r18, 0x404E	; 0x80404e <g_i2c0_timeout_ticks>
    6a36:	30 91 4f 40 	lds	r19, 0x404F	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    6a3a:	23 2b       	or	r18, r19
    6a3c:	09 f0       	breq	.+2      	; 0x6a40 <_ZL11i2c_0_WaitWv+0x4c>
    6a3e:	08 95       	ret
    6a40:	84 e0       	ldi	r24, 0x04	; 4
    6a42:	fd cf       	rjmp	.-6      	; 0x6a3e <_ZL11i2c_0_WaitWv+0x4a>

00006a44 <_ZL11i2c_1_WaitWv>:
    6a44:	82 e3       	ldi	r24, 0x32	; 50
    6a46:	90 e0       	ldi	r25, 0x00	; 0
    6a48:	80 93 4c 40 	sts	0x404C, r24	; 0x80404c <g_i2c1_timeout_ticks>
    6a4c:	90 93 4d 40 	sts	0x404D, r25	; 0x80404d <g_i2c1_timeout_ticks+0x1>
    6a50:	e0 e2       	ldi	r30, 0x20	; 32
    6a52:	f9 e0       	ldi	r31, 0x09	; 9
    6a54:	85 81       	ldd	r24, Z+5	; 0x05
    6a56:	98 2f       	mov	r25, r24
    6a58:	90 7c       	andi	r25, 0xC0	; 192
    6a5a:	51 f4       	brne	.+20     	; 0x6a70 <_ZL11i2c_1_WaitWv+0x2c>
    6a5c:	8c 70       	andi	r24, 0x0C	; 12
    6a5e:	71 f4       	brne	.+28     	; 0x6a7c <_ZL11i2c_1_WaitWv+0x38>
    6a60:	80 91 4c 40 	lds	r24, 0x404C	; 0x80404c <g_i2c1_timeout_ticks>
    6a64:	90 91 4d 40 	lds	r25, 0x404D	; 0x80404d <g_i2c1_timeout_ticks+0x1>
    6a68:	89 2b       	or	r24, r25
    6a6a:	a1 f7       	brne	.-24     	; 0x6a54 <_ZL11i2c_1_WaitWv+0x10>
    6a6c:	80 e0       	ldi	r24, 0x00	; 0
    6a6e:	08 95       	ret
    6a70:	84 fd       	sbrc	r24, 4
    6a72:	02 c0       	rjmp	.+4      	; 0x6a78 <_ZL11i2c_1_WaitWv+0x34>
    6a74:	81 e0       	ldi	r24, 0x01	; 1
    6a76:	08 95       	ret
    6a78:	82 e0       	ldi	r24, 0x02	; 2
    6a7a:	08 95       	ret
    6a7c:	84 e0       	ldi	r24, 0x04	; 4
    6a7e:	08 95       	ret

00006a80 <I2C_0_Init>:
    6a80:	e0 ee       	ldi	r30, 0xE0	; 224
    6a82:	f5 e0       	ldi	r31, 0x05	; 5
    6a84:	85 81       	ldd	r24, Z+5	; 0x05
    6a86:	8a 70       	andi	r24, 0x0A	; 10
    6a88:	85 83       	std	Z+5, r24	; 0x05
    6a8a:	85 81       	ldd	r24, Z+5	; 0x05
    6a8c:	82 60       	ori	r24, 0x02	; 2
    6a8e:	85 83       	std	Z+5, r24	; 0x05
    6a90:	e0 e0       	ldi	r30, 0x00	; 0
    6a92:	f9 e0       	ldi	r31, 0x09	; 9
    6a94:	83 e7       	ldi	r24, 0x73	; 115
    6a96:	86 83       	std	Z+6, r24	; 0x06
    6a98:	81 e0       	ldi	r24, 0x01	; 1
    6a9a:	83 83       	std	Z+3, r24	; 0x03
    6a9c:	17 82       	std	Z+7, r1	; 0x07
    6a9e:	10 86       	std	Z+8, r1	; 0x08
    6aa0:	85 83       	std	Z+5, r24	; 0x05
    6aa2:	08 95       	ret

00006aa4 <I2C_0_SendData>:
    6aa4:	cf 92       	push	r12
    6aa6:	df 92       	push	r13
    6aa8:	ff 92       	push	r15
    6aaa:	0f 93       	push	r16
    6aac:	1f 93       	push	r17
    6aae:	cf 93       	push	r28
    6ab0:	df 93       	push	r29
    6ab2:	16 2f       	mov	r17, r22
    6ab4:	ea 01       	movw	r28, r20
    6ab6:	f2 2e       	mov	r15, r18
    6ab8:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    6abc:	0e 94 fa 34 	call	0x69f4	; 0x69f4 <_ZL11i2c_0_WaitWv>
    6ac0:	81 30       	cpi	r24, 0x01	; 1
    6ac2:	51 f0       	breq	.+20     	; 0x6ad8 <I2C_0_SendData+0x34>
    6ac4:	cf ef       	ldi	r28, 0xFF	; 255
    6ac6:	8c 2f       	mov	r24, r28
    6ac8:	df 91       	pop	r29
    6aca:	cf 91       	pop	r28
    6acc:	1f 91       	pop	r17
    6ace:	0f 91       	pop	r16
    6ad0:	ff 90       	pop	r15
    6ad2:	df 90       	pop	r13
    6ad4:	cf 90       	pop	r12
    6ad6:	08 95       	ret
    6ad8:	10 93 08 09 	sts	0x0908, r17	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    6adc:	0e 94 fa 34 	call	0x69f4	; 0x69f4 <_ZL11i2c_0_WaitWv>
    6ae0:	81 30       	cpi	r24, 0x01	; 1
    6ae2:	01 f5       	brne	.+64     	; 0x6b24 <I2C_0_SendData+0x80>
    6ae4:	ff 20       	and	r15, r15
    6ae6:	01 f1       	breq	.+64     	; 0x6b28 <I2C_0_SendData+0x84>
    6ae8:	20 97       	sbiw	r28, 0x00	; 0
    6aea:	b9 f0       	breq	.+46     	; 0x6b1a <I2C_0_SendData+0x76>
    6aec:	8e 01       	movw	r16, r28
    6aee:	c0 e0       	ldi	r28, 0x00	; 0
    6af0:	0f 2e       	mov	r0, r31
    6af2:	c1 2c       	mov	r12, r1
    6af4:	f9 e0       	ldi	r31, 0x09	; 9
    6af6:	df 2e       	mov	r13, r31
    6af8:	f0 2d       	mov	r31, r0
    6afa:	d3 e0       	ldi	r29, 0x03	; 3
    6afc:	f8 01       	movw	r30, r16
    6afe:	81 91       	ld	r24, Z+
    6b00:	8f 01       	movw	r16, r30
    6b02:	f6 01       	movw	r30, r12
    6b04:	80 87       	std	Z+8, r24	; 0x08
    6b06:	0e 94 fa 34 	call	0x69f4	; 0x69f4 <_ZL11i2c_0_WaitWv>
    6b0a:	81 30       	cpi	r24, 0x01	; 1
    6b0c:	e1 f6       	brne	.-72     	; 0x6ac6 <I2C_0_SendData+0x22>
    6b0e:	cf 5f       	subi	r28, 0xFF	; 255
    6b10:	fc 16       	cp	r15, r28
    6b12:	29 f0       	breq	.+10     	; 0x6b1e <I2C_0_SendData+0x7a>
    6b14:	fc 12       	cpse	r15, r28
    6b16:	f2 cf       	rjmp	.-28     	; 0x6afc <I2C_0_SendData+0x58>
    6b18:	d6 cf       	rjmp	.-84     	; 0x6ac6 <I2C_0_SendData+0x22>
    6b1a:	c0 e0       	ldi	r28, 0x00	; 0
    6b1c:	d4 cf       	rjmp	.-88     	; 0x6ac6 <I2C_0_SendData+0x22>
    6b1e:	f6 01       	movw	r30, r12
    6b20:	d4 83       	std	Z+4, r29	; 0x04
    6b22:	f8 cf       	rjmp	.-16     	; 0x6b14 <I2C_0_SendData+0x70>
    6b24:	cf ef       	ldi	r28, 0xFF	; 255
    6b26:	cf cf       	rjmp	.-98     	; 0x6ac6 <I2C_0_SendData+0x22>
    6b28:	cf 2d       	mov	r28, r15
    6b2a:	cd cf       	rjmp	.-102    	; 0x6ac6 <I2C_0_SendData+0x22>

00006b2c <I2C_0_GetData>:
    6b2c:	ef 92       	push	r14
    6b2e:	ff 92       	push	r15
    6b30:	1f 93       	push	r17
    6b32:	cf 93       	push	r28
    6b34:	df 93       	push	r29
    6b36:	c8 2f       	mov	r28, r24
    6b38:	d6 2f       	mov	r29, r22
    6b3a:	7a 01       	movw	r14, r20
    6b3c:	12 2f       	mov	r17, r18
    6b3e:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    6b42:	0e 94 fa 34 	call	0x69f4	; 0x69f4 <_ZL11i2c_0_WaitWv>
    6b46:	81 30       	cpi	r24, 0x01	; 1
    6b48:	39 f0       	breq	.+14     	; 0x6b58 <I2C_0_GetData+0x2c>
    6b4a:	8f ef       	ldi	r24, 0xFF	; 255
    6b4c:	df 91       	pop	r29
    6b4e:	cf 91       	pop	r28
    6b50:	1f 91       	pop	r17
    6b52:	ff 90       	pop	r15
    6b54:	ef 90       	pop	r14
    6b56:	08 95       	ret
    6b58:	d0 93 08 09 	sts	0x0908, r29	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
    6b5c:	0e 94 fa 34 	call	0x69f4	; 0x69f4 <_ZL11i2c_0_WaitWv>
    6b60:	81 30       	cpi	r24, 0x01	; 1
    6b62:	11 f0       	breq	.+4      	; 0x6b68 <I2C_0_GetData+0x3c>
    6b64:	8f ef       	ldi	r24, 0xFF	; 255
    6b66:	f2 cf       	rjmp	.-28     	; 0x6b4c <I2C_0_GetData+0x20>
    6b68:	c1 60       	ori	r28, 0x01	; 1
    6b6a:	c0 93 07 09 	sts	0x0907, r28	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
    6b6e:	0e 94 fa 34 	call	0x69f4	; 0x69f4 <_ZL11i2c_0_WaitWv>
    6b72:	81 30       	cpi	r24, 0x01	; 1
    6b74:	01 f5       	brne	.+64     	; 0x6bb6 <I2C_0_GetData+0x8a>
    6b76:	81 2f       	mov	r24, r17
    6b78:	11 23       	and	r17, r17
    6b7a:	41 f3       	breq	.-48     	; 0x6b4c <I2C_0_GetData+0x20>
    6b7c:	80 e0       	ldi	r24, 0x00	; 0
    6b7e:	e1 14       	cp	r14, r1
    6b80:	f1 04       	cpc	r15, r1
    6b82:	21 f3       	breq	.-56     	; 0x6b4c <I2C_0_GetData+0x20>
    6b84:	6f ef       	ldi	r22, 0xFF	; 255
    6b86:	61 0f       	add	r22, r17
    6b88:	80 e0       	ldi	r24, 0x00	; 0
    6b8a:	42 e3       	ldi	r20, 0x32	; 50
    6b8c:	50 e0       	ldi	r21, 0x00	; 0
    6b8e:	e0 e0       	ldi	r30, 0x00	; 0
    6b90:	f9 e0       	ldi	r31, 0x09	; 9
    6b92:	72 e0       	ldi	r23, 0x02	; 2
    6b94:	40 93 4e 40 	sts	0x404E, r20	; 0x80404e <g_i2c0_timeout_ticks>
    6b98:	50 93 4f 40 	sts	0x404F, r21	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    6b9c:	95 81       	ldd	r25, Z+5	; 0x05
    6b9e:	90 7c       	andi	r25, 0xC0	; 192
    6ba0:	61 f4       	brne	.+24     	; 0x6bba <I2C_0_GetData+0x8e>
    6ba2:	95 81       	ldd	r25, Z+5	; 0x05
    6ba4:	9c 70       	andi	r25, 0x0C	; 12
    6ba6:	91 f6       	brne	.-92     	; 0x6b4c <I2C_0_GetData+0x20>
    6ba8:	20 91 4e 40 	lds	r18, 0x404E	; 0x80404e <g_i2c0_timeout_ticks>
    6bac:	30 91 4f 40 	lds	r19, 0x404F	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    6bb0:	23 2b       	or	r18, r19
    6bb2:	a1 f7       	brne	.-24     	; 0x6b9c <I2C_0_GetData+0x70>
    6bb4:	cb cf       	rjmp	.-106    	; 0x6b4c <I2C_0_GetData+0x20>
    6bb6:	8f ef       	ldi	r24, 0xFF	; 255
    6bb8:	c9 cf       	rjmp	.-110    	; 0x6b4c <I2C_0_GetData+0x20>
    6bba:	90 85       	ldd	r25, Z+8	; 0x08
    6bbc:	d7 01       	movw	r26, r14
    6bbe:	9d 93       	st	X+, r25
    6bc0:	7d 01       	movw	r14, r26
    6bc2:	68 13       	cpse	r22, r24
    6bc4:	05 c0       	rjmp	.+10     	; 0x6bd0 <I2C_0_GetData+0xa4>
    6bc6:	87 e0       	ldi	r24, 0x07	; 7
    6bc8:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <__TEXT_REGION_LENGTH__+0x7e0904>
    6bcc:	81 2f       	mov	r24, r17
    6bce:	be cf       	rjmp	.-132    	; 0x6b4c <I2C_0_GetData+0x20>
    6bd0:	74 83       	std	Z+4, r23	; 0x04
    6bd2:	8f 5f       	subi	r24, 0xFF	; 255
    6bd4:	df cf       	rjmp	.-66     	; 0x6b94 <I2C_0_GetData+0x68>

00006bd6 <I2C_1_Shutdown>:
/************************************************************************/

void I2C_1_Shutdown(void)
{
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    6bd6:	e0 e2       	ldi	r30, 0x20	; 32
    6bd8:	f9 e0       	ldi	r31, 0x09	; 9
    6bda:	81 e0       	ldi	r24, 0x01	; 1
    6bdc:	85 83       	std	Z+5, r24	; 0x05
	TWI1.MCTRLA = 0;
    6bde:	13 82       	std	Z+3, r1	; 0x03
}
    6be0:	08 95       	ret

00006be2 <I2C_1_Init>:

void I2C_1_Init(void)
{
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    6be2:	e0 ee       	ldi	r30, 0xE0	; 224
    6be4:	f5 e0       	ldi	r31, 0x05	; 5
    6be6:	85 81       	ldd	r24, Z+5	; 0x05
    6be8:	83 70       	andi	r24, 0x03	; 3
    6bea:	85 83       	std	Z+5, r24	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    6bec:	85 81       	ldd	r24, Z+5	; 0x05
    6bee:	88 60       	ori	r24, 0x08	; 8
    6bf0:	85 83       	std	Z+5, r24	; 0x05
	
	/* Host Baud Rate Control */
//	TWI1.MBAUD = TWI1_BAUD((I2C_SCL_FREQ), 0.3);
	TWI1.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    6bf2:	e0 e2       	ldi	r30, 0x20	; 32
    6bf4:	f9 e0       	ldi	r31, 0x09	; 9
    6bf6:	83 e7       	ldi	r24, 0x73	; 115
    6bf8:	86 83       	std	Z+6, r24	; 0x06
		
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    6bfa:	81 e0       	ldi	r24, 0x01	; 1
    6bfc:	83 83       	std	Z+3, r24	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    6bfe:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    6c00:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    6c02:	85 83       	std	Z+5, r24	; 0x05
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    6c04:	e2 e3       	ldi	r30, 0x32	; 50
    6c06:	f4 e0       	ldi	r31, 0x04	; 4
    6c08:	80 81       	ld	r24, Z
    6c0a:	88 60       	ori	r24, 0x08	; 8
    6c0c:	80 83       	st	Z, r24
    6c0e:	e3 e3       	ldi	r30, 0x33	; 51
    6c10:	f4 e0       	ldi	r31, 0x04	; 4
    6c12:	80 81       	ld	r24, Z
    6c14:	88 60       	ori	r24, 0x08	; 8
    6c16:	80 83       	st	Z, r24
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
}
    6c18:	08 95       	ret

00006c1a <I2C_1_SendData>:
	return state;
}

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    6c1a:	cf 92       	push	r12
    6c1c:	df 92       	push	r13
    6c1e:	ff 92       	push	r15
    6c20:	0f 93       	push	r16
    6c22:	1f 93       	push	r17
    6c24:	cf 93       	push	r28
    6c26:	df 93       	push	r29
    6c28:	16 2f       	mov	r17, r22
    6c2a:	ea 01       	movw	r28, r20
    6c2c:	f2 2e       	mov	r15, r18
	uint8_t retVal = (uint8_t) - 1;
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    6c2e:	8e 7f       	andi	r24, 0xFE	; 254
    6c30:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(i2c_1_WaitW() != I2C_ACKED)
    6c34:	0e 94 22 35 	call	0x6a44	; 0x6a44 <_ZL11i2c_1_WaitWv>
    6c38:	81 30       	cpi	r24, 0x01	; 1
    6c3a:	51 f0       	breq	.+20     	; 0x6c50 <I2C_1_SendData+0x36>
	{
		return retVal;
    6c3c:	cf ef       	ldi	r28, 0xFF	; 255
			}
		}
	}
	
	return retVal;
}
    6c3e:	8c 2f       	mov	r24, r28
    6c40:	df 91       	pop	r29
    6c42:	cf 91       	pop	r28
    6c44:	1f 91       	pop	r17
    6c46:	0f 91       	pop	r16
    6c48:	ff 90       	pop	r15
    6c4a:	df 90       	pop	r13
    6c4c:	cf 90       	pop	r12
    6c4e:	08 95       	ret
	{
		return retVal;
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    6c50:	10 93 28 09 	sts	0x0928, r17	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
	if(i2c_1_WaitW() != I2C_ACKED)
    6c54:	0e 94 22 35 	call	0x6a44	; 0x6a44 <_ZL11i2c_1_WaitWv>
    6c58:	81 30       	cpi	r24, 0x01	; 1
    6c5a:	09 f5       	brne	.+66     	; 0x6c9e <I2C_1_SendData+0x84>
	{
		return retVal;
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
    6c5c:	ff 20       	and	r15, r15
    6c5e:	09 f1       	breq	.+66     	; 0x6ca2 <I2C_1_SendData+0x88>
    6c60:	20 97       	sbiw	r28, 0x00	; 0
    6c62:	c1 f0       	breq	.+48     	; 0x6c94 <I2C_1_SendData+0x7a>
    6c64:	8e 01       	movw	r16, r28
	if(i2c_1_WaitW() != I2C_ACKED)
	{
		return retVal;
	}	

	retVal = 0;
    6c66:	c0 e0       	ldi	r28, 0x00	; 0
	if((len != 0) && (pData != null))
	{
		while(len--)
		{
			TWI1.MDATA = *pData;
    6c68:	0f 2e       	mov	r0, r31
    6c6a:	f0 e2       	ldi	r31, 0x20	; 32
    6c6c:	cf 2e       	mov	r12, r31
    6c6e:	f9 e0       	ldi	r31, 0x09	; 9
    6c70:	df 2e       	mov	r13, r31
    6c72:	f0 2d       	mov	r31, r0
	return retVal;
}

void I2C_1_EndSession(void)
{
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    6c74:	d3 e0       	ldi	r29, 0x03	; 3
	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
		{
			TWI1.MDATA = *pData;
    6c76:	f8 01       	movw	r30, r16
    6c78:	81 91       	ld	r24, Z+
    6c7a:	8f 01       	movw	r16, r30
    6c7c:	f6 01       	movw	r30, r12
    6c7e:	80 87       	std	Z+8, r24	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    6c80:	0e 94 22 35 	call	0x6a44	; 0x6a44 <_ZL11i2c_1_WaitWv>
    6c84:	81 30       	cpi	r24, 0x01	; 1
    6c86:	d9 f6       	brne	.-74     	; 0x6c3e <I2C_1_SendData+0x24>
			{
				retVal++;
    6c88:	cf 5f       	subi	r28, 0xFF	; 255
				pData++;
				if(!len) I2C_1_EndSession();
    6c8a:	fc 16       	cp	r15, r28
    6c8c:	29 f0       	breq	.+10     	; 0x6c98 <I2C_1_SendData+0x7e>
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    6c8e:	fc 12       	cpse	r15, r28
    6c90:	f2 cf       	rjmp	.-28     	; 0x6c76 <I2C_1_SendData+0x5c>
    6c92:	d5 cf       	rjmp	.-86     	; 0x6c3e <I2C_1_SendData+0x24>
	if(i2c_1_WaitW() != I2C_ACKED)
	{
		return retVal;
	}	

	retVal = 0;
    6c94:	c0 e0       	ldi	r28, 0x00	; 0
    6c96:	d3 cf       	rjmp	.-90     	; 0x6c3e <I2C_1_SendData+0x24>
	return retVal;
}

void I2C_1_EndSession(void)
{
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    6c98:	f6 01       	movw	r30, r12
    6c9a:	d4 83       	std	Z+4, r29	; 0x04
    6c9c:	f8 cf       	rjmp	.-16     	; 0x6c8e <I2C_1_SendData+0x74>
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
	if(i2c_1_WaitW() != I2C_ACKED)
	{
		return retVal;
    6c9e:	cf ef       	ldi	r28, 0xFF	; 255
    6ca0:	ce cf       	rjmp	.-100    	; 0x6c3e <I2C_1_SendData+0x24>
	}	

	retVal = 0;
    6ca2:	cf 2d       	mov	r28, r15
    6ca4:	cc cf       	rjmp	.-104    	; 0x6c3e <I2C_1_SendData+0x24>

00006ca6 <I2C_1_GetData>:
}


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    6ca6:	ef 92       	push	r14
    6ca8:	ff 92       	push	r15
    6caa:	1f 93       	push	r17
    6cac:	cf 93       	push	r28
    6cae:	df 93       	push	r29
    6cb0:	c8 2f       	mov	r28, r24
    6cb2:	d6 2f       	mov	r29, r22
    6cb4:	7a 01       	movw	r14, r20
    6cb6:	12 2f       	mov	r17, r18
	uint8_t retVal = (uint8_t) -1;
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    6cb8:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(i2c_1_WaitW() != I2C_ACKED)
    6cbc:	0e 94 22 35 	call	0x6a44	; 0x6a44 <_ZL11i2c_1_WaitWv>
    6cc0:	81 30       	cpi	r24, 0x01	; 1
    6cc2:	39 f0       	breq	.+14     	; 0x6cd2 <I2C_1_GetData+0x2c>
	{
		return retVal;
    6cc4:	8f ef       	ldi	r24, 0xFF	; 255
			break;
		}
	}
	
	return retVal;
}
    6cc6:	df 91       	pop	r29
    6cc8:	cf 91       	pop	r28
    6cca:	1f 91       	pop	r17
    6ccc:	ff 90       	pop	r15
    6cce:	ef 90       	pop	r14
    6cd0:	08 95       	ret
	{
		return retVal;
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    6cd2:	d0 93 28 09 	sts	0x0928, r29	; 0x800928 <__TEXT_REGION_LENGTH__+0x7e0928>
	if(i2c_1_WaitW() != I2C_ACKED)
    6cd6:	0e 94 22 35 	call	0x6a44	; 0x6a44 <_ZL11i2c_1_WaitWv>
    6cda:	81 30       	cpi	r24, 0x01	; 1
    6cdc:	11 f0       	breq	.+4      	; 0x6ce2 <I2C_1_GetData+0x3c>
	{
		return retVal;
    6cde:	8f ef       	ldi	r24, 0xFF	; 255
    6ce0:	f2 cf       	rjmp	.-28     	; 0x6cc6 <I2C_1_GetData+0x20>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    6ce2:	c1 60       	ori	r28, 0x01	; 1
    6ce4:	c0 93 27 09 	sts	0x0927, r28	; 0x800927 <__TEXT_REGION_LENGTH__+0x7e0927>
	if(i2c_1_WaitW() != I2C_ACKED)
    6ce8:	0e 94 22 35 	call	0x6a44	; 0x6a44 <_ZL11i2c_1_WaitWv>
    6cec:	81 30       	cpi	r24, 0x01	; 1
    6cee:	01 f5       	brne	.+64     	; 0x6d30 <I2C_1_GetData+0x8a>
	{
		return retVal;	
	}
	
	retVal = 0;
    6cf0:	81 2f       	mov	r24, r17
	if((len != 0) && (pData !=null ))
    6cf2:	11 23       	and	r17, r17
    6cf4:	41 f3       	breq	.-48     	; 0x6cc6 <I2C_1_GetData+0x20>
	if(i2c_1_WaitW() != I2C_ACKED)
	{
		return retVal;	
	}
	
	retVal = 0;
    6cf6:	80 e0       	ldi	r24, 0x00	; 0
	if((len != 0) && (pData !=null ))
    6cf8:	e1 14       	cp	r14, r1
    6cfa:	f1 04       	cpc	r15, r1
    6cfc:	21 f3       	breq	.-56     	; 0x6cc6 <I2C_1_GetData+0x20>
	{
		while(len--)
    6cfe:	6f ef       	ldi	r22, 0xFF	; 255
    6d00:	61 0f       	add	r22, r17
	if(i2c_1_WaitW() != I2C_ACKED)
	{
		return retVal;	
	}
	
	retVal = 0;
    6d02:	80 e0       	ldi	r24, 0x00	; 0

static uint8_t I2C_1_WaitR(void)
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
    6d04:	42 e3       	ldi	r20, 0x32	; 50
    6d06:	50 e0       	ldi	r21, 0x00	; 0
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    6d08:	e0 e2       	ldi	r30, 0x20	; 32
    6d0a:	f9 e0       	ldi	r31, 0x09	; 9
		while(len--)
		{
			if(I2C_1_WaitR() == I2C_READY)
			{
				*pData = TWI1.MDATA;
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    6d0c:	72 e0       	ldi	r23, 0x02	; 2

static uint8_t I2C_1_WaitR(void)
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 50;
    6d0e:	40 93 4e 40 	sts	0x404E, r20	; 0x80404e <g_i2c0_timeout_ticks>
    6d12:	50 93 4f 40 	sts	0x404F, r21	; 0x80404f <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    6d16:	95 81       	ldd	r25, Z+5	; 0x05
    6d18:	90 7c       	andi	r25, 0xC0	; 192
    6d1a:	61 f4       	brne	.+24     	; 0x6d34 <I2C_1_GetData+0x8e>
		{
			state = I2C_READY;
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    6d1c:	95 81       	ldd	r25, Z+5	; 0x05
    6d1e:	9c 70       	andi	r25, 0x0C	; 12
    6d20:	91 f6       	brne	.-92     	; 0x6cc6 <I2C_1_GetData+0x20>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
    6d22:	20 91 4e 40 	lds	r18, 0x404E	; 0x80404e <g_i2c0_timeout_ticks>
    6d26:	30 91 4f 40 	lds	r19, 0x404F	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    6d2a:	23 2b       	or	r18, r19
    6d2c:	a1 f7       	brne	.-24     	; 0x6d16 <I2C_1_GetData+0x70>
    6d2e:	cb cf       	rjmp	.-106    	; 0x6cc6 <I2C_1_GetData+0x20>
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
	if(i2c_1_WaitW() != I2C_ACKED)
	{
		return retVal;	
    6d30:	8f ef       	ldi	r24, 0xFF	; 255
    6d32:	c9 cf       	rjmp	.-110    	; 0x6cc6 <I2C_1_GetData+0x20>
	{
		while(len--)
		{
			if(I2C_1_WaitR() == I2C_READY)
			{
				*pData = TWI1.MDATA;
    6d34:	90 85       	ldd	r25, Z+8	; 0x08
    6d36:	d7 01       	movw	r26, r14
    6d38:	9d 93       	st	X+, r25
    6d3a:	7d 01       	movw	r14, r26
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    6d3c:	68 13       	cpse	r22, r24
    6d3e:	05 c0       	rjmp	.+10     	; 0x6d4a <I2C_1_GetData+0xa4>
    6d40:	87 e0       	ldi	r24, 0x07	; 7
    6d42:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <__TEXT_REGION_LENGTH__+0x7e0924>
				retVal++;
    6d46:	81 2f       	mov	r24, r17
    6d48:	be cf       	rjmp	.-132    	; 0x6cc6 <I2C_1_GetData+0x20>
		while(len--)
		{
			if(I2C_1_WaitR() == I2C_READY)
			{
				*pData = TWI1.MDATA;
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    6d4a:	74 83       	std	Z+4, r23	; 0x04
				retVal++;
    6d4c:	8f 5f       	subi	r24, 0xFF	; 255
    6d4e:	df cf       	rjmp	.-66     	; 0x6d0e <I2C_1_GetData+0x68>

00006d50 <_ZN4ledsC1Ev>:
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
    6d50:	08 95       	ret

00006d52 <_ZN4ledsD1Ev>:
    6d52:	08 95       	ret

00006d54 <__vector_41>:
    6d54:	1f 92       	push	r1
    6d56:	0f 92       	push	r0
    6d58:	0f b6       	in	r0, 0x3f	; 63
    6d5a:	0f 92       	push	r0
    6d5c:	11 24       	eor	r1, r1
    6d5e:	2f 93       	push	r18
    6d60:	8f 93       	push	r24
    6d62:	9f 93       	push	r25
    6d64:	af 93       	push	r26
    6d66:	bf 93       	push	r27
    6d68:	80 91 36 0b 	lds	r24, 0x0B36	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
    6d6c:	80 ff       	sbrs	r24, 0
    6d6e:	8c c0       	rjmp	.+280    	; 0x6e88 <__vector_41+0x134>
    6d70:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    6d74:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    6d78:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    6d7c:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    6d80:	89 2b       	or	r24, r25
    6d82:	8a 2b       	or	r24, r26
    6d84:	8b 2b       	or	r24, r27
    6d86:	09 f1       	breq	.+66     	; 0x6dca <__vector_41+0x76>
    6d88:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    6d8c:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    6d90:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    6d94:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    6d98:	01 97       	sbiw	r24, 0x01	; 1
    6d9a:	a1 09       	sbc	r26, r1
    6d9c:	b1 09       	sbc	r27, r1
    6d9e:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <_ZL17led_timeout_count>
    6da2:	90 93 51 40 	sts	0x4051, r25	; 0x804051 <_ZL17led_timeout_count+0x1>
    6da6:	a0 93 52 40 	sts	0x4052, r26	; 0x804052 <_ZL17led_timeout_count+0x2>
    6daa:	b0 93 53 40 	sts	0x4053, r27	; 0x804053 <_ZL17led_timeout_count+0x3>
    6dae:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    6db2:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    6db6:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    6dba:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    6dbe:	89 2b       	or	r24, r25
    6dc0:	8a 2b       	or	r24, r26
    6dc2:	8b 2b       	or	r24, r27
    6dc4:	11 f4       	brne	.+4      	; 0x6dca <__vector_41+0x76>
    6dc6:	4e 98       	cbi	0x09, 6	; 9
    6dc8:	4d 98       	cbi	0x09, 5	; 9
    6dca:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    6dce:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    6dd2:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    6dd6:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    6dda:	89 2b       	or	r24, r25
    6ddc:	8a 2b       	or	r24, r26
    6dde:	8b 2b       	or	r24, r27
    6de0:	09 f4       	brne	.+2      	; 0x6de4 <__vector_41+0x90>
    6de2:	52 c0       	rjmp	.+164    	; 0x6e88 <__vector_41+0x134>
    6de4:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL15red_blink_count>
    6de8:	90 91 9a 44 	lds	r25, 0x449A	; 0x80449a <_ZL15red_blink_count+0x1>
    6dec:	89 2b       	or	r24, r25
    6dee:	19 f1       	breq	.+70     	; 0x6e36 <__vector_41+0xe2>
    6df0:	80 91 aa 44 	lds	r24, 0x44AA	; 0x8044aa <_ZL23timer_red_blink_inhibit>
    6df4:	81 11       	cpse	r24, r1
    6df6:	1f c0       	rjmp	.+62     	; 0x6e36 <__vector_41+0xe2>
    6df8:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL15red_blink_count>
    6dfc:	90 91 9a 44 	lds	r25, 0x449A	; 0x80449a <_ZL15red_blink_count+0x1>
    6e00:	02 97       	sbiw	r24, 0x02	; 2
    6e02:	0c f4       	brge	.+2      	; 0x6e06 <__vector_41+0xb2>
    6e04:	4e c0       	rjmp	.+156    	; 0x6ea2 <__vector_41+0x14e>
    6e06:	4e 9a       	sbi	0x09, 6	; 9
    6e08:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL15red_blink_count>
    6e0c:	90 91 9a 44 	lds	r25, 0x449A	; 0x80449a <_ZL15red_blink_count+0x1>
    6e10:	01 97       	sbiw	r24, 0x01	; 1
    6e12:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL15red_blink_count>
    6e16:	90 93 9a 44 	sts	0x449A, r25	; 0x80449a <_ZL15red_blink_count+0x1>
    6e1a:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL15red_blink_count>
    6e1e:	90 91 9a 44 	lds	r25, 0x449A	; 0x80449a <_ZL15red_blink_count+0x1>
    6e22:	01 97       	sbiw	r24, 0x01	; 1
    6e24:	09 f4       	brne	.+2      	; 0x6e28 <__vector_41+0xd4>
    6e26:	50 c0       	rjmp	.+160    	; 0x6ec8 <__vector_41+0x174>
    6e28:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL15red_blink_count>
    6e2c:	90 91 9a 44 	lds	r25, 0x449A	; 0x80449a <_ZL15red_blink_count+0x1>
    6e30:	01 96       	adiw	r24, 0x01	; 1
    6e32:	09 f4       	brne	.+2      	; 0x6e36 <__vector_41+0xe2>
    6e34:	64 c0       	rjmp	.+200    	; 0x6efe <__vector_41+0x1aa>
    6e36:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZL17green_blink_count>
    6e3a:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17green_blink_count+0x1>
    6e3e:	89 2b       	or	r24, r25
    6e40:	19 f1       	breq	.+70     	; 0x6e88 <__vector_41+0x134>
    6e42:	80 91 a9 44 	lds	r24, 0x44A9	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
    6e46:	81 11       	cpse	r24, r1
    6e48:	1f c0       	rjmp	.+62     	; 0x6e88 <__vector_41+0x134>
    6e4a:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZL17green_blink_count>
    6e4e:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17green_blink_count+0x1>
    6e52:	02 97       	sbiw	r24, 0x02	; 2
    6e54:	0c f4       	brge	.+2      	; 0x6e58 <__vector_41+0x104>
    6e56:	5c c0       	rjmp	.+184    	; 0x6f10 <__vector_41+0x1bc>
    6e58:	4d 9a       	sbi	0x09, 5	; 9
    6e5a:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZL17green_blink_count>
    6e5e:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17green_blink_count+0x1>
    6e62:	01 97       	sbiw	r24, 0x01	; 1
    6e64:	80 93 97 44 	sts	0x4497, r24	; 0x804497 <_ZL17green_blink_count>
    6e68:	90 93 98 44 	sts	0x4498, r25	; 0x804498 <_ZL17green_blink_count+0x1>
    6e6c:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZL17green_blink_count>
    6e70:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17green_blink_count+0x1>
    6e74:	01 97       	sbiw	r24, 0x01	; 1
    6e76:	09 f4       	brne	.+2      	; 0x6e7a <__vector_41+0x126>
    6e78:	5e c0       	rjmp	.+188    	; 0x6f36 <__vector_41+0x1e2>
    6e7a:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZL17green_blink_count>
    6e7e:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17green_blink_count+0x1>
    6e82:	01 96       	adiw	r24, 0x01	; 1
    6e84:	09 f4       	brne	.+2      	; 0x6e88 <__vector_41+0x134>
    6e86:	72 c0       	rjmp	.+228    	; 0x6f6c <__vector_41+0x218>
    6e88:	83 e0       	ldi	r24, 0x03	; 3
    6e8a:	80 93 36 0b 	sts	0x0B36, r24	; 0x800b36 <__TEXT_REGION_LENGTH__+0x7e0b36>
    6e8e:	bf 91       	pop	r27
    6e90:	af 91       	pop	r26
    6e92:	9f 91       	pop	r25
    6e94:	8f 91       	pop	r24
    6e96:	2f 91       	pop	r18
    6e98:	0f 90       	pop	r0
    6e9a:	0f be       	out	0x3f, r0	; 63
    6e9c:	0f 90       	pop	r0
    6e9e:	1f 90       	pop	r1
    6ea0:	18 95       	reti
    6ea2:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL15red_blink_count>
    6ea6:	90 91 9a 44 	lds	r25, 0x449A	; 0x80449a <_ZL15red_blink_count+0x1>
    6eaa:	8f 3f       	cpi	r24, 0xFF	; 255
    6eac:	9f 4f       	sbci	r25, 0xFF	; 255
    6eae:	0c f0       	brlt	.+2      	; 0x6eb2 <__vector_41+0x15e>
    6eb0:	b4 cf       	rjmp	.-152    	; 0x6e1a <__vector_41+0xc6>
    6eb2:	4e 98       	cbi	0x09, 6	; 9
    6eb4:	80 91 99 44 	lds	r24, 0x4499	; 0x804499 <_ZL15red_blink_count>
    6eb8:	90 91 9a 44 	lds	r25, 0x449A	; 0x80449a <_ZL15red_blink_count+0x1>
    6ebc:	01 96       	adiw	r24, 0x01	; 1
    6ebe:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL15red_blink_count>
    6ec2:	90 93 9a 44 	sts	0x449A, r25	; 0x80449a <_ZL15red_blink_count+0x1>
    6ec6:	a9 cf       	rjmp	.-174    	; 0x6e1a <__vector_41+0xc6>
    6ec8:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL20red_blink_off_period>
    6ecc:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
    6ed0:	89 2b       	or	r24, r25
    6ed2:	61 f0       	breq	.+24     	; 0x6eec <__vector_41+0x198>
    6ed4:	80 91 9f 44 	lds	r24, 0x449F	; 0x80449f <_ZL20red_blink_off_period>
    6ed8:	90 91 a0 44 	lds	r25, 0x44A0	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
    6edc:	91 95       	neg	r25
    6ede:	81 95       	neg	r24
    6ee0:	91 09       	sbc	r25, r1
    6ee2:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL15red_blink_count>
    6ee6:	90 93 9a 44 	sts	0x449A, r25	; 0x80449a <_ZL15red_blink_count+0x1>
    6eea:	a5 cf       	rjmp	.-182    	; 0x6e36 <__vector_41+0xe2>
    6eec:	80 91 a1 44 	lds	r24, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    6ef0:	90 91 a2 44 	lds	r25, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    6ef4:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL15red_blink_count>
    6ef8:	90 93 9a 44 	sts	0x449A, r25	; 0x80449a <_ZL15red_blink_count+0x1>
    6efc:	9c cf       	rjmp	.-200    	; 0x6e36 <__vector_41+0xe2>
    6efe:	80 91 a1 44 	lds	r24, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    6f02:	90 91 a2 44 	lds	r25, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    6f06:	80 93 99 44 	sts	0x4499, r24	; 0x804499 <_ZL15red_blink_count>
    6f0a:	90 93 9a 44 	sts	0x449A, r25	; 0x80449a <_ZL15red_blink_count+0x1>
    6f0e:	93 cf       	rjmp	.-218    	; 0x6e36 <__vector_41+0xe2>
    6f10:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZL17green_blink_count>
    6f14:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17green_blink_count+0x1>
    6f18:	8f 3f       	cpi	r24, 0xFF	; 255
    6f1a:	9f 4f       	sbci	r25, 0xFF	; 255
    6f1c:	0c f0       	brlt	.+2      	; 0x6f20 <__vector_41+0x1cc>
    6f1e:	a6 cf       	rjmp	.-180    	; 0x6e6c <__vector_41+0x118>
    6f20:	4d 98       	cbi	0x09, 5	; 9
    6f22:	80 91 97 44 	lds	r24, 0x4497	; 0x804497 <_ZL17green_blink_count>
    6f26:	90 91 98 44 	lds	r25, 0x4498	; 0x804498 <_ZL17green_blink_count+0x1>
    6f2a:	01 96       	adiw	r24, 0x01	; 1
    6f2c:	80 93 97 44 	sts	0x4497, r24	; 0x804497 <_ZL17green_blink_count>
    6f30:	90 93 98 44 	sts	0x4498, r25	; 0x804498 <_ZL17green_blink_count+0x1>
    6f34:	9b cf       	rjmp	.-202    	; 0x6e6c <__vector_41+0x118>
    6f36:	80 91 9b 44 	lds	r24, 0x449B	; 0x80449b <_ZL22green_blink_off_period>
    6f3a:	90 91 9c 44 	lds	r25, 0x449C	; 0x80449c <_ZL22green_blink_off_period+0x1>
    6f3e:	89 2b       	or	r24, r25
    6f40:	61 f0       	breq	.+24     	; 0x6f5a <__vector_41+0x206>
    6f42:	80 91 9b 44 	lds	r24, 0x449B	; 0x80449b <_ZL22green_blink_off_period>
    6f46:	90 91 9c 44 	lds	r25, 0x449C	; 0x80449c <_ZL22green_blink_off_period+0x1>
    6f4a:	91 95       	neg	r25
    6f4c:	81 95       	neg	r24
    6f4e:	91 09       	sbc	r25, r1
    6f50:	80 93 97 44 	sts	0x4497, r24	; 0x804497 <_ZL17green_blink_count>
    6f54:	90 93 98 44 	sts	0x4498, r25	; 0x804498 <_ZL17green_blink_count+0x1>
    6f58:	97 cf       	rjmp	.-210    	; 0x6e88 <__vector_41+0x134>
    6f5a:	80 91 9d 44 	lds	r24, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    6f5e:	90 91 9e 44 	lds	r25, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    6f62:	80 93 97 44 	sts	0x4497, r24	; 0x804497 <_ZL17green_blink_count>
    6f66:	90 93 98 44 	sts	0x4498, r25	; 0x804498 <_ZL17green_blink_count+0x1>
    6f6a:	8e cf       	rjmp	.-228    	; 0x6e88 <__vector_41+0x134>
    6f6c:	80 91 9d 44 	lds	r24, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    6f70:	90 91 9e 44 	lds	r25, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    6f74:	80 93 97 44 	sts	0x4497, r24	; 0x804497 <_ZL17green_blink_count>
    6f78:	90 93 98 44 	sts	0x4498, r25	; 0x804498 <_ZL17green_blink_count+0x1>
    6f7c:	85 cf       	rjmp	.-246    	; 0x6e88 <__vector_41+0x134>

00006f7e <_ZN4leds6activeEv>:
    6f7e:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    6f82:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    6f86:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    6f8a:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    6f8e:	89 2b       	or	r24, r25
    6f90:	8a 2b       	or	r24, r26
    6f92:	8b 2b       	or	r24, r27
    6f94:	21 f0       	breq	.+8      	; 0x6f9e <_ZN4leds6activeEv+0x20>
    6f96:	80 91 35 0b 	lds	r24, 0x0B35	; 0x800b35 <__TEXT_REGION_LENGTH__+0x7e0b35>
    6f9a:	81 70       	andi	r24, 0x01	; 1
    6f9c:	08 95       	ret
    6f9e:	80 e0       	ldi	r24, 0x00	; 0
    6fa0:	08 95       	ret

00006fa2 <_ZN4leds10deactivateEv>:
    6fa2:	e0 e3       	ldi	r30, 0x30	; 48
    6fa4:	fb e0       	ldi	r31, 0x0B	; 11
    6fa6:	85 81       	ldd	r24, Z+5	; 0x05
    6fa8:	8e 7f       	andi	r24, 0xFE	; 254
    6faa:	85 83       	std	Z+5, r24	; 0x05
    6fac:	4e 98       	cbi	0x09, 6	; 9
    6fae:	4d 98       	cbi	0x09, 5	; 9
    6fb0:	80 e4       	ldi	r24, 0x40	; 64
    6fb2:	94 e4       	ldi	r25, 0x44	; 68
    6fb4:	0e 94 9b 27 	call	0x4f36	; 0x4f36 <_ZN18CircularStringBuff5resetEv>
    6fb8:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <g_enable_manual_transmissions>
    6fbc:	81 e0       	ldi	r24, 0x01	; 1
    6fbe:	80 93 a9 44 	sts	0x44A9, r24	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
    6fc2:	80 93 aa 44 	sts	0x44AA, r24	; 0x8044aa <_ZL23timer_red_blink_inhibit>
    6fc6:	10 92 50 40 	sts	0x4050, r1	; 0x804050 <_ZL17led_timeout_count>
    6fca:	10 92 51 40 	sts	0x4051, r1	; 0x804051 <_ZL17led_timeout_count+0x1>
    6fce:	10 92 52 40 	sts	0x4052, r1	; 0x804052 <_ZL17led_timeout_count+0x2>
    6fd2:	10 92 53 40 	sts	0x4053, r1	; 0x804053 <_ZL17led_timeout_count+0x3>
    6fd6:	08 95       	ret

00006fd8 <_ZN4leds6setRedEb>:
    6fd8:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    6fdc:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    6fe0:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    6fe4:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    6fe8:	89 2b       	or	r24, r25
    6fea:	8a 2b       	or	r24, r26
    6fec:	8b 2b       	or	r24, r27
    6fee:	31 f0       	breq	.+12     	; 0x6ffc <_ZN4leds6setRedEb+0x24>
    6ff0:	81 e0       	ldi	r24, 0x01	; 1
    6ff2:	80 93 aa 44 	sts	0x44AA, r24	; 0x8044aa <_ZL23timer_red_blink_inhibit>
    6ff6:	61 11       	cpse	r22, r1
    6ff8:	02 c0       	rjmp	.+4      	; 0x6ffe <_ZN4leds6setRedEb+0x26>
    6ffa:	4e 98       	cbi	0x09, 6	; 9
    6ffc:	08 95       	ret
    6ffe:	4e 9a       	sbi	0x09, 6	; 9
    7000:	08 95       	ret

00007002 <_ZN4leds8sendCodeEPc>:
	TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
	if(setBlink != LEDS_OFF) blink(setBlink, true);
}

void leds::sendCode(char* str)
{
    7002:	af 92       	push	r10
    7004:	bf 92       	push	r11
    7006:	cf 92       	push	r12
    7008:	df 92       	push	r13
    700a:	ef 92       	push	r14
    700c:	ff 92       	push	r15
    700e:	0f 93       	push	r16
    7010:	1f 93       	push	r17
    7012:	cf 93       	push	r28
    7014:	df 93       	push	r29
	if(!led_timeout_count) return;
    7016:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    701a:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    701e:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    7022:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    7026:	89 2b       	or	r24, r25
    7028:	8a 2b       	or	r24, r26
    702a:	8b 2b       	or	r24, r27
    702c:	59 f4       	brne	.+22     	; 0x7044 <_ZN4leds8sendCodeEPc+0x42>
	}
	
	timer_red_blink_inhibit = true; /* Prevent timer from controlling LED */
	g_enable_manual_transmissions = holdMan;
	g_enable_LED_enunciations = holdEnum;
}
    702e:	df 91       	pop	r29
    7030:	cf 91       	pop	r28
    7032:	1f 91       	pop	r17
    7034:	0f 91       	pop	r16
    7036:	ff 90       	pop	r15
    7038:	ef 90       	pop	r14
    703a:	df 90       	pop	r13
    703c:	cf 90       	pop	r12
    703e:	bf 90       	pop	r11
    7040:	af 90       	pop	r10
    7042:	08 95       	ret
    7044:	eb 01       	movw	r28, r22
}

void leds::sendCode(char* str)
{
	if(!led_timeout_count) return;
	if(g_text_buff.isBusy()) return;
    7046:	80 e4       	ldi	r24, 0x40	; 64
    7048:	94 e4       	ldi	r25, 0x44	; 68
    704a:	0e 94 bc 27 	call	0x4f78	; 0x4f78 <_ZN18CircularStringBuff6isBusyEv>
    704e:	81 11       	cpse	r24, r1
    7050:	ee cf       	rjmp	.-36     	; 0x702e <_ZN4leds8sendCodeEPc+0x2c>
	
	if(!str || !strlen(str))
    7052:	20 97       	sbiw	r28, 0x00	; 0
    7054:	61 f3       	breq	.-40     	; 0x702e <_ZN4leds8sendCodeEPc+0x2c>
    7056:	88 81       	ld	r24, Y
    7058:	88 23       	and	r24, r24
    705a:	49 f3       	breq	.-46     	; 0x702e <_ZN4leds8sendCodeEPc+0x2c>
	{
		return;
	}

	int lenstr = strlen(str);					
    705c:	fe 01       	movw	r30, r28
    705e:	01 90       	ld	r0, Z+
    7060:	00 20       	and	r0, r0
    7062:	e9 f7       	brne	.-6      	; 0x705e <_ZN4leds8sendCodeEPc+0x5c>
    7064:	31 97       	sbiw	r30, 0x01	; 1
    7066:	8f 01       	movw	r16, r30
    7068:	0c 1b       	sub	r16, r28
    706a:	1d 0b       	sbc	r17, r29
	int i = 0;

	bool holdMan = g_enable_manual_transmissions;
    706c:	a0 90 56 44 	lds	r10, 0x4456	; 0x804456 <g_enable_manual_transmissions>
	bool holdEnum = g_enable_LED_enunciations;
    7070:	b0 90 3c 40 	lds	r11, 0x403C	; 0x80403c <g_enable_LED_enunciations>
	g_enable_manual_transmissions = false; /* simple thread collision avoidance */
    7074:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <g_enable_manual_transmissions>
	g_enable_LED_enunciations = false; /* simple thread collision avoidance */
    7078:	10 92 3c 40 	sts	0x403C, r1	; 0x80403c <g_enable_LED_enunciations>
    707c:	7e 01       	movw	r14, r28
    707e:	6e 01       	movw	r12, r28
    7080:	84 e6       	ldi	r24, 0x64	; 100
    7082:	c8 0e       	add	r12, r24
    7084:	d1 1c       	adc	r13, r1
	
	while(!g_text_buff.full() && i<lenstr && i<TEXT_BUFF_SIZE)
    7086:	80 e4       	ldi	r24, 0x40	; 64
    7088:	94 e4       	ldi	r25, 0x44	; 68
    708a:	0e 94 bf 27 	call	0x4f7e	; 0x4f7e <_ZNK18CircularStringBuff4fullEv>
    708e:	81 11       	cpse	r24, r1
    7090:	0f c0       	rjmp	.+30     	; 0x70b0 <_ZN4leds8sendCodeEPc+0xae>
    7092:	ce 01       	movw	r24, r28
    7094:	8e 19       	sub	r24, r14
    7096:	9f 09       	sbc	r25, r15
    7098:	80 17       	cp	r24, r16
    709a:	91 07       	cpc	r25, r17
    709c:	4c f4       	brge	.+18     	; 0x70b0 <_ZN4leds8sendCodeEPc+0xae>
    709e:	cc 15       	cp	r28, r12
    70a0:	dd 05       	cpc	r29, r13
    70a2:	31 f0       	breq	.+12     	; 0x70b0 <_ZN4leds8sendCodeEPc+0xae>
	{
		g_text_buff.put(str[i++]);
    70a4:	69 91       	ld	r22, Y+
    70a6:	80 e4       	ldi	r24, 0x40	; 64
    70a8:	94 e4       	ldi	r25, 0x44	; 68
    70aa:	0e 94 c2 27 	call	0x4f84	; 0x4f84 <_ZN18CircularStringBuff3putEc>
	bool holdMan = g_enable_manual_transmissions;
	bool holdEnum = g_enable_LED_enunciations;
	g_enable_manual_transmissions = false; /* simple thread collision avoidance */
	g_enable_LED_enunciations = false; /* simple thread collision avoidance */
	
	while(!g_text_buff.full() && i<lenstr && i<TEXT_BUFF_SIZE)
    70ae:	eb cf       	rjmp	.-42     	; 0x7086 <_ZN4leds8sendCodeEPc+0x84>
	{
		g_text_buff.put(str[i++]);
	}
	
	timer_red_blink_inhibit = true; /* Prevent timer from controlling LED */
    70b0:	81 e0       	ldi	r24, 0x01	; 1
    70b2:	80 93 aa 44 	sts	0x44AA, r24	; 0x8044aa <_ZL23timer_red_blink_inhibit>
	g_enable_manual_transmissions = holdMan;
    70b6:	a0 92 56 44 	sts	0x4456, r10	; 0x804456 <g_enable_manual_transmissions>
	g_enable_LED_enunciations = holdEnum;
    70ba:	b0 92 3c 40 	sts	0x403C, r11	; 0x80403c <g_enable_LED_enunciations>
    70be:	b7 cf       	rjmp	.-146    	; 0x702e <_ZN4leds8sendCodeEPc+0x2c>

000070c0 <_ZN4leds5blinkE7Blink_tb>:
	blink(blinkMode, false);
}

void leds::blink(Blink_t blinkMode, bool resetTimeout)
{
	if(resetTimeout)
    70c0:	44 23       	and	r20, r20
    70c2:	61 f0       	breq	.+24     	; 0x70dc <_ZN4leds5blinkE7Blink_tb+0x1c>
	{
		led_timeout_count = LED_TIMEOUT_DELAY;
    70c4:	80 e6       	ldi	r24, 0x60	; 96
    70c6:	9a ee       	ldi	r25, 0xEA	; 234
    70c8:	a0 e0       	ldi	r26, 0x00	; 0
    70ca:	b0 e0       	ldi	r27, 0x00	; 0
    70cc:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <_ZL17led_timeout_count>
    70d0:	90 93 51 40 	sts	0x4051, r25	; 0x804051 <_ZL17led_timeout_count+0x1>
    70d4:	a0 93 52 40 	sts	0x4052, r26	; 0x804052 <_ZL17led_timeout_count+0x2>
    70d8:	b0 93 53 40 	sts	0x4053, r27	; 0x804053 <_ZL17led_timeout_count+0x3>
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
    70dc:	80 91 50 40 	lds	r24, 0x4050	; 0x804050 <_ZL17led_timeout_count>
    70e0:	90 91 51 40 	lds	r25, 0x4051	; 0x804051 <_ZL17led_timeout_count+0x1>
    70e4:	a0 91 52 40 	lds	r26, 0x4052	; 0x804052 <_ZL17led_timeout_count+0x2>
    70e8:	b0 91 53 40 	lds	r27, 0x4053	; 0x804053 <_ZL17led_timeout_count+0x3>
    70ec:	89 2b       	or	r24, r25
    70ee:	8a 2b       	or	r24, r26
    70f0:	8b 2b       	or	r24, r27
    70f2:	91 f4       	brne	.+36     	; 0x7118 <_ZN4leds5blinkE7Blink_tb+0x58>
    70f4:	61 15       	cp	r22, r1
    70f6:	71 05       	cpc	r23, r1
    70f8:	71 f4       	brne	.+28     	; 0x7116 <_ZN4leds5blinkE7Blink_tb+0x56>
	
	bool isRed = ((blinkMode == LEDS_RED_OFF) || (blinkMode == LEDS_RED_BLINK_FAST) || (blinkMode == LEDS_RED_BLINK_SLOW) || (blinkMode == LEDS_RED_ON_CONSTANT));
    70fa:	81 e0       	ldi	r24, 0x01	; 1
    70fc:	67 30       	cpi	r22, 0x07	; 7
    70fe:	71 05       	cpc	r23, r1
    7100:	09 f0       	breq	.+2      	; 0x7104 <_ZN4leds5blinkE7Blink_tb+0x44>
    7102:	80 e0       	ldi	r24, 0x00	; 0
	bool isGreen = ((blinkMode == LEDS_GREEN_OFF) || (blinkMode == LEDS_GREEN_BLINK_FAST) || (blinkMode == LEDS_GREEN_BLINK_SLOW) || (blinkMode == LEDS_GREEN_ON_CONSTANT));
    7104:	9b 01       	movw	r18, r22
    7106:	25 50       	subi	r18, 0x05	; 5
    7108:	31 09       	sbc	r19, r1
    710a:	22 30       	cpi	r18, 0x02	; 2
    710c:	31 05       	cpc	r19, r1
    710e:	08 f0       	brcs	.+2      	; 0x7112 <_ZN4leds5blinkE7Blink_tb+0x52>
    7110:	45 c0       	rjmp	.+138    	; 0x719c <_ZN4leds5blinkE7Blink_tb+0xdc>
    7112:	21 e0       	ldi	r18, 0x01	; 1
    7114:	0e c0       	rjmp	.+28     	; 0x7132 <_ZN4leds5blinkE7Blink_tb+0x72>
    7116:	08 95       	ret
		led_timeout_count = LED_TIMEOUT_DELAY;
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
	
	bool isRed = ((blinkMode == LEDS_RED_OFF) || (blinkMode == LEDS_RED_BLINK_FAST) || (blinkMode == LEDS_RED_BLINK_SLOW) || (blinkMode == LEDS_RED_ON_CONSTANT));
    7118:	61 30       	cpi	r22, 0x01	; 1
    711a:	71 05       	cpc	r23, r1
    711c:	21 f0       	breq	.+8      	; 0x7126 <_ZN4leds5blinkE7Blink_tb+0x66>
    711e:	cb 01       	movw	r24, r22
    7120:	03 97       	sbiw	r24, 0x03	; 3
    7122:	02 97       	sbiw	r24, 0x02	; 2
    7124:	68 f5       	brcc	.+90     	; 0x7180 <_ZN4leds5blinkE7Blink_tb+0xc0>
	bool isGreen = ((blinkMode == LEDS_GREEN_OFF) || (blinkMode == LEDS_GREEN_BLINK_FAST) || (blinkMode == LEDS_GREEN_BLINK_SLOW) || (blinkMode == LEDS_GREEN_ON_CONSTANT));
    7126:	21 e0       	ldi	r18, 0x01	; 1
    7128:	68 30       	cpi	r22, 0x08	; 8
    712a:	71 05       	cpc	r23, r1
    712c:	09 f0       	breq	.+2      	; 0x7130 <_ZN4leds5blinkE7Blink_tb+0x70>
    712e:	20 e0       	ldi	r18, 0x00	; 0
    7130:	81 e0       	ldi	r24, 0x01	; 1
	bool isBoth = !isRed && !isGreen;	
		
	if((isRed && (blinkMode != lastRedBlinkSetting)) || (isGreen && (blinkMode != lastGreenBlinkSetting)) || (isBoth && (blinkMode != lastBothBlinkSetting)))
    7132:	88 23       	and	r24, r24
    7134:	09 f4       	brne	.+2      	; 0x7138 <_ZN4leds5blinkE7Blink_tb+0x78>
    7136:	46 c0       	rjmp	.+140    	; 0x71c4 <_ZN4leds5blinkE7Blink_tb+0x104>
    7138:	40 91 a7 44 	lds	r20, 0x44A7	; 0x8044a7 <_ZL19lastRedBlinkSetting>
    713c:	50 91 a8 44 	lds	r21, 0x44A8	; 0x8044a8 <_ZL19lastRedBlinkSetting+0x1>
    7140:	46 17       	cp	r20, r22
    7142:	57 07       	cpc	r21, r23
    7144:	09 f4       	brne	.+2      	; 0x7148 <_ZN4leds5blinkE7Blink_tb+0x88>
    7146:	3e c0       	rjmp	.+124    	; 0x71c4 <_ZN4leds5blinkE7Blink_tb+0x104>
    7148:	81 e0       	ldi	r24, 0x01	; 1
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    714a:	e0 e3       	ldi	r30, 0x30	; 48
    714c:	fb e0       	ldi	r31, 0x0B	; 11
    714e:	95 81       	ldd	r25, Z+5	; 0x05
    7150:	9e 7f       	andi	r25, 0xFE	; 254
    7152:	95 83       	std	Z+5, r25	; 0x05

		switch(blinkMode)
    7154:	6d 30       	cpi	r22, 0x0D	; 13
    7156:	71 05       	cpc	r23, r1
    7158:	08 f0       	brcs	.+2      	; 0x715c <_ZN4leds5blinkE7Blink_tb+0x9c>
    715a:	4f c0       	rjmp	.+158    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
    715c:	fb 01       	movw	r30, r22
    715e:	ed 54       	subi	r30, 0x4D	; 77
    7160:	f7 4c       	sbci	r31, 0xC7	; 199
    7162:	0c 94 53 4e 	jmp	0x9ca6	; 0x9ca6 <__tablejump2__>
    7166:	ef 38       	cpi	r30, 0x8F	; 143
    7168:	0c 39       	cpi	r16, 0x9C	; 156
    716a:	14 39       	cpi	r17, 0x94	; 148
    716c:	1c 39       	cpi	r17, 0x9C	; 156
    716e:	50 39       	cpi	r21, 0x90	; 144
    7170:	36 39       	cpi	r19, 0x96	; 150
    7172:	6a 39       	cpi	r22, 0x9A	; 154
    7174:	3e 3a       	cpi	r19, 0xAE	; 174
    7176:	56 3a       	cpi	r21, 0xA6	; 166
    7178:	12 3a       	cpi	r17, 0xA2	; 162
    717a:	e4 39       	cpi	r30, 0x94	; 148
    717c:	b5 39       	cpi	r27, 0x95	; 149
    717e:	84 39       	cpi	r24, 0x94	; 148
		led_timeout_count = LED_TIMEOUT_DELAY;
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
	
	bool isRed = ((blinkMode == LEDS_RED_OFF) || (blinkMode == LEDS_RED_BLINK_FAST) || (blinkMode == LEDS_RED_BLINK_SLOW) || (blinkMode == LEDS_RED_ON_CONSTANT));
    7180:	81 e0       	ldi	r24, 0x01	; 1
    7182:	67 30       	cpi	r22, 0x07	; 7
    7184:	71 05       	cpc	r23, r1
    7186:	09 f0       	breq	.+2      	; 0x718a <_ZN4leds5blinkE7Blink_tb+0xca>
    7188:	80 e0       	ldi	r24, 0x00	; 0
	bool isGreen = ((blinkMode == LEDS_GREEN_OFF) || (blinkMode == LEDS_GREEN_BLINK_FAST) || (blinkMode == LEDS_GREEN_BLINK_SLOW) || (blinkMode == LEDS_GREEN_ON_CONSTANT));
    718a:	62 30       	cpi	r22, 0x02	; 2
    718c:	71 05       	cpc	r23, r1
    718e:	09 f0       	breq	.+2      	; 0x7192 <_ZN4leds5blinkE7Blink_tb+0xd2>
    7190:	b9 cf       	rjmp	.-142    	; 0x7104 <_ZN4leds5blinkE7Blink_tb+0x44>
	bool isBoth = !isRed && !isGreen;	
		
	if((isRed && (blinkMode != lastRedBlinkSetting)) || (isGreen && (blinkMode != lastGreenBlinkSetting)) || (isBoth && (blinkMode != lastBothBlinkSetting)))
    7192:	21 e0       	ldi	r18, 0x01	; 1
    7194:	67 30       	cpi	r22, 0x07	; 7
    7196:	71 05       	cpc	r23, r1
    7198:	79 f2       	breq	.-98     	; 0x7138 <_ZN4leds5blinkE7Blink_tb+0x78>
    719a:	17 c0       	rjmp	.+46     	; 0x71ca <_ZN4leds5blinkE7Blink_tb+0x10a>
	}
	
	if(!led_timeout_count && (blinkMode != LEDS_OFF)) return;
	
	bool isRed = ((blinkMode == LEDS_RED_OFF) || (blinkMode == LEDS_RED_BLINK_FAST) || (blinkMode == LEDS_RED_BLINK_SLOW) || (blinkMode == LEDS_RED_ON_CONSTANT));
	bool isGreen = ((blinkMode == LEDS_GREEN_OFF) || (blinkMode == LEDS_GREEN_BLINK_FAST) || (blinkMode == LEDS_GREEN_BLINK_SLOW) || (blinkMode == LEDS_GREEN_ON_CONSTANT));
    719c:	21 e0       	ldi	r18, 0x01	; 1
    719e:	68 30       	cpi	r22, 0x08	; 8
    71a0:	71 05       	cpc	r23, r1
    71a2:	09 f0       	breq	.+2      	; 0x71a6 <_ZN4leds5blinkE7Blink_tb+0xe6>
    71a4:	20 e0       	ldi	r18, 0x00	; 0
	bool isBoth = !isRed && !isGreen;	
    71a6:	81 11       	cpse	r24, r1
    71a8:	c7 cf       	rjmp	.-114    	; 0x7138 <_ZN4leds5blinkE7Blink_tb+0x78>
    71aa:	68 30       	cpi	r22, 0x08	; 8
    71ac:	71 05       	cpc	r23, r1
    71ae:	69 f0       	breq	.+26     	; 0x71ca <_ZN4leds5blinkE7Blink_tb+0x10a>
		
	if((isRed && (blinkMode != lastRedBlinkSetting)) || (isGreen && (blinkMode != lastGreenBlinkSetting)) || (isBoth && (blinkMode != lastBothBlinkSetting)))
    71b0:	20 91 a3 44 	lds	r18, 0x44A3	; 0x8044a3 <_ZL20lastBothBlinkSetting>
    71b4:	30 91 a4 44 	lds	r19, 0x44A4	; 0x8044a4 <_ZL20lastBothBlinkSetting+0x1>
    71b8:	26 17       	cp	r18, r22
    71ba:	37 07       	cpc	r19, r23
    71bc:	09 f4       	brne	.+2      	; 0x71c0 <_ZN4leds5blinkE7Blink_tb+0x100>
    71be:	98 c1       	rjmp	.+816    	; 0x74f0 <_ZN4leds5blinkE7Blink_tb+0x430>
    71c0:	28 2f       	mov	r18, r24
    71c2:	c3 cf       	rjmp	.-122    	; 0x714a <_ZN4leds5blinkE7Blink_tb+0x8a>
    71c4:	22 23       	and	r18, r18
    71c6:	09 f4       	brne	.+2      	; 0x71ca <_ZN4leds5blinkE7Blink_tb+0x10a>
    71c8:	91 c1       	rjmp	.+802    	; 0x74ec <_ZN4leds5blinkE7Blink_tb+0x42c>
    71ca:	20 91 a5 44 	lds	r18, 0x44A5	; 0x8044a5 <_ZL21lastGreenBlinkSetting>
    71ce:	30 91 a6 44 	lds	r19, 0x44A6	; 0x8044a6 <_ZL21lastGreenBlinkSetting+0x1>
    71d2:	26 17       	cp	r18, r22
    71d4:	37 07       	cpc	r19, r23
    71d6:	09 f4       	brne	.+2      	; 0x71da <_ZN4leds5blinkE7Blink_tb+0x11a>
    71d8:	81 c1       	rjmp	.+770    	; 0x74dc <_ZN4leds5blinkE7Blink_tb+0x41c>
    71da:	21 e0       	ldi	r18, 0x01	; 1
    71dc:	b6 cf       	rjmp	.-148    	; 0x714a <_ZN4leds5blinkE7Blink_tb+0x8a>

		switch(blinkMode)
		{
			case LEDS_OFF:
			{
				red_blink_count = 0;
    71de:	10 92 99 44 	sts	0x4499, r1	; 0x804499 <_ZL15red_blink_count>
    71e2:	10 92 9a 44 	sts	0x449A, r1	; 0x80449a <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    71e6:	10 92 97 44 	sts	0x4497, r1	; 0x804497 <_ZL17green_blink_count>
    71ea:	10 92 98 44 	sts	0x4498, r1	; 0x804498 <_ZL17green_blink_count+0x1>
	} else {
		VPORTC.OUT &= ~(1 << pin);
    71ee:	4e 98       	cbi	0x09, 6	; 9
    71f0:	4d 98       	cbi	0x09, 5	; 9
				LED_set_RED_level(OFF);
				LED_set_GREEN_level(OFF);
				red_led_configured = false;
    71f2:	10 92 96 44 	sts	0x4496, r1	; 0x804496 <_ZL18red_led_configured>
				green_led_configured = false;
    71f6:	10 92 95 44 	sts	0x4495, r1	; 0x804495 <_ZL20green_led_configured>
				
			}
			break;
		}
		
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    71fa:	e0 e3       	ldi	r30, 0x30	; 48
    71fc:	fb e0       	ldi	r31, 0x0B	; 11
    71fe:	95 81       	ldd	r25, Z+5	; 0x05
    7200:	91 60       	ori	r25, 0x01	; 1
    7202:	95 83       	std	Z+5, r25	; 0x05
	}
	
	if(isRed)
    7204:	81 11       	cpse	r24, r1
    7206:	6d c1       	rjmp	.+730    	; 0x74e2 <_ZN4leds5blinkE7Blink_tb+0x422>
	{
		lastRedBlinkSetting = blinkMode;
	}
	else if(isGreen)
    7208:	22 23       	and	r18, r18
    720a:	09 f4       	brne	.+2      	; 0x720e <_ZN4leds5blinkE7Blink_tb+0x14e>
    720c:	71 c1       	rjmp	.+738    	; 0x74f0 <_ZN4leds5blinkE7Blink_tb+0x430>
	{
		lastGreenBlinkSetting = blinkMode;
    720e:	60 93 a5 44 	sts	0x44A5, r22	; 0x8044a5 <_ZL21lastGreenBlinkSetting>
    7212:	70 93 a6 44 	sts	0x44A6, r23	; 0x8044a6 <_ZL21lastGreenBlinkSetting+0x1>
    7216:	08 95       	ret
    7218:	4e 98       	cbi	0x09, 6	; 9
			break;
			
			case LEDS_RED_OFF:
			{
				LED_set_RED_level(OFF);
				red_blink_count = 0;
    721a:	10 92 99 44 	sts	0x4499, r1	; 0x804499 <_ZL15red_blink_count>
    721e:	10 92 9a 44 	sts	0x449A, r1	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = false;
    7222:	10 92 96 44 	sts	0x4496, r1	; 0x804496 <_ZL18red_led_configured>
			}
			break;
    7226:	e9 cf       	rjmp	.-46     	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
    7228:	4d 98       	cbi	0x09, 5	; 9
			
			case LEDS_GREEN_OFF:
			{
				LED_set_GREEN_level(OFF);
				green_blink_count = 0;
    722a:	10 92 97 44 	sts	0x4497, r1	; 0x804497 <_ZL17green_blink_count>
    722e:	10 92 98 44 	sts	0x4498, r1	; 0x804498 <_ZL17green_blink_count+0x1>
				green_led_configured = false;
    7232:	10 92 95 44 	sts	0x4495, r1	; 0x804495 <_ZL20green_led_configured>
			}
			break;
    7236:	e1 cf       	rjmp	.-62     	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_RED_BLINK_FAST:
			{
				red_blink_on_period = BRIEF_ON;
    7238:	4f e0       	ldi	r20, 0x0F	; 15
    723a:	50 e0       	ldi	r21, 0x00	; 0
    723c:	40 93 a1 44 	sts	0x44A1, r20	; 0x8044a1 <_ZL19red_blink_on_period>
    7240:	50 93 a2 44 	sts	0x44A2, r21	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = BRIEF_OFF;
    7244:	42 e3       	ldi	r20, 0x32	; 50
    7246:	50 e0       	ldi	r21, 0x00	; 0
    7248:	40 93 9f 44 	sts	0x449F, r20	; 0x80449f <_ZL20red_blink_off_period>
    724c:	50 93 a0 44 	sts	0x44A0, r21	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;	
    7250:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    7254:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    7258:	40 93 99 44 	sts	0x4499, r20	; 0x804499 <_ZL15red_blink_count>
    725c:	50 93 9a 44 	sts	0x449A, r21	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    7260:	91 e0       	ldi	r25, 0x01	; 1
    7262:	90 93 96 44 	sts	0x4496, r25	; 0x804496 <_ZL18red_led_configured>
				timer_red_blink_inhibit = false; /* Enable timer LED control */
    7266:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
			}
			break;
    726a:	c7 cf       	rjmp	.-114    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				green_blink_on_period = BRIEF_ON;
    726c:	4f e0       	ldi	r20, 0x0F	; 15
    726e:	50 e0       	ldi	r21, 0x00	; 0
    7270:	40 93 9d 44 	sts	0x449D, r20	; 0x80449d <_ZL21green_blink_on_period>
    7274:	50 93 9e 44 	sts	0x449E, r21	; 0x80449e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = BRIEF_OFF;	
    7278:	42 e3       	ldi	r20, 0x32	; 50
    727a:	50 e0       	ldi	r21, 0x00	; 0
    727c:	40 93 9b 44 	sts	0x449B, r20	; 0x80449b <_ZL22green_blink_off_period>
    7280:	50 93 9c 44 	sts	0x449C, r21	; 0x80449c <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    7284:	40 91 9d 44 	lds	r20, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    7288:	50 91 9e 44 	lds	r21, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    728c:	40 93 97 44 	sts	0x4497, r20	; 0x804497 <_ZL17green_blink_count>
    7290:	50 93 98 44 	sts	0x4498, r21	; 0x804498 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    7294:	91 e0       	ldi	r25, 0x01	; 1
    7296:	90 93 95 44 	sts	0x4495, r25	; 0x804495 <_ZL20green_led_configured>
				timer_green_blink_inhibit = false; /* Enable timer LED control */
    729a:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
			}
			break;
    729e:	ad cf       	rjmp	.-166    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_RED_BLINK_SLOW:
			{
				red_blink_on_period = SLOW_ON;
    72a0:	49 e1       	ldi	r20, 0x19	; 25
    72a2:	50 e0       	ldi	r21, 0x00	; 0
    72a4:	40 93 a1 44 	sts	0x44A1, r20	; 0x8044a1 <_ZL19red_blink_on_period>
    72a8:	50 93 a2 44 	sts	0x44A2, r21	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    72ac:	44 ef       	ldi	r20, 0xF4	; 244
    72ae:	51 e0       	ldi	r21, 0x01	; 1
    72b0:	40 93 9f 44 	sts	0x449F, r20	; 0x80449f <_ZL20red_blink_off_period>
    72b4:	50 93 a0 44 	sts	0x44A0, r21	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    72b8:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    72bc:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    72c0:	40 93 99 44 	sts	0x4499, r20	; 0x804499 <_ZL15red_blink_count>
    72c4:	50 93 9a 44 	sts	0x449A, r21	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    72c8:	91 e0       	ldi	r25, 0x01	; 1
    72ca:	90 93 96 44 	sts	0x4496, r25	; 0x804496 <_ZL18red_led_configured>
				timer_red_blink_inhibit = false; /* Enable timer LED control */
    72ce:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
			}
			break;
    72d2:	93 cf       	rjmp	.-218    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    72d4:	49 e1       	ldi	r20, 0x19	; 25
    72d6:	50 e0       	ldi	r21, 0x00	; 0
    72d8:	40 93 9d 44 	sts	0x449D, r20	; 0x80449d <_ZL21green_blink_on_period>
    72dc:	50 93 9e 44 	sts	0x449E, r21	; 0x80449e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    72e0:	44 ef       	ldi	r20, 0xF4	; 244
    72e2:	51 e0       	ldi	r21, 0x01	; 1
    72e4:	40 93 9b 44 	sts	0x449B, r20	; 0x80449b <_ZL22green_blink_off_period>
    72e8:	50 93 9c 44 	sts	0x449C, r21	; 0x80449c <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    72ec:	40 91 9d 44 	lds	r20, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    72f0:	50 91 9e 44 	lds	r21, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    72f4:	40 93 97 44 	sts	0x4497, r20	; 0x804497 <_ZL17green_blink_count>
    72f8:	50 93 98 44 	sts	0x4498, r21	; 0x804498 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    72fc:	91 e0       	ldi	r25, 0x01	; 1
    72fe:	90 93 95 44 	sts	0x4495, r25	; 0x804495 <_ZL20green_led_configured>
				timer_green_blink_inhibit = false; /* Enable timer LED control */
    7302:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
			}
			break;
    7306:	79 cf       	rjmp	.-270    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    7308:	a9 e1       	ldi	r26, 0x19	; 25
    730a:	b0 e0       	ldi	r27, 0x00	; 0
    730c:	a0 93 9d 44 	sts	0x449D, r26	; 0x80449d <_ZL21green_blink_on_period>
    7310:	b0 93 9e 44 	sts	0x449E, r27	; 0x80449e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    7314:	e4 ef       	ldi	r30, 0xF4	; 244
    7316:	f1 e0       	ldi	r31, 0x01	; 1
    7318:	e0 93 9b 44 	sts	0x449B, r30	; 0x80449b <_ZL22green_blink_off_period>
    731c:	f0 93 9c 44 	sts	0x449C, r31	; 0x80449c <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    7320:	40 91 9d 44 	lds	r20, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    7324:	50 91 9e 44 	lds	r21, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    7328:	51 95       	neg	r21
    732a:	41 95       	neg	r20
    732c:	51 09       	sbc	r21, r1
    732e:	40 93 97 44 	sts	0x4497, r20	; 0x804497 <_ZL17green_blink_count>
    7332:	50 93 98 44 	sts	0x4498, r21	; 0x804498 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    7336:	a0 93 a1 44 	sts	0x44A1, r26	; 0x8044a1 <_ZL19red_blink_on_period>
    733a:	b0 93 a2 44 	sts	0x44A2, r27	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    733e:	e0 93 9f 44 	sts	0x449F, r30	; 0x80449f <_ZL20red_blink_off_period>
    7342:	f0 93 a0 44 	sts	0x44A0, r31	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    7346:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    734a:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    734e:	40 93 99 44 	sts	0x4499, r20	; 0x804499 <_ZL15red_blink_count>
    7352:	50 93 9a 44 	sts	0x449A, r21	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    7356:	91 e0       	ldi	r25, 0x01	; 1
    7358:	90 93 96 44 	sts	0x4496, r25	; 0x804496 <_ZL18red_led_configured>
				green_led_configured = true;			
    735c:	90 93 95 44 	sts	0x4495, r25	; 0x804495 <_ZL20green_led_configured>
				timer_red_blink_inhibit = timer_green_blink_inhibit = false; /* Enable timer LED control */
    7360:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
    7364:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
			}
			break;
    7368:	48 cf       	rjmp	.-368    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    736a:	49 e1       	ldi	r20, 0x19	; 25
    736c:	50 e0       	ldi	r21, 0x00	; 0
    736e:	40 93 9d 44 	sts	0x449D, r20	; 0x80449d <_ZL21green_blink_on_period>
    7372:	50 93 9e 44 	sts	0x449E, r21	; 0x80449e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    7376:	40 93 9b 44 	sts	0x449B, r20	; 0x80449b <_ZL22green_blink_off_period>
    737a:	50 93 9c 44 	sts	0x449C, r21	; 0x80449c <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    737e:	e0 91 9d 44 	lds	r30, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    7382:	f0 91 9e 44 	lds	r31, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    7386:	f1 95       	neg	r31
    7388:	e1 95       	neg	r30
    738a:	f1 09       	sbc	r31, r1
    738c:	e0 93 97 44 	sts	0x4497, r30	; 0x804497 <_ZL17green_blink_count>
    7390:	f0 93 98 44 	sts	0x4498, r31	; 0x804498 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    7394:	40 93 a1 44 	sts	0x44A1, r20	; 0x8044a1 <_ZL19red_blink_on_period>
    7398:	50 93 a2 44 	sts	0x44A2, r21	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    739c:	40 93 9f 44 	sts	0x449F, r20	; 0x80449f <_ZL20red_blink_off_period>
    73a0:	50 93 a0 44 	sts	0x44A0, r21	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    73a4:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    73a8:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    73ac:	40 93 99 44 	sts	0x4499, r20	; 0x804499 <_ZL15red_blink_count>
    73b0:	50 93 9a 44 	sts	0x449A, r21	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    73b4:	91 e0       	ldi	r25, 0x01	; 1
    73b6:	90 93 96 44 	sts	0x4496, r25	; 0x804496 <_ZL18red_led_configured>
				green_led_configured = true;			
    73ba:	90 93 95 44 	sts	0x4495, r25	; 0x804495 <_ZL20green_led_configured>
				timer_red_blink_inhibit = timer_green_blink_inhibit = false; /* Enable timer LED control */
    73be:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
    73c2:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
			}
			break;
    73c6:	19 cf       	rjmp	.-462    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    73c8:	e9 e1       	ldi	r30, 0x19	; 25
    73ca:	f0 e0       	ldi	r31, 0x00	; 0
    73cc:	e0 93 9d 44 	sts	0x449D, r30	; 0x80449d <_ZL21green_blink_on_period>
    73d0:	f0 93 9e 44 	sts	0x449E, r31	; 0x80449e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    73d4:	44 ef       	ldi	r20, 0xF4	; 244
    73d6:	51 e0       	ldi	r21, 0x01	; 1
    73d8:	40 93 9b 44 	sts	0x449B, r20	; 0x80449b <_ZL22green_blink_off_period>
    73dc:	50 93 9c 44 	sts	0x449C, r21	; 0x80449c <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    73e0:	a0 91 9d 44 	lds	r26, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    73e4:	b0 91 9e 44 	lds	r27, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    73e8:	a0 93 97 44 	sts	0x4497, r26	; 0x804497 <_ZL17green_blink_count>
    73ec:	b0 93 98 44 	sts	0x4498, r27	; 0x804498 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    73f0:	e0 93 a1 44 	sts	0x44A1, r30	; 0x8044a1 <_ZL19red_blink_on_period>
    73f4:	f0 93 a2 44 	sts	0x44A2, r31	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    73f8:	40 93 9f 44 	sts	0x449F, r20	; 0x80449f <_ZL20red_blink_off_period>
    73fc:	50 93 a0 44 	sts	0x44A0, r21	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    7400:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    7404:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    7408:	40 93 99 44 	sts	0x4499, r20	; 0x804499 <_ZL15red_blink_count>
    740c:	50 93 9a 44 	sts	0x449A, r21	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    7410:	91 e0       	ldi	r25, 0x01	; 1
    7412:	90 93 96 44 	sts	0x4496, r25	; 0x804496 <_ZL18red_led_configured>
				green_led_configured = true;			
    7416:	90 93 95 44 	sts	0x4495, r25	; 0x804495 <_ZL20green_led_configured>
				timer_red_blink_inhibit = timer_green_blink_inhibit = false; /* Enable timer LED control */
    741a:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
    741e:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
			}
			break;
    7422:	eb ce       	rjmp	.-554    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    7424:	49 e1       	ldi	r20, 0x19	; 25
    7426:	50 e0       	ldi	r21, 0x00	; 0
    7428:	40 93 9d 44 	sts	0x449D, r20	; 0x80449d <_ZL21green_blink_on_period>
    742c:	50 93 9e 44 	sts	0x449E, r21	; 0x80449e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    7430:	40 93 9b 44 	sts	0x449B, r20	; 0x80449b <_ZL22green_blink_off_period>
    7434:	50 93 9c 44 	sts	0x449C, r21	; 0x80449c <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    7438:	e0 91 9d 44 	lds	r30, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    743c:	f0 91 9e 44 	lds	r31, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    7440:	e0 93 97 44 	sts	0x4497, r30	; 0x804497 <_ZL17green_blink_count>
    7444:	f0 93 98 44 	sts	0x4498, r31	; 0x804498 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    7448:	40 93 a1 44 	sts	0x44A1, r20	; 0x8044a1 <_ZL19red_blink_on_period>
    744c:	50 93 a2 44 	sts	0x44A2, r21	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    7450:	40 93 9f 44 	sts	0x449F, r20	; 0x80449f <_ZL20red_blink_off_period>
    7454:	50 93 a0 44 	sts	0x44A0, r21	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    7458:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    745c:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    7460:	40 93 99 44 	sts	0x4499, r20	; 0x804499 <_ZL15red_blink_count>
    7464:	50 93 9a 44 	sts	0x449A, r21	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    7468:	91 e0       	ldi	r25, 0x01	; 1
    746a:	90 93 96 44 	sts	0x4496, r25	; 0x804496 <_ZL18red_led_configured>
				green_led_configured = true;			
    746e:	90 93 95 44 	sts	0x4495, r25	; 0x804495 <_ZL20green_led_configured>
				timer_red_blink_inhibit = timer_green_blink_inhibit = false; /* Enable timer LED control */
    7472:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
    7476:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
			}
			break;
    747a:	bf ce       	rjmp	.-642    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_RED_ON_CONSTANT:
			{
				red_blink_on_period = SLOW_ON;
    747c:	49 e1       	ldi	r20, 0x19	; 25
    747e:	50 e0       	ldi	r21, 0x00	; 0
    7480:	40 93 a1 44 	sts	0x44A1, r20	; 0x8044a1 <_ZL19red_blink_on_period>
    7484:	50 93 a2 44 	sts	0x44A2, r21	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = 0;
    7488:	10 92 9f 44 	sts	0x449F, r1	; 0x80449f <_ZL20red_blink_off_period>
    748c:	10 92 a0 44 	sts	0x44A0, r1	; 0x8044a0 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;
    7490:	40 91 a1 44 	lds	r20, 0x44A1	; 0x8044a1 <_ZL19red_blink_on_period>
    7494:	50 91 a2 44 	lds	r21, 0x44A2	; 0x8044a2 <_ZL19red_blink_on_period+0x1>
    7498:	40 93 99 44 	sts	0x4499, r20	; 0x804499 <_ZL15red_blink_count>
    749c:	50 93 9a 44 	sts	0x449A, r21	; 0x80449a <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    74a0:	91 e0       	ldi	r25, 0x01	; 1
    74a2:	90 93 96 44 	sts	0x4496, r25	; 0x804496 <_ZL18red_led_configured>
				timer_red_blink_inhibit = false; /* Enable timer LED control */
    74a6:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
			}
			break;
    74aa:	a7 ce       	rjmp	.-690    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				green_blink_on_period = SLOW_ON;
    74ac:	49 e1       	ldi	r20, 0x19	; 25
    74ae:	50 e0       	ldi	r21, 0x00	; 0
    74b0:	40 93 9d 44 	sts	0x449D, r20	; 0x80449d <_ZL21green_blink_on_period>
    74b4:	50 93 9e 44 	sts	0x449E, r21	; 0x80449e <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = 0;
    74b8:	10 92 9b 44 	sts	0x449B, r1	; 0x80449b <_ZL22green_blink_off_period>
    74bc:	10 92 9c 44 	sts	0x449C, r1	; 0x80449c <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;
    74c0:	40 91 9d 44 	lds	r20, 0x449D	; 0x80449d <_ZL21green_blink_on_period>
    74c4:	50 91 9e 44 	lds	r21, 0x449E	; 0x80449e <_ZL21green_blink_on_period+0x1>
    74c8:	40 93 97 44 	sts	0x4497, r20	; 0x804497 <_ZL17green_blink_count>
    74cc:	50 93 98 44 	sts	0x4498, r21	; 0x804498 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    74d0:	91 e0       	ldi	r25, 0x01	; 1
    74d2:	90 93 95 44 	sts	0x4495, r25	; 0x804495 <_ZL20green_led_configured>
				timer_green_blink_inhibit = false; /* Enable timer LED control */
    74d6:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
			}
			break;
    74da:	8f ce       	rjmp	.-738    	; 0x71fa <_ZN4leds5blinkE7Blink_tb+0x13a>
		}
		
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
	}
	
	if(isRed)
    74dc:	88 23       	and	r24, r24
    74de:	09 f4       	brne	.+2      	; 0x74e2 <_ZN4leds5blinkE7Blink_tb+0x422>
    74e0:	96 ce       	rjmp	.-724    	; 0x720e <_ZN4leds5blinkE7Blink_tb+0x14e>
	{
		lastRedBlinkSetting = blinkMode;
    74e2:	60 93 a7 44 	sts	0x44A7, r22	; 0x8044a7 <_ZL19lastRedBlinkSetting>
    74e6:	70 93 a8 44 	sts	0x44A8, r23	; 0x8044a8 <_ZL19lastRedBlinkSetting+0x1>
    74ea:	08 95       	ret
		}
		
		TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
	}
	
	if(isRed)
    74ec:	81 11       	cpse	r24, r1
    74ee:	f9 cf       	rjmp	.-14     	; 0x74e2 <_ZN4leds5blinkE7Blink_tb+0x422>
	{
		lastGreenBlinkSetting = blinkMode;
	}
	else
	{
		lastBothBlinkSetting = blinkMode;
    74f0:	60 93 a3 44 	sts	0x44A3, r22	; 0x8044a3 <_ZL20lastBothBlinkSetting>
    74f4:	70 93 a4 44 	sts	0x44A4, r23	; 0x8044a4 <_ZL20lastBothBlinkSetting+0x1>
	}
}
    74f8:	08 95       	ret

000074fa <_ZN4leds5blinkE7Blink_t>:
	g_enable_LED_enunciations = holdEnum;
}

void leds::blink(Blink_t blinkMode)
{
	blink(blinkMode, false);
    74fa:	40 e0       	ldi	r20, 0x00	; 0
    74fc:	0e 94 60 38 	call	0x70c0	; 0x70c0 <_ZN4leds5blinkE7Blink_tb>
}
    7500:	08 95       	ret

00007502 <_ZN4leds5resetEv>:
}

/* Turns off LEDs, resets the text buffer, and disables LED character transmissions. Re-enables LED timer blink functionality. */
void leds::reset(void)
{
	blink(LEDS_OFF);
    7502:	70 e0       	ldi	r23, 0x00	; 0
    7504:	60 e0       	ldi	r22, 0x00	; 0
    7506:	0e 94 7d 3a 	call	0x74fa	; 0x74fa <_ZN4leds5blinkE7Blink_t>
	g_text_buff.reset();
    750a:	80 e4       	ldi	r24, 0x40	; 64
    750c:	94 e4       	ldi	r25, 0x44	; 68
    750e:	0e 94 9b 27 	call	0x4f36	; 0x4f36 <_ZN18CircularStringBuff5resetEv>
	g_enable_manual_transmissions = false;
    7512:	10 92 56 44 	sts	0x4456, r1	; 0x804456 <g_enable_manual_transmissions>
	timer_red_blink_inhibit = timer_green_blink_inhibit = false; /* Enable timer LED control */
    7516:	10 92 a9 44 	sts	0x44A9, r1	; 0x8044a9 <_ZL25timer_green_blink_inhibit>
    751a:	10 92 aa 44 	sts	0x44AA, r1	; 0x8044aa <_ZL23timer_red_blink_inhibit>
	led_timeout_count = LED_TIMEOUT_DELAY;
    751e:	80 e6       	ldi	r24, 0x60	; 96
    7520:	9a ee       	ldi	r25, 0xEA	; 234
    7522:	a0 e0       	ldi	r26, 0x00	; 0
    7524:	b0 e0       	ldi	r27, 0x00	; 0
    7526:	80 93 50 40 	sts	0x4050, r24	; 0x804050 <_ZL17led_timeout_count>
    752a:	90 93 51 40 	sts	0x4051, r25	; 0x804051 <_ZL17led_timeout_count+0x1>
    752e:	a0 93 52 40 	sts	0x4052, r26	; 0x804052 <_ZL17led_timeout_count+0x2>
    7532:	b0 93 53 40 	sts	0x4053, r27	; 0x804053 <_ZL17led_timeout_count+0x3>
}
    7536:	08 95       	ret

00007538 <_ZN4leds4initE7Blink_t>:
{
	init(LEDS_OFF);
}

void leds::init(Blink_t setBlink)
{
    7538:	ef 92       	push	r14
    753a:	ff 92       	push	r15
    753c:	0f 93       	push	r16
    753e:	1f 93       	push	r17
    7540:	cf 93       	push	r28
    7542:	df 93       	push	r29
    7544:	8c 01       	movw	r16, r24
    7546:	7b 01       	movw	r14, r22
	TCB3.INTCTRL &= ~TCB_CAPT_bm; /* Disable timer interrupt */
    7548:	c0 e3       	ldi	r28, 0x30	; 48
    754a:	db e0       	ldi	r29, 0x0B	; 11
    754c:	8d 81       	ldd	r24, Y+5	; 0x05
    754e:	8e 7f       	andi	r24, 0xFE	; 254
    7550:	8d 83       	std	Y+5, r24	; 0x05
	reset();
    7552:	c8 01       	movw	r24, r16
    7554:	0e 94 81 3a 	call	0x7502	; 0x7502 <_ZN4leds5resetEv>
	TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    7558:	8d 81       	ldd	r24, Y+5	; 0x05
    755a:	81 60       	ori	r24, 0x01	; 1
    755c:	8d 83       	std	Y+5, r24	; 0x05
	if(setBlink != LEDS_OFF) blink(setBlink, true);
    755e:	e1 14       	cp	r14, r1
    7560:	f1 04       	cpc	r15, r1
    7562:	39 f4       	brne	.+14     	; 0x7572 <_ZN4leds4initE7Blink_t+0x3a>
}
    7564:	df 91       	pop	r29
    7566:	cf 91       	pop	r28
    7568:	1f 91       	pop	r17
    756a:	0f 91       	pop	r16
    756c:	ff 90       	pop	r15
    756e:	ef 90       	pop	r14
    7570:	08 95       	ret
void leds::init(Blink_t setBlink)
{
	TCB3.INTCTRL &= ~TCB_CAPT_bm; /* Disable timer interrupt */
	reset();
	TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
	if(setBlink != LEDS_OFF) blink(setBlink, true);
    7572:	41 e0       	ldi	r20, 0x01	; 1
    7574:	b7 01       	movw	r22, r14
    7576:	c8 01       	movw	r24, r16
    7578:	0e 94 60 38 	call	0x70c0	; 0x70c0 <_ZN4leds5blinkE7Blink_tb>
}
    757c:	f3 cf       	rjmp	.-26     	; 0x7564 <_ZN4leds4initE7Blink_t+0x2c>

0000757e <_ZN4leds4initEv>:
}

/* Disables LED timer while resetting settings for interrupt safety. */
void leds::init(void)
{
	init(LEDS_OFF);
    757e:	70 e0       	ldi	r23, 0x00	; 0
    7580:	60 e0       	ldi	r22, 0x00	; 0
    7582:	0e 94 9c 3a 	call	0x7538	; 0x7538 <_ZN4leds4initE7Blink_t>
}
    7586:	08 95       	ret

00007588 <_Z18nextFullLBTxBufferv>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    7588:	80 91 ae 44 	lds	r24, 0x44AE	; 0x8044ae <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    758c:	94 e0       	ldi	r25, 0x04	; 4
    758e:	32 e3       	ldi	r19, 0x32	; 50
    7590:	01 c0       	rjmp	.+2      	; 0x7594 <_Z18nextFullLBTxBufferv+0xc>
    7592:	80 e0       	ldi	r24, 0x00	; 0
    7594:	38 9f       	mul	r19, r24
    7596:	f0 01       	movw	r30, r0
    7598:	11 24       	eor	r1, r1
    759a:	e8 58       	subi	r30, 0x88	; 136
    759c:	fa 4b       	sbci	r31, 0xBA	; 186
    759e:	20 81       	ld	r18, Z
    75a0:	21 11       	cpse	r18, r1
    75a2:	0b c0       	rjmp	.+22     	; 0x75ba <_Z18nextFullLBTxBufferv+0x32>
    75a4:	91 50       	subi	r25, 0x01	; 1
    75a6:	21 f0       	breq	.+8      	; 0x75b0 <_Z18nextFullLBTxBufferv+0x28>
    75a8:	8f 5f       	subi	r24, 0xFF	; 255
    75aa:	84 30       	cpi	r24, 0x04	; 4
    75ac:	90 f7       	brcc	.-28     	; 0x7592 <_Z18nextFullLBTxBufferv+0xa>
    75ae:	f2 cf       	rjmp	.-28     	; 0x7594 <_Z18nextFullLBTxBufferv+0xc>
    75b0:	80 93 ae 44 	sts	0x44AE, r24	; 0x8044ae <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    75b4:	90 e0       	ldi	r25, 0x00	; 0
    75b6:	80 e0       	ldi	r24, 0x00	; 0
    75b8:	08 95       	ret
    75ba:	80 93 ae 44 	sts	0x44AE, r24	; 0x8044ae <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    75be:	22 e3       	ldi	r18, 0x32	; 50
    75c0:	82 9f       	mul	r24, r18
    75c2:	c0 01       	movw	r24, r0
    75c4:	11 24       	eor	r1, r1
    75c6:	88 58       	subi	r24, 0x88	; 136
    75c8:	9a 4b       	sbci	r25, 0xBA	; 186
    75ca:	08 95       	ret

000075cc <_Z19nextEmptyLBTxBufferv>:
    75cc:	80 91 ad 44 	lds	r24, 0x44AD	; 0x8044ad <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    75d0:	94 e0       	ldi	r25, 0x04	; 4
    75d2:	32 e3       	ldi	r19, 0x32	; 50
    75d4:	01 c0       	rjmp	.+2      	; 0x75d8 <_Z19nextEmptyLBTxBufferv+0xc>
    75d6:	80 e0       	ldi	r24, 0x00	; 0
    75d8:	38 9f       	mul	r19, r24
    75da:	f0 01       	movw	r30, r0
    75dc:	11 24       	eor	r1, r1
    75de:	e8 58       	subi	r30, 0x88	; 136
    75e0:	fa 4b       	sbci	r31, 0xBA	; 186
    75e2:	20 81       	ld	r18, Z
    75e4:	22 23       	and	r18, r18
    75e6:	59 f0       	breq	.+22     	; 0x75fe <_Z19nextEmptyLBTxBufferv+0x32>
    75e8:	91 50       	subi	r25, 0x01	; 1
    75ea:	21 f0       	breq	.+8      	; 0x75f4 <_Z19nextEmptyLBTxBufferv+0x28>
    75ec:	8f 5f       	subi	r24, 0xFF	; 255
    75ee:	84 30       	cpi	r24, 0x04	; 4
    75f0:	90 f7       	brcc	.-28     	; 0x75d6 <_Z19nextEmptyLBTxBufferv+0xa>
    75f2:	f2 cf       	rjmp	.-28     	; 0x75d8 <_Z19nextEmptyLBTxBufferv+0xc>
    75f4:	80 93 ad 44 	sts	0x44AD, r24	; 0x8044ad <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    75f8:	90 e0       	ldi	r25, 0x00	; 0
    75fa:	80 e0       	ldi	r24, 0x00	; 0
    75fc:	08 95       	ret
    75fe:	80 93 ad 44 	sts	0x44AD, r24	; 0x8044ad <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    7602:	22 e3       	ldi	r18, 0x32	; 50
    7604:	82 9f       	mul	r24, r18
    7606:	c0 01       	movw	r24, r0
    7608:	11 24       	eor	r1, r1
    760a:	88 58       	subi	r24, 0x88	; 136
    760c:	9a 4b       	sbci	r25, 0xBA	; 186
    760e:	08 95       	ret

00007610 <_Z19nextEmptyLBRxBufferv>:
    7610:	80 91 ac 44 	lds	r24, 0x44AC	; 0x8044ac <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    7614:	28 2f       	mov	r18, r24
    7616:	30 e0       	ldi	r19, 0x00	; 0
    7618:	43 e4       	ldi	r20, 0x43	; 67
    761a:	84 9f       	mul	r24, r20
    761c:	f0 01       	movw	r30, r0
    761e:	11 24       	eor	r1, r1
    7620:	e1 55       	subi	r30, 0x51	; 81
    7622:	fb 4b       	sbci	r31, 0xBB	; 187
    7624:	42 81       	ldd	r20, Z+2	; 0x02
    7626:	53 81       	ldd	r21, Z+3	; 0x03
    7628:	45 2b       	or	r20, r21
    762a:	31 f1       	breq	.+76     	; 0x7678 <_Z19nextEmptyLBRxBufferv+0x68>
    762c:	91 e0       	ldi	r25, 0x01	; 1
    762e:	98 0f       	add	r25, r24
    7630:	93 30       	cpi	r25, 0x03	; 3
    7632:	88 f5       	brcc	.+98     	; 0x7696 <_Z19nextEmptyLBRxBufferv+0x86>
    7634:	29 2f       	mov	r18, r25
    7636:	30 e0       	ldi	r19, 0x00	; 0
    7638:	43 e4       	ldi	r20, 0x43	; 67
    763a:	94 9f       	mul	r25, r20
    763c:	f0 01       	movw	r30, r0
    763e:	11 24       	eor	r1, r1
    7640:	e1 55       	subi	r30, 0x51	; 81
    7642:	fb 4b       	sbci	r31, 0xBB	; 187
    7644:	42 81       	ldd	r20, Z+2	; 0x02
    7646:	53 81       	ldd	r21, Z+3	; 0x03
    7648:	45 2b       	or	r20, r21
    764a:	a9 f0       	breq	.+42     	; 0x7676 <_Z19nextEmptyLBRxBufferv+0x66>
    764c:	8e 5f       	subi	r24, 0xFE	; 254
    764e:	83 30       	cpi	r24, 0x03	; 3
    7650:	08 f0       	brcs	.+2      	; 0x7654 <_Z19nextEmptyLBRxBufferv+0x44>
    7652:	80 e0       	ldi	r24, 0x00	; 0
    7654:	28 2f       	mov	r18, r24
    7656:	30 e0       	ldi	r19, 0x00	; 0
    7658:	93 e4       	ldi	r25, 0x43	; 67
    765a:	89 9f       	mul	r24, r25
    765c:	f0 01       	movw	r30, r0
    765e:	11 24       	eor	r1, r1
    7660:	e1 55       	subi	r30, 0x51	; 81
    7662:	fb 4b       	sbci	r31, 0xBB	; 187
    7664:	42 81       	ldd	r20, Z+2	; 0x02
    7666:	53 81       	ldd	r21, Z+3	; 0x03
    7668:	45 2b       	or	r20, r21
    766a:	31 f0       	breq	.+12     	; 0x7678 <_Z19nextEmptyLBRxBufferv+0x68>
    766c:	80 93 ac 44 	sts	0x44AC, r24	; 0x8044ac <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    7670:	90 e0       	ldi	r25, 0x00	; 0
    7672:	80 e0       	ldi	r24, 0x00	; 0
    7674:	08 95       	ret
    7676:	89 2f       	mov	r24, r25
    7678:	80 93 ac 44 	sts	0x44AC, r24	; 0x8044ac <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    767c:	43 e4       	ldi	r20, 0x43	; 67
    767e:	42 9f       	mul	r20, r18
    7680:	c0 01       	movw	r24, r0
    7682:	43 9f       	mul	r20, r19
    7684:	90 0d       	add	r25, r0
    7686:	11 24       	eor	r1, r1
    7688:	81 55       	subi	r24, 0x51	; 81
    768a:	9b 4b       	sbci	r25, 0xBB	; 187
    768c:	08 95       	ret
    768e:	80 e0       	ldi	r24, 0x00	; 0
    7690:	30 e0       	ldi	r19, 0x00	; 0
    7692:	20 e0       	ldi	r18, 0x00	; 0
    7694:	f1 cf       	rjmp	.-30     	; 0x7678 <_Z19nextEmptyLBRxBufferv+0x68>
    7696:	80 91 b1 44 	lds	r24, 0x44B1	; 0x8044b1 <_ZL9rx_buffer+0x2>
    769a:	90 91 b2 44 	lds	r25, 0x44B2	; 0x8044b2 <_ZL9rx_buffer+0x3>
    769e:	89 2b       	or	r24, r25
    76a0:	b1 f3       	breq	.-20     	; 0x768e <_Z19nextEmptyLBRxBufferv+0x7e>
    76a2:	81 e0       	ldi	r24, 0x01	; 1
    76a4:	d7 cf       	rjmp	.-82     	; 0x7654 <_Z19nextEmptyLBRxBufferv+0x44>

000076a6 <_Z18nextFullLBRxBufferv>:
    76a6:	80 91 ab 44 	lds	r24, 0x44AB	; 0x8044ab <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    76aa:	28 2f       	mov	r18, r24
    76ac:	30 e0       	ldi	r19, 0x00	; 0
    76ae:	43 e4       	ldi	r20, 0x43	; 67
    76b0:	84 9f       	mul	r24, r20
    76b2:	f0 01       	movw	r30, r0
    76b4:	11 24       	eor	r1, r1
    76b6:	e1 55       	subi	r30, 0x51	; 81
    76b8:	fb 4b       	sbci	r31, 0xBB	; 187
    76ba:	42 81       	ldd	r20, Z+2	; 0x02
    76bc:	53 81       	ldd	r21, Z+3	; 0x03
    76be:	45 2b       	or	r20, r21
    76c0:	31 f5       	brne	.+76     	; 0x770e <_Z18nextFullLBRxBufferv+0x68>
    76c2:	91 e0       	ldi	r25, 0x01	; 1
    76c4:	98 0f       	add	r25, r24
    76c6:	93 30       	cpi	r25, 0x03	; 3
    76c8:	88 f5       	brcc	.+98     	; 0x772c <_Z18nextFullLBRxBufferv+0x86>
    76ca:	29 2f       	mov	r18, r25
    76cc:	30 e0       	ldi	r19, 0x00	; 0
    76ce:	43 e4       	ldi	r20, 0x43	; 67
    76d0:	94 9f       	mul	r25, r20
    76d2:	f0 01       	movw	r30, r0
    76d4:	11 24       	eor	r1, r1
    76d6:	e1 55       	subi	r30, 0x51	; 81
    76d8:	fb 4b       	sbci	r31, 0xBB	; 187
    76da:	42 81       	ldd	r20, Z+2	; 0x02
    76dc:	53 81       	ldd	r21, Z+3	; 0x03
    76de:	45 2b       	or	r20, r21
    76e0:	a9 f4       	brne	.+42     	; 0x770c <_Z18nextFullLBRxBufferv+0x66>
    76e2:	8e 5f       	subi	r24, 0xFE	; 254
    76e4:	83 30       	cpi	r24, 0x03	; 3
    76e6:	08 f0       	brcs	.+2      	; 0x76ea <_Z18nextFullLBRxBufferv+0x44>
    76e8:	80 e0       	ldi	r24, 0x00	; 0
    76ea:	28 2f       	mov	r18, r24
    76ec:	30 e0       	ldi	r19, 0x00	; 0
    76ee:	93 e4       	ldi	r25, 0x43	; 67
    76f0:	89 9f       	mul	r24, r25
    76f2:	f0 01       	movw	r30, r0
    76f4:	11 24       	eor	r1, r1
    76f6:	e1 55       	subi	r30, 0x51	; 81
    76f8:	fb 4b       	sbci	r31, 0xBB	; 187
    76fa:	42 81       	ldd	r20, Z+2	; 0x02
    76fc:	53 81       	ldd	r21, Z+3	; 0x03
    76fe:	45 2b       	or	r20, r21
    7700:	31 f4       	brne	.+12     	; 0x770e <_Z18nextFullLBRxBufferv+0x68>
    7702:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    7706:	90 e0       	ldi	r25, 0x00	; 0
    7708:	80 e0       	ldi	r24, 0x00	; 0
    770a:	08 95       	ret
    770c:	89 2f       	mov	r24, r25
    770e:	80 93 ab 44 	sts	0x44AB, r24	; 0x8044ab <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    7712:	43 e4       	ldi	r20, 0x43	; 67
    7714:	42 9f       	mul	r20, r18
    7716:	c0 01       	movw	r24, r0
    7718:	43 9f       	mul	r20, r19
    771a:	90 0d       	add	r25, r0
    771c:	11 24       	eor	r1, r1
    771e:	81 55       	subi	r24, 0x51	; 81
    7720:	9b 4b       	sbci	r25, 0xBB	; 187
    7722:	08 95       	ret
    7724:	80 e0       	ldi	r24, 0x00	; 0
    7726:	30 e0       	ldi	r19, 0x00	; 0
    7728:	20 e0       	ldi	r18, 0x00	; 0
    772a:	f1 cf       	rjmp	.-30     	; 0x770e <_Z18nextFullLBRxBufferv+0x68>
    772c:	80 91 b1 44 	lds	r24, 0x44B1	; 0x8044b1 <_ZL9rx_buffer+0x2>
    7730:	90 91 b2 44 	lds	r25, 0x44B2	; 0x8044b2 <_ZL9rx_buffer+0x3>
    7734:	89 2b       	or	r24, r25
    7736:	b1 f7       	brne	.-20     	; 0x7724 <_Z18nextFullLBRxBufferv+0x7e>
    7738:	81 e0       	ldi	r24, 0x01	; 1
    773a:	d7 cf       	rjmp	.-82     	; 0x76ea <_Z18nextFullLBRxBufferv+0x44>

0000773c <_Z14linkbus_end_txv>:
    773c:	80 91 40 46 	lds	r24, 0x4640	; 0x804640 <_ZL17linkbus_tx_active>
    7740:	88 23       	and	r24, r24
    7742:	69 f0       	breq	.+26     	; 0x775e <_Z14linkbus_end_txv+0x22>
    7744:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_linkbus_usart_number>
    7748:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    774c:	89 2b       	or	r24, r25
    774e:	41 f4       	brne	.+16     	; 0x7760 <_Z14linkbus_end_txv+0x24>
    7750:	e0 e8       	ldi	r30, 0x80	; 128
    7752:	f8 e0       	ldi	r31, 0x08	; 8
    7754:	85 81       	ldd	r24, Z+5	; 0x05
    7756:	8f 7d       	andi	r24, 0xDF	; 223
    7758:	85 83       	std	Z+5, r24	; 0x05
    775a:	10 92 40 46 	sts	0x4640, r1	; 0x804640 <_ZL17linkbus_tx_active>
    775e:	08 95       	ret
    7760:	e0 e2       	ldi	r30, 0x20	; 32
    7762:	f8 e0       	ldi	r31, 0x08	; 8
    7764:	85 81       	ldd	r24, Z+5	; 0x05
    7766:	8f 7d       	andi	r24, 0xDF	; 223
    7768:	85 83       	std	Z+5, r24	; 0x05
    776a:	f7 cf       	rjmp	.-18     	; 0x775a <_Z14linkbus_end_txv+0x1e>

0000776c <_Z12linkbus_initm14USART_Number_t>:
    776c:	cf 93       	push	r28
    776e:	df 93       	push	r29
    7770:	ea 01       	movw	r28, r20
    7772:	ef ea       	ldi	r30, 0xAF	; 175
    7774:	f4 e4       	ldi	r31, 0x44	; 68
    7776:	29 ec       	ldi	r18, 0xC9	; 201
    7778:	df 01       	movw	r26, r30
    777a:	1d 92       	st	X+, r1
    777c:	2a 95       	dec	r18
    777e:	e9 f7       	brne	.-6      	; 0x777a <_Z12linkbus_initm14USART_Number_t+0xe>
    7780:	e8 e7       	ldi	r30, 0x78	; 120
    7782:	f5 e4       	ldi	r31, 0x45	; 69
    7784:	10 82       	st	Z, r1
    7786:	12 aa       	std	Z+50, r1	; 0x32
    7788:	10 92 dc 45 	sts	0x45DC, r1	; 0x8045dc <_ZL9tx_buffer+0x64>
    778c:	10 92 0e 46 	sts	0x460E, r1	; 0x80460e <_ZL9tx_buffer+0x96>
    7790:	46 30       	cpi	r20, 0x06	; 6
    7792:	51 05       	cpc	r21, r1
    7794:	b9 f0       	breq	.+46     	; 0x77c4 <_Z12linkbus_initm14USART_Number_t+0x58>
    7796:	44 30       	cpi	r20, 0x04	; 4
    7798:	51 05       	cpc	r21, r1
    779a:	e1 f0       	breq	.+56     	; 0x77d4 <_Z12linkbus_initm14USART_Number_t+0x68>
    779c:	41 98       	cbi	0x08, 1	; 8
    779e:	e1 e5       	ldi	r30, 0x51	; 81
    77a0:	f4 e0       	ldi	r31, 0x04	; 4
    77a2:	20 81       	ld	r18, Z
    77a4:	27 7f       	andi	r18, 0xF7	; 247
    77a6:	20 83       	st	Z, r18
    77a8:	40 9a       	sbi	0x08, 0	; 8
    77aa:	48 9a       	sbi	0x09, 0	; 9
    77ac:	40 e0       	ldi	r20, 0x00	; 0
    77ae:	0e 94 0b 4b 	call	0x9616	; 0x9616 <USART1_init>
    77b2:	c0 93 54 40 	sts	0x4054, r28	; 0x804054 <g_linkbus_usart_number>
    77b6:	d0 93 55 40 	sts	0x4055, r29	; 0x804055 <g_linkbus_usart_number+0x1>
    77ba:	10 92 56 40 	sts	0x4056, r1	; 0x804056 <_ZL14g_bus_disabled>
    77be:	df 91       	pop	r29
    77c0:	cf 91       	pop	r28
    77c2:	08 95       	ret
    77c4:	20 91 54 40 	lds	r18, 0x4054	; 0x804054 <g_linkbus_usart_number>
    77c8:	30 91 55 40 	lds	r19, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    77cc:	27 30       	cpi	r18, 0x07	; 7
    77ce:	31 05       	cpc	r19, r1
    77d0:	a1 f7       	brne	.-24     	; 0x77ba <_Z12linkbus_initm14USART_Number_t+0x4e>
    77d2:	e4 cf       	rjmp	.-56     	; 0x779c <_Z12linkbus_initm14USART_Number_t+0x30>
    77d4:	81 98       	cbi	0x10, 1	; 16
    77d6:	e1 e9       	ldi	r30, 0x91	; 145
    77d8:	f4 e0       	ldi	r31, 0x04	; 4
    77da:	20 81       	ld	r18, Z
    77dc:	27 7f       	andi	r18, 0xF7	; 247
    77de:	20 83       	st	Z, r18
    77e0:	80 9a       	sbi	0x10, 0	; 16
    77e2:	88 9a       	sbi	0x11, 0	; 17
    77e4:	40 e0       	ldi	r20, 0x00	; 0
    77e6:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <USART4_init>
    77ea:	e3 cf       	rjmp	.-58     	; 0x77b2 <_Z12linkbus_initm14USART_Number_t+0x46>

000077ec <_Z15linkbus_disablev>:
    77ec:	81 e0       	ldi	r24, 0x01	; 1
    77ee:	80 93 56 40 	sts	0x4056, r24	; 0x804056 <_ZL14g_bus_disabled>
    77f2:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_linkbus_usart_number>
    77f6:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    77fa:	04 97       	sbiw	r24, 0x04	; 4
    77fc:	a1 f0       	breq	.+40     	; 0x7826 <_Z15linkbus_disablev+0x3a>
    77fe:	0e 94 4a 4b 	call	0x9694	; 0x9694 <USART1_disable>
    7802:	0e 94 9e 3b 	call	0x773c	; 0x773c <_Z14linkbus_end_txv>
    7806:	ef ea       	ldi	r30, 0xAF	; 175
    7808:	f4 e4       	ldi	r31, 0x44	; 68
    780a:	89 ec       	ldi	r24, 0xC9	; 201
    780c:	df 01       	movw	r26, r30
    780e:	1d 92       	st	X+, r1
    7810:	8a 95       	dec	r24
    7812:	e9 f7       	brne	.-6      	; 0x780e <_Z15linkbus_disablev+0x22>
    7814:	e8 e7       	ldi	r30, 0x78	; 120
    7816:	f5 e4       	ldi	r31, 0x45	; 69
    7818:	10 82       	st	Z, r1
    781a:	12 aa       	std	Z+50, r1	; 0x32
    781c:	10 92 dc 45 	sts	0x45DC, r1	; 0x8045dc <_ZL9tx_buffer+0x64>
    7820:	10 92 0e 46 	sts	0x460E, r1	; 0x80460e <_ZL9tx_buffer+0x96>
    7824:	08 95       	ret
    7826:	0e 94 8e 4b 	call	0x971c	; 0x971c <USART4_disable>
    782a:	eb cf       	rjmp	.-42     	; 0x7802 <_Z15linkbus_disablev+0x16>

0000782c <_Z14linkbus_enablev>:
    782c:	10 92 56 40 	sts	0x4056, r1	; 0x804056 <_ZL14g_bus_disabled>
    7830:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_linkbus_usart_number>
    7834:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    7838:	04 97       	sbiw	r24, 0x04	; 4
    783a:	91 f0       	breq	.+36     	; 0x7860 <_Z14linkbus_enablev+0x34>
    783c:	0e 94 3b 4b 	call	0x9676	; 0x9676 <USART1_enable>
    7840:	ef ea       	ldi	r30, 0xAF	; 175
    7842:	f4 e4       	ldi	r31, 0x44	; 68
    7844:	89 ec       	ldi	r24, 0xC9	; 201
    7846:	df 01       	movw	r26, r30
    7848:	1d 92       	st	X+, r1
    784a:	8a 95       	dec	r24
    784c:	e9 f7       	brne	.-6      	; 0x7848 <_Z14linkbus_enablev+0x1c>
    784e:	e8 e7       	ldi	r30, 0x78	; 120
    7850:	f5 e4       	ldi	r31, 0x45	; 69
    7852:	10 82       	st	Z, r1
    7854:	12 aa       	std	Z+50, r1	; 0x32
    7856:	10 92 dc 45 	sts	0x45DC, r1	; 0x8045dc <_ZL9tx_buffer+0x64>
    785a:	10 92 0e 46 	sts	0x460E, r1	; 0x80460e <_ZL9tx_buffer+0x96>
    785e:	08 95       	ret
    7860:	0e 94 7f 4b 	call	0x96fe	; 0x96fe <USART4_enable>
    7864:	ed cf       	rjmp	.-38     	; 0x7840 <_Z14linkbus_enablev+0x14>

00007866 <_Z12lb_send_textPc>:
    7866:	ef 92       	push	r14
    7868:	ff 92       	push	r15
    786a:	0f 93       	push	r16
    786c:	1f 93       	push	r17
    786e:	cf 93       	push	r28
    7870:	df 93       	push	r29
    7872:	00 91 56 40 	lds	r16, 0x4056	; 0x804056 <_ZL14g_bus_disabled>
    7876:	01 11       	cpse	r16, r1
    7878:	41 c0       	rjmp	.+130    	; 0x78fc <_Z12lb_send_textPc+0x96>
    787a:	00 97       	sbiw	r24, 0x00	; 0
    787c:	f1 f1       	breq	.+124    	; 0x78fa <_Z12lb_send_textPc+0x94>
    787e:	7c 01       	movw	r14, r24
    7880:	0e 94 e6 3a 	call	0x75cc	; 0x75cc <_Z19nextEmptyLBTxBufferv>
    7884:	00 97       	sbiw	r24, 0x00	; 0
    7886:	d1 f4       	brne	.+52     	; 0x78bc <_Z12lb_send_textPc+0x56>
    7888:	c8 ec       	ldi	r28, 0xC8	; 200
    788a:	d0 e0       	ldi	r29, 0x00	; 0
    788c:	06 c0       	rjmp	.+12     	; 0x789a <_Z12lb_send_textPc+0x34>
    788e:	0e 94 e6 3a 	call	0x75cc	; 0x75cc <_Z19nextEmptyLBTxBufferv>
    7892:	00 97       	sbiw	r24, 0x00	; 0
    7894:	99 f4       	brne	.+38     	; 0x78bc <_Z12lb_send_textPc+0x56>
    7896:	20 97       	sbiw	r28, 0x00	; 0
    7898:	c9 f1       	breq	.+114    	; 0x790c <_Z12lb_send_textPc+0xa6>
    789a:	10 91 40 46 	lds	r17, 0x4640	; 0x804640 <_ZL17linkbus_tx_active>
    789e:	11 23       	and	r17, r17
    78a0:	b1 f3       	breq	.-20     	; 0x788e <_Z12lb_send_textPc+0x28>
    78a2:	20 97       	sbiw	r28, 0x00	; 0
    78a4:	39 f0       	breq	.+14     	; 0x78b4 <_Z12lb_send_textPc+0x4e>
    78a6:	21 97       	sbiw	r28, 0x01	; 1
    78a8:	90 91 40 46 	lds	r25, 0x4640	; 0x804640 <_ZL17linkbus_tx_active>
    78ac:	99 23       	and	r25, r25
    78ae:	79 f3       	breq	.-34     	; 0x788e <_Z12lb_send_textPc+0x28>
    78b0:	20 97       	sbiw	r28, 0x00	; 0
    78b2:	c9 f7       	brne	.-14     	; 0x78a6 <_Z12lb_send_textPc+0x40>
    78b4:	0e 94 e6 3a 	call	0x75cc	; 0x75cc <_Z19nextEmptyLBTxBufferv>
    78b8:	00 97       	sbiw	r24, 0x00	; 0
    78ba:	51 f1       	breq	.+84     	; 0x7910 <_Z12lb_send_textPc+0xaa>
    78bc:	ff 92       	push	r15
    78be:	ef 92       	push	r14
    78c0:	9f 93       	push	r25
    78c2:	8f 93       	push	r24
    78c4:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    78c8:	c0 91 40 46 	lds	r28, 0x4640	; 0x804640 <_ZL17linkbus_tx_active>
    78cc:	0f 90       	pop	r0
    78ce:	0f 90       	pop	r0
    78d0:	0f 90       	pop	r0
    78d2:	0f 90       	pop	r0
    78d4:	c1 11       	cpse	r28, r1
    78d6:	12 c0       	rjmp	.+36     	; 0x78fc <_Z12lb_send_textPc+0x96>
    78d8:	81 e0       	ldi	r24, 0x01	; 1
    78da:	80 93 40 46 	sts	0x4640, r24	; 0x804640 <_ZL17linkbus_tx_active>
    78de:	80 91 54 40 	lds	r24, 0x4054	; 0x804054 <g_linkbus_usart_number>
    78e2:	90 91 55 40 	lds	r25, 0x4055	; 0x804055 <g_linkbus_usart_number+0x1>
    78e6:	04 97       	sbiw	r24, 0x04	; 4
    78e8:	21 f0       	breq	.+8      	; 0x78f2 <_Z12lb_send_textPc+0x8c>
    78ea:	0e 94 41 4b 	call	0x9682	; 0x9682 <USART1_enable_tx>
    78ee:	0c 2f       	mov	r16, r28
    78f0:	05 c0       	rjmp	.+10     	; 0x78fc <_Z12lb_send_textPc+0x96>
    78f2:	0e 94 85 4b 	call	0x970a	; 0x970a <USART4_enable_tx>
    78f6:	0c 2f       	mov	r16, r28
    78f8:	01 c0       	rjmp	.+2      	; 0x78fc <_Z12lb_send_textPc+0x96>
    78fa:	01 e0       	ldi	r16, 0x01	; 1
    78fc:	80 2f       	mov	r24, r16
    78fe:	df 91       	pop	r29
    7900:	cf 91       	pop	r28
    7902:	1f 91       	pop	r17
    7904:	0f 91       	pop	r16
    7906:	ff 90       	pop	r15
    7908:	ef 90       	pop	r14
    790a:	08 95       	ret
    790c:	01 e0       	ldi	r16, 0x01	; 1
    790e:	f6 cf       	rjmp	.-20     	; 0x78fc <_Z12lb_send_textPc+0x96>
    7910:	01 2f       	mov	r16, r17
    7912:	f4 cf       	rjmp	.-24     	; 0x78fc <_Z12lb_send_textPc+0x96>

00007914 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    7914:	83 30       	cpi	r24, 0x03	; 3
    7916:	91 05       	cpc	r25, r1
    7918:	19 f1       	breq	.+70     	; 0x7960 <_Z11lb_send_msg13LBMessageTypePKcPc+0x4c>
    791a:	02 97       	sbiw	r24, 0x02	; 2
    791c:	f1 f0       	breq	.+60     	; 0x795a <_Z11lb_send_msg13LBMessageTypePKcPc+0x46>
    791e:	9b e3       	ldi	r25, 0x3B	; 59
    7920:	84 e2       	ldi	r24, 0x24	; 36
    7922:	1f 92       	push	r1
    7924:	9f 93       	push	r25
    7926:	5f 93       	push	r21
    7928:	4f 93       	push	r20
    792a:	7f 93       	push	r23
    792c:	6f 93       	push	r22
    792e:	1f 92       	push	r1
    7930:	8f 93       	push	r24
    7932:	8f eb       	ldi	r24, 0xBF	; 191
    7934:	92 e4       	ldi	r25, 0x42	; 66
    7936:	9f 93       	push	r25
    7938:	8f 93       	push	r24
    793a:	81 e4       	ldi	r24, 0x41	; 65
    793c:	96 e4       	ldi	r25, 0x46	; 70
    793e:	9f 93       	push	r25
    7940:	8f 93       	push	r24
    7942:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    7946:	81 e4       	ldi	r24, 0x41	; 65
    7948:	96 e4       	ldi	r25, 0x46	; 70
    794a:	0e 94 33 3c 	call	0x7866	; 0x7866 <_Z12lb_send_textPc>
    794e:	8d b7       	in	r24, 0x3d	; 61
    7950:	9e b7       	in	r25, 0x3e	; 62
    7952:	0c 96       	adiw	r24, 0x0c	; 12
    7954:	8d bf       	out	0x3d, r24	; 61
    7956:	9e bf       	out	0x3e, r25	; 62
    7958:	08 95       	ret
    795a:	9f e3       	ldi	r25, 0x3F	; 63
    795c:	84 e2       	ldi	r24, 0x24	; 36
    795e:	e1 cf       	rjmp	.-62     	; 0x7922 <_Z11lb_send_msg13LBMessageTypePKcPc+0xe>
    7960:	9b e3       	ldi	r25, 0x3B	; 59
    7962:	81 e2       	ldi	r24, 0x21	; 33
    7964:	de cf       	rjmp	.-68     	; 0x7922 <_Z11lb_send_msg13LBMessageTypePKcPc+0xe>

00007966 <_Z16lb_broadcast_strPKcS0_>:


void lb_broadcast_str(const char* data, const char* str)
{
	if(str)
    7966:	61 15       	cp	r22, r1
    7968:	71 05       	cpc	r23, r1
    796a:	99 f0       	breq	.+38     	; 0x7992 <_Z16lb_broadcast_strPKcS0_+0x2c>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, data);
    796c:	9f 93       	push	r25
    796e:	8f 93       	push	r24
    7970:	7f 93       	push	r23
    7972:	6f 93       	push	r22
    7974:	89 ec       	ldi	r24, 0xC9	; 201
    7976:	92 e4       	ldi	r25, 0x42	; 66
    7978:	9f 93       	push	r25
    797a:	8f 93       	push	r24
    797c:	81 e4       	ldi	r24, 0x41	; 65
    797e:	96 e4       	ldi	r25, 0x46	; 70
    7980:	9f 93       	push	r25
    7982:	8f 93       	push	r24
    7984:	0e 94 77 50 	call	0xa0ee	; 0xa0ee <sprintf>
    7988:	8d b7       	in	r24, 0x3d	; 61
    798a:	9e b7       	in	r25, 0x3e	; 62
    798c:	08 96       	adiw	r24, 0x08	; 8
    798e:	8d bf       	out	0x3d, r24	; 61
    7990:	9e bf       	out	0x3e, r25	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    7992:	80 91 41 46 	lds	r24, 0x4641	; 0x804641 <_ZL13g_tempMsgBuff>
    7996:	81 11       	cpse	r24, r1
    7998:	01 c0       	rjmp	.+2      	; 0x799c <_Z16lb_broadcast_strPKcS0_+0x36>
}
    799a:	08 95       	ret
	if(str)
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, data);
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    799c:	81 e4       	ldi	r24, 0x41	; 65
    799e:	96 e4       	ldi	r25, 0x46	; 70
    79a0:	0e 94 33 3c 	call	0x7866	; 0x7866 <_Z12lb_send_textPc>
}
    79a4:	fa cf       	rjmp	.-12     	; 0x799a <_Z16lb_broadcast_strPKcS0_+0x34>

000079a6 <_Z15lastMorseCallerv>:
#define INTER_WORD_SPACE 0xFD

callerID_t lastMorseCaller(void)
{
	return g_lastCallerID;
}
    79a6:	80 91 7e 46 	lds	r24, 0x467E	; 0x80467e <_ZL14g_lastCallerID>
    79aa:	90 91 7f 46 	lds	r25, 0x467F	; 0x80467f <_ZL14g_lastCallerID+0x1>
    79ae:	08 95       	ret

000079b0 <_Z12getMorseCharc>:
 */
MorseCharacter getMorseChar(char c)
{
	MorseCharacter morse;

	switch( c )
    79b0:	80 52       	subi	r24, 0x20	; 32
    79b2:	8f 35       	cpi	r24, 0x5F	; 95
    79b4:	08 f0       	brcs	.+2      	; 0x79b8 <_Z12getMorseCharc+0x8>
    79b6:	49 c1       	rjmp	.+658    	; 0x7c4a <_Z12getMorseCharc+0x29a>
    79b8:	e8 2f       	mov	r30, r24
    79ba:	f0 e0       	ldi	r31, 0x00	; 0
    79bc:	ee 51       	subi	r30, 0x1E	; 30
    79be:	f3 4c       	sbci	r31, 0xC3	; 195
    79c0:	0c 94 53 4e 	jmp	0x9ca6	; 0x9ca6 <__tablejump2__>
    79c4:	1d 3e       	cpi	r17, 0xED	; 237
    79c6:	dd 3d       	cpi	r29, 0xDD	; 221
    79c8:	0d 3e       	cpi	r16, 0xED	; 237
    79ca:	25 3e       	cpi	r18, 0xE5	; 229
    79cc:	11 3e       	cpi	r17, 0xE1	; 225
    79ce:	25 3e       	cpi	r18, 0xE5	; 229
    79d0:	ed 3d       	cpi	r30, 0xDD	; 221
    79d2:	d9 3d       	cpi	r29, 0xD9	; 217
    79d4:	e5 3d       	cpi	r30, 0xD5	; 213
    79d6:	e9 3d       	cpi	r30, 0xD9	; 217
    79d8:	25 3e       	cpi	r18, 0xE5	; 229
    79da:	fd 3d       	cpi	r31, 0xDD	; 221
    79dc:	d1 3d       	cpi	r29, 0xD1	; 209
    79de:	05 3e       	cpi	r16, 0xE5	; 229
    79e0:	cd 3d       	cpi	r28, 0xDD	; 221
    79e2:	e1 3d       	cpi	r30, 0xD1	; 209
    79e4:	a5 3d       	cpi	r26, 0xD5	; 213
    79e6:	a9 3d       	cpi	r26, 0xD9	; 217
    79e8:	ad 3d       	cpi	r26, 0xDD	; 221
    79ea:	b1 3d       	cpi	r27, 0xD1	; 209
    79ec:	b5 3d       	cpi	r27, 0xD5	; 213
    79ee:	b9 3d       	cpi	r27, 0xD9	; 217
    79f0:	bd 3d       	cpi	r27, 0xDD	; 221
    79f2:	c1 3d       	cpi	r28, 0xD1	; 209
    79f4:	c5 3d       	cpi	r28, 0xD5	; 213
    79f6:	c9 3d       	cpi	r28, 0xD9	; 217
    79f8:	f1 3d       	cpi	r31, 0xD1	; 209
    79fa:	f5 3d       	cpi	r31, 0xD5	; 213
    79fc:	21 3e       	cpi	r18, 0xE1	; 225
    79fe:	f9 3d       	cpi	r31, 0xD9	; 217
    7a00:	25 3e       	cpi	r18, 0xE5	; 229
    7a02:	d5 3d       	cpi	r29, 0xD5	; 213
    7a04:	15 3e       	cpi	r17, 0xE5	; 229
    7a06:	29 3e       	cpi	r18, 0xE9	; 233
    7a08:	41 3d       	cpi	r20, 0xD1	; 209
    7a0a:	45 3d       	cpi	r20, 0xD5	; 213
    7a0c:	49 3d       	cpi	r20, 0xD9	; 217
    7a0e:	4d 3d       	cpi	r20, 0xDD	; 221
    7a10:	51 3d       	cpi	r21, 0xD1	; 209
    7a12:	55 3d       	cpi	r21, 0xD5	; 213
    7a14:	59 3d       	cpi	r21, 0xD9	; 217
    7a16:	5d 3d       	cpi	r21, 0xDD	; 221
    7a18:	61 3d       	cpi	r22, 0xD1	; 209
    7a1a:	65 3d       	cpi	r22, 0xD5	; 213
    7a1c:	69 3d       	cpi	r22, 0xD9	; 217
    7a1e:	6d 3d       	cpi	r22, 0xDD	; 221
    7a20:	71 3d       	cpi	r23, 0xD1	; 209
    7a22:	75 3d       	cpi	r23, 0xD5	; 213
    7a24:	79 3d       	cpi	r23, 0xD9	; 217
    7a26:	7d 3d       	cpi	r23, 0xDD	; 221
    7a28:	81 3d       	cpi	r24, 0xD1	; 209
    7a2a:	85 3d       	cpi	r24, 0xD5	; 213
    7a2c:	89 3d       	cpi	r24, 0xD9	; 217
    7a2e:	8d 3d       	cpi	r24, 0xDD	; 221
    7a30:	91 3d       	cpi	r25, 0xD1	; 209
    7a32:	95 3d       	cpi	r25, 0xD5	; 213
    7a34:	99 3d       	cpi	r25, 0xD9	; 217
    7a36:	9d 3d       	cpi	r25, 0xDD	; 221
    7a38:	a1 3d       	cpi	r26, 0xD1	; 209
    7a3a:	25 3e       	cpi	r18, 0xE5	; 229
    7a3c:	25 3e       	cpi	r18, 0xE5	; 229
    7a3e:	25 3e       	cpi	r18, 0xE5	; 229
    7a40:	25 3e       	cpi	r18, 0xE5	; 229
    7a42:	09 3e       	cpi	r16, 0xE9	; 233
    7a44:	25 3e       	cpi	r18, 0xE5	; 229
    7a46:	25 3e       	cpi	r18, 0xE5	; 229
    7a48:	25 3e       	cpi	r18, 0xE5	; 229
    7a4a:	25 3e       	cpi	r18, 0xE5	; 229
    7a4c:	25 3e       	cpi	r18, 0xE5	; 229
    7a4e:	25 3e       	cpi	r18, 0xE5	; 229
    7a50:	25 3e       	cpi	r18, 0xE5	; 229
    7a52:	25 3e       	cpi	r18, 0xE5	; 229
    7a54:	25 3e       	cpi	r18, 0xE5	; 229
    7a56:	25 3e       	cpi	r18, 0xE5	; 229
    7a58:	25 3e       	cpi	r18, 0xE5	; 229
    7a5a:	25 3e       	cpi	r18, 0xE5	; 229
    7a5c:	25 3e       	cpi	r18, 0xE5	; 229
    7a5e:	25 3e       	cpi	r18, 0xE5	; 229
    7a60:	25 3e       	cpi	r18, 0xE5	; 229
    7a62:	25 3e       	cpi	r18, 0xE5	; 229
    7a64:	25 3e       	cpi	r18, 0xE5	; 229
    7a66:	25 3e       	cpi	r18, 0xE5	; 229
    7a68:	25 3e       	cpi	r18, 0xE5	; 229
    7a6a:	25 3e       	cpi	r18, 0xE5	; 229
    7a6c:	25 3e       	cpi	r18, 0xE5	; 229
    7a6e:	25 3e       	cpi	r18, 0xE5	; 229
    7a70:	25 3e       	cpi	r18, 0xE5	; 229
    7a72:	25 3e       	cpi	r18, 0xE5	; 229
    7a74:	25 3e       	cpi	r18, 0xE5	; 229
    7a76:	25 3e       	cpi	r18, 0xE5	; 229
    7a78:	25 3e       	cpi	r18, 0xE5	; 229
    7a7a:	25 3e       	cpi	r18, 0xE5	; 229
    7a7c:	19 3e       	cpi	r17, 0xE9	; 233
    7a7e:	25 3e       	cpi	r18, 0xE5	; 229
    7a80:	01 3e       	cpi	r16, 0xE1	; 225

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    7a82:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 4;
    7a84:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    7a86:	61 e0       	ldi	r22, 0x01	; 1
    7a88:	08 95       	ret

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    7a8a:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 4;
    7a8c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    7a8e:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    7a90:	08 95       	ret

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    7a92:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 3;
    7a94:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    7a96:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    7a98:	08 95       	ret

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 1;
    7a9a:	81 e0       	ldi	r24, 0x01	; 1
		break;

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 1;
    7a9c:	71 e0       	ldi	r23, 0x01	; 1
		}
		break;

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    7a9e:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 1;
		}
		break;
    7aa0:	08 95       	ret

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    7aa2:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 4;
    7aa4:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    7aa6:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    7aa8:	08 95       	ret

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    7aaa:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 3;
    7aac:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    7aae:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    7ab0:	08 95       	ret

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 7;
    7ab2:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 4;
    7ab4:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    7ab6:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 7;
		}
		break;
    7ab8:	08 95       	ret

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 3;
    7aba:	83 e0       	ldi	r24, 0x03	; 3
		break;

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 2;
    7abc:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    7abe:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 3;
		}
		break;
    7ac0:	08 95       	ret

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    7ac2:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
			morse.lengthInSymbols = 4;
    7ac4:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    7ac6:	6e e0       	ldi	r22, 0x0E	; 14
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    7ac8:	08 95       	ret

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    7aca:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 3;
    7acc:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    7ace:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    7ad0:	08 95       	ret

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    7ad2:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 4;
    7ad4:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    7ad6:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    7ad8:	08 95       	ret

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 7;
    7ada:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 2;
    7adc:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    7ade:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 7;
		}
		break;
    7ae0:	08 95       	ret

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
    7ae2:	85 e0       	ldi	r24, 0x05	; 5
		break;

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 2;
    7ae4:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    7ae6:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
		}
		break;
    7ae8:	08 95       	ret

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 11;
    7aea:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 3;
    7aec:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    7aee:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 11;
		}
		break;
    7af0:	08 95       	ret

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    7af2:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 4;
    7af4:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    7af6:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    7af8:	08 95       	ret

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    7afa:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
			morse.lengthInSymbols = 4;
    7afc:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    7afe:	6b e0       	ldi	r22, 0x0B	; 11
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    7b00:	08 95       	ret

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    7b02:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 3;
    7b04:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    7b06:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    7b08:	08 95       	ret

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 5;
    7b0a:	85 e0       	ldi	r24, 0x05	; 5
		break;

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 3;
    7b0c:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    7b0e:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 5;
		}
		break;
    7b10:	08 95       	ret

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 3;
    7b12:	83 e0       	ldi	r24, 0x03	; 3
		break;

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 1;
    7b14:	71 e0       	ldi	r23, 0x01	; 1
		}
		break;

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    7b16:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 3;
		}
		break;
    7b18:	08 95       	ret

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    7b1a:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 3;
    7b1c:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    7b1e:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    7b20:	08 95       	ret

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    7b22:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
			morse.lengthInSymbols = 4;
    7b24:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    7b26:	68 e0       	ldi	r22, 0x08	; 8
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    7b28:	08 95       	ret

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    7b2a:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 3;
    7b2c:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    7b2e:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    7b30:	08 95       	ret

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    7b32:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 4;
    7b34:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    7b36:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    7b38:	08 95       	ret

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    7b3a:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 4;
    7b3c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    7b3e:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    7b40:	08 95       	ret

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    7b42:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 4;
    7b44:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    7b46:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    7b48:	08 95       	ret

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
    7b4a:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
			morse.lengthInSymbols = 5;
    7b4c:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    7b4e:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
		}
		break;
    7b50:	08 95       	ret

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
    7b52:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 5;
    7b54:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    7b56:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
		}
		break;
    7b58:	08 95       	ret

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    7b5a:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
			morse.lengthInSymbols = 5;
    7b5c:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    7b5e:	6c e1       	ldi	r22, 0x1C	; 28
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    7b60:	08 95       	ret

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    7b62:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
			morse.lengthInSymbols = 5;
    7b64:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    7b66:	68 e1       	ldi	r22, 0x18	; 24
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    7b68:	08 95       	ret

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    7b6a:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
			morse.lengthInSymbols = 5;
    7b6c:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    7b6e:	60 e1       	ldi	r22, 0x10	; 16
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    7b70:	08 95       	ret

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 9;
    7b72:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 5;
    7b74:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    7b76:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 9;
		}
		break;
    7b78:	08 95       	ret

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    7b7a:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 5;
    7b7c:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    7b7e:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    7b80:	08 95       	ret

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    7b82:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 5;
    7b84:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    7b86:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    7b88:	08 95       	ret

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    7b8a:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 5;
    7b8c:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    7b8e:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    7b90:	08 95       	ret

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
    7b92:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
			morse.lengthInSymbols = 5;
    7b94:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    7b96:	6f e0       	ldi	r22, 0x0F	; 15
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
		}
		break;
    7b98:	08 95       	ret

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    7b9a:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
			morse.lengthInSymbols = 6;
    7b9c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    7b9e:	6a e2       	ldi	r22, 0x2A	; 42
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    7ba0:	08 95       	ret

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    7ba2:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
			morse.lengthInSymbols = 6;
    7ba4:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    7ba6:	63 e3       	ldi	r22, 0x33	; 51
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    7ba8:	08 95       	ret

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    7baa:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
			morse.lengthInSymbols = 6;
    7bac:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    7bae:	6c e0       	ldi	r22, 0x0C	; 12
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    7bb0:	08 95       	ret

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    7bb2:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 6;
    7bb4:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    7bb6:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    7bb8:	08 95       	ret

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    7bba:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
			morse.lengthInSymbols = 6;
    7bbc:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    7bbe:	65 e3       	ldi	r22, 0x35	; 53
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    7bc0:	08 95       	ret

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    7bc2:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 5;
    7bc4:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    7bc6:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    7bc8:	08 95       	ret

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    7bca:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 5;
    7bcc:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    7bce:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    7bd0:	08 95       	ret

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    7bd2:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
			morse.lengthInSymbols = 6;
    7bd4:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    7bd6:	6d e2       	ldi	r22, 0x2D	; 45
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    7bd8:	08 95       	ret

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    7bda:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 5;
    7bdc:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    7bde:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    7be0:	08 95       	ret

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    7be2:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 6;
    7be4:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    7be6:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    7be8:	08 95       	ret

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 12;
    7bea:	8c e0       	ldi	r24, 0x0C	; 12
		break;

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
			morse.lengthInSymbols = 6;
    7bec:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    7bee:	65 e1       	ldi	r22, 0x15	; 21
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 12;
		}
		break;
    7bf0:	08 95       	ret

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    7bf2:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
			morse.lengthInSymbols = 5;
    7bf4:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    7bf6:	61 e1       	ldi	r22, 0x11	; 17
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    7bf8:	08 95       	ret

		case '+': /* AR */
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    7bfa:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '+': /* AR */
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
			morse.lengthInSymbols = 5;
    7bfc:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '+': /* AR */
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    7bfe:	6a e0       	ldi	r22, 0x0A	; 10
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    7c00:	08 95       	ret

		case '~': /* SK */
		{
			morse.pattern = 0x28;   /* 0010 1000; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    7c02:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '~': /* SK */
		{
			morse.pattern = 0x28;   /* 0010 1000; */
			morse.lengthInSymbols = 6;
    7c04:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '~': /* SK */
		{
			morse.pattern = 0x28;   /* 0010 1000; */
    7c06:	68 e2       	ldi	r22, 0x28	; 40
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    7c08:	08 95       	ret

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    7c0a:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
			morse.lengthInSymbols = 6;
    7c0c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    7c0e:	61 e2       	ldi	r22, 0x21	; 33
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    7c10:	08 95       	ret

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    7c12:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
			morse.lengthInSymbols = 6;
    7c14:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    7c16:	6c e2       	ldi	r22, 0x2C	; 44
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    7c18:	08 95       	ret

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    7c1a:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
			morse.lengthInSymbols = 6;
    7c1c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    7c1e:	62 e1       	ldi	r22, 0x12	; 18
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    7c20:	08 95       	ret

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
			morse.lengthInSymbols = 7;
			morse.lengthInElements = 17;
    7c22:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
			morse.lengthInSymbols = 7;
    7c24:	77 e0       	ldi	r23, 0x07	; 7
		}
		break;

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    7c26:	68 e4       	ldi	r22, 0x48	; 72
			morse.lengthInSymbols = 7;
			morse.lengthInElements = 17;
		}
		break;
    7c28:	08 95       	ret

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    7c2a:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
			morse.lengthInSymbols = 6;
    7c2c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    7c2e:	66 e1       	ldi	r22, 0x16	; 22
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    7c30:	08 95       	ret

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    7c32:	84 e0       	ldi	r24, 0x04	; 4
		}
		break;

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
    7c34:	77 e0       	ldi	r23, 0x07	; 7
			morse.lengthInElements = 17;
		}
		break;

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    7c36:	6f ef       	ldi	r22, 0xFF	; 255
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
		}
		break;
    7c38:	08 95       	ret

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    7c3a:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
    7c3c:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
		}
		break;

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    7c3e:	6e ef       	ldi	r22, 0xFE	; 254
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
		}
		break;
    7c40:	08 95       	ret

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
    7c42:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
			morse.lengthInSymbols = 5;
    7c44:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    7c46:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
		}
		break;
    7c48:	08 95       	ret

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
			morse.lengthInSymbols = 0;
			morse.lengthInElements = 0;
    7c4a:	80 e0       	ldi	r24, 0x00	; 0
		break;

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
			morse.lengthInSymbols = 0;
    7c4c:	70 e0       	ldi	r23, 0x00	; 0
		}
		break;

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    7c4e:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 0;
			morse.lengthInElements = 0;
		}
		break;
    7c50:	08 95       	ret
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
    7c52:	85 e0       	ldi	r24, 0x05	; 5
	switch( c )
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 2;
    7c54:	72 e0       	ldi	r23, 0x02	; 2

	switch( c )
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    7c56:	62 e0       	ldi	r22, 0x02	; 2
		}
		break;
	}

	return( morse);
}
    7c58:	08 95       	ret

00007c5a <_Z9makeMorsePcPbS0_10callerID_t>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished, callerID_t caller)
{
    7c5a:	cf 93       	push	r28
    7c5c:	df 93       	push	r29
    7c5e:	ea 01       	movw	r28, r20
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = true;
	static bool carrierOn = false;
	static bool holdKeyDown = false;
	
	if(!s && (caller != g_lastCallerID))
    7c60:	00 97       	sbiw	r24, 0x00	; 0
    7c62:	41 f1       	breq	.+80     	; 0x7cb4 <_Z9makeMorsePcPbS0_10callerID_t+0x5a>
		return false;
	}

	if(s)   /* load a new NULL-terminated string to send */
	{
		holdKeyDown = false;
    7c64:	10 92 73 46 	sts	0x4673, r1	; 0x804673 <_ZZ9makeMorsePcPbS0_10callerID_tE11holdKeyDown>

		if(repeating)
    7c68:	61 15       	cp	r22, r1
    7c6a:	71 05       	cpc	r23, r1
    7c6c:	21 f0       	breq	.+8      	; 0x7c76 <_Z9makeMorsePcPbS0_10callerID_t+0x1c>
		{
			repeat = *repeating;
    7c6e:	db 01       	movw	r26, r22
    7c70:	4c 91       	ld	r20, X
    7c72:	40 93 58 40 	sts	0x4058, r20	; 0x804058 <_ZZ9makeMorsePcPbS0_10callerID_tE6repeat>
		}
		
		if(caller != g_lastCallerID)
    7c76:	40 91 7e 46 	lds	r20, 0x467E	; 0x80467e <_ZL14g_lastCallerID>
    7c7a:	50 91 7f 46 	lds	r21, 0x467F	; 0x80467f <_ZL14g_lastCallerID+0x1>
    7c7e:	42 17       	cp	r20, r18
    7c80:	53 07       	cpc	r21, r19
    7c82:	71 f0       	breq	.+28     	; 0x7ca0 <_Z9makeMorsePcPbS0_10callerID_t+0x46>
		{
			g_lastCallerID = caller;
    7c84:	20 93 7e 46 	sts	0x467E, r18	; 0x80467e <_ZL14g_lastCallerID>
    7c88:	30 93 7f 46 	sts	0x467F, r19	; 0x80467f <_ZL14g_lastCallerID+0x1>
			str = NULL;
    7c8c:	10 92 7c 46 	sts	0x467C, r1	; 0x80467c <_ZZ9makeMorsePcPbS0_10callerID_tE3str>
    7c90:	10 92 7d 46 	sts	0x467D, r1	; 0x80467d <_ZZ9makeMorsePcPbS0_10callerID_tE3str+0x1>
			completedString = true;
    7c94:	21 e0       	ldi	r18, 0x01	; 1
    7c96:	20 93 57 40 	sts	0x4057, r18	; 0x804057 <_ZZ9makeMorsePcPbS0_10callerID_tE15completedString>
			if(finished)
    7c9a:	20 97       	sbiw	r28, 0x00	; 0
    7c9c:	09 f0       	breq	.+2      	; 0x7ca0 <_Z9makeMorsePcPbS0_10callerID_t+0x46>
			{
				*finished = true;
    7c9e:	28 83       	st	Y, r18
			}
		}

		if(*s)
    7ca0:	fc 01       	movw	r30, r24
    7ca2:	20 81       	ld	r18, Z
    7ca4:	21 11       	cpse	r18, r1
    7ca6:	0f c0       	rjmp	.+30     	; 0x7cc6 <_Z9makeMorsePcPbS0_10callerID_t+0x6c>
			elementIndex = 0;
			addedSpace = 0;
			completedString = false;
		}

		carrierOn = OFF;
    7ca8:	10 92 74 46 	sts	0x4674, r1	; 0x804674 <_ZZ9makeMorsePcPbS0_10callerID_tE9carrierOn>
		return( OFF);
    7cac:	80 e0       	ldi	r24, 0x00	; 0
	}
	else
	{
		return( carrierOn);
	}
}
    7cae:	df 91       	pop	r29
    7cb0:	cf 91       	pop	r28
    7cb2:	08 95       	ret
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = true;
	static bool carrierOn = false;
	static bool holdKeyDown = false;
	
	if(!s && (caller != g_lastCallerID))
    7cb4:	80 91 7e 46 	lds	r24, 0x467E	; 0x80467e <_ZL14g_lastCallerID>
    7cb8:	90 91 7f 46 	lds	r25, 0x467F	; 0x80467f <_ZL14g_lastCallerID+0x1>
    7cbc:	82 17       	cp	r24, r18
    7cbe:	93 07       	cpc	r25, r19
    7cc0:	e1 f0       	breq	.+56     	; 0x7cfa <_Z9makeMorsePcPbS0_10callerID_t+0xa0>
	{
		return false;
    7cc2:	80 e0       	ldi	r24, 0x00	; 0
    7cc4:	f4 cf       	rjmp	.-24     	; 0x7cae <_Z9makeMorsePcPbS0_10callerID_t+0x54>
			}
		}

		if(*s)
		{
			str = s;
    7cc6:	80 93 7c 46 	sts	0x467C, r24	; 0x80467c <_ZZ9makeMorsePcPbS0_10callerID_tE3str>
    7cca:	90 93 7d 46 	sts	0x467D, r25	; 0x80467d <_ZZ9makeMorsePcPbS0_10callerID_tE3str+0x1>
			c = str[0];
    7cce:	20 93 59 40 	sts	0x4059, r18	; 0x804059 <_ZZ9makeMorsePcPbS0_10callerID_tE1c>
			morseInProgress = getMorseChar(*str);
    7cd2:	82 2f       	mov	r24, r18
    7cd4:	0e 94 d8 3c 	call	0x79b0	; 0x79b0 <_Z12getMorseCharc>
    7cd8:	60 93 79 46 	sts	0x4679, r22	; 0x804679 <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress>
    7cdc:	70 93 7a 46 	sts	0x467A, r23	; 0x80467a <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress+0x1>
    7ce0:	80 93 7b 46 	sts	0x467B, r24	; 0x80467b <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress+0x2>
			charIndex = 0;
    7ce4:	10 92 78 46 	sts	0x4678, r1	; 0x804678 <_ZZ9makeMorsePcPbS0_10callerID_tE9charIndex>
			symbolIndex = 0;
    7ce8:	10 92 77 46 	sts	0x4677, r1	; 0x804677 <_ZZ9makeMorsePcPbS0_10callerID_tE11symbolIndex>
			elementIndex = 0;
    7cec:	10 92 76 46 	sts	0x4676, r1	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
			addedSpace = 0;
    7cf0:	10 92 75 46 	sts	0x4675, r1	; 0x804675 <_ZZ9makeMorsePcPbS0_10callerID_tE10addedSpace>
			completedString = false;
    7cf4:	10 92 57 40 	sts	0x4057, r1	; 0x804057 <_ZZ9makeMorsePcPbS0_10callerID_tE15completedString>
    7cf8:	d7 cf       	rjmp	.-82     	; 0x7ca8 <_Z9makeMorsePcPbS0_10callerID_t+0x4e>
		}

		carrierOn = OFF;
		return( OFF);
	}
	else if(str)
    7cfa:	e0 91 7c 46 	lds	r30, 0x467C	; 0x80467c <_ZZ9makeMorsePcPbS0_10callerID_tE3str>
    7cfe:	f0 91 7d 46 	lds	r31, 0x467D	; 0x80467d <_ZZ9makeMorsePcPbS0_10callerID_tE3str+0x1>
    7d02:	30 97       	sbiw	r30, 0x00	; 0
    7d04:	09 f4       	brne	.+2      	; 0x7d08 <_Z9makeMorsePcPbS0_10callerID_t+0xae>
    7d06:	aa c0       	rjmp	.+340    	; 0x7e5c <_Z9makeMorsePcPbS0_10callerID_t+0x202>
	{
		if(repeating)
    7d08:	61 15       	cp	r22, r1
    7d0a:	71 05       	cpc	r23, r1
    7d0c:	21 f0       	breq	.+8      	; 0x7d16 <_Z9makeMorsePcPbS0_10callerID_t+0xbc>
		{
			*repeating = repeat;
    7d0e:	80 91 58 40 	lds	r24, 0x4058	; 0x804058 <_ZZ9makeMorsePcPbS0_10callerID_tE6repeat>
    7d12:	db 01       	movw	r26, r22
    7d14:	8c 93       	st	X, r24
		}

		if(completedString)
    7d16:	80 91 57 40 	lds	r24, 0x4057	; 0x804057 <_ZZ9makeMorsePcPbS0_10callerID_tE15completedString>
    7d1a:	88 23       	and	r24, r24
    7d1c:	49 f0       	breq	.+18     	; 0x7d30 <_Z9makeMorsePcPbS0_10callerID_t+0xd6>
			if(finished)
			{
				*finished = true;
				holdKeyDown = false;
			}
			return( OFF);
    7d1e:	80 e0       	ldi	r24, 0x00	; 0
			*repeating = repeat;
		}

		if(completedString)
		{
			if(finished)
    7d20:	20 97       	sbiw	r28, 0x00	; 0
    7d22:	29 f2       	breq	.-118    	; 0x7cae <_Z9makeMorsePcPbS0_10callerID_t+0x54>
			{
				*finished = true;
    7d24:	81 e0       	ldi	r24, 0x01	; 1
    7d26:	88 83       	st	Y, r24
				holdKeyDown = false;
    7d28:	10 92 73 46 	sts	0x4673, r1	; 0x804673 <_ZZ9makeMorsePcPbS0_10callerID_tE11holdKeyDown>
			}
			return( OFF);
    7d2c:	80 e0       	ldi	r24, 0x00	; 0
    7d2e:	bf cf       	rjmp	.-130    	; 0x7cae <_Z9makeMorsePcPbS0_10callerID_t+0x54>
		}

		if(elementIndex)
    7d30:	80 91 76 46 	lds	r24, 0x4676	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
    7d34:	88 23       	and	r24, r24
    7d36:	71 f0       	breq	.+28     	; 0x7d54 <_Z9makeMorsePcPbS0_10callerID_t+0xfa>
		{
			elementIndex--;
    7d38:	81 50       	subi	r24, 0x01	; 1
    7d3a:	80 93 76 46 	sts	0x4676, r24	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    7d3e:	80 91 59 40 	lds	r24, 0x4059	; 0x804059 <_ZZ9makeMorsePcPbS0_10callerID_tE1c>
    7d42:	8c 33       	cpi	r24, 0x3C	; 60
    7d44:	09 f4       	brne	.+2      	; 0x7d48 <_Z9makeMorsePcPbS0_10callerID_t+0xee>
    7d46:	84 c0       	rjmp	.+264    	; 0x7e50 <_Z9makeMorsePcPbS0_10callerID_t+0x1f6>
		{
			holdKeyDown = true;
		}
		else
		{
			holdKeyDown = false;
    7d48:	10 92 73 46 	sts	0x4673, r1	; 0x804673 <_ZZ9makeMorsePcPbS0_10callerID_tE11holdKeyDown>
		}
	}

	if(finished)
    7d4c:	20 97       	sbiw	r28, 0x00	; 0
    7d4e:	09 f0       	breq	.+2      	; 0x7d52 <_Z9makeMorsePcPbS0_10callerID_t+0xf8>
    7d50:	87 c0       	rjmp	.+270    	; 0x7e60 <_Z9makeMorsePcPbS0_10callerID_t+0x206>
    7d52:	8d c0       	rjmp	.+282    	; 0x7e6e <_Z9makeMorsePcPbS0_10callerID_t+0x214>

		if(elementIndex)
		{
			elementIndex--;
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    7d54:	80 91 74 46 	lds	r24, 0x4674	; 0x804674 <_ZZ9makeMorsePcPbS0_10callerID_tE9carrierOn>
    7d58:	88 23       	and	r24, r24
    7d5a:	79 f0       	breq	.+30     	; 0x7d7a <_Z9makeMorsePcPbS0_10callerID_t+0x120>
    7d5c:	80 91 73 46 	lds	r24, 0x4673	; 0x804673 <_ZZ9makeMorsePcPbS0_10callerID_tE11holdKeyDown>
    7d60:	81 11       	cpse	r24, r1
    7d62:	0b c0       	rjmp	.+22     	; 0x7d7a <_Z9makeMorsePcPbS0_10callerID_t+0x120>
		{
			carrierOn = false;
    7d64:	10 92 74 46 	sts	0x4674, r1	; 0x804674 <_ZZ9makeMorsePcPbS0_10callerID_tE9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    7d68:	80 91 75 46 	lds	r24, 0x4675	; 0x804675 <_ZZ9makeMorsePcPbS0_10callerID_tE10addedSpace>
    7d6c:	88 23       	and	r24, r24
    7d6e:	39 f3       	breq	.-50     	; 0x7d3e <_Z9makeMorsePcPbS0_10callerID_t+0xe4>
			{
				elementIndex = addedSpace;
    7d70:	80 93 76 46 	sts	0x4676, r24	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
				addedSpace = 0;
    7d74:	10 92 75 46 	sts	0x4675, r1	; 0x804675 <_ZZ9makeMorsePcPbS0_10callerID_tE10addedSpace>
    7d78:	e2 cf       	rjmp	.-60     	; 0x7d3e <_Z9makeMorsePcPbS0_10callerID_t+0xe4>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    7d7a:	90 91 7a 46 	lds	r25, 0x467A	; 0x80467a <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress+0x1>
    7d7e:	80 91 77 46 	lds	r24, 0x4677	; 0x804677 <_ZZ9makeMorsePcPbS0_10callerID_tE11symbolIndex>
    7d82:	89 17       	cp	r24, r25
    7d84:	10 f1       	brcs	.+68     	; 0x7dca <_Z9makeMorsePcPbS0_10callerID_t+0x170>
			{
				c = (*(str + ++charIndex));
    7d86:	a0 91 78 46 	lds	r26, 0x4678	; 0x804678 <_ZZ9makeMorsePcPbS0_10callerID_tE9charIndex>
    7d8a:	af 5f       	subi	r26, 0xFF	; 255
    7d8c:	a0 93 78 46 	sts	0x4678, r26	; 0x804678 <_ZZ9makeMorsePcPbS0_10callerID_tE9charIndex>
    7d90:	ae 0f       	add	r26, r30
    7d92:	bf 2f       	mov	r27, r31
    7d94:	b1 1d       	adc	r27, r1
    7d96:	8c 91       	ld	r24, X
    7d98:	80 93 59 40 	sts	0x4059, r24	; 0x804059 <_ZZ9makeMorsePcPbS0_10callerID_tE1c>

				if(!c)  /* wrap to beginning of text */
    7d9c:	81 11       	cpse	r24, r1
    7d9e:	09 c0       	rjmp	.+18     	; 0x7db2 <_Z9makeMorsePcPbS0_10callerID_t+0x158>
				{
					if(repeat)
    7da0:	80 91 58 40 	lds	r24, 0x4058	; 0x804058 <_ZZ9makeMorsePcPbS0_10callerID_tE6repeat>
    7da4:	88 23       	and	r24, r24
    7da6:	91 f1       	breq	.+100    	; 0x7e0c <_Z9makeMorsePcPbS0_10callerID_t+0x1b2>
					{
						c = *str;
    7da8:	80 81       	ld	r24, Z
    7daa:	80 93 59 40 	sts	0x4059, r24	; 0x804059 <_ZZ9makeMorsePcPbS0_10callerID_tE1c>
						charIndex = 0;
    7dae:	10 92 78 46 	sts	0x4678, r1	; 0x804678 <_ZZ9makeMorsePcPbS0_10callerID_tE9charIndex>
						holdKeyDown = false;
						return( OFF );
					}
				}

				morseInProgress = getMorseChar(c);
    7db2:	80 91 59 40 	lds	r24, 0x4059	; 0x804059 <_ZZ9makeMorsePcPbS0_10callerID_tE1c>
    7db6:	0e 94 d8 3c 	call	0x79b0	; 0x79b0 <_Z12getMorseCharc>
    7dba:	60 93 79 46 	sts	0x4679, r22	; 0x804679 <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress>
    7dbe:	70 93 7a 46 	sts	0x467A, r23	; 0x80467a <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress+0x1>
    7dc2:	80 93 7b 46 	sts	0x467B, r24	; 0x80467b <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress+0x2>
				symbolIndex = 0;
    7dc6:	10 92 77 46 	sts	0x4677, r1	; 0x804677 <_ZZ9makeMorsePcPbS0_10callerID_tE11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    7dca:	80 91 79 46 	lds	r24, 0x4679	; 0x804679 <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress>
    7dce:	8d 3f       	cpi	r24, 0xFD	; 253
    7dd0:	78 f5       	brcc	.+94     	; 0x7e30 <_Z9makeMorsePcPbS0_10callerID_t+0x1d6>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    7dd2:	30 91 77 46 	lds	r19, 0x4677	; 0x804677 <_ZZ9makeMorsePcPbS0_10callerID_tE11symbolIndex>
    7dd6:	21 e0       	ldi	r18, 0x01	; 1
    7dd8:	23 0f       	add	r18, r19
    7dda:	20 93 77 46 	sts	0x4677, r18	; 0x804677 <_ZZ9makeMorsePcPbS0_10callerID_tE11symbolIndex>
    7dde:	90 e0       	ldi	r25, 0x00	; 0
    7de0:	02 c0       	rjmp	.+4      	; 0x7de6 <_Z9makeMorsePcPbS0_10callerID_t+0x18c>
    7de2:	95 95       	asr	r25
    7de4:	87 95       	ror	r24
    7de6:	3a 95       	dec	r19
    7de8:	e2 f7       	brpl	.-8      	; 0x7de2 <_Z9makeMorsePcPbS0_10callerID_t+0x188>

				if(isDah)
    7dea:	80 ff       	sbrs	r24, 0
    7dec:	1e c0       	rjmp	.+60     	; 0x7e2a <_Z9makeMorsePcPbS0_10callerID_t+0x1d0>
				{
					elementIndex = 2;
    7dee:	82 e0       	ldi	r24, 0x02	; 2
    7df0:	80 93 76 46 	sts	0x4676, r24	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
				else
				{
					elementIndex = 0;
				}

				carrierOn = true;
    7df4:	81 e0       	ldi	r24, 0x01	; 1
    7df6:	80 93 74 46 	sts	0x4674, r24	; 0x804674 <_ZZ9makeMorsePcPbS0_10callerID_tE9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    7dfa:	80 91 7a 46 	lds	r24, 0x467A	; 0x80467a <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress+0x1>
    7dfe:	28 17       	cp	r18, r24
    7e00:	08 f4       	brcc	.+2      	; 0x7e04 <_Z9makeMorsePcPbS0_10callerID_t+0x1aa>
    7e02:	9d cf       	rjmp	.-198    	; 0x7d3e <_Z9makeMorsePcPbS0_10callerID_t+0xe4>
				{
					addedSpace = 2;
    7e04:	82 e0       	ldi	r24, 0x02	; 2
    7e06:	80 93 75 46 	sts	0x4675, r24	; 0x804675 <_ZZ9makeMorsePcPbS0_10callerID_tE10addedSpace>
    7e0a:	99 cf       	rjmp	.-206    	; 0x7d3e <_Z9makeMorsePcPbS0_10callerID_t+0xe4>
						c = *str;
						charIndex = 0;
					}
					else
					{
						str = NULL;
    7e0c:	10 92 7c 46 	sts	0x467C, r1	; 0x80467c <_ZZ9makeMorsePcPbS0_10callerID_tE3str>
    7e10:	10 92 7d 46 	sts	0x467D, r1	; 0x80467d <_ZZ9makeMorsePcPbS0_10callerID_tE3str+0x1>
						carrierOn = OFF;
    7e14:	10 92 74 46 	sts	0x4674, r1	; 0x804674 <_ZZ9makeMorsePcPbS0_10callerID_tE9carrierOn>
						completedString = true;
    7e18:	91 e0       	ldi	r25, 0x01	; 1
    7e1a:	90 93 57 40 	sts	0x4057, r25	; 0x804057 <_ZZ9makeMorsePcPbS0_10callerID_tE15completedString>
						if(finished)
    7e1e:	20 97       	sbiw	r28, 0x00	; 0
    7e20:	09 f0       	breq	.+2      	; 0x7e24 <_Z9makeMorsePcPbS0_10callerID_t+0x1ca>
						{
							*finished = true;
    7e22:	98 83       	st	Y, r25
						}
						holdKeyDown = false;
    7e24:	10 92 73 46 	sts	0x4673, r1	; 0x804673 <_ZZ9makeMorsePcPbS0_10callerID_tE11holdKeyDown>
						return( OFF );
    7e28:	42 cf       	rjmp	.-380    	; 0x7cae <_Z9makeMorsePcPbS0_10callerID_t+0x54>
				{
					elementIndex = 2;
				}
				else
				{
					elementIndex = 0;
    7e2a:	10 92 76 46 	sts	0x4676, r1	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
    7e2e:	e2 cf       	rjmp	.-60     	; 0x7df4 <_Z9makeMorsePcPbS0_10callerID_t+0x19a>
					addedSpace = 2;
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    7e30:	80 91 7a 46 	lds	r24, 0x467A	; 0x80467a <_ZZ9makeMorsePcPbS0_10callerID_tE15morseInProgress+0x1>
				symbolIndex = 255;  /* ensure the next character gets read */
    7e34:	9f ef       	ldi	r25, 0xFF	; 255
    7e36:	90 93 77 46 	sts	0x4677, r25	; 0x804677 <_ZZ9makeMorsePcPbS0_10callerID_tE11symbolIndex>
				carrierOn = false;
    7e3a:	10 92 74 46 	sts	0x4674, r1	; 0x804674 <_ZZ9makeMorsePcPbS0_10callerID_tE9carrierOn>
				if(sym >= 4 )
    7e3e:	84 30       	cpi	r24, 0x04	; 4
    7e40:	20 f0       	brcs	.+8      	; 0x7e4a <_Z9makeMorsePcPbS0_10callerID_t+0x1f0>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    7e42:	84 50       	subi	r24, 0x04	; 4
    7e44:	80 93 76 46 	sts	0x4676, r24	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
    7e48:	7a cf       	rjmp	.-268    	; 0x7d3e <_Z9makeMorsePcPbS0_10callerID_t+0xe4>
				}
				else
				{
					elementIndex = 0;
    7e4a:	10 92 76 46 	sts	0x4676, r1	; 0x804676 <_ZZ9makeMorsePcPbS0_10callerID_tE12elementIndex>
    7e4e:	77 cf       	rjmp	.-274    	; 0x7d3e <_Z9makeMorsePcPbS0_10callerID_t+0xe4>
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
		{
			holdKeyDown = true;
    7e50:	81 e0       	ldi	r24, 0x01	; 1
    7e52:	80 93 73 46 	sts	0x4673, r24	; 0x804673 <_ZZ9makeMorsePcPbS0_10callerID_tE11holdKeyDown>
		{
			holdKeyDown = false;
		}
	}

	if(finished)
    7e56:	20 97       	sbiw	r28, 0x00	; 0
    7e58:	19 f4       	brne	.+6      	; 0x7e60 <_Z9makeMorsePcPbS0_10callerID_t+0x206>
    7e5a:	29 cf       	rjmp	.-430    	; 0x7cae <_Z9makeMorsePcPbS0_10callerID_t+0x54>
    7e5c:	20 97       	sbiw	r28, 0x00	; 0
    7e5e:	19 f0       	breq	.+6      	; 0x7e66 <_Z9makeMorsePcPbS0_10callerID_t+0x20c>
	{
		*finished = completedString;
    7e60:	80 91 57 40 	lds	r24, 0x4057	; 0x804057 <_ZZ9makeMorsePcPbS0_10callerID_tE15completedString>
    7e64:	88 83       	st	Y, r24
	}

	if(holdKeyDown)
    7e66:	80 91 73 46 	lds	r24, 0x4673	; 0x804673 <_ZZ9makeMorsePcPbS0_10callerID_tE11holdKeyDown>
    7e6a:	81 11       	cpse	r24, r1
    7e6c:	20 cf       	rjmp	.-448    	; 0x7cae <_Z9makeMorsePcPbS0_10callerID_t+0x54>
	{
		return(true);
	}
	else
	{
		return( carrierOn);
    7e6e:	80 91 74 46 	lds	r24, 0x4674	; 0x804674 <_ZZ9makeMorsePcPbS0_10callerID_tE9carrierOn>
    7e72:	1d cf       	rjmp	.-454    	; 0x7cae <_Z9makeMorsePcPbS0_10callerID_t+0x54>

00007e74 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    7e74:	cf 92       	push	r12
    7e76:	df 92       	push	r13
    7e78:	ef 92       	push	r14
    7e7a:	ff 92       	push	r15
    7e7c:	0f 93       	push	r16
    7e7e:	1f 93       	push	r17
    7e80:	cf 93       	push	r28
    7e82:	fc 01       	movw	r30, r24
    7e84:	6b 01       	movw	r12, r22
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
	{
		c = str[i];
    7e86:	80 81       	ld	r24, Z
		if(!c)
    7e88:	88 23       	and	r24, r24
    7e8a:	c1 f0       	breq	.+48     	; 0x7ebc <_Z26timeRequiredToSendStrAtWPMPcj+0x48>
    7e8c:	8f 01       	movw	r16, r30
    7e8e:	0f 5f       	subi	r16, 0xFF	; 255
    7e90:	1f 4f       	sbci	r17, 0xFF	; 255
    7e92:	7f 01       	movw	r14, r30
    7e94:	94 e1       	ldi	r25, 0x14	; 20
    7e96:	e9 0e       	add	r14, r25
    7e98:	f1 1c       	adc	r15, r1
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
	uint8_t elements = 0;
    7e9a:	c0 e0       	ldi	r28, 0x00	; 0
    7e9c:	09 c0       	rjmp	.+18     	; 0x7eb0 <_Z26timeRequiredToSendStrAtWPMPcj+0x3c>
		m = getMorseChar(c);
		if(m.pattern < INTER_WORD_SPACE)
		{
			elements += 3;
		}
		elements += m.lengthInElements;
    7e9e:	c8 0f       	add	r28, r24
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    7ea0:	0e 15       	cp	r16, r14
    7ea2:	1f 05       	cpc	r17, r15
    7ea4:	61 f0       	breq	.+24     	; 0x7ebe <_Z26timeRequiredToSendStrAtWPMPcj+0x4a>
	{
		c = str[i];
    7ea6:	f8 01       	movw	r30, r16
    7ea8:	81 91       	ld	r24, Z+
    7eaa:	8f 01       	movw	r16, r30
		if(!c)
    7eac:	88 23       	and	r24, r24
    7eae:	39 f0       	breq	.+14     	; 0x7ebe <_Z26timeRequiredToSendStrAtWPMPcj+0x4a>
		{
			break;
		}
		m = getMorseChar(c);
    7eb0:	0e 94 d8 3c 	call	0x79b0	; 0x79b0 <_Z12getMorseCharc>
		if(m.pattern < INTER_WORD_SPACE)
    7eb4:	6d 3f       	cpi	r22, 0xFD	; 253
    7eb6:	98 f7       	brcc	.-26     	; 0x7e9e <_Z26timeRequiredToSendStrAtWPMPcj+0x2a>
		{
			elements += 3;
    7eb8:	cd 5f       	subi	r28, 0xFD	; 253
    7eba:	f1 cf       	rjmp	.-30     	; 0x7e9e <_Z26timeRequiredToSendStrAtWPMPcj+0x2a>
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
	uint8_t elements = 0;
    7ebc:	c0 e0       	ldi	r28, 0x00	; 0
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    7ebe:	80 eb       	ldi	r24, 0xB0	; 176
    7ec0:	94 e0       	ldi	r25, 0x04	; 4
    7ec2:	b6 01       	movw	r22, r12
    7ec4:	0e 94 ea 4d 	call	0x9bd4	; 0x9bd4 <__udivmodhi4>
}
    7ec8:	c6 9f       	mul	r28, r22
    7eca:	c0 01       	movw	r24, r0
    7ecc:	c7 9f       	mul	r28, r23
    7ece:	90 0d       	add	r25, r0
    7ed0:	11 24       	eor	r1, r1
    7ed2:	cf 91       	pop	r28
    7ed4:	1f 91       	pop	r17
    7ed6:	0f 91       	pop	r16
    7ed8:	ff 90       	pop	r15
    7eda:	ef 90       	pop	r14
    7edc:	df 90       	pop	r13
    7ede:	cf 90       	pop	r12
    7ee0:	08 95       	ret

00007ee2 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    7ee2:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    7ee4:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    7ee6:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    7ee8:	40 83       	st	Z, r20
	ret                             // Return to caller
    7eea:	08 95       	ret

00007eec <nextFullSBTxBuffer>:
	{
		serialbus_tx_active = true;
		
		if(g_serialbus_usart_number == USART_0)
		{
			USART4_enable_tx();
    7eec:	80 91 80 46 	lds	r24, 0x4680	; 0x804680 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    7ef0:	28 2f       	mov	r18, r24
    7ef2:	30 e0       	ldi	r19, 0x00	; 0
    7ef4:	49 e2       	ldi	r20, 0x29	; 41
    7ef6:	84 9f       	mul	r24, r20
    7ef8:	f0 01       	movw	r30, r0
    7efa:	11 24       	eor	r1, r1
    7efc:	ef 5f       	subi	r30, 0xFF	; 255
    7efe:	f8 4b       	sbci	r31, 0xB8	; 184
    7f00:	90 81       	ld	r25, Z
    7f02:	91 11       	cpse	r25, r1
    7f04:	24 c0       	rjmp	.+72     	; 0x7f4e <nextFullSBTxBuffer+0x62>
    7f06:	91 e0       	ldi	r25, 0x01	; 1
    7f08:	98 0f       	add	r25, r24
    7f0a:	93 30       	cpi	r25, 0x03	; 3
    7f0c:	58 f5       	brcc	.+86     	; 0x7f64 <nextFullSBTxBuffer+0x78>
    7f0e:	29 2f       	mov	r18, r25
    7f10:	30 e0       	ldi	r19, 0x00	; 0
    7f12:	49 e2       	ldi	r20, 0x29	; 41
    7f14:	94 9f       	mul	r25, r20
    7f16:	f0 01       	movw	r30, r0
    7f18:	11 24       	eor	r1, r1
    7f1a:	ef 5f       	subi	r30, 0xFF	; 255
    7f1c:	f8 4b       	sbci	r31, 0xB8	; 184
    7f1e:	40 81       	ld	r20, Z
    7f20:	41 11       	cpse	r20, r1
    7f22:	14 c0       	rjmp	.+40     	; 0x7f4c <nextFullSBTxBuffer+0x60>
    7f24:	8e 5f       	subi	r24, 0xFE	; 254
    7f26:	83 30       	cpi	r24, 0x03	; 3
    7f28:	08 f0       	brcs	.+2      	; 0x7f2c <nextFullSBTxBuffer+0x40>
    7f2a:	80 e0       	ldi	r24, 0x00	; 0
    7f2c:	28 2f       	mov	r18, r24
    7f2e:	30 e0       	ldi	r19, 0x00	; 0
    7f30:	99 e2       	ldi	r25, 0x29	; 41
    7f32:	89 9f       	mul	r24, r25
    7f34:	f0 01       	movw	r30, r0
    7f36:	11 24       	eor	r1, r1
    7f38:	ef 5f       	subi	r30, 0xFF	; 255
    7f3a:	f8 4b       	sbci	r31, 0xB8	; 184
    7f3c:	90 81       	ld	r25, Z
    7f3e:	91 11       	cpse	r25, r1
    7f40:	06 c0       	rjmp	.+12     	; 0x7f4e <nextFullSBTxBuffer+0x62>
    7f42:	80 93 80 46 	sts	0x4680, r24	; 0x804680 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    7f46:	90 e0       	ldi	r25, 0x00	; 0
    7f48:	80 e0       	ldi	r24, 0x00	; 0
    7f4a:	08 95       	ret
    7f4c:	89 2f       	mov	r24, r25
    7f4e:	80 93 80 46 	sts	0x4680, r24	; 0x804680 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    7f52:	49 e2       	ldi	r20, 0x29	; 41
    7f54:	42 9f       	mul	r20, r18
    7f56:	c0 01       	movw	r24, r0
    7f58:	43 9f       	mul	r20, r19
    7f5a:	90 0d       	add	r25, r0
    7f5c:	11 24       	eor	r1, r1
    7f5e:	8f 5f       	subi	r24, 0xFF	; 255
    7f60:	98 4b       	sbci	r25, 0xB8	; 184
    7f62:	08 95       	ret
    7f64:	80 91 01 47 	lds	r24, 0x4701	; 0x804701 <_ZL9tx_buffer>
    7f68:	81 11       	cpse	r24, r1
    7f6a:	02 c0       	rjmp	.+4      	; 0x7f70 <nextFullSBTxBuffer+0x84>
    7f6c:	81 e0       	ldi	r24, 0x01	; 1
    7f6e:	de cf       	rjmp	.-68     	; 0x7f2c <nextFullSBTxBuffer+0x40>
    7f70:	80 e0       	ldi	r24, 0x00	; 0
    7f72:	30 e0       	ldi	r19, 0x00	; 0
    7f74:	20 e0       	ldi	r18, 0x00	; 0
    7f76:	eb cf       	rjmp	.-42     	; 0x7f4e <nextFullSBTxBuffer+0x62>

00007f78 <serialbus_end_tx>:
	return(success);
}

void serialbus_end_tx(void)
{
	if(serialbus_tx_active)
    7f78:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <_ZL19serialbus_tx_active>
    7f7c:	88 23       	and	r24, r24
    7f7e:	69 f0       	breq	.+26     	; 0x7f9a <serialbus_end_tx+0x22>
	{
		if(g_serialbus_usart_number == USART_4)
    7f80:	80 91 5b 40 	lds	r24, 0x405B	; 0x80405b <g_serialbus_usart_number>
    7f84:	90 91 5c 40 	lds	r25, 0x405C	; 0x80405c <g_serialbus_usart_number+0x1>
    7f88:	04 97       	sbiw	r24, 0x04	; 4
    7f8a:	41 f0       	breq	.+16     	; 0x7f9c <serialbus_end_tx+0x24>
		{
			USART4.CTRLA &= ~(1 << USART_DREIE_bp); /* Transmit Data Register Empty Interrupt Enable: disable */
		}
		else
		{
			USART1.CTRLA &= ~(1 << USART_DREIE_bp); /* Transmit Data Register Empty Interrupt Enable: disable */
    7f8c:	e0 e2       	ldi	r30, 0x20	; 32
    7f8e:	f8 e0       	ldi	r31, 0x08	; 8
    7f90:	85 81       	ldd	r24, Z+5	; 0x05
    7f92:	8f 7d       	andi	r24, 0xDF	; 223
    7f94:	85 83       	std	Z+5, r24	; 0x05
		}
		
		serialbus_tx_active = false;
    7f96:	10 92 7c 47 	sts	0x477C, r1	; 0x80477c <_ZL19serialbus_tx_active>
	}
}
    7f9a:	08 95       	ret
{
	if(serialbus_tx_active)
	{
		if(g_serialbus_usart_number == USART_4)
		{
			USART4.CTRLA &= ~(1 << USART_DREIE_bp); /* Transmit Data Register Empty Interrupt Enable: disable */
    7f9c:	e0 e8       	ldi	r30, 0x80	; 128
    7f9e:	f8 e0       	ldi	r31, 0x08	; 8
    7fa0:	85 81       	ldd	r24, Z+5	; 0x05
    7fa2:	8f 7d       	andi	r24, 0xDF	; 223
    7fa4:	85 83       	std	Z+5, r24	; 0x05
    7fa6:	f7 cf       	rjmp	.-18     	; 0x7f96 <serialbus_end_tx+0x1e>

00007fa8 <serialbus_init>:
	USART4_init(baud, false);
}


void serialbus_init(uint32_t baud, USART_Number_t usart)
{
    7fa8:	cf 92       	push	r12
    7faa:	df 92       	push	r13
    7fac:	ef 92       	push	r14
    7fae:	ff 92       	push	r15
    7fb0:	cf 93       	push	r28
    7fb2:	df 93       	push	r29
    7fb4:	6b 01       	movw	r12, r22
    7fb6:	7c 01       	movw	r14, r24
    7fb8:	ea 01       	movw	r28, r20
	memset((SerialbusRxBuffer*)rx_buffer, 0, sizeof(*(SerialbusRxBuffer*)rx_buffer));
    7fba:	e1 e8       	ldi	r30, 0x81	; 129
    7fbc:	f6 e4       	ldi	r31, 0x46	; 70
    7fbe:	80 e4       	ldi	r24, 0x40	; 64
    7fc0:	df 01       	movw	r26, r30
    7fc2:	1d 92       	st	X+, r1
    7fc4:	8a 95       	dec	r24
    7fc6:	e9 f7       	brne	.-6      	; 0x7fc2 <serialbus_init+0x1a>
	serialbus_end_tx();
    7fc8:	0e 94 bc 3f 	call	0x7f78	; 0x7f78 <serialbus_end_tx>

	for(int bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
    7fcc:	e1 e0       	ldi	r30, 0x01	; 1
    7fce:	f7 e4       	ldi	r31, 0x47	; 71
    7fd0:	10 82       	st	Z, r1
    7fd2:	11 a6       	std	Z+41, r1	; 0x29
    7fd4:	10 92 53 47 	sts	0x4753, r1	; 0x804753 <_ZL9tx_buffer+0x52>
	}

	if((usart != USART_DO_NOT_CHANGE) || (g_serialbus_usart_number == USART_NOT_SET))
    7fd8:	c6 30       	cpi	r28, 0x06	; 6
    7fda:	d1 05       	cpc	r29, r1
    7fdc:	e9 f0       	breq	.+58     	; 0x8018 <__RODATA_PM_OFFSET__+0x18>
	{
		if(usart == USART_4)
    7fde:	c4 30       	cpi	r28, 0x04	; 4
    7fe0:	d1 05       	cpc	r29, r1
    7fe2:	09 f1       	breq	.+66     	; 0x8026 <__RODATA_PM_OFFSET__+0x26>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7fe4:	41 98       	cbi	0x08, 1	; 8
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    7fe6:	e1 e5       	ldi	r30, 0x51	; 81
    7fe8:	f4 e0       	ldi	r31, 0x04	; 4
    7fea:	80 81       	ld	r24, Z
    7fec:	87 7f       	andi	r24, 0xF7	; 247
    7fee:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    7ff0:	40 9a       	sbi	0x08, 0	; 8
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
    7ff2:	48 9a       	sbi	0x09, 0	; 9

	// Set Tx pin direction to output
	PC0_set_dir(PORT_DIR_OUT);
	PC0_set_level(HIGH);

	USART1_init(baud, false);
    7ff4:	40 e0       	ldi	r20, 0x00	; 0
    7ff6:	c7 01       	movw	r24, r14
    7ff8:	b6 01       	movw	r22, r12
    7ffa:	0e 94 0b 4b 	call	0x9616	; 0x9616 <USART1_init>
		else
		{
			USART1_initialization(baud);
		}
	
		g_serialbus_usart_number = usart;
    7ffe:	c0 93 5b 40 	sts	0x405B, r28	; 0x80405b <g_serialbus_usart_number>
    8002:	d0 93 5c 40 	sts	0x405C, r29	; 0x80405c <g_serialbus_usart_number+0x1>
	}

	g_serialbus_disabled = false;
    8006:	10 92 5a 40 	sts	0x405A, r1	; 0x80405a <_ZL20g_serialbus_disabled>
}
    800a:	df 91       	pop	r29
    800c:	cf 91       	pop	r28
    800e:	ff 90       	pop	r15
    8010:	ef 90       	pop	r14
    8012:	df 90       	pop	r13
    8014:	cf 90       	pop	r12
    8016:	08 95       	ret
	for(int bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}

	if((usart != USART_DO_NOT_CHANGE) || (g_serialbus_usart_number == USART_NOT_SET))
    8018:	80 91 5b 40 	lds	r24, 0x405B	; 0x80405b <g_serialbus_usart_number>
    801c:	90 91 5c 40 	lds	r25, 0x405C	; 0x80405c <g_serialbus_usart_number+0x1>
    8020:	07 97       	sbiw	r24, 0x07	; 7
    8022:	89 f7       	brne	.-30     	; 0x8006 <__RODATA_PM_OFFSET__+0x6>
    8024:	df cf       	rjmp	.-66     	; 0x7fe4 <serialbus_init+0x3c>
 */
static inline void PORTE_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTE.DIR &= ~(1 << pin);
    8026:	81 98       	cbi	0x10, 1	; 16
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTE + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    8028:	e1 e9       	ldi	r30, 0x91	; 145
    802a:	f4 e0       	ldi	r31, 0x04	; 4
    802c:	80 81       	ld	r24, Z
    802e:	87 7f       	andi	r24, 0xF7	; 247
    8030:	80 83       	st	Z, r24
	switch (dir) {
	case PORT_DIR_IN:
		VPORTE.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTE.DIR |= (1 << pin);
    8032:	80 9a       	sbi	0x10, 0	; 16
 *                  false = Pin level set to "low" state
 */
static inline void PORTE_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTE.OUT |= (1 << pin);
    8034:	88 9a       	sbi	0x11, 0	; 17

	// Set Tx pin direction to output
	PE0_set_dir(PORT_DIR_OUT);
	PE0_set_level(HIGH);

	USART4_init(baud, false);
    8036:	40 e0       	ldi	r20, 0x00	; 0
    8038:	c7 01       	movw	r24, r14
    803a:	b6 01       	movw	r22, r12
    803c:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <USART4_init>
    8040:	de cf       	rjmp	.-68     	; 0x7ffe <serialbus_init+0x56>

00008042 <si5351_shutdown_comms>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    8042:	0e 94 eb 35 	call	0x6bd6	; 0x6bd6 <I2C_1_Shutdown>
    8046:	08 95       	ret

00008048 <si5351_start_comms>:
    8048:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <I2C_1_Init>
    804c:	08 95       	ret

0000804e <_Z13reduce_by_gcdPmS_>:
    804e:	4f 92       	push	r4
    8050:	5f 92       	push	r5
    8052:	6f 92       	push	r6
    8054:	7f 92       	push	r7
    8056:	8f 92       	push	r8
    8058:	9f 92       	push	r9
    805a:	af 92       	push	r10
    805c:	bf 92       	push	r11
    805e:	cf 92       	push	r12
    8060:	df 92       	push	r13
    8062:	ef 92       	push	r14
    8064:	ff 92       	push	r15
    8066:	0f 93       	push	r16
    8068:	1f 93       	push	r17
    806a:	cf 93       	push	r28
    806c:	df 93       	push	r29
    806e:	ec 01       	movw	r28, r24
    8070:	8b 01       	movw	r16, r22
    8072:	48 80       	ld	r4, Y
    8074:	59 80       	ldd	r5, Y+1	; 0x01
    8076:	6a 80       	ldd	r6, Y+2	; 0x02
    8078:	7b 80       	ldd	r7, Y+3	; 0x03
    807a:	41 14       	cp	r4, r1
    807c:	51 04       	cpc	r5, r1
    807e:	61 04       	cpc	r6, r1
    8080:	71 04       	cpc	r7, r1
    8082:	09 f4       	brne	.+2      	; 0x8086 <_Z13reduce_by_gcdPmS_+0x38>
    8084:	47 c0       	rjmp	.+142    	; 0x8114 <_Z13reduce_by_gcdPmS_+0xc6>
    8086:	fb 01       	movw	r30, r22
    8088:	80 80       	ld	r8, Z
    808a:	91 80       	ldd	r9, Z+1	; 0x01
    808c:	a2 80       	ldd	r10, Z+2	; 0x02
    808e:	b3 80       	ldd	r11, Z+3	; 0x03
    8090:	81 14       	cp	r8, r1
    8092:	91 04       	cpc	r9, r1
    8094:	a1 04       	cpc	r10, r1
    8096:	b1 04       	cpc	r11, r1
    8098:	e9 f1       	breq	.+122    	; 0x8114 <_Z13reduce_by_gcdPmS_+0xc6>
    809a:	c3 01       	movw	r24, r6
    809c:	b2 01       	movw	r22, r4
    809e:	a5 01       	movw	r20, r10
    80a0:	94 01       	movw	r18, r8
    80a2:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    80a6:	6b 01       	movw	r12, r22
    80a8:	7c 01       	movw	r14, r24
    80aa:	c1 14       	cp	r12, r1
    80ac:	d1 04       	cpc	r13, r1
    80ae:	e1 04       	cpc	r14, r1
    80b0:	f1 04       	cpc	r15, r1
    80b2:	29 f4       	brne	.+10     	; 0x80be <_Z13reduce_by_gcdPmS_+0x70>
    80b4:	75 01       	movw	r14, r10
    80b6:	64 01       	movw	r12, r8
    80b8:	0f c0       	rjmp	.+30     	; 0x80d8 <_Z13reduce_by_gcdPmS_+0x8a>
    80ba:	6b 01       	movw	r12, r22
    80bc:	7c 01       	movw	r14, r24
    80be:	c5 01       	movw	r24, r10
    80c0:	b4 01       	movw	r22, r8
    80c2:	a7 01       	movw	r20, r14
    80c4:	96 01       	movw	r18, r12
    80c6:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    80ca:	46 01       	movw	r8, r12
    80cc:	57 01       	movw	r10, r14
    80ce:	61 15       	cp	r22, r1
    80d0:	71 05       	cpc	r23, r1
    80d2:	81 05       	cpc	r24, r1
    80d4:	91 05       	cpc	r25, r1
    80d6:	89 f7       	brne	.-30     	; 0x80ba <_Z13reduce_by_gcdPmS_+0x6c>
    80d8:	f2 e0       	ldi	r31, 0x02	; 2
    80da:	cf 16       	cp	r12, r31
    80dc:	d1 04       	cpc	r13, r1
    80de:	e1 04       	cpc	r14, r1
    80e0:	f1 04       	cpc	r15, r1
    80e2:	c0 f0       	brcs	.+48     	; 0x8114 <_Z13reduce_by_gcdPmS_+0xc6>
    80e4:	c3 01       	movw	r24, r6
    80e6:	b2 01       	movw	r22, r4
    80e8:	a7 01       	movw	r20, r14
    80ea:	96 01       	movw	r18, r12
    80ec:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    80f0:	28 83       	st	Y, r18
    80f2:	39 83       	std	Y+1, r19	; 0x01
    80f4:	4a 83       	std	Y+2, r20	; 0x02
    80f6:	5b 83       	std	Y+3, r21	; 0x03
    80f8:	f8 01       	movw	r30, r16
    80fa:	60 81       	ld	r22, Z
    80fc:	71 81       	ldd	r23, Z+1	; 0x01
    80fe:	82 81       	ldd	r24, Z+2	; 0x02
    8100:	93 81       	ldd	r25, Z+3	; 0x03
    8102:	a7 01       	movw	r20, r14
    8104:	96 01       	movw	r18, r12
    8106:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    810a:	f8 01       	movw	r30, r16
    810c:	20 83       	st	Z, r18
    810e:	31 83       	std	Z+1, r19	; 0x01
    8110:	42 83       	std	Z+2, r20	; 0x02
    8112:	53 83       	std	Z+3, r21	; 0x03
    8114:	df 91       	pop	r29
    8116:	cf 91       	pop	r28
    8118:	1f 91       	pop	r17
    811a:	0f 91       	pop	r16
    811c:	ff 90       	pop	r15
    811e:	ef 90       	pop	r14
    8120:	df 90       	pop	r13
    8122:	cf 90       	pop	r12
    8124:	bf 90       	pop	r11
    8126:	af 90       	pop	r10
    8128:	9f 90       	pop	r9
    812a:	8f 90       	pop	r8
    812c:	7f 90       	pop	r7
    812e:	6f 90       	pop	r6
    8130:	5f 90       	pop	r5
    8132:	4f 90       	pop	r4
    8134:	08 95       	ret

00008136 <_Z8pll_calcmP13u_si5351_regs>:
    8136:	8f 92       	push	r8
    8138:	9f 92       	push	r9
    813a:	af 92       	push	r10
    813c:	bf 92       	push	r11
    813e:	cf 92       	push	r12
    8140:	df 92       	push	r13
    8142:	ef 92       	push	r14
    8144:	ff 92       	push	r15
    8146:	0f 93       	push	r16
    8148:	1f 93       	push	r17
    814a:	cf 93       	push	r28
    814c:	df 93       	push	r29
    814e:	cd b7       	in	r28, 0x3d	; 61
    8150:	de b7       	in	r29, 0x3e	; 62
    8152:	28 97       	sbiw	r28, 0x08	; 8
    8154:	cd bf       	out	0x3d, r28	; 61
    8156:	de bf       	out	0x3e, r29	; 62
    8158:	8a 01       	movw	r16, r20
    815a:	80 90 5f 40 	lds	r8, 0x405F	; 0x80405f <_ZL9xtal_freq>
    815e:	90 90 60 40 	lds	r9, 0x4060	; 0x804060 <_ZL9xtal_freq+0x1>
    8162:	a0 90 61 40 	lds	r10, 0x4061	; 0x804061 <_ZL9xtal_freq+0x2>
    8166:	b0 90 62 40 	lds	r11, 0x4062	; 0x804062 <_ZL9xtal_freq+0x3>
    816a:	a5 01       	movw	r20, r10
    816c:	94 01       	movw	r18, r8
    816e:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    8172:	69 01       	movw	r12, r18
    8174:	7a 01       	movw	r14, r20
    8176:	69 83       	std	Y+1, r22	; 0x01
    8178:	7a 83       	std	Y+2, r23	; 0x02
    817a:	8b 83       	std	Y+3, r24	; 0x03
    817c:	9c 83       	std	Y+4, r25	; 0x04
    817e:	8d 82       	std	Y+5, r8	; 0x05
    8180:	9e 82       	std	Y+6, r9	; 0x06
    8182:	af 82       	std	Y+7, r10	; 0x07
    8184:	b8 86       	std	Y+8, r11	; 0x08
    8186:	be 01       	movw	r22, r28
    8188:	6b 5f       	subi	r22, 0xFB	; 251
    818a:	7f 4f       	sbci	r23, 0xFF	; 255
    818c:	ce 01       	movw	r24, r28
    818e:	01 96       	adiw	r24, 0x01	; 1
    8190:	0e 94 27 40 	call	0x804e	; 0x804e <_Z13reduce_by_gcdPmS_>
    8194:	69 81       	ldd	r22, Y+1	; 0x01
    8196:	7a 81       	ldd	r23, Y+2	; 0x02
    8198:	8b 81       	ldd	r24, Y+3	; 0x03
    819a:	9c 81       	ldd	r25, Y+4	; 0x04
    819c:	66 0f       	add	r22, r22
    819e:	77 1f       	adc	r23, r23
    81a0:	88 1f       	adc	r24, r24
    81a2:	99 1f       	adc	r25, r25
    81a4:	66 0f       	add	r22, r22
    81a6:	77 1f       	adc	r23, r23
    81a8:	88 1f       	adc	r24, r24
    81aa:	99 1f       	adc	r25, r25
    81ac:	66 0f       	add	r22, r22
    81ae:	77 1f       	adc	r23, r23
    81b0:	88 1f       	adc	r24, r24
    81b2:	99 1f       	adc	r25, r25
    81b4:	66 0f       	add	r22, r22
    81b6:	77 1f       	adc	r23, r23
    81b8:	88 1f       	adc	r24, r24
    81ba:	99 1f       	adc	r25, r25
    81bc:	66 0f       	add	r22, r22
    81be:	77 1f       	adc	r23, r23
    81c0:	88 1f       	adc	r24, r24
    81c2:	99 1f       	adc	r25, r25
    81c4:	66 0f       	add	r22, r22
    81c6:	77 1f       	adc	r23, r23
    81c8:	88 1f       	adc	r24, r24
    81ca:	99 1f       	adc	r25, r25
    81cc:	66 0f       	add	r22, r22
    81ce:	77 1f       	adc	r23, r23
    81d0:	88 1f       	adc	r24, r24
    81d2:	99 1f       	adc	r25, r25
    81d4:	8d 80       	ldd	r8, Y+5	; 0x05
    81d6:	9e 80       	ldd	r9, Y+6	; 0x06
    81d8:	af 80       	ldd	r10, Y+7	; 0x07
    81da:	b8 84       	ldd	r11, Y+8	; 0x08
    81dc:	a5 01       	movw	r20, r10
    81de:	94 01       	movw	r18, r8
    81e0:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    81e4:	32 50       	subi	r19, 0x02	; 2
    81e6:	41 09       	sbc	r20, r1
    81e8:	51 09       	sbc	r21, r1
    81ea:	cc 0c       	add	r12, r12
    81ec:	dd 1c       	adc	r13, r13
    81ee:	ee 1c       	adc	r14, r14
    81f0:	ff 1c       	adc	r15, r15
    81f2:	cc 0c       	add	r12, r12
    81f4:	dd 1c       	adc	r13, r13
    81f6:	ee 1c       	adc	r14, r14
    81f8:	ff 1c       	adc	r15, r15
    81fa:	cc 0c       	add	r12, r12
    81fc:	dd 1c       	adc	r13, r13
    81fe:	ee 1c       	adc	r14, r14
    8200:	ff 1c       	adc	r15, r15
    8202:	cc 0c       	add	r12, r12
    8204:	dd 1c       	adc	r13, r13
    8206:	ee 1c       	adc	r14, r14
    8208:	ff 1c       	adc	r15, r15
    820a:	cc 0c       	add	r12, r12
    820c:	dd 1c       	adc	r13, r13
    820e:	ee 1c       	adc	r14, r14
    8210:	ff 1c       	adc	r15, r15
    8212:	cc 0c       	add	r12, r12
    8214:	dd 1c       	adc	r13, r13
    8216:	ee 1c       	adc	r14, r14
    8218:	ff 1c       	adc	r15, r15
    821a:	cc 0c       	add	r12, r12
    821c:	dd 1c       	adc	r13, r13
    821e:	ee 1c       	adc	r14, r14
    8220:	ff 1c       	adc	r15, r15
    8222:	c2 0e       	add	r12, r18
    8224:	d3 1e       	adc	r13, r19
    8226:	e4 1e       	adc	r14, r20
    8228:	f5 1e       	adc	r15, r21
    822a:	f8 01       	movw	r30, r16
    822c:	c0 82       	st	Z, r12
    822e:	d1 82       	std	Z+1, r13	; 0x01
    8230:	e2 82       	std	Z+2, r14	; 0x02
    8232:	f3 82       	std	Z+3, r15	; 0x03
    8234:	64 83       	std	Z+4, r22	; 0x04
    8236:	75 83       	std	Z+5, r23	; 0x05
    8238:	86 83       	std	Z+6, r24	; 0x06
    823a:	97 83       	std	Z+7, r25	; 0x07
    823c:	80 86       	std	Z+8, r8	; 0x08
    823e:	91 86       	std	Z+9, r9	; 0x09
    8240:	a2 86       	std	Z+10, r10	; 0x0a
    8242:	b3 86       	std	Z+11, r11	; 0x0b
    8244:	80 e0       	ldi	r24, 0x00	; 0
    8246:	28 96       	adiw	r28, 0x08	; 8
    8248:	cd bf       	out	0x3d, r28	; 61
    824a:	de bf       	out	0x3e, r29	; 62
    824c:	df 91       	pop	r29
    824e:	cf 91       	pop	r28
    8250:	1f 91       	pop	r17
    8252:	0f 91       	pop	r16
    8254:	ff 90       	pop	r15
    8256:	ef 90       	pop	r14
    8258:	df 90       	pop	r13
    825a:	cf 90       	pop	r12
    825c:	bf 90       	pop	r11
    825e:	af 90       	pop	r10
    8260:	9f 90       	pop	r9
    8262:	8f 90       	pop	r8
    8264:	08 95       	ret

00008266 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    8266:	3f 92       	push	r3
    8268:	4f 92       	push	r4
    826a:	5f 92       	push	r5
    826c:	6f 92       	push	r6
    826e:	7f 92       	push	r7
    8270:	8f 92       	push	r8
    8272:	9f 92       	push	r9
    8274:	af 92       	push	r10
    8276:	bf 92       	push	r11
    8278:	cf 92       	push	r12
    827a:	df 92       	push	r13
    827c:	ef 92       	push	r14
    827e:	ff 92       	push	r15
    8280:	0f 93       	push	r16
    8282:	1f 93       	push	r17
    8284:	cf 93       	push	r28
    8286:	df 93       	push	r29
    8288:	4b 01       	movw	r8, r22
    828a:	5c 01       	movw	r10, r24
    828c:	ea 01       	movw	r28, r20
    828e:	81 e0       	ldi	r24, 0x01	; 1
    8290:	f9 01       	movw	r30, r18
    8292:	80 83       	st	Z, r24
    8294:	f0 e8       	ldi	r31, 0x80	; 128
    8296:	8f 16       	cp	r8, r31
    8298:	f1 ed       	ldi	r31, 0xD1	; 209
    829a:	9f 06       	cpc	r9, r31
    829c:	f0 ef       	ldi	r31, 0xF0	; 240
    829e:	af 06       	cpc	r10, r31
    82a0:	f8 e0       	ldi	r31, 0x08	; 8
    82a2:	bf 06       	cpc	r11, r31
    82a4:	08 f0       	brcs	.+2      	; 0x82a8 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x42>
    82a6:	87 c0       	rjmp	.+270    	; 0x83b6 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x150>
    82a8:	68 94       	set
    82aa:	33 24       	eor	r3, r3
    82ac:	31 f8       	bld	r3, 1
    82ae:	60 e0       	ldi	r22, 0x00	; 0
    82b0:	79 ee       	ldi	r23, 0xE9	; 233
    82b2:	84 ea       	ldi	r24, 0xA4	; 164
    82b4:	95 e3       	ldi	r25, 0x35	; 53
    82b6:	0f 2e       	mov	r0, r31
    82b8:	41 2c       	mov	r4, r1
    82ba:	f9 ee       	ldi	r31, 0xE9	; 233
    82bc:	5f 2e       	mov	r5, r31
    82be:	f4 ea       	ldi	r31, 0xA4	; 164
    82c0:	6f 2e       	mov	r6, r31
    82c2:	f5 e3       	ldi	r31, 0x35	; 53
    82c4:	7f 2e       	mov	r7, r31
    82c6:	f0 2d       	mov	r31, r0
    82c8:	a5 01       	movw	r20, r10
    82ca:	94 01       	movw	r18, r8
    82cc:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    82d0:	69 01       	movw	r12, r18
    82d2:	7a 01       	movw	r14, r20
    82d4:	44 e0       	ldi	r20, 0x04	; 4
    82d6:	c4 16       	cp	r12, r20
    82d8:	d1 04       	cpc	r13, r1
    82da:	e1 04       	cpc	r14, r1
    82dc:	f1 04       	cpc	r15, r1
    82de:	08 f0       	brcs	.+2      	; 0x82e2 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x7c>
    82e0:	79 c0       	rjmp	.+242    	; 0x83d4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x16e>
    82e2:	a3 2d       	mov	r26, r3
    82e4:	b0 e0       	ldi	r27, 0x00	; 0
    82e6:	a5 01       	movw	r20, r10
    82e8:	94 01       	movw	r18, r8
    82ea:	0e 94 72 4e 	call	0x9ce4	; 0x9ce4 <__muluhisi3>
    82ee:	a3 01       	movw	r20, r6
    82f0:	92 01       	movw	r18, r4
    82f2:	26 1b       	sub	r18, r22
    82f4:	37 0b       	sbc	r19, r23
    82f6:	48 0b       	sbc	r20, r24
    82f8:	59 0b       	sbc	r21, r25
    82fa:	ca 01       	movw	r24, r20
    82fc:	b9 01       	movw	r22, r18
    82fe:	33 94       	inc	r3
    8300:	33 94       	inc	r3
    8302:	61 15       	cp	r22, r1
    8304:	36 e4       	ldi	r19, 0x46	; 70
    8306:	73 07       	cpc	r23, r19
    8308:	33 ec       	ldi	r19, 0xC3	; 195
    830a:	83 07       	cpc	r24, r19
    830c:	33 e2       	ldi	r19, 0x23	; 35
    830e:	93 07       	cpc	r25, r19
    8310:	d8 f6       	brcc	.-74     	; 0x82c8 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x62>
    8312:	60 e0       	ldi	r22, 0x00	; 0
    8314:	70 e0       	ldi	r23, 0x00	; 0
    8316:	cb 01       	movw	r24, r22
    8318:	c1 2c       	mov	r12, r1
    831a:	d1 2c       	mov	r13, r1
    831c:	76 01       	movw	r14, r12
    831e:	21 e0       	ldi	r18, 0x01	; 1
    8320:	54 e0       	ldi	r21, 0x04	; 4
    8322:	c5 16       	cp	r12, r21
    8324:	d1 04       	cpc	r13, r1
    8326:	e1 04       	cpc	r14, r1
    8328:	f1 04       	cpc	r15, r1
    832a:	09 f0       	breq	.+2      	; 0x832e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0xc8>
    832c:	20 e0       	ldi	r18, 0x00	; 0
    832e:	f8 01       	movw	r30, r16
    8330:	20 83       	st	Z, r18
    8332:	cc 0c       	add	r12, r12
    8334:	dd 1c       	adc	r13, r13
    8336:	ee 1c       	adc	r14, r14
    8338:	ff 1c       	adc	r15, r15
    833a:	cc 0c       	add	r12, r12
    833c:	dd 1c       	adc	r13, r13
    833e:	ee 1c       	adc	r14, r14
    8340:	ff 1c       	adc	r15, r15
    8342:	cc 0c       	add	r12, r12
    8344:	dd 1c       	adc	r13, r13
    8346:	ee 1c       	adc	r14, r14
    8348:	ff 1c       	adc	r15, r15
    834a:	cc 0c       	add	r12, r12
    834c:	dd 1c       	adc	r13, r13
    834e:	ee 1c       	adc	r14, r14
    8350:	ff 1c       	adc	r15, r15
    8352:	cc 0c       	add	r12, r12
    8354:	dd 1c       	adc	r13, r13
    8356:	ee 1c       	adc	r14, r14
    8358:	ff 1c       	adc	r15, r15
    835a:	cc 0c       	add	r12, r12
    835c:	dd 1c       	adc	r13, r13
    835e:	ee 1c       	adc	r14, r14
    8360:	ff 1c       	adc	r15, r15
    8362:	cc 0c       	add	r12, r12
    8364:	dd 1c       	adc	r13, r13
    8366:	ee 1c       	adc	r14, r14
    8368:	ff 1c       	adc	r15, r15
    836a:	f2 e0       	ldi	r31, 0x02	; 2
    836c:	df 1a       	sub	r13, r31
    836e:	e1 08       	sbc	r14, r1
    8370:	f1 08       	sbc	r15, r1
    8372:	c8 82       	st	Y, r12
    8374:	d9 82       	std	Y+1, r13	; 0x01
    8376:	ea 82       	std	Y+2, r14	; 0x02
    8378:	fb 82       	std	Y+3, r15	; 0x03
    837a:	1c 82       	std	Y+4, r1	; 0x04
    837c:	1d 82       	std	Y+5, r1	; 0x05
    837e:	1e 82       	std	Y+6, r1	; 0x06
    8380:	1f 82       	std	Y+7, r1	; 0x07
    8382:	01 e0       	ldi	r16, 0x01	; 1
    8384:	10 e0       	ldi	r17, 0x00	; 0
    8386:	20 e0       	ldi	r18, 0x00	; 0
    8388:	30 e0       	ldi	r19, 0x00	; 0
    838a:	08 87       	std	Y+8, r16	; 0x08
    838c:	19 87       	std	Y+9, r17	; 0x09
    838e:	2a 87       	std	Y+10, r18	; 0x0a
    8390:	3b 87       	std	Y+11, r19	; 0x0b
    8392:	df 91       	pop	r29
    8394:	cf 91       	pop	r28
    8396:	1f 91       	pop	r17
    8398:	0f 91       	pop	r16
    839a:	ff 90       	pop	r15
    839c:	ef 90       	pop	r14
    839e:	df 90       	pop	r13
    83a0:	cf 90       	pop	r12
    83a2:	bf 90       	pop	r11
    83a4:	af 90       	pop	r10
    83a6:	9f 90       	pop	r9
    83a8:	8f 90       	pop	r8
    83aa:	7f 90       	pop	r7
    83ac:	6f 90       	pop	r6
    83ae:	5f 90       	pop	r5
    83b0:	4f 90       	pop	r4
    83b2:	3f 90       	pop	r3
    83b4:	08 95       	ret
    83b6:	c5 01       	movw	r24, r10
    83b8:	66 0f       	add	r22, r22
    83ba:	77 1f       	adc	r23, r23
    83bc:	88 1f       	adc	r24, r24
    83be:	99 1f       	adc	r25, r25
    83c0:	66 0f       	add	r22, r22
    83c2:	77 1f       	adc	r23, r23
    83c4:	88 1f       	adc	r24, r24
    83c6:	99 1f       	adc	r25, r25
    83c8:	c1 2c       	mov	r12, r1
    83ca:	d1 2c       	mov	r13, r1
    83cc:	76 01       	movw	r14, r12
    83ce:	68 94       	set
    83d0:	c2 f8       	bld	r12, 2
    83d2:	a5 cf       	rjmp	.-182    	; 0x831e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0xb8>
    83d4:	a5 01       	movw	r20, r10
    83d6:	94 01       	movw	r18, r8
    83d8:	c7 01       	movw	r24, r14
    83da:	b6 01       	movw	r22, r12
    83dc:	0e 94 da 4d 	call	0x9bb4	; 0x9bb4 <__mulsi3>
    83e0:	9e cf       	rjmp	.-196    	; 0x831e <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0xb8>

000083e2 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
    83e2:	2f 92       	push	r2
    83e4:	3f 92       	push	r3
    83e6:	4f 92       	push	r4
    83e8:	5f 92       	push	r5
    83ea:	6f 92       	push	r6
    83ec:	7f 92       	push	r7
    83ee:	8f 92       	push	r8
    83f0:	9f 92       	push	r9
    83f2:	af 92       	push	r10
    83f4:	bf 92       	push	r11
    83f6:	cf 92       	push	r12
    83f8:	df 92       	push	r13
    83fa:	ef 92       	push	r14
    83fc:	ff 92       	push	r15
    83fe:	0f 93       	push	r16
    8400:	1f 93       	push	r17
    8402:	cf 93       	push	r28
    8404:	df 93       	push	r29
    8406:	cd b7       	in	r28, 0x3d	; 61
    8408:	de b7       	in	r29, 0x3e	; 62
    840a:	62 97       	sbiw	r28, 0x12	; 18
    840c:	cd bf       	out	0x3d, r28	; 61
    840e:	de bf       	out	0x3e, r29	; 62
    8410:	4b 01       	movw	r8, r22
    8412:	5c 01       	movw	r10, r24
    8414:	1a 01       	movw	r2, r20
    8416:	2d 87       	std	Y+13, r18	; 0x0d
    8418:	3e 87       	std	Y+14, r19	; 0x0e
    841a:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <_ZL8freqVCOB>
    841e:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <_ZL8freqVCOB+0x1>
    8422:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <_ZL8freqVCOB+0x2>
    8426:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <_ZL8freqVCOB+0x3>
    842a:	89 87       	std	Y+9, r24	; 0x09
    842c:	9a 87       	std	Y+10, r25	; 0x0a
    842e:	ab 87       	std	Y+11, r26	; 0x0b
    8430:	bc 87       	std	Y+12, r27	; 0x0c
    8432:	bc 01       	movw	r22, r24
    8434:	cd 01       	movw	r24, r26
    8436:	a5 01       	movw	r20, r10
    8438:	94 01       	movw	r18, r8
    843a:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    843e:	69 01       	movw	r12, r18
    8440:	7a 01       	movw	r14, r20
    8442:	cf 86       	std	Y+15, r12	; 0x0f
    8444:	d8 8a       	std	Y+16, r13	; 0x10
    8446:	e9 8a       	std	Y+17, r14	; 0x11
    8448:	fa 8a       	std	Y+18, r15	; 0x12
    844a:	69 83       	std	Y+1, r22	; 0x01
    844c:	7a 83       	std	Y+2, r23	; 0x02
    844e:	8b 83       	std	Y+3, r24	; 0x03
    8450:	9c 83       	std	Y+4, r25	; 0x04
    8452:	8d 82       	std	Y+5, r8	; 0x05
    8454:	9e 82       	std	Y+6, r9	; 0x06
    8456:	af 82       	std	Y+7, r10	; 0x07
    8458:	b8 86       	std	Y+8, r11	; 0x08
    845a:	be 01       	movw	r22, r28
    845c:	6b 5f       	subi	r22, 0xFB	; 251
    845e:	7f 4f       	sbci	r23, 0xFF	; 255
    8460:	ce 01       	movw	r24, r28
    8462:	01 96       	adiw	r24, 0x01	; 1
    8464:	0e 94 27 40 	call	0x804e	; 0x804e <_Z13reduce_by_gcdPmS_>
    8468:	4d 80       	ldd	r4, Y+5	; 0x05
    846a:	5e 80       	ldd	r5, Y+6	; 0x06
    846c:	6f 80       	ldd	r6, Y+7	; 0x07
    846e:	78 84       	ldd	r7, Y+8	; 0x08
    8470:	89 80       	ldd	r8, Y+1	; 0x01
    8472:	9a 80       	ldd	r9, Y+2	; 0x02
    8474:	ab 80       	ldd	r10, Y+3	; 0x03
    8476:	bc 80       	ldd	r11, Y+4	; 0x04
    8478:	a3 01       	movw	r20, r6
    847a:	92 01       	movw	r18, r4
    847c:	c7 01       	movw	r24, r14
    847e:	b6 01       	movw	r22, r12
    8480:	0e 94 da 4d 	call	0x9bb4	; 0x9bb4 <__mulsi3>
    8484:	9b 01       	movw	r18, r22
    8486:	ac 01       	movw	r20, r24
    8488:	28 0d       	add	r18, r8
    848a:	39 1d       	adc	r19, r9
    848c:	4a 1d       	adc	r20, r10
    848e:	5b 1d       	adc	r21, r11
    8490:	69 85       	ldd	r22, Y+9	; 0x09
    8492:	7a 85       	ldd	r23, Y+10	; 0x0a
    8494:	8b 85       	ldd	r24, Y+11	; 0x0b
    8496:	9c 85       	ldd	r25, Y+12	; 0x0c
    8498:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    849c:	c3 01       	movw	r24, r6
    849e:	b2 01       	movw	r22, r4
    84a0:	0e 94 da 4d 	call	0x9bb4	; 0x9bb4 <__mulsi3>
    84a4:	69 87       	std	Y+9, r22	; 0x09
    84a6:	7a 87       	std	Y+10, r23	; 0x0a
    84a8:	8b 87       	std	Y+11, r24	; 0x0b
    84aa:	9c 87       	std	Y+12, r25	; 0x0c
    84ac:	81 14       	cp	r8, r1
    84ae:	91 04       	cpc	r9, r1
    84b0:	a1 04       	cpc	r10, r1
    84b2:	b1 04       	cpc	r11, r1
    84b4:	11 f4       	brne	.+4      	; 0x84ba <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0xd8>
    84b6:	c0 fe       	sbrs	r12, 0
    84b8:	71 c0       	rjmp	.+226    	; 0x859c <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1ba>
    84ba:	ad 85       	ldd	r26, Y+13	; 0x0d
    84bc:	be 85       	ldd	r27, Y+14	; 0x0e
    84be:	1c 92       	st	X, r1
    84c0:	d8 01       	movw	r26, r16
    84c2:	1c 92       	st	X, r1
    84c4:	88 0c       	add	r8, r8
    84c6:	99 1c       	adc	r9, r9
    84c8:	aa 1c       	adc	r10, r10
    84ca:	bb 1c       	adc	r11, r11
    84cc:	88 0c       	add	r8, r8
    84ce:	99 1c       	adc	r9, r9
    84d0:	aa 1c       	adc	r10, r10
    84d2:	bb 1c       	adc	r11, r11
    84d4:	c5 01       	movw	r24, r10
    84d6:	b4 01       	movw	r22, r8
    84d8:	66 0f       	add	r22, r22
    84da:	77 1f       	adc	r23, r23
    84dc:	88 1f       	adc	r24, r24
    84de:	99 1f       	adc	r25, r25
    84e0:	66 0f       	add	r22, r22
    84e2:	77 1f       	adc	r23, r23
    84e4:	88 1f       	adc	r24, r24
    84e6:	99 1f       	adc	r25, r25
    84e8:	66 0f       	add	r22, r22
    84ea:	77 1f       	adc	r23, r23
    84ec:	88 1f       	adc	r24, r24
    84ee:	99 1f       	adc	r25, r25
    84f0:	66 0f       	add	r22, r22
    84f2:	77 1f       	adc	r23, r23
    84f4:	88 1f       	adc	r24, r24
    84f6:	99 1f       	adc	r25, r25
    84f8:	66 0f       	add	r22, r22
    84fa:	77 1f       	adc	r23, r23
    84fc:	88 1f       	adc	r24, r24
    84fe:	99 1f       	adc	r25, r25
    8500:	a3 01       	movw	r20, r6
    8502:	92 01       	movw	r18, r4
    8504:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    8508:	32 50       	subi	r19, 0x02	; 2
    850a:	41 09       	sbc	r20, r1
    850c:	51 09       	sbc	r21, r1
    850e:	cc 0c       	add	r12, r12
    8510:	dd 1c       	adc	r13, r13
    8512:	ee 1c       	adc	r14, r14
    8514:	ff 1c       	adc	r15, r15
    8516:	cc 0c       	add	r12, r12
    8518:	dd 1c       	adc	r13, r13
    851a:	ee 1c       	adc	r14, r14
    851c:	ff 1c       	adc	r15, r15
    851e:	cc 0c       	add	r12, r12
    8520:	dd 1c       	adc	r13, r13
    8522:	ee 1c       	adc	r14, r14
    8524:	ff 1c       	adc	r15, r15
    8526:	cc 0c       	add	r12, r12
    8528:	dd 1c       	adc	r13, r13
    852a:	ee 1c       	adc	r14, r14
    852c:	ff 1c       	adc	r15, r15
    852e:	cc 0c       	add	r12, r12
    8530:	dd 1c       	adc	r13, r13
    8532:	ee 1c       	adc	r14, r14
    8534:	ff 1c       	adc	r15, r15
    8536:	cc 0c       	add	r12, r12
    8538:	dd 1c       	adc	r13, r13
    853a:	ee 1c       	adc	r14, r14
    853c:	ff 1c       	adc	r15, r15
    853e:	cc 0c       	add	r12, r12
    8540:	dd 1c       	adc	r13, r13
    8542:	ee 1c       	adc	r14, r14
    8544:	ff 1c       	adc	r15, r15
    8546:	c2 0e       	add	r12, r18
    8548:	d3 1e       	adc	r13, r19
    854a:	e4 1e       	adc	r14, r20
    854c:	f5 1e       	adc	r15, r21
    854e:	f1 01       	movw	r30, r2
    8550:	c0 82       	st	Z, r12
    8552:	d1 82       	std	Z+1, r13	; 0x01
    8554:	e2 82       	std	Z+2, r14	; 0x02
    8556:	f3 82       	std	Z+3, r15	; 0x03
    8558:	64 83       	std	Z+4, r22	; 0x04
    855a:	75 83       	std	Z+5, r23	; 0x05
    855c:	86 83       	std	Z+6, r24	; 0x06
    855e:	97 83       	std	Z+7, r25	; 0x07
    8560:	40 86       	std	Z+8, r4	; 0x08
    8562:	51 86       	std	Z+9, r5	; 0x09
    8564:	62 86       	std	Z+10, r6	; 0x0a
    8566:	73 86       	std	Z+11, r7	; 0x0b
    8568:	69 85       	ldd	r22, Y+9	; 0x09
    856a:	7a 85       	ldd	r23, Y+10	; 0x0a
    856c:	8b 85       	ldd	r24, Y+11	; 0x0b
    856e:	9c 85       	ldd	r25, Y+12	; 0x0c
    8570:	62 96       	adiw	r28, 0x12	; 18
    8572:	cd bf       	out	0x3d, r28	; 61
    8574:	de bf       	out	0x3e, r29	; 62
    8576:	df 91       	pop	r29
    8578:	cf 91       	pop	r28
    857a:	1f 91       	pop	r17
    857c:	0f 91       	pop	r16
    857e:	ff 90       	pop	r15
    8580:	ef 90       	pop	r14
    8582:	df 90       	pop	r13
    8584:	cf 90       	pop	r12
    8586:	bf 90       	pop	r11
    8588:	af 90       	pop	r10
    858a:	9f 90       	pop	r9
    858c:	8f 90       	pop	r8
    858e:	7f 90       	pop	r7
    8590:	6f 90       	pop	r6
    8592:	5f 90       	pop	r5
    8594:	4f 90       	pop	r4
    8596:	3f 90       	pop	r3
    8598:	2f 90       	pop	r2
    859a:	08 95       	ret
    859c:	81 e0       	ldi	r24, 0x01	; 1
    859e:	ad 85       	ldd	r26, Y+13	; 0x0d
    85a0:	be 85       	ldd	r27, Y+14	; 0x0e
    85a2:	8c 93       	st	X, r24
    85a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    85a6:	98 89       	ldd	r25, Y+16	; 0x10
    85a8:	a9 89       	ldd	r26, Y+17	; 0x11
    85aa:	ba 89       	ldd	r27, Y+18	; 0x12
    85ac:	04 97       	sbiw	r24, 0x04	; 4
    85ae:	a1 05       	cpc	r26, r1
    85b0:	b1 05       	cpc	r27, r1
    85b2:	09 f0       	breq	.+2      	; 0x85b6 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1d4>
    85b4:	85 cf       	rjmp	.-246    	; 0x84c0 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0xde>
    85b6:	81 e0       	ldi	r24, 0x01	; 1
    85b8:	d8 01       	movw	r26, r16
    85ba:	8c 93       	st	X, r24
    85bc:	f1 01       	movw	r30, r2
    85be:	10 82       	st	Z, r1
    85c0:	11 82       	std	Z+1, r1	; 0x01
    85c2:	12 82       	std	Z+2, r1	; 0x02
    85c4:	13 82       	std	Z+3, r1	; 0x03
    85c6:	14 82       	std	Z+4, r1	; 0x04
    85c8:	15 82       	std	Z+5, r1	; 0x05
    85ca:	16 82       	std	Z+6, r1	; 0x06
    85cc:	17 82       	std	Z+7, r1	; 0x07
    85ce:	81 e0       	ldi	r24, 0x01	; 1
    85d0:	90 e0       	ldi	r25, 0x00	; 0
    85d2:	a0 e0       	ldi	r26, 0x00	; 0
    85d4:	b0 e0       	ldi	r27, 0x00	; 0
    85d6:	80 87       	std	Z+8, r24	; 0x08
    85d8:	91 87       	std	Z+9, r25	; 0x09
    85da:	a2 87       	std	Z+10, r26	; 0x0a
    85dc:	b3 87       	std	Z+11, r27	; 0x0b
    85de:	c4 cf       	rjmp	.-120    	; 0x8568 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x186>

000085e0 <_Z17si5351_write_bulkhPhh>:
    85e0:	ff 92       	push	r15
    85e2:	0f 93       	push	r16
    85e4:	1f 93       	push	r17
    85e6:	cf 93       	push	r28
    85e8:	df 93       	push	r29
    85ea:	f8 2e       	mov	r15, r24
    85ec:	8b 01       	movw	r16, r22
    85ee:	d4 2f       	mov	r29, r20
    85f0:	c5 e0       	ldi	r28, 0x05	; 5
    85f2:	2d 2f       	mov	r18, r29
    85f4:	a8 01       	movw	r20, r16
    85f6:	6f 2d       	mov	r22, r15
    85f8:	80 ec       	ldi	r24, 0xC0	; 192
    85fa:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <I2C_1_SendData>
    85fe:	8d 17       	cp	r24, r29
    8600:	49 f0       	breq	.+18     	; 0x8614 <_Z17si5351_write_bulkhPhh+0x34>
    8602:	c1 50       	subi	r28, 0x01	; 1
    8604:	b1 f7       	brne	.-20     	; 0x85f2 <_Z17si5351_write_bulkhPhh+0x12>
    8606:	81 e0       	ldi	r24, 0x01	; 1
    8608:	df 91       	pop	r29
    860a:	cf 91       	pop	r28
    860c:	1f 91       	pop	r17
    860e:	0f 91       	pop	r16
    8610:	ff 90       	pop	r15
    8612:	08 95       	ret
    8614:	80 e0       	ldi	r24, 0x00	; 0
    8616:	f8 cf       	rjmp	.-16     	; 0x8608 <_Z17si5351_write_bulkhPhh+0x28>

00008618 <_Z7set_pllm10si5351_pll>:
    8618:	0f 93       	push	r16
    861a:	1f 93       	push	r17
    861c:	cf 93       	push	r28
    861e:	df 93       	push	r29
    8620:	cd b7       	in	r28, 0x3d	; 61
    8622:	de b7       	in	r29, 0x3e	; 62
    8624:	66 97       	sbiw	r28, 0x16	; 22
    8626:	cd bf       	out	0x3d, r28	; 61
    8628:	de bf       	out	0x3e, r29	; 62
    862a:	8a 01       	movw	r16, r20
    862c:	ae 01       	movw	r20, r28
    862e:	4f 5f       	subi	r20, 0xFF	; 255
    8630:	5f 4f       	sbci	r21, 0xFF	; 255
    8632:	0e 94 9b 40 	call	0x8136	; 0x8136 <_Z8pll_calcmP13u_si5351_regs>
    8636:	81 11       	cpse	r24, r1
    8638:	20 c0       	rjmp	.+64     	; 0x867a <_Z7set_pllm10si5351_pll+0x62>
    863a:	8a 85       	ldd	r24, Y+10	; 0x0a
    863c:	8d 87       	std	Y+13, r24	; 0x0d
    863e:	89 85       	ldd	r24, Y+9	; 0x09
    8640:	8e 87       	std	Y+14, r24	; 0x0e
    8642:	8b 81       	ldd	r24, Y+3	; 0x03
    8644:	83 70       	andi	r24, 0x03	; 3
    8646:	8f 87       	std	Y+15, r24	; 0x0f
    8648:	8a 81       	ldd	r24, Y+2	; 0x02
    864a:	88 8b       	std	Y+16, r24	; 0x10
    864c:	89 81       	ldd	r24, Y+1	; 0x01
    864e:	89 8b       	std	Y+17, r24	; 0x11
    8650:	8b 85       	ldd	r24, Y+11	; 0x0b
    8652:	82 95       	swap	r24
    8654:	80 7f       	andi	r24, 0xF0	; 240
    8656:	9f 81       	ldd	r25, Y+7	; 0x07
    8658:	9f 70       	andi	r25, 0x0F	; 15
    865a:	89 0f       	add	r24, r25
    865c:	8a 8b       	std	Y+18, r24	; 0x12
    865e:	8e 81       	ldd	r24, Y+6	; 0x06
    8660:	8b 8b       	std	Y+19, r24	; 0x13
    8662:	8d 81       	ldd	r24, Y+5	; 0x05
    8664:	8c 8b       	std	Y+20, r24	; 0x14
    8666:	01 30       	cpi	r16, 0x01	; 1
    8668:	11 05       	cpc	r17, r1
    866a:	79 f0       	breq	.+30     	; 0x868a <_Z7set_pllm10si5351_pll+0x72>
    866c:	48 e0       	ldi	r20, 0x08	; 8
    866e:	be 01       	movw	r22, r28
    8670:	63 5f       	subi	r22, 0xF3	; 243
    8672:	7f 4f       	sbci	r23, 0xFF	; 255
    8674:	82 e2       	ldi	r24, 0x22	; 34
    8676:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    867a:	66 96       	adiw	r28, 0x16	; 22
    867c:	cd bf       	out	0x3d, r28	; 61
    867e:	de bf       	out	0x3e, r29	; 62
    8680:	df 91       	pop	r29
    8682:	cf 91       	pop	r28
    8684:	1f 91       	pop	r17
    8686:	0f 91       	pop	r16
    8688:	08 95       	ret
    868a:	48 e0       	ldi	r20, 0x08	; 8
    868c:	be 01       	movw	r22, r28
    868e:	63 5f       	subi	r22, 0xF3	; 243
    8690:	7f 4f       	sbci	r23, 0xFF	; 255
    8692:	8a e1       	ldi	r24, 0x1A	; 26
    8694:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8698:	f0 cf       	rjmp	.-32     	; 0x867a <_Z7set_pllm10si5351_pll+0x62>

0000869a <_Z16si5351_read_bulkhPhh>:
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
		return(fail);
	}

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    869a:	ff 92       	push	r15
    869c:	0f 93       	push	r16
    869e:	1f 93       	push	r17
    86a0:	cf 93       	push	r28
    86a2:	df 93       	push	r29
    86a4:	f8 2e       	mov	r15, r24
    86a6:	8b 01       	movw	r16, r22
    86a8:	d4 2f       	mov	r29, r20
    86aa:	c5 e0       	ldi	r28, 0x05	; 5
		uint8_t tries = 5;
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    86ac:	2d 2f       	mov	r18, r29
    86ae:	a8 01       	movw	r20, r16
    86b0:	6f 2d       	mov	r22, r15
    86b2:	80 ec       	ldi	r24, 0xC0	; 192
    86b4:	0e 94 53 36 	call	0x6ca6	; 0x6ca6 <I2C_1_GetData>
    86b8:	8d 17       	cp	r24, r29
    86ba:	49 f0       	breq	.+18     	; 0x86ce <_Z16si5351_read_bulkhPhh+0x34>
    86bc:	c1 50       	subi	r28, 0x01	; 1
    86be:	b1 f7       	brne	.-20     	; 0x86ac <_Z16si5351_read_bulkhPhh+0x12>
    86c0:	81 e0       	ldi	r24, 0x01	; 1
		return(fail);
	}
    86c2:	df 91       	pop	r29
    86c4:	cf 91       	pop	r28
    86c6:	1f 91       	pop	r17
    86c8:	0f 91       	pop	r16
    86ca:	ff 90       	pop	r15
    86cc:	08 95       	ret

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
		uint8_t tries = 5;
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    86ce:	80 e0       	ldi	r24, 0x00	; 0
    86d0:	f8 cf       	rjmp	.-16     	; 0x86c2 <_Z16si5351_read_bulkhPhh+0x28>

000086d2 <si5351_init>:
 * xtal_load_c - Crystal load capacitance.
 * ref_osc_freq - Crystal/reference oscillator frequency (Hz).
 *
 */
	bool si5351_init(Si5351_Xtal_load_pF xtal_load_c, Frequency_Hz ref_osc_freq)
	{
    86d2:	cf 92       	push	r12
    86d4:	df 92       	push	r13
    86d6:	ef 92       	push	r14
    86d8:	ff 92       	push	r15
    86da:	1f 93       	push	r17
    86dc:	cf 93       	push	r28
    86de:	df 93       	push	r29
    86e0:	00 d0       	rcall	.+0      	; 0x86e2 <si5351_init+0x10>
    86e2:	cd b7       	in	r28, 0x3d	; 61
    86e4:	de b7       	in	r29, 0x3e	; 62
    86e6:	18 2f       	mov	r17, r24
    86e8:	6a 01       	movw	r12, r20
    86ea:	7b 01       	movw	r14, r22
		static bool err = false;
		uint8_t data[2];
		
#ifndef DEBUG_WITHOUT_I2C
			/* Start I2C comms */
			I2C_1_Init();
    86ec:	0e 94 f1 35 	call	0x6be2	; 0x6be2 <I2C_1_Init>
			uint8_t result_val = 0x00;
			bool result = false;
#endif
		uint8_t reg_val;

		freqVCOB = 0;
    86f0:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <_ZL8freqVCOB>
    86f4:	10 92 8d 47 	sts	0x478D, r1	; 0x80478d <_ZL8freqVCOB+0x1>
    86f8:	10 92 8e 47 	sts	0x478E, r1	; 0x80478e <_ZL8freqVCOB+0x2>
    86fc:	10 92 8f 47 	sts	0x478F, r1	; 0x80478f <_ZL8freqVCOB+0x3>
		xtal_freq = SI5351_XTAL_FREQ;
    8700:	80 e4       	ldi	r24, 0x40	; 64
    8702:	98 e7       	ldi	r25, 0x78	; 120
    8704:	ad e7       	ldi	r26, 0x7D	; 125
    8706:	b1 e0       	ldi	r27, 0x01	; 1
    8708:	80 93 5f 40 	sts	0x405F, r24	; 0x80405f <_ZL9xtal_freq>
    870c:	90 93 60 40 	sts	0x4060, r25	; 0x804060 <_ZL9xtal_freq+0x1>
    8710:	a0 93 61 40 	sts	0x4061, r26	; 0x804061 <_ZL9xtal_freq+0x2>
    8714:	b0 93 62 40 	sts	0x4062, r27	; 0x804062 <_ZL9xtal_freq+0x3>
		enabledClocksMask = 0x00;
    8718:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <_ZL17enabledClocksMask>

		/* Disable Outputs */
		/* Set CLKx_DIS high; Reg. 3 = 0xFF */
		data[0] = 0xFF;
    871c:	8f ef       	ldi	r24, 0xFF	; 255
    871e:	89 83       	std	Y+1, r24	; 0x01
		err = si5351_write_bulk(0x03, data, 1);
    8720:	41 e0       	ldi	r20, 0x01	; 1
    8722:	be 01       	movw	r22, r28
    8724:	6f 5f       	subi	r22, 0xFF	; 255
    8726:	7f 4f       	sbci	r23, 0xFF	; 255
    8728:	83 e0       	ldi	r24, 0x03	; 3
    872a:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    872e:	80 93 7d 47 	sts	0x477D, r24	; 0x80477d <_ZZ11si5351_initE3err>
		
		if(err) return err;
    8732:	88 23       	and	r24, r24
    8734:	51 f0       	breq	.+20     	; 0x874a <si5351_init+0x78>
		}
		
		g_si5351_initialized = !err;

		return err;
	}
    8736:	0f 90       	pop	r0
    8738:	0f 90       	pop	r0
    873a:	df 91       	pop	r29
    873c:	cf 91       	pop	r28
    873e:	1f 91       	pop	r17
    8740:	ff 90       	pop	r15
    8742:	ef 90       	pop	r14
    8744:	df 90       	pop	r13
    8746:	cf 90       	pop	r12
    8748:	08 95       	ret
		data[0] = 0xFF;
		err = si5351_write_bulk(0x03, data, 1);
		
		if(err) return err;
		/* Power down clocks */
		data[0] = 0xCC;
    874a:	8c ec       	ldi	r24, 0xCC	; 204
    874c:	89 83       	std	Y+1, r24	; 0x01
		err |= si5351_write_bulk(0x10, data, 1);
    874e:	41 e0       	ldi	r20, 0x01	; 1
    8750:	be 01       	movw	r22, r28
    8752:	6f 5f       	subi	r22, 0xFF	; 255
    8754:	7f 4f       	sbci	r23, 0xFF	; 255
    8756:	80 e1       	ldi	r24, 0x10	; 16
    8758:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    875c:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <_ZZ11si5351_initE3err>
    8760:	89 2b       	or	r24, r25
    8762:	80 93 7d 47 	sts	0x477D, r24	; 0x80477d <_ZZ11si5351_initE3err>
		err |= si5351_write_bulk(0x11, data, 1);
    8766:	41 e0       	ldi	r20, 0x01	; 1
    8768:	be 01       	movw	r22, r28
    876a:	6f 5f       	subi	r22, 0xFF	; 255
    876c:	7f 4f       	sbci	r23, 0xFF	; 255
    876e:	81 e1       	ldi	r24, 0x11	; 17
    8770:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8774:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <_ZZ11si5351_initE3err>
    8778:	89 2b       	or	r24, r25
    877a:	80 93 7d 47 	sts	0x477D, r24	; 0x80477d <_ZZ11si5351_initE3err>
		err |= si5351_write_bulk(0x12, data, 1);
    877e:	41 e0       	ldi	r20, 0x01	; 1
    8780:	be 01       	movw	r22, r28
    8782:	6f 5f       	subi	r22, 0xFF	; 255
    8784:	7f 4f       	sbci	r23, 0xFF	; 255
    8786:	82 e1       	ldi	r24, 0x12	; 18
    8788:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    878c:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <_ZZ11si5351_initE3err>
    8790:	89 2b       	or	r24, r25
    8792:	80 93 7d 47 	sts	0x477D, r24	; 0x80477d <_ZZ11si5351_initE3err>

		/* Set crystal load capacitance */
		reg_val = 0x12; /* 0b010010 reserved value bits */
		reg_val |= xtal_load_c;
    8796:	12 61       	ori	r17, 0x12	; 18

		data[0] = reg_val;
    8798:	19 83       	std	Y+1, r17	; 0x01
		err |= si5351_write_bulk(SI5351_CRYSTAL_LOAD, data, 1);
    879a:	41 e0       	ldi	r20, 0x01	; 1
    879c:	be 01       	movw	r22, r28
    879e:	6f 5f       	subi	r22, 0xFF	; 255
    87a0:	7f 4f       	sbci	r23, 0xFF	; 255
    87a2:	87 eb       	ldi	r24, 0xB7	; 183
    87a4:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    87a8:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <_ZZ11si5351_initE3err>
    87ac:	89 2b       	or	r24, r25
    87ae:	80 93 7d 47 	sts	0x477D, r24	; 0x80477d <_ZZ11si5351_initE3err>

		if(!ref_osc_freq)
    87b2:	c1 14       	cp	r12, r1
    87b4:	d1 04       	cpc	r13, r1
    87b6:	e1 04       	cpc	r14, r1
    87b8:	f1 04       	cpc	r15, r1
    87ba:	51 f4       	brne	.+20     	; 0x87d0 <si5351_init+0xfe>
		{
			ref_osc_freq = SI5351_XTAL_FREQ;
    87bc:	0f 2e       	mov	r0, r31
    87be:	f0 e4       	ldi	r31, 0x40	; 64
    87c0:	cf 2e       	mov	r12, r31
    87c2:	f8 e7       	ldi	r31, 0x78	; 120
    87c4:	df 2e       	mov	r13, r31
    87c6:	fd e7       	ldi	r31, 0x7D	; 125
    87c8:	ef 2e       	mov	r14, r31
    87ca:	ff 24       	eor	r15, r15
    87cc:	f3 94       	inc	r15
    87ce:	f0 2d       	mov	r31, r0
		}

		/* Change the ref osc freq if different from default */
		if(ref_osc_freq != xtal_freq)
    87d0:	80 91 5f 40 	lds	r24, 0x405F	; 0x80405f <_ZL9xtal_freq>
    87d4:	90 91 60 40 	lds	r25, 0x4060	; 0x804060 <_ZL9xtal_freq+0x1>
    87d8:	a0 91 61 40 	lds	r26, 0x4061	; 0x804061 <_ZL9xtal_freq+0x2>
    87dc:	b0 91 62 40 	lds	r27, 0x4062	; 0x804062 <_ZL9xtal_freq+0x3>
    87e0:	8c 15       	cp	r24, r12
    87e2:	9d 05       	cpc	r25, r13
    87e4:	ae 05       	cpc	r26, r14
    87e6:	bf 05       	cpc	r27, r15
    87e8:	39 f4       	brne	.+14     	; 0x87f8 <si5351_init+0x126>

			data[0] = reg_val;
			err |= si5351_write_bulk(SI5351_PLL_INPUT_SOURCE, data, 1);
		}
		
		g_si5351_initialized = !err;
    87ea:	80 91 7d 47 	lds	r24, 0x477D	; 0x80477d <_ZZ11si5351_initE3err>
    87ee:	91 e0       	ldi	r25, 0x01	; 1
    87f0:	98 27       	eor	r25, r24
    87f2:	90 93 7e 47 	sts	0x477E, r25	; 0x80477e <g_si5351_initialized>

		return err;
    87f6:	9f cf       	rjmp	.-194    	; 0x8736 <si5351_init+0x64>
		}

		/* Change the ref osc freq if different from default */
		if(ref_osc_freq != xtal_freq)
		{
			if(si5351_read_bulk(SI5351_PLL_INPUT_SOURCE, data, 1))
    87f8:	41 e0       	ldi	r20, 0x01	; 1
    87fa:	be 01       	movw	r22, r28
    87fc:	6f 5f       	subi	r22, 0xFF	; 255
    87fe:	7f 4f       	sbci	r23, 0xFF	; 255
    8800:	8f e0       	ldi	r24, 0x0F	; 15
    8802:	0e 94 4d 43 	call	0x869a	; 0x869a <_Z16si5351_read_bulkhPhh>
    8806:	81 11       	cpse	r24, r1
    8808:	96 cf       	rjmp	.-212    	; 0x8736 <si5351_init+0x64>
			{
				return true;
			}
			
			reg_val = data[0];
    880a:	89 81       	ldd	r24, Y+1	; 0x01

			/* Clear the bits first */
			reg_val &= ~(SI5351_CLKIN_DIV_MASK);

			xtal_freq = ref_osc_freq;
    880c:	c0 92 5f 40 	sts	0x405F, r12	; 0x80405f <_ZL9xtal_freq>
    8810:	d0 92 60 40 	sts	0x4060, r13	; 0x804060 <_ZL9xtal_freq+0x1>
    8814:	e0 92 61 40 	sts	0x4061, r14	; 0x804061 <_ZL9xtal_freq+0x2>
    8818:	f0 92 62 40 	sts	0x4062, r15	; 0x804062 <_ZL9xtal_freq+0x3>
			}
			
			reg_val = data[0];

			/* Clear the bits first */
			reg_val &= ~(SI5351_CLKIN_DIV_MASK);
    881c:	8f 73       	andi	r24, 0x3F	; 63
					reg_val |= SI5351_CLKIN_DIV_4;
				}

#endif  /* #ifndef DIVIDE_XTAL_FREQ_IF_NEEDED */

			data[0] = reg_val;
    881e:	89 83       	std	Y+1, r24	; 0x01
			err |= si5351_write_bulk(SI5351_PLL_INPUT_SOURCE, data, 1);
    8820:	41 e0       	ldi	r20, 0x01	; 1
    8822:	be 01       	movw	r22, r28
    8824:	6f 5f       	subi	r22, 0xFF	; 255
    8826:	7f 4f       	sbci	r23, 0xFF	; 255
    8828:	8f e0       	ldi	r24, 0x0F	; 15
    882a:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    882e:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <_ZZ11si5351_initE3err>
    8832:	89 2b       	or	r24, r25
    8834:	80 93 7d 47 	sts	0x477D, r24	; 0x80477d <_ZZ11si5351_initE3err>
    8838:	d8 cf       	rjmp	.-80     	; 0x87ea <si5351_init+0x118>

0000883a <si5351_clock_enable>:
 * clk - Clock output
 * enable - 1 to enable, 0 to disable
 *
 */
	EC si5351_clock_enable(Si5351_clock clk, bool enable)
	{
    883a:	0f 93       	push	r16
    883c:	1f 93       	push	r17
    883e:	cf 93       	push	r28
    8840:	df 93       	push	r29
    8842:	00 d0       	rcall	.+0      	; 0x8844 <si5351_clock_enable+0xa>
    8844:	cd b7       	in	r28, 0x3d	; 61
    8846:	de b7       	in	r29, 0x3e	; 62
    8848:	18 2f       	mov	r17, r24
    884a:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_OUTPUT_ENABLE_CTRL, data, 1)) 
    884c:	41 e0       	ldi	r20, 0x01	; 1
    884e:	be 01       	movw	r22, r28
    8850:	6f 5f       	subi	r22, 0xFF	; 255
    8852:	7f 4f       	sbci	r23, 0xFF	; 255
    8854:	83 e0       	ldi	r24, 0x03	; 3
    8856:	0e 94 4d 43 	call	0x869a	; 0x869a <_Z16si5351_read_bulkhPhh>
    885a:	81 11       	cpse	r24, r1
    885c:	28 c0       	rjmp	.+80     	; 0x88ae <si5351_clock_enable+0x74>
		{
			return ERROR_CODE_RTC_NONRESPONSIVE;
		}
		
		reg_val = data[0];
    885e:	89 81       	ldd	r24, Y+1	; 0x01

		if(enable)
    8860:	00 23       	and	r16, r16
    8862:	e1 f0       	breq	.+56     	; 0x889c <si5351_clock_enable+0x62>
		{
			reg_val &= ~(1 << (uint8_t)clk);
    8864:	21 e0       	ldi	r18, 0x01	; 1
    8866:	30 e0       	ldi	r19, 0x00	; 0
    8868:	02 c0       	rjmp	.+4      	; 0x886e <si5351_clock_enable+0x34>
    886a:	22 0f       	add	r18, r18
    886c:	33 1f       	adc	r19, r19
    886e:	1a 95       	dec	r17
    8870:	e2 f7       	brpl	.-8      	; 0x886a <si5351_clock_enable+0x30>
    8872:	20 95       	com	r18
    8874:	82 23       	and	r24, r18
		else
		{
			reg_val |= (1 << (uint8_t)clk);
		}

		data[0] = reg_val;
    8876:	89 83       	std	Y+1, r24	; 0x01
		if(si5351_write_bulk(SI5351_OUTPUT_ENABLE_CTRL, data, 1)) return ERROR_CODE_RTC_NONRESPONSIVE;
    8878:	41 e0       	ldi	r20, 0x01	; 1
    887a:	be 01       	movw	r22, r28
    887c:	6f 5f       	subi	r22, 0xFF	; 255
    887e:	7f 4f       	sbci	r23, 0xFF	; 255
    8880:	83 e0       	ldi	r24, 0x03	; 3
    8882:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8886:	81 11       	cpse	r24, r1
    8888:	15 c0       	rjmp	.+42     	; 0x88b4 <si5351_clock_enable+0x7a>

		return ERROR_CODE_NO_ERROR;
    888a:	90 e0       	ldi	r25, 0x00	; 0
    888c:	80 e0       	ldi	r24, 0x00	; 0
	}
    888e:	0f 90       	pop	r0
    8890:	0f 90       	pop	r0
    8892:	df 91       	pop	r29
    8894:	cf 91       	pop	r28
    8896:	1f 91       	pop	r17
    8898:	0f 91       	pop	r16
    889a:	08 95       	ret
		{
			reg_val &= ~(1 << (uint8_t)clk);
		}
		else
		{
			reg_val |= (1 << (uint8_t)clk);
    889c:	21 e0       	ldi	r18, 0x01	; 1
    889e:	30 e0       	ldi	r19, 0x00	; 0
    88a0:	02 c0       	rjmp	.+4      	; 0x88a6 <si5351_clock_enable+0x6c>
    88a2:	22 0f       	add	r18, r18
    88a4:	33 1f       	adc	r19, r19
    88a6:	1a 95       	dec	r17
    88a8:	e2 f7       	brpl	.-8      	; 0x88a2 <si5351_clock_enable+0x68>
    88aa:	82 2b       	or	r24, r18
    88ac:	e4 cf       	rjmp	.-56     	; 0x8876 <si5351_clock_enable+0x3c>
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_OUTPUT_ENABLE_CTRL, data, 1)) 
		{
			return ERROR_CODE_RTC_NONRESPONSIVE;
    88ae:	8c ef       	ldi	r24, 0xFC	; 252
    88b0:	90 e0       	ldi	r25, 0x00	; 0
    88b2:	ed cf       	rjmp	.-38     	; 0x888e <si5351_clock_enable+0x54>
		{
			reg_val |= (1 << (uint8_t)clk);
		}

		data[0] = reg_val;
		if(si5351_write_bulk(SI5351_OUTPUT_ENABLE_CTRL, data, 1)) return ERROR_CODE_RTC_NONRESPONSIVE;
    88b4:	8c ef       	ldi	r24, 0xFC	; 252
    88b6:	90 e0       	ldi	r25, 0x00	; 0
    88b8:	ea cf       	rjmp	.-44     	; 0x888e <si5351_clock_enable+0x54>

000088ba <si5351_drive_strength>:
 * clk - Clock output
 * drive - Desired drive level
 *
 */
	EC si5351_drive_strength(Si5351_clock clk, Si5351_drive drive)
	{
    88ba:	ff 92       	push	r15
    88bc:	0f 93       	push	r16
    88be:	1f 93       	push	r17
    88c0:	cf 93       	push	r28
    88c2:	df 93       	push	r29
    88c4:	00 d0       	rcall	.+0      	; 0x88c6 <si5351_drive_strength+0xc>
    88c6:	cd b7       	in	r28, 0x3d	; 61
    88c8:	de b7       	in	r29, 0x3e	; 62
    88ca:	8b 01       	movw	r16, r22
		uint8_t reg_val;
		uint8_t data[2];
		const uint8_t mask = 0x03;

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    88cc:	68 94       	set
    88ce:	ff 24       	eor	r15, r15
    88d0:	f4 f8       	bld	r15, 4
    88d2:	f8 0e       	add	r15, r24
    88d4:	41 e0       	ldi	r20, 0x01	; 1
    88d6:	be 01       	movw	r22, r28
    88d8:	6f 5f       	subi	r22, 0xFF	; 255
    88da:	7f 4f       	sbci	r23, 0xFF	; 255
    88dc:	8f 2d       	mov	r24, r15
    88de:	0e 94 4d 43 	call	0x869a	; 0x869a <_Z16si5351_read_bulkhPhh>
    88e2:	81 11       	cpse	r24, r1
    88e4:	29 c0       	rjmp	.+82     	; 0x8938 <si5351_drive_strength+0x7e>
		{
			return ERROR_CODE_CLKGEN_NONRESPONSIVE;
		}
		
		reg_val = data[0];
    88e6:	89 81       	ldd	r24, Y+1	; 0x01

		switch(drive)
    88e8:	01 30       	cpi	r16, 0x01	; 1
    88ea:	11 05       	cpc	r17, r1
    88ec:	e9 f0       	breq	.+58     	; 0x8928 <si5351_drive_strength+0x6e>
    88ee:	d0 f0       	brcs	.+52     	; 0x8924 <si5351_drive_strength+0x6a>
    88f0:	02 30       	cpi	r16, 0x02	; 2
    88f2:	11 05       	cpc	r17, r1
    88f4:	e1 f0       	breq	.+56     	; 0x892e <si5351_drive_strength+0x74>
    88f6:	03 30       	cpi	r16, 0x03	; 3
    88f8:	11 05       	cpc	r17, r1
    88fa:	e1 f0       	breq	.+56     	; 0x8934 <si5351_drive_strength+0x7a>
			{
			}
			break;
		}

		data[0] = reg_val;
    88fc:	89 83       	std	Y+1, r24	; 0x01
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1)) return ERROR_CODE_CLKGEN_NONRESPONSIVE;
    88fe:	41 e0       	ldi	r20, 0x01	; 1
    8900:	be 01       	movw	r22, r28
    8902:	6f 5f       	subi	r22, 0xFF	; 255
    8904:	7f 4f       	sbci	r23, 0xFF	; 255
    8906:	8f 2d       	mov	r24, r15
    8908:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    890c:	81 11       	cpse	r24, r1
    890e:	17 c0       	rjmp	.+46     	; 0x893e <si5351_drive_strength+0x84>

		return ERROR_CODE_NO_ERROR;
    8910:	90 e0       	ldi	r25, 0x00	; 0
    8912:	80 e0       	ldi	r24, 0x00	; 0
	}
    8914:	0f 90       	pop	r0
    8916:	0f 90       	pop	r0
    8918:	df 91       	pop	r29
    891a:	cf 91       	pop	r28
    891c:	1f 91       	pop	r17
    891e:	0f 91       	pop	r16
    8920:	ff 90       	pop	r15
    8922:	08 95       	ret

		switch(drive)
		{
			case SI5351_DRIVE_2MA:
			{
				reg_val &= ~(mask);
    8924:	8c 7f       	andi	r24, 0xFC	; 252
				reg_val |= 0x00;
			}
			break;
    8926:	ea cf       	rjmp	.-44     	; 0x88fc <si5351_drive_strength+0x42>

			case SI5351_DRIVE_4MA:
			{
				reg_val &= ~(mask);
    8928:	8c 7f       	andi	r24, 0xFC	; 252
				reg_val |= 0x01;
    892a:	81 60       	ori	r24, 0x01	; 1
			}
			break;
    892c:	e7 cf       	rjmp	.-50     	; 0x88fc <si5351_drive_strength+0x42>

			case SI5351_DRIVE_6MA:
			{
				reg_val &= ~(mask);
    892e:	8c 7f       	andi	r24, 0xFC	; 252
				reg_val |= 0x02;
    8930:	82 60       	ori	r24, 0x02	; 2
			}
			break;
    8932:	e4 cf       	rjmp	.-56     	; 0x88fc <si5351_drive_strength+0x42>

			case SI5351_DRIVE_8MA:
			{
				reg_val &= ~(mask);
				reg_val |= 0x03;
    8934:	83 60       	ori	r24, 0x03	; 3
			}
			break;
    8936:	e2 cf       	rjmp	.-60     	; 0x88fc <si5351_drive_strength+0x42>
		uint8_t data[2];
		const uint8_t mask = 0x03;

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
		{
			return ERROR_CODE_CLKGEN_NONRESPONSIVE;
    8938:	8b ef       	ldi	r24, 0xFB	; 251
    893a:	90 e0       	ldi	r25, 0x00	; 0
    893c:	eb cf       	rjmp	.-42     	; 0x8914 <si5351_drive_strength+0x5a>
			}
			break;
		}

		data[0] = reg_val;
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1)) return ERROR_CODE_CLKGEN_NONRESPONSIVE;
    893e:	8b ef       	ldi	r24, 0xFB	; 251
    8940:	90 e0       	ldi	r25, 0x00	; 0
    8942:	e8 cf       	rjmp	.-48     	; 0x8914 <si5351_drive_strength+0x5a>

00008944 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    8944:	ef 92       	push	r14
    8946:	ff 92       	push	r15
    8948:	1f 93       	push	r17
    894a:	cf 93       	push	r28
    894c:	df 93       	push	r29
    894e:	00 d0       	rcall	.+0      	; 0x8950 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0xc>
    8950:	cd b7       	in	r28, 0x3d	; 61
    8952:	de b7       	in	r29, 0x3e	; 62
    8954:	7b 01       	movw	r14, r22
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    8956:	10 e1       	ldi	r17, 0x10	; 16
    8958:	18 0f       	add	r17, r24
    895a:	41 e0       	ldi	r20, 0x01	; 1
    895c:	be 01       	movw	r22, r28
    895e:	6f 5f       	subi	r22, 0xFF	; 255
    8960:	7f 4f       	sbci	r23, 0xFF	; 255
    8962:	81 2f       	mov	r24, r17
    8964:	0e 94 4d 43 	call	0x869a	; 0x869a <_Z16si5351_read_bulkhPhh>
    8968:	81 11       	cpse	r24, r1
    896a:	11 c0       	rjmp	.+34     	; 0x898e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4a>
		{
			return(true);
		}
		
		reg_val = data[0];
    896c:	89 81       	ldd	r24, Y+1	; 0x01

		if(pll == SI5351_PLLA)
    896e:	91 e0       	ldi	r25, 0x01	; 1
    8970:	e9 16       	cp	r14, r25
    8972:	f1 04       	cpc	r15, r1
    8974:	a1 f0       	breq	.+40     	; 0x899e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x5a>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
		}
		else if(pll == SI5351_PLLB)
    8976:	92 e0       	ldi	r25, 0x02	; 2
    8978:	e9 16       	cp	r14, r25
    897a:	f1 04       	cpc	r15, r1
    897c:	91 f0       	breq	.+36     	; 0x89a2 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x5e>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
		}

		data[0] = reg_val;
    897e:	89 83       	std	Y+1, r24	; 0x01
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    8980:	41 e0       	ldi	r20, 0x01	; 1
    8982:	be 01       	movw	r22, r28
    8984:	6f 5f       	subi	r22, 0xFF	; 255
    8986:	7f 4f       	sbci	r23, 0xFF	; 255
    8988:	81 2f       	mov	r24, r17
    898a:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
		{
			return(true);
		}
		
		return(false);
	}
    898e:	0f 90       	pop	r0
    8990:	0f 90       	pop	r0
    8992:	df 91       	pop	r29
    8994:	cf 91       	pop	r28
    8996:	1f 91       	pop	r17
    8998:	ff 90       	pop	r15
    899a:	ef 90       	pop	r14
    899c:	08 95       	ret
		
		reg_val = data[0];

		if(pll == SI5351_PLLA)
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    899e:	8f 7d       	andi	r24, 0xDF	; 223
    89a0:	ee cf       	rjmp	.-36     	; 0x897e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x3a>
		}
		else if(pll == SI5351_PLLB)
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    89a2:	80 62       	ori	r24, 0x20	; 32
    89a4:	ec cf       	rjmp	.-40     	; 0x897e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x3a>

000089a6 <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    89a6:	0f 93       	push	r16
    89a8:	1f 93       	push	r17
    89aa:	cf 93       	push	r28
    89ac:	df 93       	push	r29
    89ae:	00 d0       	rcall	.+0      	; 0x89b0 <_Z16set_integer_mode12si5351_clockb+0xa>
    89b0:	cd b7       	in	r28, 0x3d	; 61
    89b2:	de b7       	in	r29, 0x3e	; 62
    89b4:	06 2f       	mov	r16, r22
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    89b6:	10 e1       	ldi	r17, 0x10	; 16
    89b8:	18 0f       	add	r17, r24
    89ba:	41 e0       	ldi	r20, 0x01	; 1
    89bc:	be 01       	movw	r22, r28
    89be:	6f 5f       	subi	r22, 0xFF	; 255
    89c0:	7f 4f       	sbci	r23, 0xFF	; 255
    89c2:	81 2f       	mov	r24, r17
    89c4:	0e 94 4d 43 	call	0x869a	; 0x869a <_Z16si5351_read_bulkhPhh>
    89c8:	81 11       	cpse	r24, r1
    89ca:	0c c0       	rjmp	.+24     	; 0x89e4 <_Z16set_integer_mode12si5351_clockb+0x3e>
		{
			return(true);
		}
		
		reg_val = data[0];
    89cc:	89 81       	ldd	r24, Y+1	; 0x01

		if(enable)
    89ce:	00 23       	and	r16, r16
    89d0:	81 f0       	breq	.+32     	; 0x89f2 <_Z16set_integer_mode12si5351_clockb+0x4c>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    89d2:	80 64       	ori	r24, 0x40	; 64
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
		}

		data[0] = reg_val;
    89d4:	89 83       	std	Y+1, r24	; 0x01
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    89d6:	41 e0       	ldi	r20, 0x01	; 1
    89d8:	be 01       	movw	r22, r28
    89da:	6f 5f       	subi	r22, 0xFF	; 255
    89dc:	7f 4f       	sbci	r23, 0xFF	; 255
    89de:	81 2f       	mov	r24, r17
    89e0:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
	}
    89e4:	0f 90       	pop	r0
    89e6:	0f 90       	pop	r0
    89e8:	df 91       	pop	r29
    89ea:	cf 91       	pop	r28
    89ec:	1f 91       	pop	r17
    89ee:	0f 91       	pop	r16
    89f0:	08 95       	ret
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    89f2:	8f 7b       	andi	r24, 0xBF	; 191
    89f4:	ef cf       	rjmp	.-34     	; 0x89d4 <_Z16set_integer_mode12si5351_clockb+0x2e>

000089f6 <_Z6ms_div12si5351_clockhb>:
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
	}


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    89f6:	ff 92       	push	r15
    89f8:	0f 93       	push	r16
    89fa:	1f 93       	push	r17
    89fc:	cf 93       	push	r28
    89fe:	df 93       	push	r29
    8a00:	00 d0       	rcall	.+0      	; 0x8a02 <_Z6ms_div12si5351_clockhb+0xc>
    8a02:	cd b7       	in	r28, 0x3d	; 61
    8a04:	de b7       	in	r29, 0x3e	; 62
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    8a06:	81 30       	cpi	r24, 0x01	; 1
    8a08:	91 05       	cpc	r25, r1
    8a0a:	29 f0       	breq	.+10     	; 0x8a16 <_Z6ms_div12si5351_clockhb+0x20>
    8a0c:	88 f1       	brcs	.+98     	; 0x8a70 <_Z6ms_div12si5351_clockhb+0x7a>
    8a0e:	02 97       	sbiw	r24, 0x02	; 2
    8a10:	51 f1       	breq	.+84     	; 0x8a66 <_Z6ms_div12si5351_clockhb+0x70>
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
			}
			break;

			default:
				return(true);
    8a12:	81 e0       	ldi	r24, 0x01	; 1
    8a14:	20 c0       	rjmp	.+64     	; 0x8a56 <_Z6ms_div12si5351_clockhb+0x60>
			}
			break;

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    8a16:	0f 2e       	mov	r0, r31
    8a18:	f4 e3       	ldi	r31, 0x34	; 52
    8a1a:	ff 2e       	mov	r15, r31
    8a1c:	f0 2d       	mov	r31, r0
    8a1e:	04 2f       	mov	r16, r20
    8a20:	16 2f       	mov	r17, r22

			default:
				return(true);
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    8a22:	41 e0       	ldi	r20, 0x01	; 1
    8a24:	be 01       	movw	r22, r28
    8a26:	6f 5f       	subi	r22, 0xFF	; 255
    8a28:	7f 4f       	sbci	r23, 0xFF	; 255
    8a2a:	8f 2d       	mov	r24, r15
    8a2c:	0e 94 4d 43 	call	0x869a	; 0x869a <_Z16si5351_read_bulkhPhh>
    8a30:	81 11       	cpse	r24, r1
    8a32:	11 c0       	rjmp	.+34     	; 0x8a56 <_Z6ms_div12si5351_clockhb+0x60>
		{
			return(true);
		}
		
		reg_val = data[0];
    8a34:	89 81       	ldd	r24, Y+1	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    8a36:	83 78       	andi	r24, 0x83	; 131

		if(div_by_4)
    8a38:	01 11       	cpse	r16, r1
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    8a3a:	8c 60       	ori	r24, 0x0C	; 12
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    8a3c:	90 e1       	ldi	r25, 0x10	; 16
    8a3e:	19 9f       	mul	r17, r25
    8a40:	b0 01       	movw	r22, r0
    8a42:	11 24       	eor	r1, r1
    8a44:	68 2b       	or	r22, r24

		data[0] = reg_val;
    8a46:	69 83       	std	Y+1, r22	; 0x01
		return(si5351_write_bulk(reg_addr, data, 1));
    8a48:	41 e0       	ldi	r20, 0x01	; 1
    8a4a:	be 01       	movw	r22, r28
    8a4c:	6f 5f       	subi	r22, 0xFF	; 255
    8a4e:	7f 4f       	sbci	r23, 0xFF	; 255
    8a50:	8f 2d       	mov	r24, r15
    8a52:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
	}
    8a56:	0f 90       	pop	r0
    8a58:	0f 90       	pop	r0
    8a5a:	df 91       	pop	r29
    8a5c:	cf 91       	pop	r28
    8a5e:	1f 91       	pop	r17
    8a60:	0f 91       	pop	r16
    8a62:	ff 90       	pop	r15
    8a64:	08 95       	ret
			}
			break;

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    8a66:	0f 2e       	mov	r0, r31
    8a68:	fc e3       	ldi	r31, 0x3C	; 60
    8a6a:	ff 2e       	mov	r15, r31
    8a6c:	f0 2d       	mov	r31, r0
			}
			break;
    8a6e:	d7 cf       	rjmp	.-82     	; 0x8a1e <_Z6ms_div12si5351_clockhb+0x28>

		switch(clk)
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    8a70:	0f 2e       	mov	r0, r31
    8a72:	fc e2       	ldi	r31, 0x2C	; 44
    8a74:	ff 2e       	mov	r15, r31
    8a76:	f0 2d       	mov	r31, r0
    8a78:	d2 cf       	rjmp	.-92     	; 0x8a1e <_Z6ms_div12si5351_clockhb+0x28>

00008a7a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    8a7a:	6f 92       	push	r6
    8a7c:	7f 92       	push	r7
    8a7e:	8f 92       	push	r8
    8a80:	af 92       	push	r10
    8a82:	cf 92       	push	r12
    8a84:	df 92       	push	r13
    8a86:	ef 92       	push	r14
    8a88:	ff 92       	push	r15
    8a8a:	0f 93       	push	r16
    8a8c:	1f 93       	push	r17
    8a8e:	cf 93       	push	r28
    8a90:	df 93       	push	r29
    8a92:	cd b7       	in	r28, 0x3d	; 61
    8a94:	de b7       	in	r29, 0x3e	; 62
    8a96:	69 97       	sbiw	r28, 0x19	; 25
    8a98:	cd bf       	out	0x3d, r28	; 61
    8a9a:	de bf       	out	0x3e, r29	; 62
    8a9c:	3c 01       	movw	r6, r24
    8a9e:	ce 86       	std	Y+14, r12	; 0x0e
    8aa0:	df 86       	std	Y+15, r13	; 0x0f
    8aa2:	e8 8a       	std	Y+16, r14	; 0x10
    8aa4:	0a 8b       	std	Y+18, r16	; 0x12
    8aa6:	1b 8b       	std	Y+19, r17	; 0x13
    8aa8:	2c 8b       	std	Y+20, r18	; 0x14
    8aaa:	68 8f       	std	Y+24, r22	; 0x18
		uint8_t i = 0;
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    8aac:	59 83       	std	Y+1, r21	; 0x01
		params[i++] = ms_reg.reg.p3_0;
    8aae:	4a 83       	std	Y+2, r20	; 0x02

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    8ab0:	88 0f       	add	r24, r24
    8ab2:	88 0f       	add	r24, r24
    8ab4:	88 0f       	add	r24, r24
    8ab6:	41 e0       	ldi	r20, 0x01	; 1
    8ab8:	be 01       	movw	r22, r28
    8aba:	64 5f       	subi	r22, 0xF4	; 244
    8abc:	7f 4f       	sbci	r23, 0xFF	; 255
    8abe:	84 5d       	subi	r24, 0xD4	; 212
    8ac0:	0e 94 4d 43 	call	0x869a	; 0x869a <_Z16si5351_read_bulkhPhh>
    8ac4:	81 11       	cpse	r24, r1
    8ac6:	24 c0       	rjmp	.+72     	; 0x8b10 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x96>
		{
			return(true);
		}
		
		reg_val = data[0];
    8ac8:	9c 85       	ldd	r25, Y+12	; 0x0c

		reg_val &= 0xFC;    /*~(0x03); */
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    8aca:	88 89       	ldd	r24, Y+16	; 0x10
    8acc:	83 70       	andi	r24, 0x03	; 3
			return(true);
		}
		
		reg_val = data[0];

		reg_val &= 0xFC;    /*~(0x03); */
    8ace:	9c 7f       	andi	r25, 0xFC	; 252
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    8ad0:	89 2b       	or	r24, r25
    8ad2:	8b 83       	std	Y+3, r24	; 0x03

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    8ad4:	8f 85       	ldd	r24, Y+15	; 0x0f
    8ad6:	8c 83       	std	Y+4, r24	; 0x04
		params[i++] = ms_reg.reg.p1_0;
    8ad8:	8e 85       	ldd	r24, Y+14	; 0x0e
    8ada:	8d 83       	std	Y+5, r24	; 0x05

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    8adc:	88 8d       	ldd	r24, Y+24	; 0x18
    8ade:	82 95       	swap	r24
    8ae0:	80 7f       	andi	r24, 0xF0	; 240
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    8ae2:	9c 89       	ldd	r25, Y+20	; 0x14
    8ae4:	9f 70       	andi	r25, 0x0F	; 15
    8ae6:	89 0f       	add	r24, r25
    8ae8:	8e 83       	std	Y+6, r24	; 0x06

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    8aea:	8b 89       	ldd	r24, Y+19	; 0x13
    8aec:	8f 83       	std	Y+7, r24	; 0x07
		params[i++] = ms_reg.reg.p2_0;
    8aee:	8a 89       	ldd	r24, Y+18	; 0x12
    8af0:	88 87       	std	Y+8, r24	; 0x08

		/* Write the parameters */

		switch(clk)
    8af2:	81 e0       	ldi	r24, 0x01	; 1
    8af4:	68 16       	cp	r6, r24
    8af6:	71 04       	cpc	r7, r1
    8af8:	29 f1       	breq	.+74     	; 0x8b44 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0xca>
    8afa:	d0 f0       	brcs	.+52     	; 0x8b30 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0xb6>
    8afc:	82 e0       	ldi	r24, 0x02	; 2
    8afe:	68 16       	cp	r6, r24
    8b00:	71 04       	cpc	r7, r1
    8b02:	51 f1       	breq	.+84     	; 0x8b58 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0xde>
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    8b04:	6a 2d       	mov	r22, r10
    8b06:	c3 01       	movw	r24, r6
    8b08:	0e 94 d3 44 	call	0x89a6	; 0x89a6 <_Z16set_integer_mode12si5351_clockb>
    8b0c:	88 23       	and	r24, r24
    8b0e:	71 f1       	breq	.+92     	; 0x8b6c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0xf2>
		{
			return(true);
		}
		
		return(false);
	}
    8b10:	69 96       	adiw	r28, 0x19	; 25
    8b12:	cd bf       	out	0x3d, r28	; 61
    8b14:	de bf       	out	0x3e, r29	; 62
    8b16:	df 91       	pop	r29
    8b18:	cf 91       	pop	r28
    8b1a:	1f 91       	pop	r17
    8b1c:	0f 91       	pop	r16
    8b1e:	ff 90       	pop	r15
    8b20:	ef 90       	pop	r14
    8b22:	df 90       	pop	r13
    8b24:	cf 90       	pop	r12
    8b26:	af 90       	pop	r10
    8b28:	8f 90       	pop	r8
    8b2a:	7f 90       	pop	r7
    8b2c:	6f 90       	pop	r6
    8b2e:	08 95       	ret

		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    8b30:	48 e0       	ldi	r20, 0x08	; 8
    8b32:	be 01       	movw	r22, r28
    8b34:	6f 5f       	subi	r22, 0xFF	; 255
    8b36:	7f 4f       	sbci	r23, 0xFF	; 255
    8b38:	8a e2       	ldi	r24, 0x2A	; 42
    8b3a:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8b3e:	88 23       	and	r24, r24
    8b40:	09 f3       	breq	.-62     	; 0x8b04 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x8a>
    8b42:	e6 cf       	rjmp	.-52     	; 0x8b10 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x96>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    8b44:	48 e0       	ldi	r20, 0x08	; 8
    8b46:	be 01       	movw	r22, r28
    8b48:	6f 5f       	subi	r22, 0xFF	; 255
    8b4a:	7f 4f       	sbci	r23, 0xFF	; 255
    8b4c:	82 e3       	ldi	r24, 0x32	; 50
    8b4e:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8b52:	88 23       	and	r24, r24
    8b54:	b9 f2       	breq	.-82     	; 0x8b04 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x8a>
    8b56:	dc cf       	rjmp	.-72     	; 0x8b10 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x96>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    8b58:	48 e0       	ldi	r20, 0x08	; 8
    8b5a:	be 01       	movw	r22, r28
    8b5c:	6f 5f       	subi	r22, 0xFF	; 255
    8b5e:	7f 4f       	sbci	r23, 0xFF	; 255
    8b60:	8a e3       	ldi	r24, 0x3A	; 58
    8b62:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8b66:	88 23       	and	r24, r24
    8b68:	69 f2       	breq	.-102    	; 0x8b04 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x8a>
    8b6a:	d2 cf       	rjmp	.-92     	; 0x8b10 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x96>
		if(set_integer_mode(clk, int_mode))
		{
			return(true);
		}
		
		if(ms_div(clk, r_div, div_by_4))
    8b6c:	48 a5       	ldd	r20, Y+40	; 0x28
    8b6e:	68 2d       	mov	r22, r8
    8b70:	c3 01       	movw	r24, r6
    8b72:	0e 94 fb 44 	call	0x89f6	; 0x89f6 <_Z6ms_div12si5351_clockhb>
    8b76:	cc cf       	rjmp	.-104    	; 0x8b10 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x96>

00008b78 <si5351_set_freq>:
 *
 * Returns true on failure
 *
 */
	bool si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, bool clocksOff)
	{
    8b78:	4f 92       	push	r4
    8b7a:	5f 92       	push	r5
    8b7c:	6f 92       	push	r6
    8b7e:	7f 92       	push	r7
    8b80:	8f 92       	push	r8
    8b82:	9f 92       	push	r9
    8b84:	af 92       	push	r10
    8b86:	bf 92       	push	r11
    8b88:	cf 92       	push	r12
    8b8a:	df 92       	push	r13
    8b8c:	ef 92       	push	r14
    8b8e:	ff 92       	push	r15
    8b90:	0f 93       	push	r16
    8b92:	1f 93       	push	r17
    8b94:	cf 93       	push	r28
    8b96:	df 93       	push	r29
    8b98:	cd b7       	in	r28, 0x3d	; 61
    8b9a:	de b7       	in	r29, 0x3e	; 62
    8b9c:	64 97       	sbiw	r28, 0x14	; 20
    8b9e:	cd bf       	out	0x3d, r28	; 61
    8ba0:	de bf       	out	0x3e, r29	; 62
    8ba2:	6b 01       	movw	r12, r22
    8ba4:	7c 01       	movw	r14, r24
    8ba6:	3a 01       	movw	r6, r20
    8ba8:	b2 2e       	mov	r11, r18
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
		Si5351_pll target_pll;
		uint8_t clock_ctrl_addr;
		uint8_t r_div = SI5351_OUTPUT_CLK_DIV_1;
		bool int_mode = false;
    8baa:	1d 86       	std	Y+13, r1	; 0x0d
		bool div_by_4 = false;
    8bac:	1e 86       	std	Y+14, r1	; 0x0e
		uint8_t data[2];

#ifdef DEBUGGING_ONLY
			uint32_t div = 0;
#endif
		if(!g_si5351_initialized) return(true);
    8bae:	10 91 7e 47 	lds	r17, 0x477E	; 0x80477e <g_si5351_initialized>
    8bb2:	11 23       	and	r17, r17
    8bb4:	09 f4       	brne	.+2      	; 0x8bb8 <si5351_set_freq+0x40>
    8bb6:	32 c1       	rjmp	.+612    	; 0x8e1c <si5351_set_freq+0x2a4>
#endif

#ifdef PREVENT_UNACHIEVABLE_FREQUENCIES
			/* Prevent unachievable frequencies from being entered. The Si5351 will accept these, but some may result */
			/* in no clock output. */
			if(freq_Fout > 999999)
    8bb8:	80 e4       	ldi	r24, 0x40	; 64
    8bba:	c8 16       	cp	r12, r24
    8bbc:	82 e4       	ldi	r24, 0x42	; 66
    8bbe:	d8 06       	cpc	r13, r24
    8bc0:	8f e0       	ldi	r24, 0x0F	; 15
    8bc2:	e8 06       	cpc	r14, r24
    8bc4:	f1 04       	cpc	r15, r1
    8bc6:	68 f0       	brcs	.+26     	; 0x8be2 <si5351_set_freq+0x6a>
			{
				freq_Fout /= 100;
    8bc8:	c7 01       	movw	r24, r14
    8bca:	24 e6       	ldi	r18, 0x64	; 100
    8bcc:	30 e0       	ldi	r19, 0x00	; 0
    8bce:	40 e0       	ldi	r20, 0x00	; 0
    8bd0:	50 e0       	ldi	r21, 0x00	; 0
    8bd2:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
				freq_Fout *= 100;
    8bd6:	a4 e6       	ldi	r26, 0x64	; 100
    8bd8:	b0 e0       	ldi	r27, 0x00	; 0
    8bda:	0e 94 72 4e 	call	0x9ce4	; 0x9ce4 <__muluhisi3>
    8bde:	6b 01       	movw	r12, r22
    8be0:	7c 01       	movw	r14, r24
		/* Determine which PLL to use: CLK0 gets PLLA, CLK1 and CLK2 get PLLB */
		/* The first of CLK1 or CLK2 to be configured, determines the VCO frequency used for PLLB. */
		/* The second of CLK1 or CLK2 to be configured will attempt to achieve Fout by adjusting the */
		/* Multisynth Divider values only. */
		/* Only good for Si5351A3 variant */
		switch(clk)
    8be2:	91 e0       	ldi	r25, 0x01	; 1
    8be4:	69 16       	cp	r6, r25
    8be6:	71 04       	cpc	r7, r1
    8be8:	09 f4       	brne	.+2      	; 0x8bec <si5351_set_freq+0x74>
    8bea:	a4 c0       	rjmp	.+328    	; 0x8d34 <si5351_set_freq+0x1bc>
    8bec:	20 f1       	brcs	.+72     	; 0x8c36 <si5351_set_freq+0xbe>
    8bee:	b2 e0       	ldi	r27, 0x02	; 2
    8bf0:	6b 16       	cp	r6, r27
    8bf2:	71 04       	cpc	r7, r1
    8bf4:	09 f0       	breq	.+2      	; 0x8bf8 <si5351_set_freq+0x80>
    8bf6:	13 c1       	rjmp	.+550    	; 0x8e1e <si5351_set_freq+0x2a6>
			case SI5351_CLK2:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
    8bf8:	80 91 8b 47 	lds	r24, 0x478B	; 0x80478b <_ZL17enabledClocksMask>
    8bfc:	84 60       	ori	r24, 0x04	; 4
    8bfe:	80 93 8b 47 	sts	0x478B, r24	; 0x80478b <_ZL17enabledClocksMask>
				clock_ctrl_addr = 18;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = ~enabledClocksMask | 0xFC; /* only disable CLK2 */
    8c02:	80 95       	com	r24
    8c04:	8c 6f       	ori	r24, 0xFC	; 252
    8c06:	8f 87       	std	Y+15, r24	; 0x0f
 				if(si5351_write_bulk(0x03, data, 1)) /* only disable CLK1 */
    8c08:	41 e0       	ldi	r20, 0x01	; 1
    8c0a:	be 01       	movw	r22, r28
    8c0c:	61 5f       	subi	r22, 0xF1	; 241
    8c0e:	7f 4f       	sbci	r23, 0xFF	; 255
    8c10:	83 e0       	ldi	r24, 0x03	; 3
    8c12:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8c16:	18 2f       	mov	r17, r24
    8c18:	81 11       	cpse	r24, r1
    8c1a:	01 c1       	rjmp	.+514    	; 0x8e1e <si5351_set_freq+0x2a6>
				{
					return true;
				} 

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK2] = freq_Fout;         /* store the value for reference */
    8c1c:	c0 92 87 47 	sts	0x4787, r12	; 0x804787 <_ZL9clock_out+0x8>
    8c20:	d0 92 88 47 	sts	0x4788, r13	; 0x804788 <_ZL9clock_out+0x9>
    8c24:	e0 92 89 47 	sts	0x4789, r14	; 0x804789 <_ZL9clock_out+0xa>
    8c28:	f0 92 8a 47 	sts	0x478A, r15	; 0x80478a <_ZL9clock_out+0xb>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x04;
				clock_ctrl_addr = 18;
    8c2c:	0f 2e       	mov	r0, r31
    8c2e:	f2 e1       	ldi	r31, 0x12	; 18
    8c30:	9f 2e       	mov	r9, r31
    8c32:	f0 2d       	mov	r31, r0
    8c34:	9d c0       	rjmp	.+314    	; 0x8d70 <si5351_set_freq+0x1f8>
		/* Only good for Si5351A3 variant */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
    8c36:	80 91 8b 47 	lds	r24, 0x478B	; 0x80478b <_ZL17enabledClocksMask>
    8c3a:	81 60       	ori	r24, 0x01	; 1
    8c3c:	80 93 8b 47 	sts	0x478B, r24	; 0x80478b <_ZL17enabledClocksMask>
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
// 				data[0] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(0x03, data, 1); // only disable CLK0 */

				target_pll = SI5351_PLLA;
				clock_out[SI5351_CLK0] = freq_Fout; /* store the value for reference */
    8c40:	c0 92 7f 47 	sts	0x477F, r12	; 0x80477f <_ZL9clock_out>
    8c44:	d0 92 80 47 	sts	0x4780, r13	; 0x804780 <_ZL9clock_out+0x1>
    8c48:	e0 92 81 47 	sts	0x4781, r14	; 0x804781 <_ZL9clock_out+0x2>
    8c4c:	f0 92 82 47 	sts	0x4782, r15	; 0x804782 <_ZL9clock_out+0x3>
		switch(clk)
		{
			case SI5351_CLK0:
			{
				enabledClocksMask |= 0x01;
				clock_ctrl_addr = 16;
    8c50:	68 94       	set
    8c52:	99 24       	eor	r9, r9
    8c54:	94 f8       	bld	r9, 4
				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
// 				data[0] = ~enabledClocksMask | 0xF9;
/*			si5351_write_bulk(0x03, data, 1); // only disable CLK0 */

				target_pll = SI5351_PLLA;
    8c56:	44 24       	eor	r4, r4
    8c58:	43 94       	inc	r4
    8c5a:	51 2c       	mov	r5, r1
		if((target_pll == SI5351_PLLA) || !freqVCOB)
		{
#ifdef DEBUGGING_ONLY
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4, &div);
#else
				freq_VCO = multisynth_calc(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    8c5c:	8e 01       	movw	r16, r28
    8c5e:	02 5f       	subi	r16, 0xF2	; 242
    8c60:	1f 4f       	sbci	r17, 0xFF	; 255
    8c62:	9e 01       	movw	r18, r28
    8c64:	23 5f       	subi	r18, 0xF3	; 243
    8c66:	3f 4f       	sbci	r19, 0xFF	; 255
    8c68:	ae 01       	movw	r20, r28
    8c6a:	4f 5f       	subi	r20, 0xFF	; 255
    8c6c:	5f 4f       	sbci	r21, 0xFF	; 255
    8c6e:	c7 01       	movw	r24, r14
    8c70:	b6 01       	movw	r22, r12
    8c72:	0e 94 33 41 	call	0x8266	; 0x8266 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    8c76:	69 8b       	std	Y+17, r22	; 0x11
    8c78:	7a 8b       	std	Y+18, r23	; 0x12
    8c7a:	8b 8b       	std	Y+19, r24	; 0x13
    8c7c:	9c 8b       	std	Y+20, r25	; 0x14
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
		}

		/* Set multisynth registers (MS must be set before PLL) */
		if(set_multisynth_registers_source(clk, target_pll))
    8c7e:	b2 01       	movw	r22, r4
    8c80:	c3 01       	movw	r24, r6
    8c82:	0e 94 a2 44 	call	0x8944	; 0x8944 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    8c86:	18 2f       	mov	r17, r24
    8c88:	81 11       	cpse	r24, r1
    8c8a:	c9 c0       	rjmp	.+402    	; 0x8e1e <si5351_set_freq+0x2a6>
		{
			return(true);
		}
		
		if(set_multisynth_registers(clk, ms_reg, int_mode, r_div, div_by_4))
    8c8c:	8e 85       	ldd	r24, Y+14	; 0x0e
    8c8e:	8f 93       	push	r24
    8c90:	81 2c       	mov	r8, r1
    8c92:	ad 84       	ldd	r10, Y+13	; 0x0d
    8c94:	c9 80       	ldd	r12, Y+1	; 0x01
    8c96:	da 80       	ldd	r13, Y+2	; 0x02
    8c98:	eb 80       	ldd	r14, Y+3	; 0x03
    8c9a:	fc 80       	ldd	r15, Y+4	; 0x04
    8c9c:	0d 81       	ldd	r16, Y+5	; 0x05
    8c9e:	1e 81       	ldd	r17, Y+6	; 0x06
    8ca0:	2f 81       	ldd	r18, Y+7	; 0x07
    8ca2:	38 85       	ldd	r19, Y+8	; 0x08
    8ca4:	49 85       	ldd	r20, Y+9	; 0x09
    8ca6:	5a 85       	ldd	r21, Y+10	; 0x0a
    8ca8:	6b 85       	ldd	r22, Y+11	; 0x0b
    8caa:	7c 85       	ldd	r23, Y+12	; 0x0c
    8cac:	c3 01       	movw	r24, r6
    8cae:	0e 94 3d 45 	call	0x8a7a	; 0x8a7a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    8cb2:	18 2f       	mov	r17, r24
    8cb4:	0f 90       	pop	r0
    8cb6:	81 11       	cpse	r24, r1
    8cb8:	b2 c0       	rjmp	.+356    	; 0x8e1e <si5351_set_freq+0x2a6>
				fout_calc = freq_VCO_calc / div;
			}

			f_err = freq_Fout - fout_calc;
#else
			if(freq_VCO)
    8cba:	89 89       	ldd	r24, Y+17	; 0x11
    8cbc:	9a 89       	ldd	r25, Y+18	; 0x12
    8cbe:	ab 89       	ldd	r26, Y+19	; 0x13
    8cc0:	bc 89       	ldd	r27, Y+20	; 0x14
    8cc2:	00 97       	sbiw	r24, 0x00	; 0
    8cc4:	a1 05       	cpc	r26, r1
    8cc6:	b1 05       	cpc	r27, r1
    8cc8:	09 f0       	breq	.+2      	; 0x8ccc <si5351_set_freq+0x154>
    8cca:	79 c0       	rjmp	.+242    	; 0x8dbe <si5351_set_freq+0x246>
/*	pll_reset(target_pll); */

		/* Block 6: */
		/* Enable desired outputs */
		/* (see Register 3) */
		if(clocksOff)
    8ccc:	bb 20       	and	r11, r11
    8cce:	09 f4       	brne	.+2      	; 0x8cd2 <si5351_set_freq+0x15a>
    8cd0:	7c c0       	rjmp	.+248    	; 0x8dca <si5351_set_freq+0x252>
		{
 			data[0] = enabledClocksMask;
    8cd2:	80 91 8b 47 	lds	r24, 0x478B	; 0x80478b <_ZL17enabledClocksMask>
    8cd6:	8f 87       	std	Y+15, r24	; 0x0f
			if(si5351_write_bulk(0x03, data, 1))    /* disable clock(s) in use */
    8cd8:	41 e0       	ldi	r20, 0x01	; 1
    8cda:	be 01       	movw	r22, r28
    8cdc:	61 5f       	subi	r22, 0xF1	; 241
    8cde:	7f 4f       	sbci	r23, 0xFF	; 255
    8ce0:	83 e0       	ldi	r24, 0x03	; 3
    8ce2:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8ce6:	81 11       	cpse	r24, r1
    8ce8:	af c0       	rjmp	.+350    	; 0x8e48 <si5351_set_freq+0x2d0>
				return true;
			} 
		}

		/* power up the clock */
		if(target_pll == SI5351_PLLA)
    8cea:	4a 94       	dec	r4
    8cec:	45 28       	or	r4, r5
    8cee:	09 f4       	brne	.+2      	; 0x8cf2 <si5351_set_freq+0x17a>
    8cf0:	7c c0       	rjmp	.+248    	; 0x8dea <si5351_set_freq+0x272>
			/*   o Integer mode set */
			/*   o Clock powered up */
		}
		else
		{
			if(int_mode)
    8cf2:	8d 85       	ldd	r24, Y+13	; 0x0d
    8cf4:	88 23       	and	r24, r24
    8cf6:	09 f4       	brne	.+2      	; 0x8cfa <si5351_set_freq+0x182>
    8cf8:	83 c0       	rjmp	.+262    	; 0x8e00 <si5351_set_freq+0x288>
			{
 				data[0] = 0x6C;
    8cfa:	8c e6       	ldi	r24, 0x6C	; 108
    8cfc:	8f 87       	std	Y+15, r24	; 0x0f
 				if(si5351_write_bulk(clock_ctrl_addr, data, 1))  /* power up only clock being set, leaving that clock configured as follows: */
    8cfe:	41 e0       	ldi	r20, 0x01	; 1
    8d00:	be 01       	movw	r22, r28
    8d02:	61 5f       	subi	r22, 0xF1	; 241
    8d04:	7f 4f       	sbci	r23, 0xFF	; 255
    8d06:	89 2d       	mov	r24, r9
    8d08:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8d0c:	81 11       	cpse	r24, r1
    8d0e:	9e c0       	rjmp	.+316    	; 0x8e4c <si5351_set_freq+0x2d4>
				/*   o PLLB is multisynth source */
				/*   o Integer mode cleared */
				/*   o Clock powered up */
			}

			if(freq_VCO)
    8d10:	89 89       	ldd	r24, Y+17	; 0x11
    8d12:	9a 89       	ldd	r25, Y+18	; 0x12
    8d14:	ab 89       	ldd	r26, Y+19	; 0x13
    8d16:	bc 89       	ldd	r27, Y+20	; 0x14
    8d18:	00 97       	sbiw	r24, 0x00	; 0
    8d1a:	a1 05       	cpc	r26, r1
    8d1c:	b1 05       	cpc	r27, r1
    8d1e:	09 f4       	brne	.+2      	; 0x8d22 <si5351_set_freq+0x1aa>
    8d20:	7e c0       	rjmp	.+252    	; 0x8e1e <si5351_set_freq+0x2a6>
			{
				freqVCOB = freq_VCO;
    8d22:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <_ZL8freqVCOB>
    8d26:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <_ZL8freqVCOB+0x1>
    8d2a:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <_ZL8freqVCOB+0x2>
    8d2e:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <_ZL8freqVCOB+0x3>
    8d32:	75 c0       	rjmp	.+234    	; 0x8e1e <si5351_set_freq+0x2a6>
			case SI5351_CLK1:
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
    8d34:	80 91 8b 47 	lds	r24, 0x478B	; 0x80478b <_ZL17enabledClocksMask>
    8d38:	82 60       	ori	r24, 0x02	; 2
    8d3a:	80 93 8b 47 	sts	0x478B, r24	; 0x80478b <_ZL17enabledClocksMask>
				clock_ctrl_addr = 17;

				/* Block 1: Disable Outputs */
				/* Set CLKx_DIS high; Reg. 3 = 0xFF */
 				data[0] = ~enabledClocksMask | 0xFA;
    8d3e:	80 95       	com	r24
    8d40:	8a 6f       	ori	r24, 0xFA	; 250
    8d42:	8f 87       	std	Y+15, r24	; 0x0f
				if(si5351_write_bulk(0x03, data, 1)) /* only disable CLK1 */
    8d44:	41 e0       	ldi	r20, 0x01	; 1
    8d46:	be 01       	movw	r22, r28
    8d48:	61 5f       	subi	r22, 0xF1	; 241
    8d4a:	7f 4f       	sbci	r23, 0xFF	; 255
    8d4c:	83 e0       	ldi	r24, 0x03	; 3
    8d4e:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8d52:	18 2f       	mov	r17, r24
    8d54:	81 11       	cpse	r24, r1
    8d56:	63 c0       	rjmp	.+198    	; 0x8e1e <si5351_set_freq+0x2a6>
				{
					return true;
				} 

				target_pll = SI5351_PLLB;
				clock_out[SI5351_CLK1] = freq_Fout;         /* store the value for reference */
    8d58:	c0 92 83 47 	sts	0x4783, r12	; 0x804783 <_ZL9clock_out+0x4>
    8d5c:	d0 92 84 47 	sts	0x4784, r13	; 0x804784 <_ZL9clock_out+0x5>
    8d60:	e0 92 85 47 	sts	0x4785, r14	; 0x804785 <_ZL9clock_out+0x6>
    8d64:	f0 92 86 47 	sts	0x4786, r15	; 0x804786 <_ZL9clock_out+0x7>
			{
				/* No checking is performed to ensure that PLLB is not unavailable due to other output being < 1.024 MHz or >= 112.5 MHz */
				/* User must ensure the clock design is valid before setting clocks */

				enabledClocksMask |= 0x02;
				clock_ctrl_addr = 17;
    8d68:	0f 2e       	mov	r0, r31
    8d6a:	f1 e1       	ldi	r31, 0x11	; 17
    8d6c:	9f 2e       	mov	r9, r31
    8d6e:	f0 2d       	mov	r31, r0
			Frequency_Hz freq_VCO_calc;
			Frequency_Hz fout_calc;
			int32_t f_err;
#endif

		if((target_pll == SI5351_PLLA) || !freqVCOB)
    8d70:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <_ZL8freqVCOB>
    8d74:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <_ZL8freqVCOB+0x1>
    8d78:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <_ZL8freqVCOB+0x2>
    8d7c:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <_ZL8freqVCOB+0x3>
    8d80:	89 2b       	or	r24, r25
    8d82:	8a 2b       	or	r24, r26
    8d84:	8b 2b       	or	r24, r27
    8d86:	29 f4       	brne	.+10     	; 0x8d92 <si5351_set_freq+0x21a>
    8d88:	68 94       	set
    8d8a:	44 24       	eor	r4, r4
    8d8c:	41 f8       	bld	r4, 1
    8d8e:	51 2c       	mov	r5, r1
    8d90:	65 cf       	rjmp	.-310    	; 0x8c5c <si5351_set_freq+0xe4>
		else
		{
#ifdef DEBUGGING_ONLY
				fout_calc = freq_Fout;  /* save the intended output frequency */
#endif
			freq_Fout = multisynth_estimate(freq_Fout, &ms_reg, &int_mode, &div_by_4);
    8d92:	8e 01       	movw	r16, r28
    8d94:	02 5f       	subi	r16, 0xF2	; 242
    8d96:	1f 4f       	sbci	r17, 0xFF	; 255
    8d98:	9e 01       	movw	r18, r28
    8d9a:	23 5f       	subi	r18, 0xF3	; 243
    8d9c:	3f 4f       	sbci	r19, 0xFF	; 255
    8d9e:	ae 01       	movw	r20, r28
    8da0:	4f 5f       	subi	r20, 0xFF	; 255
    8da2:	5f 4f       	sbci	r21, 0xFF	; 255
    8da4:	c7 01       	movw	r24, r14
    8da6:	b6 01       	movw	r22, r12
    8da8:	0e 94 f1 41 	call	0x83e2	; 0x83e2 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    8dac:	68 94       	set
    8dae:	44 24       	eor	r4, r4
    8db0:	41 f8       	bld	r4, 1
    8db2:	51 2c       	mov	r5, r1
 *
 */
	bool si5351_set_freq(Frequency_Hz freq_Fout, Si5351_clock clk, bool clocksOff)
	{
		Union_si5351_regs ms_reg;
		Frequency_Hz freq_VCO = 0;
    8db4:	19 8a       	std	Y+17, r1	; 0x11
    8db6:	1a 8a       	std	Y+18, r1	; 0x12
    8db8:	1b 8a       	std	Y+19, r1	; 0x13
    8dba:	1c 8a       	std	Y+20, r1	; 0x14
    8dbc:	60 cf       	rjmp	.-320    	; 0x8c7e <si5351_set_freq+0x106>

			f_err = freq_Fout - fout_calc;
#else
			if(freq_VCO)
			{
				set_pll(freq_VCO, target_pll);
    8dbe:	a2 01       	movw	r20, r4
    8dc0:	bc 01       	movw	r22, r24
    8dc2:	cd 01       	movw	r24, r26
    8dc4:	0e 94 0c 43 	call	0x8618	; 0x8618 <_Z7set_pllm10si5351_pll>
    8dc8:	81 cf       	rjmp	.-254    	; 0x8ccc <si5351_set_freq+0x154>
				return true;
			} 
		}
		else
		{
 			data[0] = ~enabledClocksMask;
    8dca:	80 91 8b 47 	lds	r24, 0x478B	; 0x80478b <_ZL17enabledClocksMask>
    8dce:	80 95       	com	r24
    8dd0:	8f 87       	std	Y+15, r24	; 0x0f
 			if(si5351_write_bulk(0x03, data, 1))  /* only enable clock(s) in use */
    8dd2:	41 e0       	ldi	r20, 0x01	; 1
    8dd4:	be 01       	movw	r22, r28
    8dd6:	61 5f       	subi	r22, 0xF1	; 241
    8dd8:	7f 4f       	sbci	r23, 0xFF	; 255
    8dda:	83 e0       	ldi	r24, 0x03	; 3
    8ddc:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8de0:	88 23       	and	r24, r24
    8de2:	09 f4       	brne	.+2      	; 0x8de6 <si5351_set_freq+0x26e>
    8de4:	82 cf       	rjmp	.-252    	; 0x8cea <si5351_set_freq+0x172>
			{
				return true;
    8de6:	18 2f       	mov	r17, r24
    8de8:	1a c0       	rjmp	.+52     	; 0x8e1e <si5351_set_freq+0x2a6>
		}

		/* power up the clock */
		if(target_pll == SI5351_PLLA)
		{
 			data[0] = 0x4C;
    8dea:	8c e4       	ldi	r24, 0x4C	; 76
    8dec:	8f 87       	std	Y+15, r24	; 0x0f
 			if(si5351_write_bulk(clock_ctrl_addr, data, 1))  /* power up only clock being set, leaving that clock configured as follows: */
    8dee:	41 e0       	ldi	r20, 0x01	; 1
    8df0:	be 01       	movw	r22, r28
    8df2:	61 5f       	subi	r22, 0xF1	; 241
    8df4:	7f 4f       	sbci	r23, 0xFF	; 255
    8df6:	89 2d       	mov	r24, r9
    8df8:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8dfc:	18 2f       	mov	r17, r24
    8dfe:	0f c0       	rjmp	.+30     	; 0x8e1e <si5351_set_freq+0x2a6>
				/*   o Integer mode set */
				/*   o Clock powered up */
			}
			else
			{
 				data[0] = 0x2C;
    8e00:	8c e2       	ldi	r24, 0x2C	; 44
    8e02:	8f 87       	std	Y+15, r24	; 0x0f
 				if(si5351_write_bulk(clock_ctrl_addr, data, 1))  /* power up only clock being set, leaving that clock configured as follows: */
    8e04:	41 e0       	ldi	r20, 0x01	; 1
    8e06:	be 01       	movw	r22, r28
    8e08:	61 5f       	subi	r22, 0xF1	; 241
    8e0a:	7f 4f       	sbci	r23, 0xFF	; 255
    8e0c:	89 2d       	mov	r24, r9
    8e0e:	0e 94 f0 42 	call	0x85e0	; 0x85e0 <_Z17si5351_write_bulkhPhh>
    8e12:	88 23       	and	r24, r24
    8e14:	09 f4       	brne	.+2      	; 0x8e18 <si5351_set_freq+0x2a0>
    8e16:	7c cf       	rjmp	.-264    	; 0x8d10 <si5351_set_freq+0x198>
				{
					return true;
    8e18:	18 2f       	mov	r17, r24
    8e1a:	01 c0       	rjmp	.+2      	; 0x8e1e <si5351_set_freq+0x2a6>
		uint8_t data[2];

#ifdef DEBUGGING_ONLY
			uint32_t div = 0;
#endif
		if(!g_si5351_initialized) return(true);
    8e1c:	11 e0       	ldi	r17, 0x01	; 1
				freqVCOB = freq_VCO;
			}
		}

		return(false);
	}
    8e1e:	81 2f       	mov	r24, r17
    8e20:	64 96       	adiw	r28, 0x14	; 20
    8e22:	cd bf       	out	0x3d, r28	; 61
    8e24:	de bf       	out	0x3e, r29	; 62
    8e26:	df 91       	pop	r29
    8e28:	cf 91       	pop	r28
    8e2a:	1f 91       	pop	r17
    8e2c:	0f 91       	pop	r16
    8e2e:	ff 90       	pop	r15
    8e30:	ef 90       	pop	r14
    8e32:	df 90       	pop	r13
    8e34:	cf 90       	pop	r12
    8e36:	bf 90       	pop	r11
    8e38:	af 90       	pop	r10
    8e3a:	9f 90       	pop	r9
    8e3c:	8f 90       	pop	r8
    8e3e:	7f 90       	pop	r7
    8e40:	6f 90       	pop	r6
    8e42:	5f 90       	pop	r5
    8e44:	4f 90       	pop	r4
    8e46:	08 95       	ret
		if(clocksOff)
		{
 			data[0] = enabledClocksMask;
			if(si5351_write_bulk(0x03, data, 1))    /* disable clock(s) in use */
			{
				return true;
    8e48:	18 2f       	mov	r17, r24
    8e4a:	e9 cf       	rjmp	.-46     	; 0x8e1e <si5351_set_freq+0x2a6>
			if(int_mode)
			{
 				data[0] = 0x6C;
 				if(si5351_write_bulk(clock_ctrl_addr, data, 1))  /* power up only clock being set, leaving that clock configured as follows: */
				{
					return true;
    8e4c:	18 2f       	mov	r17, r24
    8e4e:	e7 cf       	rjmp	.-50     	; 0x8e1e <si5351_set_freq+0x2a6>

00008e50 <SLPCTRL_init>:
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{

	SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp; /* Sleep enable: disabled */
    8e50:	10 92 50 00 	sts	0x0050, r1	; 0x800050 <__TEXT_REGION_LENGTH__+0x7e0050>
//			 | SLPCTRL_SMODE_IDLE_gc;  /* Idle mode */
//			 | SLPCTRL_SMODE_STDBY_gc; /* Standby Mode */
//			 | SLPCTRL_SMODE_PDOWN_gc; /* Power-down Mode */

	return 0;
}
    8e54:	80 e0       	ldi	r24, 0x00	; 0
    8e56:	08 95       	ret

00008e58 <SLPCTRL_set_sleep_mode>:

void SLPCTRL_set_sleep_mode(SLPCTRL_SMODE_t setmode)
{
	SLPCTRL.CTRLA = (SLPCTRL.CTRLA & ~SLPCTRL_SMODE_gm) | (setmode & SLPCTRL_SMODE_gm);
    8e58:	e0 e5       	ldi	r30, 0x50	; 80
    8e5a:	f0 e0       	ldi	r31, 0x00	; 0
    8e5c:	90 81       	ld	r25, Z
    8e5e:	99 7f       	andi	r25, 0xF9	; 249
    8e60:	86 70       	andi	r24, 0x06	; 6
    8e62:	98 2b       	or	r25, r24
    8e64:	90 83       	st	Z, r25
}
    8e66:	08 95       	ret

00008e68 <TIMERB_init>:
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    8e68:	e0 e0       	ldi	r30, 0x00	; 0
    8e6a:	fb e0       	ldi	r31, 0x0B	; 11
    8e6c:	81 e0       	ldi	r24, 0x01	; 1
    8e6e:	85 83       	std	Z+5, r24	; 0x05
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

// Set TOP
TCB0.CCMP = 0x9C40;
    8e70:	20 e4       	ldi	r18, 0x40	; 64
    8e72:	3c e9       	ldi	r19, 0x9C	; 156
    8e74:	24 87       	std	Z+12, r18	; 0x0c
    8e76:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    8e78:	93 e0       	ldi	r25, 0x03	; 3
    8e7a:	90 83       	st	Z, r25
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

TCB0.INTFLAGS = (TCB_CAPT_bm | TCB_OVF_bm); /* Clear flag */
    8e7c:	96 83       	std	Z+6, r25	; 0x06

/********************************************************************************/
/** 
LED Timer
*/
TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    8e7e:	e0 e1       	ldi	r30, 0x10	; 16
    8e80:	fb e0       	ldi	r31, 0x0B	; 11
    8e82:	85 83       	std	Z+5, r24	; 0x05
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

// Set TOP
TCB1.CCMP = 0x5DC0;
    8e84:	40 ec       	ldi	r20, 0xC0	; 192
    8e86:	5d e5       	ldi	r21, 0x5D	; 93
    8e88:	44 87       	std	Z+12, r20	; 0x0c
    8e8a:	55 87       	std	Z+13, r21	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    8e8c:	80 83       	st	Z, r24
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    8e8e:	86 83       	std	Z+6, r24	; 0x06
/********************************************************************************/
/** 
I2C Timeout Flag Timer
*/

CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    8e90:	a0 e1       	ldi	r26, 0x10	; 16
    8e92:	b1 e0       	ldi	r27, 0x01	; 1
    8e94:	4e e1       	ldi	r20, 0x1E	; 30
    8e96:	13 96       	adiw	r26, 0x03	; 3
    8e98:	4c 93       	st	X, r20
    8e9a:	13 97       	sbiw	r26, 0x03	; 3
TCB2.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    8e9c:	e0 e2       	ldi	r30, 0x20	; 32
    8e9e:	fb e0       	ldi	r31, 0x0B	; 11
    8ea0:	85 83       	std	Z+5, r24	; 0x05
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

// Set TOP
TCB2.CCMP = 0xFFFF;
    8ea2:	6f ef       	ldi	r22, 0xFF	; 255
    8ea4:	7f ef       	ldi	r23, 0xFF	; 255
    8ea6:	64 87       	std	Z+12, r22	; 0x0c
    8ea8:	75 87       	std	Z+13, r23	; 0x0d

TCB2.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    8eaa:	90 83       	st	Z, r25
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

TCB2.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    8eac:	86 83       	std	Z+6, r24	; 0x06
CPUINT.LVL1VEC = 30; /* Set to level 1 - highest priority interrupt */
    8eae:	13 96       	adiw	r26, 0x03	; 3
    8eb0:	4c 93       	st	X, r20


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    8eb2:	e0 e3       	ldi	r30, 0x30	; 48
    8eb4:	fb e0       	ldi	r31, 0x0B	; 11
    8eb6:	85 83       	std	Z+5, r24	; 0x05
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

// Set TOP
TCB3.CCMP = 0x9C40;
    8eb8:	24 87       	std	Z+12, r18	; 0x0c
    8eba:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    8ebc:	90 83       	st	Z, r25
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    8ebe:	86 83       	std	Z+6, r24	; 0x06

	return 0;
}
    8ec0:	80 e0       	ldi	r24, 0x00	; 0
    8ec2:	08 95       	ret

00008ec4 <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    8ec4:	0f 93       	push	r16
    8ec6:	1f 93       	push	r17
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    8ec8:	61 15       	cp	r22, r1
    8eca:	71 05       	cpc	r23, r1
    8ecc:	81 05       	cpc	r24, r1
    8ece:	91 05       	cpc	r25, r1
    8ed0:	09 f4       	brne	.+2      	; 0x8ed4 <util_delay_ms+0x10>
    8ed2:	6a c0       	rjmp	.+212    	; 0x8fa8 <util_delay_ms+0xe4>
	{
		if(counting)
    8ed4:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <_ZZ13util_delay_msE8counting>
    8ed8:	22 23       	and	r18, r18
    8eda:	f1 f1       	breq	.+124    	; 0x8f58 <util_delay_ms+0x94>
		{
			if(!g_ms_counter)
    8edc:	00 91 95 47 	lds	r16, 0x4795	; 0x804795 <_ZL12g_ms_counter>
    8ee0:	10 91 96 47 	lds	r17, 0x4796	; 0x804796 <_ZL12g_ms_counter+0x1>
    8ee4:	20 91 97 47 	lds	r18, 0x4797	; 0x804797 <_ZL12g_ms_counter+0x2>
    8ee8:	30 91 98 47 	lds	r19, 0x4798	; 0x804798 <_ZL12g_ms_counter+0x3>
    8eec:	01 2b       	or	r16, r17
    8eee:	02 2b       	or	r16, r18
    8ef0:	03 2b       	or	r16, r19
    8ef2:	21 f1       	breq	.+72     	; 0x8f3c <util_delay_ms+0x78>

				counting = false;
				countdownValue = 0;
				return(false); /* time expired */
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    8ef4:	00 91 91 47 	lds	r16, 0x4791	; 0x804791 <_ZZ13util_delay_msE14countdownValue>
    8ef8:	10 91 92 47 	lds	r17, 0x4792	; 0x804792 <_ZZ13util_delay_msE14countdownValue+0x1>
    8efc:	20 91 93 47 	lds	r18, 0x4793	; 0x804793 <_ZZ13util_delay_msE14countdownValue+0x2>
    8f00:	30 91 94 47 	lds	r19, 0x4794	; 0x804794 <_ZZ13util_delay_msE14countdownValue+0x3>
    8f04:	06 17       	cp	r16, r22
    8f06:	17 07       	cpc	r17, r23
    8f08:	28 07       	cpc	r18, r24
    8f0a:	39 07       	cpc	r19, r25
    8f0c:	09 f4       	brne	.+2      	; 0x8f10 <util_delay_ms+0x4c>
    8f0e:	48 c0       	rjmp	.+144    	; 0x8fa0 <util_delay_ms+0xdc>
			{
				TCB1.CNT = 0x0000;
    8f10:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    8f14:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
				countdownValue = delayValue;
    8f18:	60 93 91 47 	sts	0x4791, r22	; 0x804791 <_ZZ13util_delay_msE14countdownValue>
    8f1c:	70 93 92 47 	sts	0x4792, r23	; 0x804792 <_ZZ13util_delay_msE14countdownValue+0x1>
    8f20:	80 93 93 47 	sts	0x4793, r24	; 0x804793 <_ZZ13util_delay_msE14countdownValue+0x2>
    8f24:	90 93 94 47 	sts	0x4794, r25	; 0x804794 <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    8f28:	60 93 95 47 	sts	0x4795, r22	; 0x804795 <_ZL12g_ms_counter>
    8f2c:	70 93 96 47 	sts	0x4796, r23	; 0x804796 <_ZL12g_ms_counter+0x1>
    8f30:	80 93 97 47 	sts	0x4797, r24	; 0x804797 <_ZL12g_ms_counter+0x2>
    8f34:	90 93 98 47 	sts	0x4798, r25	; 0x804798 <_ZL12g_ms_counter+0x3>
				return(false);
    8f38:	80 e0       	ldi	r24, 0x00	; 0
    8f3a:	4b c0       	rjmp	.+150    	; 0x8fd2 <util_delay_ms+0x10e>
	{
		if(counting)
		{
			if(!g_ms_counter)
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    8f3c:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

				counting = false;
    8f40:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    8f44:	10 92 91 47 	sts	0x4791, r1	; 0x804791 <_ZZ13util_delay_msE14countdownValue>
    8f48:	10 92 92 47 	sts	0x4792, r1	; 0x804792 <_ZZ13util_delay_msE14countdownValue+0x1>
    8f4c:	10 92 93 47 	sts	0x4793, r1	; 0x804793 <_ZZ13util_delay_msE14countdownValue+0x2>
    8f50:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    8f54:	80 e0       	ldi	r24, 0x00	; 0
    8f56:	3d c0       	rjmp	.+122    	; 0x8fd2 <util_delay_ms+0x10e>
				countdownValue = delayValue;
				g_ms_counter = delayValue;
				return(false);
			}
		}
		else if(delayValue != countdownValue)
    8f58:	00 91 91 47 	lds	r16, 0x4791	; 0x804791 <_ZZ13util_delay_msE14countdownValue>
    8f5c:	10 91 92 47 	lds	r17, 0x4792	; 0x804792 <_ZZ13util_delay_msE14countdownValue+0x1>
    8f60:	20 91 93 47 	lds	r18, 0x4793	; 0x804793 <_ZZ13util_delay_msE14countdownValue+0x2>
    8f64:	30 91 94 47 	lds	r19, 0x4794	; 0x804794 <_ZZ13util_delay_msE14countdownValue+0x3>
    8f68:	06 17       	cp	r16, r22
    8f6a:	17 07       	cpc	r17, r23
    8f6c:	28 07       	cpc	r18, r24
    8f6e:	39 07       	cpc	r19, r25
    8f70:	b9 f0       	breq	.+46     	; 0x8fa0 <util_delay_ms+0xdc>
		{
			TCB1.CNT = 0x0000;
    8f72:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7e0b1a>
    8f76:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <__TEXT_REGION_LENGTH__+0x7e0b1b>
			countdownValue = delayValue;
    8f7a:	60 93 91 47 	sts	0x4791, r22	; 0x804791 <_ZZ13util_delay_msE14countdownValue>
    8f7e:	70 93 92 47 	sts	0x4792, r23	; 0x804792 <_ZZ13util_delay_msE14countdownValue+0x1>
    8f82:	80 93 93 47 	sts	0x4793, r24	; 0x804793 <_ZZ13util_delay_msE14countdownValue+0x2>
    8f86:	90 93 94 47 	sts	0x4794, r25	; 0x804794 <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    8f8a:	60 93 95 47 	sts	0x4795, r22	; 0x804795 <_ZL12g_ms_counter>
    8f8e:	70 93 96 47 	sts	0x4796, r23	; 0x804796 <_ZL12g_ms_counter+0x1>
    8f92:	80 93 97 47 	sts	0x4797, r24	; 0x804797 <_ZL12g_ms_counter+0x2>
    8f96:	90 93 98 47 	sts	0x4798, r25	; 0x804798 <_ZL12g_ms_counter+0x3>
			counting = true;
    8f9a:	81 e0       	ldi	r24, 0x01	; 1
    8f9c:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
		g_ms_counter = 0;
		return(false); /* timer reset */
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    8fa0:	81 e0       	ldi	r24, 0x01	; 1
    8fa2:	80 93 15 0b 	sts	0x0B15, r24	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
	
	return(true);
    8fa6:	15 c0       	rjmp	.+42     	; 0x8fd2 <util_delay_ms+0x10e>
			counting = true;
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    8fa8:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */

		counting = false;
    8fac:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    8fb0:	10 92 91 47 	sts	0x4791, r1	; 0x804791 <_ZZ13util_delay_msE14countdownValue>
    8fb4:	10 92 92 47 	sts	0x4792, r1	; 0x804792 <_ZZ13util_delay_msE14countdownValue+0x1>
    8fb8:	10 92 93 47 	sts	0x4793, r1	; 0x804793 <_ZZ13util_delay_msE14countdownValue+0x2>
    8fbc:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    8fc0:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <_ZL12g_ms_counter>
    8fc4:	10 92 96 47 	sts	0x4796, r1	; 0x804796 <_ZL12g_ms_counter+0x1>
    8fc8:	10 92 97 47 	sts	0x4797, r1	; 0x804797 <_ZL12g_ms_counter+0x2>
    8fcc:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    8fd0:	80 e0       	ldi	r24, 0x00	; 0
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
	
	return(true);
}
    8fd2:	1f 91       	pop	r17
    8fd4:	0f 91       	pop	r16
    8fd6:	08 95       	ret

00008fd8 <__vector_30>:

ISR(TCB2_INT_vect)
{
    8fd8:	1f 92       	push	r1
    8fda:	0f 92       	push	r0
    8fdc:	0f b6       	in	r0, 0x3f	; 63
    8fde:	0f 92       	push	r0
    8fe0:	11 24       	eor	r1, r1
    8fe2:	8f 93       	push	r24
    8fe4:	9f 93       	push	r25
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    8fe6:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
    8fea:	80 ff       	sbrs	r24, 0
    8fec:	2d c0       	rjmp	.+90     	; 0x9048 <__vector_30+0x70>
	{
		if(g_i2c1_timeout_ticks) g_i2c1_timeout_ticks--;
    8fee:	80 91 4c 40 	lds	r24, 0x404C	; 0x80404c <g_i2c1_timeout_ticks>
    8ff2:	90 91 4d 40 	lds	r25, 0x404D	; 0x80404d <g_i2c1_timeout_ticks+0x1>
    8ff6:	89 2b       	or	r24, r25
    8ff8:	49 f0       	breq	.+18     	; 0x900c <__vector_30+0x34>
    8ffa:	80 91 4c 40 	lds	r24, 0x404C	; 0x80404c <g_i2c1_timeout_ticks>
    8ffe:	90 91 4d 40 	lds	r25, 0x404D	; 0x80404d <g_i2c1_timeout_ticks+0x1>
    9002:	01 97       	sbiw	r24, 0x01	; 1
    9004:	80 93 4c 40 	sts	0x404C, r24	; 0x80404c <g_i2c1_timeout_ticks>
    9008:	90 93 4d 40 	sts	0x404D, r25	; 0x80404d <g_i2c1_timeout_ticks+0x1>
		if(g_i2c0_timeout_ticks) g_i2c0_timeout_ticks--;
    900c:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_i2c0_timeout_ticks>
    9010:	90 91 4f 40 	lds	r25, 0x404F	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    9014:	89 2b       	or	r24, r25
    9016:	49 f0       	breq	.+18     	; 0x902a <__vector_30+0x52>
    9018:	80 91 4e 40 	lds	r24, 0x404E	; 0x80404e <g_i2c0_timeout_ticks>
    901c:	90 91 4f 40 	lds	r25, 0x404F	; 0x80404f <g_i2c0_timeout_ticks+0x1>
    9020:	01 97       	sbiw	r24, 0x01	; 1
    9022:	80 93 4e 40 	sts	0x404E, r24	; 0x80404e <g_i2c0_timeout_ticks>
    9026:	90 93 4f 40 	sts	0x404F, r25	; 0x80404f <g_i2c0_timeout_ticks+0x1>
		if(g_serial_timeout_ticks) g_serial_timeout_ticks--;
    902a:	80 91 5d 40 	lds	r24, 0x405D	; 0x80405d <g_serial_timeout_ticks>
    902e:	90 91 5e 40 	lds	r25, 0x405E	; 0x80405e <g_serial_timeout_ticks+0x1>
    9032:	89 2b       	or	r24, r25
    9034:	49 f0       	breq	.+18     	; 0x9048 <__vector_30+0x70>
    9036:	80 91 5d 40 	lds	r24, 0x405D	; 0x80405d <g_serial_timeout_ticks>
    903a:	90 91 5e 40 	lds	r25, 0x405E	; 0x80405e <g_serial_timeout_ticks+0x1>
    903e:	01 97       	sbiw	r24, 0x01	; 1
    9040:	80 93 5d 40 	sts	0x405D, r24	; 0x80405d <g_serial_timeout_ticks>
    9044:	90 93 5e 40 	sts	0x405E, r25	; 0x80405e <g_serial_timeout_ticks+0x1>
	}
	TCB2.INTFLAGS = TCB_CAPT_bm | TCB_OVF_bm; /* Clear flags */
    9048:	83 e0       	ldi	r24, 0x03	; 3
    904a:	80 93 26 0b 	sts	0x0B26, r24	; 0x800b26 <__TEXT_REGION_LENGTH__+0x7e0b26>
}
    904e:	9f 91       	pop	r25
    9050:	8f 91       	pop	r24
    9052:	0f 90       	pop	r0
    9054:	0f be       	out	0x3f, r0	; 63
    9056:	0f 90       	pop	r0
    9058:	1f 90       	pop	r1
    905a:	18 95       	reti

0000905c <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    905c:	1f 92       	push	r1
    905e:	0f 92       	push	r0
    9060:	0f b6       	in	r0, 0x3f	; 63
    9062:	0f 92       	push	r0
    9064:	11 24       	eor	r1, r1
    9066:	8f 93       	push	r24
    9068:	9f 93       	push	r25
    906a:	af 93       	push	r26
    906c:	bf 93       	push	r27
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    906e:	80 91 16 0b 	lds	r24, 0x0B16	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
    9072:	80 ff       	sbrs	r24, 0
    9074:	0e c0       	rjmp	.+28     	; 0x9092 <__vector_13+0x36>
    {
		if(g_ms_counter) /* check for 1-second interval */
    9076:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <_ZL12g_ms_counter>
    907a:	90 91 96 47 	lds	r25, 0x4796	; 0x804796 <_ZL12g_ms_counter+0x1>
    907e:	a0 91 97 47 	lds	r26, 0x4797	; 0x804797 <_ZL12g_ms_counter+0x2>
    9082:	b0 91 98 47 	lds	r27, 0x4798	; 0x804798 <_ZL12g_ms_counter+0x3>
    9086:	00 97       	sbiw	r24, 0x00	; 0
    9088:	a1 05       	cpc	r26, r1
    908a:	b1 05       	cpc	r27, r1
    908c:	71 f4       	brne	.+28     	; 0x90aa <__vector_13+0x4e>
		{
			g_ms_counter--;	
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    908e:	10 92 15 0b 	sts	0x0B15, r1	; 0x800b15 <__TEXT_REGION_LENGTH__+0x7e0b15>
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
		}
    }

    TCB1.INTFLAGS = TCB_CAPT_bm | TCB_OVF_bm; /* clear interrupt flags */
    9092:	83 e0       	ldi	r24, 0x03	; 3
    9094:	80 93 16 0b 	sts	0x0B16, r24	; 0x800b16 <__TEXT_REGION_LENGTH__+0x7e0b16>
}
    9098:	bf 91       	pop	r27
    909a:	af 91       	pop	r26
    909c:	9f 91       	pop	r25
    909e:	8f 91       	pop	r24
    90a0:	0f 90       	pop	r0
    90a2:	0f be       	out	0x3f, r0	; 63
    90a4:	0f 90       	pop	r0
    90a6:	1f 90       	pop	r1
    90a8:	18 95       	reti
{
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    {
		if(g_ms_counter) /* check for 1-second interval */
		{
			g_ms_counter--;	
    90aa:	01 97       	sbiw	r24, 0x01	; 1
    90ac:	a1 09       	sbc	r26, r1
    90ae:	b1 09       	sbc	r27, r1
    90b0:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <_ZL12g_ms_counter>
    90b4:	90 93 96 47 	sts	0x4796, r25	; 0x804796 <_ZL12g_ms_counter+0x1>
    90b8:	a0 93 97 47 	sts	0x4797, r26	; 0x804797 <_ZL12g_ms_counter+0x2>
    90bc:	b0 93 98 47 	sts	0x4798, r27	; 0x804798 <_ZL12g_ms_counter+0x3>
    90c0:	e8 cf       	rjmp	.-48     	; 0x9092 <__vector_13+0x36>

000090c2 <TIMERB_sleep>:
    TCB1.INTFLAGS = TCB_CAPT_bm | TCB_OVF_bm; /* clear interrupt flags */
}

int8_t TIMERB_sleep()
{
	TCB0.INTCTRL = 0;   /* Capture or Timeout: disable interrupts */
    90c2:	e0 e0       	ldi	r30, 0x00	; 0
    90c4:	fb e0       	ldi	r31, 0x0B	; 11
    90c6:	15 82       	std	Z+5, r1	; 0x05
	TCB0.CTRLA = 0; /* Disable timer */
    90c8:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB1.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    90ca:	e0 e1       	ldi	r30, 0x10	; 16
    90cc:	fb e0       	ldi	r31, 0x0B	; 11
    90ce:	15 82       	std	Z+5, r1	; 0x05
	TCB1.CTRLA = 0; /* Disable timer */
    90d0:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB2.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    90d2:	e0 e2       	ldi	r30, 0x20	; 32
    90d4:	fb e0       	ldi	r31, 0x0B	; 11
    90d6:	15 82       	std	Z+5, r1	; 0x05
	TCB2.CTRLA = 0; /* Disable timer */
    90d8:	10 82       	st	Z, r1

	/********************************************************************************/

	TCB3.INTCTRL = 0; /* OverFlow Interrupt: disabled */
    90da:	e0 e3       	ldi	r30, 0x30	; 48
    90dc:	fb e0       	ldi	r31, 0x0B	; 11
    90de:	15 82       	std	Z+5, r1	; 0x05
	TCB3.CTRLA = 0; /* Disable timer */
    90e0:	10 82       	st	Z, r1


	return 0;
}
    90e2:	80 e0       	ldi	r24, 0x00	; 0
    90e4:	08 95       	ret

000090e6 <_Z14txSetFrequencyPmb>:
	}
	
	void restart_transmitter(void)
	{
		si5351_start_comms();
	}
    90e6:	cf 92       	push	r12
    90e8:	df 92       	push	r13
    90ea:	ef 92       	push	r14
    90ec:	ff 92       	push	r15
    90ee:	cf 93       	push	r28
    90f0:	df 93       	push	r29
    90f2:	26 2f       	mov	r18, r22
    90f4:	00 97       	sbiw	r24, 0x00	; 0
    90f6:	71 f1       	breq	.+92     	; 0x9154 <_Z14txSetFrequencyPmb+0x6e>
    90f8:	fc 01       	movw	r30, r24
    90fa:	c0 80       	ld	r12, Z
    90fc:	d1 80       	ldd	r13, Z+1	; 0x01
    90fe:	e2 80       	ldd	r14, Z+2	; 0x02
    9100:	f3 80       	ldd	r15, Z+3	; 0x03
    9102:	b7 01       	movw	r22, r14
    9104:	a6 01       	movw	r20, r12
    9106:	41 5e       	subi	r20, 0xE1	; 225
    9108:	57 46       	sbci	r21, 0x67	; 103
    910a:	65 43       	sbci	r22, 0x35	; 53
    910c:	71 09       	sbc	r23, r1
    910e:	4f 31       	cpi	r20, 0x1F	; 31
    9110:	51 4a       	sbci	r21, 0xA1	; 161
    9112:	67 40       	sbci	r22, 0x07	; 7
    9114:	71 05       	cpc	r23, r1
    9116:	40 f0       	brcs	.+16     	; 0x9128 <_Z14txSetFrequencyPmb+0x42>
    9118:	81 e0       	ldi	r24, 0x01	; 1
    911a:	df 91       	pop	r29
    911c:	cf 91       	pop	r28
    911e:	ff 90       	pop	r15
    9120:	ef 90       	pop	r14
    9122:	df 90       	pop	r13
    9124:	cf 90       	pop	r12
    9126:	08 95       	ret
    9128:	ec 01       	movw	r28, r24
    912a:	41 e0       	ldi	r20, 0x01	; 1
    912c:	50 e0       	ldi	r21, 0x00	; 0
    912e:	c7 01       	movw	r24, r14
    9130:	b6 01       	movw	r22, r12
    9132:	0e 94 bc 45 	call	0x8b78	; 0x8b78 <si5351_set_freq>
    9136:	81 11       	cpse	r24, r1
    9138:	f0 cf       	rjmp	.-32     	; 0x911a <_Z14txSetFrequencyPmb+0x34>
    913a:	48 81       	ld	r20, Y
    913c:	59 81       	ldd	r21, Y+1	; 0x01
    913e:	6a 81       	ldd	r22, Y+2	; 0x02
    9140:	7b 81       	ldd	r23, Y+3	; 0x03
    9142:	40 93 63 40 	sts	0x4063, r20	; 0x804063 <g_tx_frequency>
    9146:	50 93 64 40 	sts	0x4064, r21	; 0x804064 <g_tx_frequency+0x1>
    914a:	60 93 65 40 	sts	0x4065, r22	; 0x804065 <g_tx_frequency+0x2>
    914e:	70 93 66 40 	sts	0x4066, r23	; 0x804066 <g_tx_frequency+0x3>
    9152:	e3 cf       	rjmp	.-58     	; 0x911a <_Z14txSetFrequencyPmb+0x34>
    9154:	81 e0       	ldi	r24, 0x01	; 1
    9156:	e1 cf       	rjmp	.-62     	; 0x911a <_Z14txSetFrequencyPmb+0x34>

00009158 <_Z14txGetFrequencyv>:
    9158:	60 91 63 40 	lds	r22, 0x4063	; 0x804063 <g_tx_frequency>
    915c:	70 91 64 40 	lds	r23, 0x4064	; 0x804064 <g_tx_frequency+0x1>
    9160:	80 91 65 40 	lds	r24, 0x4065	; 0x804065 <g_tx_frequency+0x2>
    9164:	90 91 66 40 	lds	r25, 0x4066	; 0x804066 <g_tx_frequency+0x3>
    9168:	08 95       	ret

0000916a <_Z18powerToTransmitterb>:
    916a:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <_ZL22g_final_output_setting>
    916e:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <_ZL21g_rf_output_inhibited>
    9172:	91 11       	cpse	r25, r1
    9174:	05 c0       	rjmp	.+10     	; 0x9180 <_Z18powerToTransmitterb+0x16>
    9176:	0e 94 df 48 	call	0x91be	; 0x91be <_Z19final_drain_voltageb>
    917a:	90 e0       	ldi	r25, 0x00	; 0
    917c:	80 e0       	ldi	r24, 0x00	; 0
    917e:	08 95       	ret
    9180:	80 e0       	ldi	r24, 0x00	; 0
    9182:	0e 94 df 48 	call	0x91be	; 0x91be <_Z19final_drain_voltageb>
    9186:	f9 cf       	rjmp	.-14     	; 0x917a <_Z18powerToTransmitterb+0x10>

00009188 <_Z9txKeyDownb>:
    9188:	1f 93       	push	r17
    918a:	cf 93       	push	r28
    918c:	df 93       	push	r29
    918e:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <_ZL16g_tx_initialized>
    9192:	18 2f       	mov	r17, r24
    9194:	ca e0       	ldi	r28, 0x0A	; 10
    9196:	d0 e0       	ldi	r29, 0x00	; 0
    9198:	99 23       	and	r25, r25
    919a:	39 f0       	breq	.+14     	; 0x91aa <_Z9txKeyDownb+0x22>
    919c:	81 2f       	mov	r24, r17
    919e:	0e 94 0e 49 	call	0x921c	; 0x921c <_Z14keyTransmitterb>
    91a2:	81 17       	cp	r24, r17
    91a4:	11 f0       	breq	.+4      	; 0x91aa <_Z9txKeyDownb+0x22>
    91a6:	21 97       	sbiw	r28, 0x01	; 1
    91a8:	c9 f7       	brne	.-14     	; 0x919c <_Z9txKeyDownb+0x14>
    91aa:	df 91       	pop	r29
    91ac:	cf 91       	pop	r28
    91ae:	1f 91       	pop	r17
    91b0:	08 95       	ret

000091b2 <_Z10fet_driverb>:
    91b2:	81 11       	cpse	r24, r1
    91b4:	02 c0       	rjmp	.+4      	; 0x91ba <_Z10fet_driverb+0x8>
    91b6:	0b 98       	cbi	0x01, 3	; 1
    91b8:	08 95       	ret
    91ba:	0b 9a       	sbi	0x01, 3	; 1
    91bc:	08 95       	ret

000091be <_Z19final_drain_voltageb>:
    91be:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <_ZL23g_drain_voltage_enabled>
    91c2:	88 23       	and	r24, r24
    91c4:	31 f0       	breq	.+12     	; 0x91d2 <_Z19final_drain_voltageb+0x14>
    91c6:	80 91 9c 47 	lds	r24, 0x479C	; 0x80479c <_ZL21g_rf_output_inhibited>
    91ca:	81 11       	cpse	r24, r1
    91cc:	03 c0       	rjmp	.+6      	; 0x91d4 <_Z19final_drain_voltageb+0x16>
    91ce:	2d 9a       	sbi	0x05, 5	; 5
    91d0:	08 95       	ret
    91d2:	2d 98       	cbi	0x05, 5	; 5
    91d4:	08 95       	ret

000091d6 <_Z15inhibitRFOutputb>:
    91d6:	cf 93       	push	r28
    91d8:	df 93       	push	r29
    91da:	00 d0       	rcall	.+0      	; 0x91dc <_Z15inhibitRFOutputb+0x6>
    91dc:	cd b7       	in	r28, 0x3d	; 61
    91de:	de b7       	in	r29, 0x3e	; 62
    91e0:	80 93 9c 47 	sts	0x479C, r24	; 0x80479c <_ZL21g_rf_output_inhibited>
    91e4:	88 23       	and	r24, r24
    91e6:	31 f0       	breq	.+12     	; 0x91f4 <_Z15inhibitRFOutputb+0x1e>
    91e8:	2d 98       	cbi	0x05, 5	; 5
    91ea:	0f 90       	pop	r0
    91ec:	0f 90       	pop	r0
    91ee:	df 91       	pop	r29
    91f0:	cf 91       	pop	r28
    91f2:	08 95       	ret
    91f4:	80 91 67 40 	lds	r24, 0x4067	; 0x804067 <g_80m_power_level_mW>
    91f8:	90 91 68 40 	lds	r25, 0x4068	; 0x804068 <g_80m_power_level_mW+0x1>
    91fc:	89 83       	std	Y+1, r24	; 0x01
    91fe:	9a 83       	std	Y+2, r25	; 0x02
    9200:	70 e0       	ldi	r23, 0x00	; 0
    9202:	60 e0       	ldi	r22, 0x00	; 0
    9204:	ce 01       	movw	r24, r28
    9206:	01 96       	adiw	r24, 0x01	; 1
    9208:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_Z15txSetParametersPjPb>
    920c:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <_ZL22g_final_output_setting>
    9210:	88 23       	and	r24, r24
    9212:	11 f0       	breq	.+4      	; 0x9218 <_Z15inhibitRFOutputb+0x42>
    9214:	2d 9a       	sbi	0x05, 5	; 5
    9216:	e9 cf       	rjmp	.-46     	; 0x91ea <_Z15inhibitRFOutputb+0x14>
    9218:	2d 98       	cbi	0x05, 5	; 5
    921a:	e7 cf       	rjmp	.-50     	; 0x91ea <_Z15inhibitRFOutputb+0x14>

0000921c <_Z14keyTransmitterb>:
    921c:	cf 93       	push	r28
    921e:	df 93       	push	r29
    9220:	90 91 99 47 	lds	r25, 0x4799	; 0x804799 <_ZL16g_tx_initialized>
    9224:	99 23       	and	r25, r25
    9226:	69 f1       	breq	.+90     	; 0x9282 <_Z14keyTransmitterb+0x66>
    9228:	88 23       	and	r24, r24
    922a:	d1 f0       	breq	.+52     	; 0x9260 <_Z14keyTransmitterb+0x44>
    922c:	80 91 9d 47 	lds	r24, 0x479D	; 0x80479d <_ZZ14keyTransmitterbE17transmitter_keyed>
    9230:	81 11       	cpse	r24, r1
    9232:	27 c0       	rjmp	.+78     	; 0x9282 <_Z14keyTransmitterb+0x66>
    9234:	c4 e0       	ldi	r28, 0x04	; 4
    9236:	d0 e0       	ldi	r29, 0x00	; 0
    9238:	61 e0       	ldi	r22, 0x01	; 1
    923a:	81 e0       	ldi	r24, 0x01	; 1
    923c:	90 e0       	ldi	r25, 0x00	; 0
    923e:	0e 94 1d 44 	call	0x883a	; 0x883a <si5351_clock_enable>
    9242:	89 2b       	or	r24, r25
    9244:	51 f0       	breq	.+20     	; 0x925a <_Z14keyTransmitterb+0x3e>
    9246:	0e 94 21 40 	call	0x8042	; 0x8042 <si5351_shutdown_comms>
    924a:	0e 94 24 40 	call	0x8048	; 0x8048 <si5351_start_comms>
    924e:	21 97       	sbiw	r28, 0x01	; 1
    9250:	98 f7       	brcc	.-26     	; 0x9238 <_Z14keyTransmitterb+0x1c>
    9252:	81 e0       	ldi	r24, 0x01	; 1
    9254:	80 93 9d 47 	sts	0x479D, r24	; 0x80479d <_ZZ14keyTransmitterbE17transmitter_keyed>
    9258:	14 c0       	rjmp	.+40     	; 0x9282 <_Z14keyTransmitterb+0x66>
    925a:	cd 2b       	or	r28, r29
    925c:	91 f0       	breq	.+36     	; 0x9282 <_Z14keyTransmitterb+0x66>
    925e:	f9 cf       	rjmp	.-14     	; 0x9252 <_Z14keyTransmitterb+0x36>
    9260:	c4 e0       	ldi	r28, 0x04	; 4
    9262:	d0 e0       	ldi	r29, 0x00	; 0
    9264:	60 e0       	ldi	r22, 0x00	; 0
    9266:	81 e0       	ldi	r24, 0x01	; 1
    9268:	90 e0       	ldi	r25, 0x00	; 0
    926a:	0e 94 1d 44 	call	0x883a	; 0x883a <si5351_clock_enable>
    926e:	89 2b       	or	r24, r25
    9270:	69 f0       	breq	.+26     	; 0x928c <_Z14keyTransmitterb+0x70>
    9272:	0e 94 21 40 	call	0x8042	; 0x8042 <si5351_shutdown_comms>
    9276:	0e 94 24 40 	call	0x8048	; 0x8048 <si5351_start_comms>
    927a:	21 97       	sbiw	r28, 0x01	; 1
    927c:	98 f7       	brcc	.-26     	; 0x9264 <_Z14keyTransmitterb+0x48>
    927e:	10 92 9d 47 	sts	0x479D, r1	; 0x80479d <_ZZ14keyTransmitterbE17transmitter_keyed>
    9282:	80 91 9d 47 	lds	r24, 0x479D	; 0x80479d <_ZZ14keyTransmitterbE17transmitter_keyed>
    9286:	df 91       	pop	r29
    9288:	cf 91       	pop	r28
    928a:	08 95       	ret
    928c:	cd 2b       	or	r28, r29
    928e:	c9 f3       	breq	.-14     	; 0x9282 <_Z14keyTransmitterb+0x66>
    9290:	f6 cf       	rjmp	.-20     	; 0x927e <_Z14keyTransmitterb+0x62>

00009292 <_Z12txGetPowerMwv>:
    9292:	80 91 67 40 	lds	r24, 0x4067	; 0x804067 <g_80m_power_level_mW>
    9296:	90 91 68 40 	lds	r25, 0x4068	; 0x804068 <g_80m_power_level_mW+0x1>
    929a:	08 95       	ret

0000929c <_Z15txIsInitializedv>:
    929c:	80 91 99 47 	lds	r24, 0x4799	; 0x804799 <_ZL16g_tx_initialized>
    92a0:	08 95       	ret

000092a2 <_Z15txSetParametersPjPb>:
    92a2:	cf 93       	push	r28
    92a4:	df 93       	push	r29
    92a6:	cd b7       	in	r28, 0x3d	; 61
    92a8:	de b7       	in	r29, 0x3e	; 62
    92aa:	2b 97       	sbiw	r28, 0x0b	; 11
    92ac:	cd bf       	out	0x3d, r28	; 61
    92ae:	de bf       	out	0x3e, r29	; 62
    92b0:	88 87       	std	Y+8, r24	; 0x08
    92b2:	99 87       	std	Y+9, r25	; 0x09
    92b4:	6a 87       	std	Y+10, r22	; 0x0a
    92b6:	7b 87       	std	Y+11, r23	; 0x0b
    92b8:	19 82       	std	Y+1, r1	; 0x01
    92ba:	1a 82       	std	Y+2, r1	; 0x02
    92bc:	1b 82       	std	Y+3, r1	; 0x03
    92be:	1c 82       	std	Y+4, r1	; 0x04
    92c0:	1d 82       	std	Y+5, r1	; 0x05
    92c2:	88 85       	ldd	r24, Y+8	; 0x08
    92c4:	99 85       	ldd	r25, Y+9	; 0x09
    92c6:	89 2b       	or	r24, r25
    92c8:	09 f4       	brne	.+2      	; 0x92cc <_Z15txSetParametersPjPb+0x2a>
    92ca:	6d c0       	rjmp	.+218    	; 0x93a6 <_Z15txSetParametersPjPb+0x104>
    92cc:	88 85       	ldd	r24, Y+8	; 0x08
    92ce:	99 85       	ldd	r25, Y+9	; 0x09
    92d0:	fc 01       	movw	r30, r24
    92d2:	80 81       	ld	r24, Z
    92d4:	91 81       	ldd	r25, Z+1	; 0x01
    92d6:	8c 83       	std	Y+4, r24	; 0x04
    92d8:	9d 83       	std	Y+5, r25	; 0x05
    92da:	8c 81       	ldd	r24, Y+4	; 0x04
    92dc:	9d 81       	ldd	r25, Y+5	; 0x05
    92de:	89 38       	cpi	r24, 0x89	; 137
    92e0:	93 41       	sbci	r25, 0x13	; 19
    92e2:	08 f0       	brcs	.+2      	; 0x92e6 <_Z15txSetParametersPjPb+0x44>
    92e4:	5a c0       	rjmp	.+180    	; 0x939a <_Z15txSetParametersPjPb+0xf8>
    92e6:	9e 01       	movw	r18, r28
    92e8:	2a 5f       	subi	r18, 0xFA	; 250
    92ea:	3f 4f       	sbci	r19, 0xFF	; 255
    92ec:	ce 01       	movw	r24, r28
    92ee:	04 96       	adiw	r24, 0x04	; 4
    92f0:	b9 01       	movw	r22, r18
    92f2:	0e 94 49 4a 	call	0x9492	; 0x9492 <_Z22txMilliwattsToSettingsPjS_>
    92f6:	8a 83       	std	Y+2, r24	; 0x02
    92f8:	9b 83       	std	Y+3, r25	; 0x03
    92fa:	8a 81       	ldd	r24, Y+2	; 0x02
    92fc:	9b 81       	ldd	r25, Y+3	; 0x03
    92fe:	21 e0       	ldi	r18, 0x01	; 1
    9300:	8f 3c       	cpi	r24, 0xCF	; 207
    9302:	91 05       	cpc	r25, r1
    9304:	09 f0       	breq	.+2      	; 0x9308 <_Z15txSetParametersPjPb+0x66>
    9306:	20 e0       	ldi	r18, 0x00	; 0
    9308:	29 83       	std	Y+1, r18	; 0x01
    930a:	8c 81       	ldd	r24, Y+4	; 0x04
    930c:	9d 81       	ldd	r25, Y+5	; 0x05
    930e:	21 e0       	ldi	r18, 0x01	; 1
    9310:	89 2b       	or	r24, r25
    9312:	09 f0       	breq	.+2      	; 0x9316 <_Z15txSetParametersPjPb+0x74>
    9314:	20 e0       	ldi	r18, 0x00	; 0
    9316:	20 93 6d 40 	sts	0x406D, r18	; 0x80406d <g_tx_power_is_zero>
    931a:	99 81       	ldd	r25, Y+1	; 0x01
    931c:	81 e0       	ldi	r24, 0x01	; 1
    931e:	89 27       	eor	r24, r25
    9320:	88 23       	and	r24, r24
    9322:	99 f1       	breq	.+102    	; 0x938a <_Z15txSetParametersPjPb+0xe8>
    9324:	8c 81       	ldd	r24, Y+4	; 0x04
    9326:	9d 81       	ldd	r25, Y+5	; 0x05
    9328:	80 93 67 40 	sts	0x4067, r24	; 0x804067 <g_80m_power_level_mW>
    932c:	90 93 68 40 	sts	0x4068, r25	; 0x804068 <g_80m_power_level_mW+0x1>
    9330:	80 91 c1 43 	lds	r24, 0x43C1	; 0x8043c1 <g_antenna_connect_state>
    9334:	90 91 c2 43 	lds	r25, 0x43C2	; 0x8043c2 <g_antenna_connect_state+0x1>
    9338:	21 e0       	ldi	r18, 0x01	; 1
    933a:	02 97       	sbiw	r24, 0x02	; 2
    933c:	09 f4       	brne	.+2      	; 0x9340 <_Z15txSetParametersPjPb+0x9e>
    933e:	20 e0       	ldi	r18, 0x00	; 0
    9340:	22 23       	and	r18, r18
    9342:	61 f0       	breq	.+24     	; 0x935c <_Z15txSetParametersPjPb+0xba>
    9344:	81 e0       	ldi	r24, 0x01	; 1
    9346:	0e 94 eb 48 	call	0x91d6	; 0x91d6 <_Z15inhibitRFOutputb>
    934a:	81 e0       	ldi	r24, 0x01	; 1
    934c:	80 93 6d 40 	sts	0x406D, r24	; 0x80406d <g_tx_power_is_zero>
    9350:	81 e0       	ldi	r24, 0x01	; 1
    9352:	89 83       	std	Y+1, r24	; 0x01
    9354:	86 ef       	ldi	r24, 0xF6	; 246
    9356:	90 e0       	ldi	r25, 0x00	; 0
    9358:	8a 83       	std	Y+2, r24	; 0x02
    935a:	9b 83       	std	Y+3, r25	; 0x03
    935c:	8e 81       	ldd	r24, Y+6	; 0x06
    935e:	9f 81       	ldd	r25, Y+7	; 0x07
    9360:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_Z11DAC0_setValj>
    9364:	80 91 6d 40 	lds	r24, 0x406D	; 0x80406d <g_tx_power_is_zero>
    9368:	88 23       	and	r24, r24
    936a:	21 f4       	brne	.+8      	; 0x9374 <_Z15txSetParametersPjPb+0xd2>
    936c:	8e 81       	ldd	r24, Y+6	; 0x06
    936e:	9f 81       	ldd	r25, Y+7	; 0x07
    9370:	89 2b       	or	r24, r25
    9372:	11 f4       	brne	.+4      	; 0x9378 <_Z15txSetParametersPjPb+0xd6>
    9374:	81 e0       	ldi	r24, 0x01	; 1
    9376:	01 c0       	rjmp	.+2      	; 0x937a <_Z15txSetParametersPjPb+0xd8>
    9378:	80 e0       	ldi	r24, 0x00	; 0
    937a:	88 23       	and	r24, r24
    937c:	31 f0       	breq	.+12     	; 0x938a <_Z15txSetParametersPjPb+0xe8>
    937e:	80 e0       	ldi	r24, 0x00	; 0
    9380:	0e 94 df 48 	call	0x91be	; 0x91be <_Z19final_drain_voltageb>
    9384:	81 e0       	ldi	r24, 0x01	; 1
    9386:	0e 94 d9 48 	call	0x91b2	; 0x91b2 <_Z10fet_driverb>
    938a:	2c 81       	ldd	r18, Y+4	; 0x04
    938c:	3d 81       	ldd	r19, Y+5	; 0x05
    938e:	88 85       	ldd	r24, Y+8	; 0x08
    9390:	99 85       	ldd	r25, Y+9	; 0x09
    9392:	fc 01       	movw	r30, r24
    9394:	20 83       	st	Z, r18
    9396:	31 83       	std	Z+1, r19	; 0x01
    9398:	06 c0       	rjmp	.+12     	; 0x93a6 <_Z15txSetParametersPjPb+0x104>
    939a:	81 e0       	ldi	r24, 0x01	; 1
    939c:	89 83       	std	Y+1, r24	; 0x01
    939e:	85 ef       	ldi	r24, 0xF5	; 245
    93a0:	90 e0       	ldi	r25, 0x00	; 0
    93a2:	8a 83       	std	Y+2, r24	; 0x02
    93a4:	9b 83       	std	Y+3, r25	; 0x03
    93a6:	99 81       	ldd	r25, Y+1	; 0x01
    93a8:	81 e0       	ldi	r24, 0x01	; 1
    93aa:	89 27       	eor	r24, r25
    93ac:	88 23       	and	r24, r24
    93ae:	51 f0       	breq	.+20     	; 0x93c4 <_Z15txSetParametersPjPb+0x122>
    93b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    93b2:	9b 85       	ldd	r25, Y+11	; 0x0b
    93b4:	89 2b       	or	r24, r25
    93b6:	31 f0       	breq	.+12     	; 0x93c4 <_Z15txSetParametersPjPb+0x122>
    93b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    93ba:	9b 85       	ldd	r25, Y+11	; 0x0b
    93bc:	fc 01       	movw	r30, r24
    93be:	80 81       	ld	r24, Z
    93c0:	0e 94 b5 48 	call	0x916a	; 0x916a <_Z18powerToTransmitterb>
    93c4:	8a 81       	ldd	r24, Y+2	; 0x02
    93c6:	9b 81       	ldd	r25, Y+3	; 0x03
    93c8:	2b 96       	adiw	r28, 0x0b	; 11
    93ca:	cd bf       	out	0x3d, r28	; 61
    93cc:	de bf       	out	0x3e, r29	; 62
    93ce:	df 91       	pop	r29
    93d0:	cf 91       	pop	r28
    93d2:	08 95       	ret

000093d4 <_Z20shutdown_transmitterv>:
    93d4:	0e 94 21 40 	call	0x8042	; 0x8042 <si5351_shutdown_comms>
    93d8:	08 95       	ret

000093da <_Z16init_transmitterm>:

	EC init_transmitter(Frequency_Hz freq)
	{
		g_tx_frequency = freq;
    93da:	60 93 63 40 	sts	0x4063, r22	; 0x804063 <g_tx_frequency>
    93de:	70 93 64 40 	sts	0x4064, r23	; 0x804064 <g_tx_frequency+0x1>
    93e2:	80 93 65 40 	sts	0x4065, r24	; 0x804065 <g_tx_frequency+0x2>
    93e6:	90 93 66 40 	sts	0x4066, r25	; 0x804066 <g_tx_frequency+0x3>
		return init_transmitter();
    93ea:	0e 94 f8 49 	call	0x93f0	; 0x93f0 <_Z16init_transmitterv>
	}
    93ee:	08 95       	ret

000093f0 <_Z16init_transmitterv>:
	
	EC init_transmitter(void)
	{
    93f0:	0f 93       	push	r16
    93f2:	1f 93       	push	r17
    93f4:	cf 93       	push	r28
    93f6:	df 93       	push	r29
    93f8:	00 d0       	rcall	.+0      	; 0x93fa <_Z16init_transmitterv+0xa>
    93fa:	cd b7       	in	r28, 0x3d	; 61
    93fc:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		fet_driver(OFF);		
    93fe:	80 e0       	ldi	r24, 0x00	; 0
    9400:	0e 94 d9 48 	call	0x91b2	; 0x91b2 <_Z10fet_driverb>
		DAC0_init();
    9404:	0e 94 38 28 	call	0x5070	; 0x5070 <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    9408:	40 e0       	ldi	r20, 0x00	; 0
    940a:	50 e0       	ldi	r21, 0x00	; 0
    940c:	ba 01       	movw	r22, r20
    940e:	80 e4       	ldi	r24, 0x40	; 64
    9410:	90 e0       	ldi	r25, 0x00	; 0
    9412:	0e 94 69 43 	call	0x86d2	; 0x86d2 <si5351_init>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    9416:	02 ed       	ldi	r16, 0xD2	; 210
    9418:	10 e0       	ldi	r17, 0x00	; 0
		bool err;
		
		fet_driver(OFF);		
		DAC0_init();

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    941a:	81 11       	cpse	r24, r1
    941c:	09 c0       	rjmp	.+18     	; 0x9430 <_Z16init_transmitterv+0x40>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    941e:	63 e0       	ldi	r22, 0x03	; 3
    9420:	70 e0       	ldi	r23, 0x00	; 0
    9422:	81 e0       	ldi	r24, 0x01	; 1
    9424:	90 e0       	ldi	r25, 0x00	; 0
    9426:	0e 94 5d 44 	call	0x88ba	; 0x88ba <si5351_drive_strength>
    942a:	8c 01       	movw	r16, r24
    942c:	89 2b       	or	r24, r25
    942e:	41 f0       	breq	.+16     	; 0x9440 <_Z16init_transmitterv+0x50>
		}
		
		fet_driver(ON);

		return( code);
	}
    9430:	c8 01       	movw	r24, r16
    9432:	0f 90       	pop	r0
    9434:	0f 90       	pop	r0
    9436:	df 91       	pop	r29
    9438:	cf 91       	pop	r28
    943a:	1f 91       	pop	r17
    943c:	0f 91       	pop	r16
    943e:	08 95       	ret
		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
		{
			return( code);
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    9440:	60 e0       	ldi	r22, 0x00	; 0
    9442:	81 e0       	ldi	r24, 0x01	; 1
    9444:	90 e0       	ldi	r25, 0x00	; 0
    9446:	0e 94 1d 44 	call	0x883a	; 0x883a <si5351_clock_enable>
    944a:	8c 01       	movw	r16, r24
    944c:	89 2b       	or	r24, r25
    944e:	81 f7       	brne	.-32     	; 0x9430 <_Z16init_transmitterv+0x40>
		{
			return( code);
		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    9450:	80 91 67 40 	lds	r24, 0x4067	; 0x804067 <g_80m_power_level_mW>
    9454:	90 91 68 40 	lds	r25, 0x4068	; 0x804068 <g_80m_power_level_mW+0x1>
    9458:	89 83       	std	Y+1, r24	; 0x01
    945a:	9a 83       	std	Y+2, r25	; 0x02
		
		err = txSetFrequency((Frequency_Hz*)&g_tx_frequency, true);
    945c:	61 e0       	ldi	r22, 0x01	; 1
    945e:	83 e6       	ldi	r24, 0x63	; 99
    9460:	90 e4       	ldi	r25, 0x40	; 64
    9462:	0e 94 73 48 	call	0x90e6	; 0x90e6 <_Z14txSetFrequencyPmb>
		if(!err)
    9466:	88 23       	and	r24, r24
    9468:	21 f0       	breq	.+8      	; 0x9472 <_Z16init_transmitterv+0x82>
			{
				g_tx_initialized = true;
			}
		}
		
		fet_driver(ON);
    946a:	81 e0       	ldi	r24, 0x01	; 1
    946c:	0e 94 d9 48 	call	0x91b2	; 0x91b2 <_Z10fet_driverb>

		return( code);
    9470:	df cf       	rjmp	.-66     	; 0x9430 <_Z16init_transmitterv+0x40>
		uint16_t pwr_mW = g_80m_power_level_mW;
		
		err = txSetFrequency((Frequency_Hz*)&g_tx_frequency, true);
		if(!err)
		{
			code = txSetParameters(&pwr_mW, NULL);
    9472:	70 e0       	ldi	r23, 0x00	; 0
    9474:	60 e0       	ldi	r22, 0x00	; 0
    9476:	ce 01       	movw	r24, r28
    9478:	01 96       	adiw	r24, 0x01	; 1
    947a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_Z15txSetParametersPjPb>
    947e:	8c 01       	movw	r16, r24
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    9480:	00 97       	sbiw	r24, 0x00	; 0
    9482:	19 f0       	breq	.+6      	; 0x948a <_Z16init_transmitterv+0x9a>
    9484:	86 3f       	cpi	r24, 0xF6	; 246
    9486:	91 05       	cpc	r25, r1
    9488:	81 f7       	brne	.-32     	; 0x946a <_Z16init_transmitterv+0x7a>
			{
				g_tx_initialized = true;
    948a:	81 e0       	ldi	r24, 0x01	; 1
    948c:	80 93 99 47 	sts	0x4799, r24	; 0x804799 <_ZL16g_tx_initialized>
    9490:	ec cf       	rjmp	.-40     	; 0x946a <_Z16init_transmitterv+0x7a>

00009492 <_Z22txMilliwattsToSettingsPjS_>:
		return( code);
	}


EC txMilliwattsToSettings(uint16_t* powerMW, uint16_t* driveLevel)
{
    9492:	fc 01       	movw	r30, r24
	uint16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    9494:	af ec       	ldi	r26, 0xCF	; 207
    9496:	b0 e0       	ldi	r27, 0x00	; 0
{
	EC ec = ERROR_CODE_NO_ERROR;
	uint16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    9498:	89 2b       	or	r24, r25
    949a:	51 f1       	breq	.+84     	; 0x94f0 <_Z22txMilliwattsToSettingsPjS_+0x5e>
		return(ERROR_CODE_SW_LOGIC_ERROR);
	}

	maxPwr = MAX_TX_POWER_80M_MW;

	if(*powerMW > maxPwr)
    949c:	20 81       	ld	r18, Z
    949e:	31 81       	ldd	r19, Z+1	; 0x01
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    94a0:	a5 ef       	ldi	r26, 0xF5	; 245
    94a2:	b0 e0       	ldi	r27, 0x00	; 0
		return(ERROR_CODE_SW_LOGIC_ERROR);
	}

	maxPwr = MAX_TX_POWER_80M_MW;

	if(*powerMW > maxPwr)
    94a4:	29 38       	cpi	r18, 0x89	; 137
    94a6:	83 e1       	ldi	r24, 0x13	; 19
    94a8:	38 07       	cpc	r19, r24
    94aa:	10 f4       	brcc	.+4      	; 0x94b0 <_Z22txMilliwattsToSettingsPjS_+0x1e>
	}


EC txMilliwattsToSettings(uint16_t* powerMW, uint16_t* driveLevel)
{
	EC ec = ERROR_CODE_NO_ERROR;
    94ac:	b0 e0       	ldi	r27, 0x00	; 0
    94ae:	a0 e0       	ldi	r26, 0x00	; 0
	if(*powerMW > maxPwr)
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
	}

	*powerMW = CLAMP((uint16_t)0, *powerMW, maxPwr);
    94b0:	42 2f       	mov	r20, r18
    94b2:	93 2f       	mov	r25, r19
    94b4:	29 38       	cpi	r18, 0x89	; 137
    94b6:	83 e1       	ldi	r24, 0x13	; 19
    94b8:	38 07       	cpc	r19, r24
    94ba:	10 f0       	brcs	.+4      	; 0x94c0 <_Z22txMilliwattsToSettingsPjS_+0x2e>
    94bc:	48 e8       	ldi	r20, 0x88	; 136
    94be:	93 e1       	ldi	r25, 0x13	; 19
    94c0:	40 83       	st	Z, r20
    94c2:	91 83       	std	Z+1, r25	; 0x01

	if(*powerMW < 5)
    94c4:	25 30       	cpi	r18, 0x05	; 5
    94c6:	31 05       	cpc	r19, r1
    94c8:	a8 f4       	brcc	.+42     	; 0x94f4 <_Z22txMilliwattsToSettingsPjS_+0x62>
	{
		index = 0;
		*powerMW = 0;
    94ca:	10 82       	st	Z, r1
    94cc:	11 82       	std	Z+1, r1	; 0x01

	*powerMW = CLAMP((uint16_t)0, *powerMW, maxPwr);

	if(*powerMW < 5)
	{
		index = 0;
    94ce:	e0 e0       	ldi	r30, 0x00	; 0
	{
		index = 15;
		*powerMW = 5000;
	}

	*driveLevel = g_80m_power_table[index];
    94d0:	f0 e0       	ldi	r31, 0x00	; 0
    94d2:	ee 0f       	add	r30, r30
    94d4:	ff 1f       	adc	r31, r31
    94d6:	e2 59       	subi	r30, 0x92	; 146
    94d8:	ff 4b       	sbci	r31, 0xBF	; 191
    94da:	20 81       	ld	r18, Z
    94dc:	31 81       	ldd	r19, Z+1	; 0x01
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    94de:	21 15       	cp	r18, r1
    94e0:	e4 e0       	ldi	r30, 0x04	; 4
    94e2:	3e 07       	cpc	r19, r30
    94e4:	10 f0       	brcs	.+4      	; 0x94ea <_Z22txMilliwattsToSettingsPjS_+0x58>
    94e6:	20 e0       	ldi	r18, 0x00	; 0
    94e8:	34 e0       	ldi	r19, 0x04	; 4
    94ea:	fb 01       	movw	r30, r22
    94ec:	20 83       	st	Z, r18
    94ee:	31 83       	std	Z+1, r19	; 0x01

	return(ec);
    94f0:	cd 01       	movw	r24, r26
    94f2:	08 95       	ret
	if(*powerMW < 5)
	{
		index = 0;
		*powerMW = 0;
	}
	else if(*powerMW < 50)
    94f4:	22 33       	cpi	r18, 0x32	; 50
    94f6:	31 05       	cpc	r19, r1
    94f8:	30 f4       	brcc	.+12     	; 0x9506 <_Z22txMilliwattsToSettingsPjS_+0x74>
	{
		index = 1;
		*powerMW = 10;
    94fa:	8a e0       	ldi	r24, 0x0A	; 10
    94fc:	90 e0       	ldi	r25, 0x00	; 0
    94fe:	80 83       	st	Z, r24
    9500:	91 83       	std	Z+1, r25	; 0x01
		index = 0;
		*powerMW = 0;
	}
	else if(*powerMW < 50)
	{
		index = 1;
    9502:	e1 e0       	ldi	r30, 0x01	; 1
    9504:	e5 cf       	rjmp	.-54     	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 10;
	}
	else if(*powerMW < 150)
    9506:	26 39       	cpi	r18, 0x96	; 150
    9508:	31 05       	cpc	r19, r1
    950a:	30 f4       	brcc	.+12     	; 0x9518 <_Z22txMilliwattsToSettingsPjS_+0x86>
	{
		index = 2;
		*powerMW = 100;
    950c:	84 e6       	ldi	r24, 0x64	; 100
    950e:	90 e0       	ldi	r25, 0x00	; 0
    9510:	80 83       	st	Z, r24
    9512:	91 83       	std	Z+1, r25	; 0x01
		index = 1;
		*powerMW = 10;
	}
	else if(*powerMW < 150)
	{
		index = 2;
    9514:	e2 e0       	ldi	r30, 0x02	; 2
    9516:	dc cf       	rjmp	.-72     	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 100;
	}
	else if(*powerMW < 250)
    9518:	2a 3f       	cpi	r18, 0xFA	; 250
    951a:	31 05       	cpc	r19, r1
    951c:	30 f4       	brcc	.+12     	; 0x952a <_Z22txMilliwattsToSettingsPjS_+0x98>
	{
		index = 3;
		*powerMW = 200;
    951e:	88 ec       	ldi	r24, 0xC8	; 200
    9520:	90 e0       	ldi	r25, 0x00	; 0
    9522:	80 83       	st	Z, r24
    9524:	91 83       	std	Z+1, r25	; 0x01
		index = 2;
		*powerMW = 100;
	}
	else if(*powerMW < 250)
	{
		index = 3;
    9526:	e3 e0       	ldi	r30, 0x03	; 3
    9528:	d3 cf       	rjmp	.-90     	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 200;
	}
	else if(*powerMW < 350)
    952a:	2e 35       	cpi	r18, 0x5E	; 94
    952c:	81 e0       	ldi	r24, 0x01	; 1
    952e:	38 07       	cpc	r19, r24
    9530:	30 f4       	brcc	.+12     	; 0x953e <_Z22txMilliwattsToSettingsPjS_+0xac>
	{
		index = 4;
		*powerMW = 300;
    9532:	8c e2       	ldi	r24, 0x2C	; 44
    9534:	91 e0       	ldi	r25, 0x01	; 1
    9536:	80 83       	st	Z, r24
    9538:	91 83       	std	Z+1, r25	; 0x01
		index = 3;
		*powerMW = 200;
	}
	else if(*powerMW < 350)
	{
		index = 4;
    953a:	e4 e0       	ldi	r30, 0x04	; 4
    953c:	c9 cf       	rjmp	.-110    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 300;
	}
	else if(*powerMW < 450)
    953e:	22 3c       	cpi	r18, 0xC2	; 194
    9540:	81 e0       	ldi	r24, 0x01	; 1
    9542:	38 07       	cpc	r19, r24
    9544:	30 f4       	brcc	.+12     	; 0x9552 <_Z22txMilliwattsToSettingsPjS_+0xc0>
	{
		index = 5;
		*powerMW = 400;
    9546:	80 e9       	ldi	r24, 0x90	; 144
    9548:	91 e0       	ldi	r25, 0x01	; 1
    954a:	80 83       	st	Z, r24
    954c:	91 83       	std	Z+1, r25	; 0x01
		index = 4;
		*powerMW = 300;
	}
	else if(*powerMW < 450)
	{
		index = 5;
    954e:	e5 e0       	ldi	r30, 0x05	; 5
    9550:	bf cf       	rjmp	.-130    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 400;
	}
	else if(*powerMW < 550)
    9552:	26 32       	cpi	r18, 0x26	; 38
    9554:	82 e0       	ldi	r24, 0x02	; 2
    9556:	38 07       	cpc	r19, r24
    9558:	30 f4       	brcc	.+12     	; 0x9566 <_Z22txMilliwattsToSettingsPjS_+0xd4>
	{
		index = 6;
		*powerMW = 500;
    955a:	84 ef       	ldi	r24, 0xF4	; 244
    955c:	91 e0       	ldi	r25, 0x01	; 1
    955e:	80 83       	st	Z, r24
    9560:	91 83       	std	Z+1, r25	; 0x01
		index = 5;
		*powerMW = 400;
	}
	else if(*powerMW < 550)
	{
		index = 6;
    9562:	e6 e0       	ldi	r30, 0x06	; 6
    9564:	b5 cf       	rjmp	.-150    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 500;
	}
	else if(*powerMW < 650)
    9566:	2a 38       	cpi	r18, 0x8A	; 138
    9568:	82 e0       	ldi	r24, 0x02	; 2
    956a:	38 07       	cpc	r19, r24
    956c:	30 f4       	brcc	.+12     	; 0x957a <_Z22txMilliwattsToSettingsPjS_+0xe8>
	{
		index = 7;
		*powerMW = 600;
    956e:	88 e5       	ldi	r24, 0x58	; 88
    9570:	92 e0       	ldi	r25, 0x02	; 2
    9572:	80 83       	st	Z, r24
    9574:	91 83       	std	Z+1, r25	; 0x01
		index = 6;
		*powerMW = 500;
	}
	else if(*powerMW < 650)
	{
		index = 7;
    9576:	e7 e0       	ldi	r30, 0x07	; 7
    9578:	ab cf       	rjmp	.-170    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 600;
	}
	else if(*powerMW < 900)
    957a:	24 38       	cpi	r18, 0x84	; 132
    957c:	83 e0       	ldi	r24, 0x03	; 3
    957e:	38 07       	cpc	r19, r24
    9580:	30 f4       	brcc	.+12     	; 0x958e <_Z22txMilliwattsToSettingsPjS_+0xfc>
	{
		index = 8;
		*powerMW = 800;
    9582:	80 e2       	ldi	r24, 0x20	; 32
    9584:	93 e0       	ldi	r25, 0x03	; 3
    9586:	80 83       	st	Z, r24
    9588:	91 83       	std	Z+1, r25	; 0x01
		index = 7;
		*powerMW = 600;
	}
	else if(*powerMW < 900)
	{
		index = 8;
    958a:	e8 e0       	ldi	r30, 0x08	; 8
    958c:	a1 cf       	rjmp	.-190    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
    958e:	22 3e       	cpi	r18, 0xE2	; 226
    9590:	84 e0       	ldi	r24, 0x04	; 4
    9592:	38 07       	cpc	r19, r24
    9594:	30 f4       	brcc	.+12     	; 0x95a2 <_Z22txMilliwattsToSettingsPjS_+0x110>
	{
		index = 9;
		*powerMW = 1000;
    9596:	88 ee       	ldi	r24, 0xE8	; 232
    9598:	93 e0       	ldi	r25, 0x03	; 3
    959a:	80 83       	st	Z, r24
    959c:	91 83       	std	Z+1, r25	; 0x01
		index = 8;
		*powerMW = 800;
	}
	else if(*powerMW < 1250)
	{
		index = 9;
    959e:	e9 e0       	ldi	r30, 0x09	; 9
    95a0:	97 cf       	rjmp	.-210    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
    95a2:	26 3d       	cpi	r18, 0xD6	; 214
    95a4:	86 e0       	ldi	r24, 0x06	; 6
    95a6:	38 07       	cpc	r19, r24
    95a8:	30 f4       	brcc	.+12     	; 0x95b6 <_Z22txMilliwattsToSettingsPjS_+0x124>
	{
		index = 10;
		*powerMW = 1500;
    95aa:	8c ed       	ldi	r24, 0xDC	; 220
    95ac:	95 e0       	ldi	r25, 0x05	; 5
    95ae:	80 83       	st	Z, r24
    95b0:	91 83       	std	Z+1, r25	; 0x01
		index = 9;
		*powerMW = 1000;
	}
	else if(*powerMW < 1750)
	{
		index = 10;
    95b2:	ea e0       	ldi	r30, 0x0A	; 10
    95b4:	8d cf       	rjmp	.-230    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
    95b6:	2a 3c       	cpi	r18, 0xCA	; 202
    95b8:	88 e0       	ldi	r24, 0x08	; 8
    95ba:	38 07       	cpc	r19, r24
    95bc:	30 f4       	brcc	.+12     	; 0x95ca <_Z22txMilliwattsToSettingsPjS_+0x138>
	{
		index = 11;
		*powerMW = 2000;
    95be:	80 ed       	ldi	r24, 0xD0	; 208
    95c0:	97 e0       	ldi	r25, 0x07	; 7
    95c2:	80 83       	st	Z, r24
    95c4:	91 83       	std	Z+1, r25	; 0x01
		index = 10;
		*powerMW = 1500;
	}
	else if(*powerMW < 2250)
	{
		index = 11;
    95c6:	eb e0       	ldi	r30, 0x0B	; 11
    95c8:	83 cf       	rjmp	.-250    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
    95ca:	2e 3b       	cpi	r18, 0xBE	; 190
    95cc:	8a e0       	ldi	r24, 0x0A	; 10
    95ce:	38 07       	cpc	r19, r24
    95d0:	30 f4       	brcc	.+12     	; 0x95de <_Z22txMilliwattsToSettingsPjS_+0x14c>
	{
		index = 12;
		*powerMW = 2500;
    95d2:	84 ec       	ldi	r24, 0xC4	; 196
    95d4:	99 e0       	ldi	r25, 0x09	; 9
    95d6:	80 83       	st	Z, r24
    95d8:	91 83       	std	Z+1, r25	; 0x01
		index = 11;
		*powerMW = 2000;
	}
	else if(*powerMW < 2750)
	{
		index = 12;
    95da:	ec e0       	ldi	r30, 0x0C	; 12
    95dc:	79 cf       	rjmp	.-270    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
    95de:	2c 3a       	cpi	r18, 0xAC	; 172
    95e0:	8d e0       	ldi	r24, 0x0D	; 13
    95e2:	38 07       	cpc	r19, r24
    95e4:	30 f4       	brcc	.+12     	; 0x95f2 <_Z22txMilliwattsToSettingsPjS_+0x160>
	{
		index = 13;
		*powerMW = 3000;
    95e6:	88 eb       	ldi	r24, 0xB8	; 184
    95e8:	9b e0       	ldi	r25, 0x0B	; 11
    95ea:	80 83       	st	Z, r24
    95ec:	91 83       	std	Z+1, r25	; 0x01
		index = 12;
		*powerMW = 2500;
	}
	else if(*powerMW < 3500)
	{
		index = 13;
    95ee:	ed e0       	ldi	r30, 0x0D	; 13
    95f0:	6f cf       	rjmp	.-290    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
    95f2:	24 39       	cpi	r18, 0x94	; 148
    95f4:	31 41       	sbci	r19, 0x11	; 17
    95f6:	30 f4       	brcc	.+12     	; 0x9604 <_Z22txMilliwattsToSettingsPjS_+0x172>
	{
		index = 14;
		*powerMW = 4000;
    95f8:	80 ea       	ldi	r24, 0xA0	; 160
    95fa:	9f e0       	ldi	r25, 0x0F	; 15
    95fc:	80 83       	st	Z, r24
    95fe:	91 83       	std	Z+1, r25	; 0x01
		index = 13;
		*powerMW = 3000;
	}
	else if(*powerMW < 4500)
	{
		index = 14;
    9600:	ee e0       	ldi	r30, 0x0E	; 14
    9602:	66 cf       	rjmp	.-308    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>
		*powerMW = 4000;
	}
	else
	{
		index = 15;
		*powerMW = 5000;
    9604:	88 e8       	ldi	r24, 0x88	; 136
    9606:	93 e1       	ldi	r25, 0x13	; 19
    9608:	80 83       	st	Z, r24
    960a:	91 83       	std	Z+1, r25	; 0x01
		index = 14;
		*powerMW = 4000;
	}
	else
	{
		index = 15;
    960c:	ef e0       	ldi	r30, 0x0F	; 15
    960e:	60 cf       	rjmp	.-320    	; 0x94d0 <_Z22txMilliwattsToSettingsPjS_+0x3e>

00009610 <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    9610:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7e0800>
    9614:	08 95       	ret

00009616 <USART1_init>:
    9616:	cf 93       	push	r28
    9618:	c4 2f       	mov	r28, r20
    961a:	f8 94       	cli
    961c:	0e 94 b6 4c 	call	0x996c	; 0x996c <__floatunsisf>
    9620:	20 e0       	ldi	r18, 0x00	; 0
    9622:	30 e0       	ldi	r19, 0x00	; 0
    9624:	40 e8       	ldi	r20, 0x80	; 128
    9626:	51 e4       	ldi	r21, 0x41	; 65
    9628:	0e 94 6d 4d 	call	0x9ada	; 0x9ada <__mulsf3>
    962c:	9b 01       	movw	r18, r22
    962e:	ac 01       	movw	r20, r24
    9630:	60 e0       	ldi	r22, 0x00	; 0
    9632:	7b e1       	ldi	r23, 0x1B	; 27
    9634:	87 eb       	ldi	r24, 0xB7	; 183
    9636:	9e e4       	ldi	r25, 0x4E	; 78
    9638:	0e 94 0e 4c 	call	0x981c	; 0x981c <__divsf3>
    963c:	20 e0       	ldi	r18, 0x00	; 0
    963e:	30 e0       	ldi	r19, 0x00	; 0
    9640:	40 e0       	ldi	r20, 0x00	; 0
    9642:	5f e3       	ldi	r21, 0x3F	; 63
    9644:	0e 94 9d 4b 	call	0x973a	; 0x973a <__addsf3>
    9648:	0e 94 87 4c 	call	0x990e	; 0x990e <__fixunssfsi>
    964c:	e0 e2       	ldi	r30, 0x20	; 32
    964e:	f8 e0       	ldi	r31, 0x08	; 8
    9650:	60 87       	std	Z+8, r22	; 0x08
    9652:	71 87       	std	Z+9, r23	; 0x09
    9654:	80 e8       	ldi	r24, 0x80	; 128
    9656:	85 83       	std	Z+5, r24	; 0x05
    9658:	83 e0       	ldi	r24, 0x03	; 3
    965a:	87 83       	std	Z+7, r24	; 0x07
    965c:	c1 11       	cpse	r28, r1
    965e:	07 c0       	rjmp	.+14     	; 0x966e <USART1_init+0x58>
    9660:	80 ec       	ldi	r24, 0xC0	; 192
    9662:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x7e0826>
    9666:	78 94       	sei
    9668:	80 e0       	ldi	r24, 0x00	; 0
    966a:	cf 91       	pop	r28
    966c:	08 95       	ret
    966e:	84 ec       	ldi	r24, 0xC4	; 196
    9670:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x7e0826>
    9674:	f8 cf       	rjmp	.-16     	; 0x9666 <USART1_init+0x50>

00009676 <USART1_enable>:
    9676:	e0 e2       	ldi	r30, 0x20	; 32
    9678:	f8 e0       	ldi	r31, 0x08	; 8
    967a:	86 81       	ldd	r24, Z+6	; 0x06
    967c:	80 6c       	ori	r24, 0xC0	; 192
    967e:	86 83       	std	Z+6, r24	; 0x06
    9680:	08 95       	ret

00009682 <USART1_enable_tx>:
    9682:	e0 e2       	ldi	r30, 0x20	; 32
    9684:	f8 e0       	ldi	r31, 0x08	; 8
    9686:	86 81       	ldd	r24, Z+6	; 0x06
    9688:	80 64       	ori	r24, 0x40	; 64
    968a:	86 83       	std	Z+6, r24	; 0x06
    968c:	85 81       	ldd	r24, Z+5	; 0x05
    968e:	80 62       	ori	r24, 0x20	; 32
    9690:	85 83       	std	Z+5, r24	; 0x05
    9692:	08 95       	ret

00009694 <USART1_disable>:
    9694:	e0 e2       	ldi	r30, 0x20	; 32
    9696:	f8 e0       	ldi	r31, 0x08	; 8
    9698:	86 81       	ldd	r24, Z+6	; 0x06
    969a:	8f 73       	andi	r24, 0x3F	; 63
    969c:	86 83       	std	Z+6, r24	; 0x06
    969e:	08 95       	ret

000096a0 <USART1_get_data>:
    96a0:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
    96a4:	08 95       	ret

000096a6 <USART4_init>:
    96a6:	cf 93       	push	r28
    96a8:	c4 2f       	mov	r28, r20
    96aa:	0e 94 b6 4c 	call	0x996c	; 0x996c <__floatunsisf>
    96ae:	20 e0       	ldi	r18, 0x00	; 0
    96b0:	30 e0       	ldi	r19, 0x00	; 0
    96b2:	40 e8       	ldi	r20, 0x80	; 128
    96b4:	51 e4       	ldi	r21, 0x41	; 65
    96b6:	0e 94 6d 4d 	call	0x9ada	; 0x9ada <__mulsf3>
    96ba:	9b 01       	movw	r18, r22
    96bc:	ac 01       	movw	r20, r24
    96be:	60 e0       	ldi	r22, 0x00	; 0
    96c0:	7b e1       	ldi	r23, 0x1B	; 27
    96c2:	87 eb       	ldi	r24, 0xB7	; 183
    96c4:	9e e4       	ldi	r25, 0x4E	; 78
    96c6:	0e 94 0e 4c 	call	0x981c	; 0x981c <__divsf3>
    96ca:	20 e0       	ldi	r18, 0x00	; 0
    96cc:	30 e0       	ldi	r19, 0x00	; 0
    96ce:	40 e0       	ldi	r20, 0x00	; 0
    96d0:	5f e3       	ldi	r21, 0x3F	; 63
    96d2:	0e 94 9d 4b 	call	0x973a	; 0x973a <__addsf3>
    96d6:	0e 94 87 4c 	call	0x990e	; 0x990e <__fixunssfsi>
    96da:	e0 e8       	ldi	r30, 0x80	; 128
    96dc:	f8 e0       	ldi	r31, 0x08	; 8
    96de:	60 87       	std	Z+8, r22	; 0x08
    96e0:	71 87       	std	Z+9, r23	; 0x09
    96e2:	80 e8       	ldi	r24, 0x80	; 128
    96e4:	85 83       	std	Z+5, r24	; 0x05
    96e6:	c1 11       	cpse	r28, r1
    96e8:	06 c0       	rjmp	.+12     	; 0x96f6 <USART4_init+0x50>
    96ea:	80 ec       	ldi	r24, 0xC0	; 192
    96ec:	80 93 86 08 	sts	0x0886, r24	; 0x800886 <__TEXT_REGION_LENGTH__+0x7e0886>
    96f0:	80 e0       	ldi	r24, 0x00	; 0
    96f2:	cf 91       	pop	r28
    96f4:	08 95       	ret
    96f6:	84 ec       	ldi	r24, 0xC4	; 196
    96f8:	80 93 86 08 	sts	0x0886, r24	; 0x800886 <__TEXT_REGION_LENGTH__+0x7e0886>
    96fc:	f9 cf       	rjmp	.-14     	; 0x96f0 <USART4_init+0x4a>

000096fe <USART4_enable>:
    96fe:	e0 e8       	ldi	r30, 0x80	; 128
    9700:	f8 e0       	ldi	r31, 0x08	; 8
    9702:	86 81       	ldd	r24, Z+6	; 0x06
    9704:	80 6c       	ori	r24, 0xC0	; 192
    9706:	86 83       	std	Z+6, r24	; 0x06
    9708:	08 95       	ret

0000970a <USART4_enable_tx>:
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
	USART4.CTRLB |= USART_TXEN_bm;
    970a:	e0 e8       	ldi	r30, 0x80	; 128
    970c:	f8 e0       	ldi	r31, 0x08	; 8
    970e:	86 81       	ldd	r24, Z+6	; 0x06
    9710:	80 64       	ori	r24, 0x40	; 64
    9712:	86 83       	std	Z+6, r24	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    9714:	85 81       	ldd	r24, Z+5	; 0x05
    9716:	80 62       	ori	r24, 0x20	; 32
    9718:	85 83       	std	Z+5, r24	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    971a:	08 95       	ret

0000971c <USART4_disable>:
 *
 * \return Nothing
 */
void USART4_disable()
{
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    971c:	e0 e8       	ldi	r30, 0x80	; 128
    971e:	f8 e0       	ldi	r31, 0x08	; 8
    9720:	86 81       	ldd	r24, Z+6	; 0x06
    9722:	8f 73       	andi	r24, 0x3F	; 63
    9724:	86 83       	std	Z+6, r24	; 0x06
}
    9726:	08 95       	ret

00009728 <USART4_get_data>:
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
	return USART4.RXDATAL;
    9728:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <__TEXT_REGION_LENGTH__+0x7e0880>
}
    972c:	08 95       	ret

0000972e <_Z7timeDifmm>:
{
	int32_t dif; // = difftime(now, g_event_start_epoch); // returns arg1 - arg2
	if(a > b)
		dif = a - b;
	else
		dif = -(b - a);
    972e:	62 1b       	sub	r22, r18
    9730:	73 0b       	sbc	r23, r19
    9732:	84 0b       	sbc	r24, r20
    9734:	95 0b       	sbc	r25, r21

	return dif;
}
    9736:	08 95       	ret

00009738 <__subsf3>:
    9738:	50 58       	subi	r21, 0x80	; 128

0000973a <__addsf3>:
    973a:	bb 27       	eor	r27, r27
    973c:	aa 27       	eor	r26, r26
    973e:	0e 94 b4 4b 	call	0x9768	; 0x9768 <__addsf3x>
    9742:	0c 94 2e 4d 	jmp	0x9a5c	; 0x9a5c <__fp_round>
    9746:	0e 94 20 4d 	call	0x9a40	; 0x9a40 <__fp_pscA>
    974a:	38 f0       	brcs	.+14     	; 0x975a <__addsf3+0x20>
    974c:	0e 94 27 4d 	call	0x9a4e	; 0x9a4e <__fp_pscB>
    9750:	20 f0       	brcs	.+8      	; 0x975a <__addsf3+0x20>
    9752:	39 f4       	brne	.+14     	; 0x9762 <__addsf3+0x28>
    9754:	9f 3f       	cpi	r25, 0xFF	; 255
    9756:	19 f4       	brne	.+6      	; 0x975e <__addsf3+0x24>
    9758:	26 f4       	brtc	.+8      	; 0x9762 <__addsf3+0x28>
    975a:	0c 94 1d 4d 	jmp	0x9a3a	; 0x9a3a <__fp_nan>
    975e:	0e f4       	brtc	.+2      	; 0x9762 <__addsf3+0x28>
    9760:	e0 95       	com	r30
    9762:	e7 fb       	bst	r30, 7
    9764:	0c 94 17 4d 	jmp	0x9a2e	; 0x9a2e <__fp_inf>

00009768 <__addsf3x>:
    9768:	e9 2f       	mov	r30, r25
    976a:	0e 94 3f 4d 	call	0x9a7e	; 0x9a7e <__fp_split3>
    976e:	58 f3       	brcs	.-42     	; 0x9746 <__addsf3+0xc>
    9770:	ba 17       	cp	r27, r26
    9772:	62 07       	cpc	r22, r18
    9774:	73 07       	cpc	r23, r19
    9776:	84 07       	cpc	r24, r20
    9778:	95 07       	cpc	r25, r21
    977a:	20 f0       	brcs	.+8      	; 0x9784 <__addsf3x+0x1c>
    977c:	79 f4       	brne	.+30     	; 0x979c <__addsf3x+0x34>
    977e:	a6 f5       	brtc	.+104    	; 0x97e8 <__addsf3x+0x80>
    9780:	0c 94 61 4d 	jmp	0x9ac2	; 0x9ac2 <__fp_zero>
    9784:	0e f4       	brtc	.+2      	; 0x9788 <__addsf3x+0x20>
    9786:	e0 95       	com	r30
    9788:	0b 2e       	mov	r0, r27
    978a:	ba 2f       	mov	r27, r26
    978c:	a0 2d       	mov	r26, r0
    978e:	0b 01       	movw	r0, r22
    9790:	b9 01       	movw	r22, r18
    9792:	90 01       	movw	r18, r0
    9794:	0c 01       	movw	r0, r24
    9796:	ca 01       	movw	r24, r20
    9798:	a0 01       	movw	r20, r0
    979a:	11 24       	eor	r1, r1
    979c:	ff 27       	eor	r31, r31
    979e:	59 1b       	sub	r21, r25
    97a0:	99 f0       	breq	.+38     	; 0x97c8 <__addsf3x+0x60>
    97a2:	59 3f       	cpi	r21, 0xF9	; 249
    97a4:	50 f4       	brcc	.+20     	; 0x97ba <__addsf3x+0x52>
    97a6:	50 3e       	cpi	r21, 0xE0	; 224
    97a8:	68 f1       	brcs	.+90     	; 0x9804 <__addsf3x+0x9c>
    97aa:	1a 16       	cp	r1, r26
    97ac:	f0 40       	sbci	r31, 0x00	; 0
    97ae:	a2 2f       	mov	r26, r18
    97b0:	23 2f       	mov	r18, r19
    97b2:	34 2f       	mov	r19, r20
    97b4:	44 27       	eor	r20, r20
    97b6:	58 5f       	subi	r21, 0xF8	; 248
    97b8:	f3 cf       	rjmp	.-26     	; 0x97a0 <__addsf3x+0x38>
    97ba:	46 95       	lsr	r20
    97bc:	37 95       	ror	r19
    97be:	27 95       	ror	r18
    97c0:	a7 95       	ror	r26
    97c2:	f0 40       	sbci	r31, 0x00	; 0
    97c4:	53 95       	inc	r21
    97c6:	c9 f7       	brne	.-14     	; 0x97ba <__addsf3x+0x52>
    97c8:	7e f4       	brtc	.+30     	; 0x97e8 <__addsf3x+0x80>
    97ca:	1f 16       	cp	r1, r31
    97cc:	ba 0b       	sbc	r27, r26
    97ce:	62 0b       	sbc	r22, r18
    97d0:	73 0b       	sbc	r23, r19
    97d2:	84 0b       	sbc	r24, r20
    97d4:	ba f0       	brmi	.+46     	; 0x9804 <__addsf3x+0x9c>
    97d6:	91 50       	subi	r25, 0x01	; 1
    97d8:	a1 f0       	breq	.+40     	; 0x9802 <__addsf3x+0x9a>
    97da:	ff 0f       	add	r31, r31
    97dc:	bb 1f       	adc	r27, r27
    97de:	66 1f       	adc	r22, r22
    97e0:	77 1f       	adc	r23, r23
    97e2:	88 1f       	adc	r24, r24
    97e4:	c2 f7       	brpl	.-16     	; 0x97d6 <__addsf3x+0x6e>
    97e6:	0e c0       	rjmp	.+28     	; 0x9804 <__addsf3x+0x9c>
    97e8:	ba 0f       	add	r27, r26
    97ea:	62 1f       	adc	r22, r18
    97ec:	73 1f       	adc	r23, r19
    97ee:	84 1f       	adc	r24, r20
    97f0:	48 f4       	brcc	.+18     	; 0x9804 <__addsf3x+0x9c>
    97f2:	87 95       	ror	r24
    97f4:	77 95       	ror	r23
    97f6:	67 95       	ror	r22
    97f8:	b7 95       	ror	r27
    97fa:	f7 95       	ror	r31
    97fc:	9e 3f       	cpi	r25, 0xFE	; 254
    97fe:	08 f0       	brcs	.+2      	; 0x9802 <__addsf3x+0x9a>
    9800:	b0 cf       	rjmp	.-160    	; 0x9762 <__addsf3+0x28>
    9802:	93 95       	inc	r25
    9804:	88 0f       	add	r24, r24
    9806:	08 f0       	brcs	.+2      	; 0x980a <__addsf3x+0xa2>
    9808:	99 27       	eor	r25, r25
    980a:	ee 0f       	add	r30, r30
    980c:	97 95       	ror	r25
    980e:	87 95       	ror	r24
    9810:	08 95       	ret

00009812 <__cmpsf2>:
    9812:	0e 94 f3 4c 	call	0x99e6	; 0x99e6 <__fp_cmp>
    9816:	08 f4       	brcc	.+2      	; 0x981a <__cmpsf2+0x8>
    9818:	81 e0       	ldi	r24, 0x01	; 1
    981a:	08 95       	ret

0000981c <__divsf3>:
    981c:	0e 94 22 4c 	call	0x9844	; 0x9844 <__divsf3x>
    9820:	0c 94 2e 4d 	jmp	0x9a5c	; 0x9a5c <__fp_round>
    9824:	0e 94 27 4d 	call	0x9a4e	; 0x9a4e <__fp_pscB>
    9828:	58 f0       	brcs	.+22     	; 0x9840 <__divsf3+0x24>
    982a:	0e 94 20 4d 	call	0x9a40	; 0x9a40 <__fp_pscA>
    982e:	40 f0       	brcs	.+16     	; 0x9840 <__divsf3+0x24>
    9830:	29 f4       	brne	.+10     	; 0x983c <__divsf3+0x20>
    9832:	5f 3f       	cpi	r21, 0xFF	; 255
    9834:	29 f0       	breq	.+10     	; 0x9840 <__divsf3+0x24>
    9836:	0c 94 17 4d 	jmp	0x9a2e	; 0x9a2e <__fp_inf>
    983a:	51 11       	cpse	r21, r1
    983c:	0c 94 62 4d 	jmp	0x9ac4	; 0x9ac4 <__fp_szero>
    9840:	0c 94 1d 4d 	jmp	0x9a3a	; 0x9a3a <__fp_nan>

00009844 <__divsf3x>:
    9844:	0e 94 3f 4d 	call	0x9a7e	; 0x9a7e <__fp_split3>
    9848:	68 f3       	brcs	.-38     	; 0x9824 <__divsf3+0x8>

0000984a <__divsf3_pse>:
    984a:	99 23       	and	r25, r25
    984c:	b1 f3       	breq	.-20     	; 0x983a <__divsf3+0x1e>
    984e:	55 23       	and	r21, r21
    9850:	91 f3       	breq	.-28     	; 0x9836 <__divsf3+0x1a>
    9852:	95 1b       	sub	r25, r21
    9854:	55 0b       	sbc	r21, r21
    9856:	bb 27       	eor	r27, r27
    9858:	aa 27       	eor	r26, r26
    985a:	62 17       	cp	r22, r18
    985c:	73 07       	cpc	r23, r19
    985e:	84 07       	cpc	r24, r20
    9860:	38 f0       	brcs	.+14     	; 0x9870 <__divsf3_pse+0x26>
    9862:	9f 5f       	subi	r25, 0xFF	; 255
    9864:	5f 4f       	sbci	r21, 0xFF	; 255
    9866:	22 0f       	add	r18, r18
    9868:	33 1f       	adc	r19, r19
    986a:	44 1f       	adc	r20, r20
    986c:	aa 1f       	adc	r26, r26
    986e:	a9 f3       	breq	.-22     	; 0x985a <__divsf3_pse+0x10>
    9870:	35 d0       	rcall	.+106    	; 0x98dc <__divsf3_pse+0x92>
    9872:	0e 2e       	mov	r0, r30
    9874:	3a f0       	brmi	.+14     	; 0x9884 <__divsf3_pse+0x3a>
    9876:	e0 e8       	ldi	r30, 0x80	; 128
    9878:	32 d0       	rcall	.+100    	; 0x98de <__divsf3_pse+0x94>
    987a:	91 50       	subi	r25, 0x01	; 1
    987c:	50 40       	sbci	r21, 0x00	; 0
    987e:	e6 95       	lsr	r30
    9880:	00 1c       	adc	r0, r0
    9882:	ca f7       	brpl	.-14     	; 0x9876 <__divsf3_pse+0x2c>
    9884:	2b d0       	rcall	.+86     	; 0x98dc <__divsf3_pse+0x92>
    9886:	fe 2f       	mov	r31, r30
    9888:	29 d0       	rcall	.+82     	; 0x98dc <__divsf3_pse+0x92>
    988a:	66 0f       	add	r22, r22
    988c:	77 1f       	adc	r23, r23
    988e:	88 1f       	adc	r24, r24
    9890:	bb 1f       	adc	r27, r27
    9892:	26 17       	cp	r18, r22
    9894:	37 07       	cpc	r19, r23
    9896:	48 07       	cpc	r20, r24
    9898:	ab 07       	cpc	r26, r27
    989a:	b0 e8       	ldi	r27, 0x80	; 128
    989c:	09 f0       	breq	.+2      	; 0x98a0 <__divsf3_pse+0x56>
    989e:	bb 0b       	sbc	r27, r27
    98a0:	80 2d       	mov	r24, r0
    98a2:	bf 01       	movw	r22, r30
    98a4:	ff 27       	eor	r31, r31
    98a6:	93 58       	subi	r25, 0x83	; 131
    98a8:	5f 4f       	sbci	r21, 0xFF	; 255
    98aa:	3a f0       	brmi	.+14     	; 0x98ba <__divsf3_pse+0x70>
    98ac:	9e 3f       	cpi	r25, 0xFE	; 254
    98ae:	51 05       	cpc	r21, r1
    98b0:	78 f0       	brcs	.+30     	; 0x98d0 <__divsf3_pse+0x86>
    98b2:	0c 94 17 4d 	jmp	0x9a2e	; 0x9a2e <__fp_inf>
    98b6:	0c 94 62 4d 	jmp	0x9ac4	; 0x9ac4 <__fp_szero>
    98ba:	5f 3f       	cpi	r21, 0xFF	; 255
    98bc:	e4 f3       	brlt	.-8      	; 0x98b6 <__divsf3_pse+0x6c>
    98be:	98 3e       	cpi	r25, 0xE8	; 232
    98c0:	d4 f3       	brlt	.-12     	; 0x98b6 <__divsf3_pse+0x6c>
    98c2:	86 95       	lsr	r24
    98c4:	77 95       	ror	r23
    98c6:	67 95       	ror	r22
    98c8:	b7 95       	ror	r27
    98ca:	f7 95       	ror	r31
    98cc:	9f 5f       	subi	r25, 0xFF	; 255
    98ce:	c9 f7       	brne	.-14     	; 0x98c2 <__divsf3_pse+0x78>
    98d0:	88 0f       	add	r24, r24
    98d2:	91 1d       	adc	r25, r1
    98d4:	96 95       	lsr	r25
    98d6:	87 95       	ror	r24
    98d8:	97 f9       	bld	r25, 7
    98da:	08 95       	ret
    98dc:	e1 e0       	ldi	r30, 0x01	; 1
    98de:	66 0f       	add	r22, r22
    98e0:	77 1f       	adc	r23, r23
    98e2:	88 1f       	adc	r24, r24
    98e4:	bb 1f       	adc	r27, r27
    98e6:	62 17       	cp	r22, r18
    98e8:	73 07       	cpc	r23, r19
    98ea:	84 07       	cpc	r24, r20
    98ec:	ba 07       	cpc	r27, r26
    98ee:	20 f0       	brcs	.+8      	; 0x98f8 <__divsf3_pse+0xae>
    98f0:	62 1b       	sub	r22, r18
    98f2:	73 0b       	sbc	r23, r19
    98f4:	84 0b       	sbc	r24, r20
    98f6:	ba 0b       	sbc	r27, r26
    98f8:	ee 1f       	adc	r30, r30
    98fa:	88 f7       	brcc	.-30     	; 0x98de <__divsf3_pse+0x94>
    98fc:	e0 95       	com	r30
    98fe:	08 95       	ret

00009900 <__fixsfsi>:
    9900:	0e 94 87 4c 	call	0x990e	; 0x990e <__fixunssfsi>
    9904:	68 94       	set
    9906:	b1 11       	cpse	r27, r1
    9908:	0c 94 62 4d 	jmp	0x9ac4	; 0x9ac4 <__fp_szero>
    990c:	08 95       	ret

0000990e <__fixunssfsi>:
    990e:	0e 94 47 4d 	call	0x9a8e	; 0x9a8e <__fp_splitA>
    9912:	88 f0       	brcs	.+34     	; 0x9936 <__fixunssfsi+0x28>
    9914:	9f 57       	subi	r25, 0x7F	; 127
    9916:	98 f0       	brcs	.+38     	; 0x993e <__fixunssfsi+0x30>
    9918:	b9 2f       	mov	r27, r25
    991a:	99 27       	eor	r25, r25
    991c:	b7 51       	subi	r27, 0x17	; 23
    991e:	b0 f0       	brcs	.+44     	; 0x994c <__fixunssfsi+0x3e>
    9920:	e1 f0       	breq	.+56     	; 0x995a <__fixunssfsi+0x4c>
    9922:	66 0f       	add	r22, r22
    9924:	77 1f       	adc	r23, r23
    9926:	88 1f       	adc	r24, r24
    9928:	99 1f       	adc	r25, r25
    992a:	1a f0       	brmi	.+6      	; 0x9932 <__fixunssfsi+0x24>
    992c:	ba 95       	dec	r27
    992e:	c9 f7       	brne	.-14     	; 0x9922 <__fixunssfsi+0x14>
    9930:	14 c0       	rjmp	.+40     	; 0x995a <__fixunssfsi+0x4c>
    9932:	b1 30       	cpi	r27, 0x01	; 1
    9934:	91 f0       	breq	.+36     	; 0x995a <__fixunssfsi+0x4c>
    9936:	0e 94 61 4d 	call	0x9ac2	; 0x9ac2 <__fp_zero>
    993a:	b1 e0       	ldi	r27, 0x01	; 1
    993c:	08 95       	ret
    993e:	0c 94 61 4d 	jmp	0x9ac2	; 0x9ac2 <__fp_zero>
    9942:	67 2f       	mov	r22, r23
    9944:	78 2f       	mov	r23, r24
    9946:	88 27       	eor	r24, r24
    9948:	b8 5f       	subi	r27, 0xF8	; 248
    994a:	39 f0       	breq	.+14     	; 0x995a <__fixunssfsi+0x4c>
    994c:	b9 3f       	cpi	r27, 0xF9	; 249
    994e:	cc f3       	brlt	.-14     	; 0x9942 <__fixunssfsi+0x34>
    9950:	86 95       	lsr	r24
    9952:	77 95       	ror	r23
    9954:	67 95       	ror	r22
    9956:	b3 95       	inc	r27
    9958:	d9 f7       	brne	.-10     	; 0x9950 <__fixunssfsi+0x42>
    995a:	3e f4       	brtc	.+14     	; 0x996a <__fixunssfsi+0x5c>
    995c:	90 95       	com	r25
    995e:	80 95       	com	r24
    9960:	70 95       	com	r23
    9962:	61 95       	neg	r22
    9964:	7f 4f       	sbci	r23, 0xFF	; 255
    9966:	8f 4f       	sbci	r24, 0xFF	; 255
    9968:	9f 4f       	sbci	r25, 0xFF	; 255
    996a:	08 95       	ret

0000996c <__floatunsisf>:
    996c:	e8 94       	clt
    996e:	09 c0       	rjmp	.+18     	; 0x9982 <__floatsisf+0x12>

00009970 <__floatsisf>:
    9970:	97 fb       	bst	r25, 7
    9972:	3e f4       	brtc	.+14     	; 0x9982 <__floatsisf+0x12>
    9974:	90 95       	com	r25
    9976:	80 95       	com	r24
    9978:	70 95       	com	r23
    997a:	61 95       	neg	r22
    997c:	7f 4f       	sbci	r23, 0xFF	; 255
    997e:	8f 4f       	sbci	r24, 0xFF	; 255
    9980:	9f 4f       	sbci	r25, 0xFF	; 255
    9982:	99 23       	and	r25, r25
    9984:	a9 f0       	breq	.+42     	; 0x99b0 <__floatsisf+0x40>
    9986:	f9 2f       	mov	r31, r25
    9988:	96 e9       	ldi	r25, 0x96	; 150
    998a:	bb 27       	eor	r27, r27
    998c:	93 95       	inc	r25
    998e:	f6 95       	lsr	r31
    9990:	87 95       	ror	r24
    9992:	77 95       	ror	r23
    9994:	67 95       	ror	r22
    9996:	b7 95       	ror	r27
    9998:	f1 11       	cpse	r31, r1
    999a:	f8 cf       	rjmp	.-16     	; 0x998c <__floatsisf+0x1c>
    999c:	fa f4       	brpl	.+62     	; 0x99dc <__floatsisf+0x6c>
    999e:	bb 0f       	add	r27, r27
    99a0:	11 f4       	brne	.+4      	; 0x99a6 <__floatsisf+0x36>
    99a2:	60 ff       	sbrs	r22, 0
    99a4:	1b c0       	rjmp	.+54     	; 0x99dc <__floatsisf+0x6c>
    99a6:	6f 5f       	subi	r22, 0xFF	; 255
    99a8:	7f 4f       	sbci	r23, 0xFF	; 255
    99aa:	8f 4f       	sbci	r24, 0xFF	; 255
    99ac:	9f 4f       	sbci	r25, 0xFF	; 255
    99ae:	16 c0       	rjmp	.+44     	; 0x99dc <__floatsisf+0x6c>
    99b0:	88 23       	and	r24, r24
    99b2:	11 f0       	breq	.+4      	; 0x99b8 <__floatsisf+0x48>
    99b4:	96 e9       	ldi	r25, 0x96	; 150
    99b6:	11 c0       	rjmp	.+34     	; 0x99da <__floatsisf+0x6a>
    99b8:	77 23       	and	r23, r23
    99ba:	21 f0       	breq	.+8      	; 0x99c4 <__floatsisf+0x54>
    99bc:	9e e8       	ldi	r25, 0x8E	; 142
    99be:	87 2f       	mov	r24, r23
    99c0:	76 2f       	mov	r23, r22
    99c2:	05 c0       	rjmp	.+10     	; 0x99ce <__floatsisf+0x5e>
    99c4:	66 23       	and	r22, r22
    99c6:	71 f0       	breq	.+28     	; 0x99e4 <__floatsisf+0x74>
    99c8:	96 e8       	ldi	r25, 0x86	; 134
    99ca:	86 2f       	mov	r24, r22
    99cc:	70 e0       	ldi	r23, 0x00	; 0
    99ce:	60 e0       	ldi	r22, 0x00	; 0
    99d0:	2a f0       	brmi	.+10     	; 0x99dc <__floatsisf+0x6c>
    99d2:	9a 95       	dec	r25
    99d4:	66 0f       	add	r22, r22
    99d6:	77 1f       	adc	r23, r23
    99d8:	88 1f       	adc	r24, r24
    99da:	da f7       	brpl	.-10     	; 0x99d2 <__floatsisf+0x62>
    99dc:	88 0f       	add	r24, r24
    99de:	96 95       	lsr	r25
    99e0:	87 95       	ror	r24
    99e2:	97 f9       	bld	r25, 7
    99e4:	08 95       	ret

000099e6 <__fp_cmp>:
    99e6:	99 0f       	add	r25, r25
    99e8:	00 08       	sbc	r0, r0
    99ea:	55 0f       	add	r21, r21
    99ec:	aa 0b       	sbc	r26, r26
    99ee:	e0 e8       	ldi	r30, 0x80	; 128
    99f0:	fe ef       	ldi	r31, 0xFE	; 254
    99f2:	16 16       	cp	r1, r22
    99f4:	17 06       	cpc	r1, r23
    99f6:	e8 07       	cpc	r30, r24
    99f8:	f9 07       	cpc	r31, r25
    99fa:	c0 f0       	brcs	.+48     	; 0x9a2c <__fp_cmp+0x46>
    99fc:	12 16       	cp	r1, r18
    99fe:	13 06       	cpc	r1, r19
    9a00:	e4 07       	cpc	r30, r20
    9a02:	f5 07       	cpc	r31, r21
    9a04:	98 f0       	brcs	.+38     	; 0x9a2c <__fp_cmp+0x46>
    9a06:	62 1b       	sub	r22, r18
    9a08:	73 0b       	sbc	r23, r19
    9a0a:	84 0b       	sbc	r24, r20
    9a0c:	95 0b       	sbc	r25, r21
    9a0e:	39 f4       	brne	.+14     	; 0x9a1e <__fp_cmp+0x38>
    9a10:	0a 26       	eor	r0, r26
    9a12:	61 f0       	breq	.+24     	; 0x9a2c <__fp_cmp+0x46>
    9a14:	23 2b       	or	r18, r19
    9a16:	24 2b       	or	r18, r20
    9a18:	25 2b       	or	r18, r21
    9a1a:	21 f4       	brne	.+8      	; 0x9a24 <__fp_cmp+0x3e>
    9a1c:	08 95       	ret
    9a1e:	0a 26       	eor	r0, r26
    9a20:	09 f4       	brne	.+2      	; 0x9a24 <__fp_cmp+0x3e>
    9a22:	a1 40       	sbci	r26, 0x01	; 1
    9a24:	a6 95       	lsr	r26
    9a26:	8f ef       	ldi	r24, 0xFF	; 255
    9a28:	81 1d       	adc	r24, r1
    9a2a:	81 1d       	adc	r24, r1
    9a2c:	08 95       	ret

00009a2e <__fp_inf>:
    9a2e:	97 f9       	bld	r25, 7
    9a30:	9f 67       	ori	r25, 0x7F	; 127
    9a32:	80 e8       	ldi	r24, 0x80	; 128
    9a34:	70 e0       	ldi	r23, 0x00	; 0
    9a36:	60 e0       	ldi	r22, 0x00	; 0
    9a38:	08 95       	ret

00009a3a <__fp_nan>:
    9a3a:	9f ef       	ldi	r25, 0xFF	; 255
    9a3c:	80 ec       	ldi	r24, 0xC0	; 192
    9a3e:	08 95       	ret

00009a40 <__fp_pscA>:
    9a40:	00 24       	eor	r0, r0
    9a42:	0a 94       	dec	r0
    9a44:	16 16       	cp	r1, r22
    9a46:	17 06       	cpc	r1, r23
    9a48:	18 06       	cpc	r1, r24
    9a4a:	09 06       	cpc	r0, r25
    9a4c:	08 95       	ret

00009a4e <__fp_pscB>:
    9a4e:	00 24       	eor	r0, r0
    9a50:	0a 94       	dec	r0
    9a52:	12 16       	cp	r1, r18
    9a54:	13 06       	cpc	r1, r19
    9a56:	14 06       	cpc	r1, r20
    9a58:	05 06       	cpc	r0, r21
    9a5a:	08 95       	ret

00009a5c <__fp_round>:
    9a5c:	09 2e       	mov	r0, r25
    9a5e:	03 94       	inc	r0
    9a60:	00 0c       	add	r0, r0
    9a62:	11 f4       	brne	.+4      	; 0x9a68 <__fp_round+0xc>
    9a64:	88 23       	and	r24, r24
    9a66:	52 f0       	brmi	.+20     	; 0x9a7c <__fp_round+0x20>
    9a68:	bb 0f       	add	r27, r27
    9a6a:	40 f4       	brcc	.+16     	; 0x9a7c <__fp_round+0x20>
    9a6c:	bf 2b       	or	r27, r31
    9a6e:	11 f4       	brne	.+4      	; 0x9a74 <__fp_round+0x18>
    9a70:	60 ff       	sbrs	r22, 0
    9a72:	04 c0       	rjmp	.+8      	; 0x9a7c <__fp_round+0x20>
    9a74:	6f 5f       	subi	r22, 0xFF	; 255
    9a76:	7f 4f       	sbci	r23, 0xFF	; 255
    9a78:	8f 4f       	sbci	r24, 0xFF	; 255
    9a7a:	9f 4f       	sbci	r25, 0xFF	; 255
    9a7c:	08 95       	ret

00009a7e <__fp_split3>:
    9a7e:	57 fd       	sbrc	r21, 7
    9a80:	90 58       	subi	r25, 0x80	; 128
    9a82:	44 0f       	add	r20, r20
    9a84:	55 1f       	adc	r21, r21
    9a86:	59 f0       	breq	.+22     	; 0x9a9e <__fp_splitA+0x10>
    9a88:	5f 3f       	cpi	r21, 0xFF	; 255
    9a8a:	71 f0       	breq	.+28     	; 0x9aa8 <__fp_splitA+0x1a>
    9a8c:	47 95       	ror	r20

00009a8e <__fp_splitA>:
    9a8e:	88 0f       	add	r24, r24
    9a90:	97 fb       	bst	r25, 7
    9a92:	99 1f       	adc	r25, r25
    9a94:	61 f0       	breq	.+24     	; 0x9aae <__fp_splitA+0x20>
    9a96:	9f 3f       	cpi	r25, 0xFF	; 255
    9a98:	79 f0       	breq	.+30     	; 0x9ab8 <__fp_splitA+0x2a>
    9a9a:	87 95       	ror	r24
    9a9c:	08 95       	ret
    9a9e:	12 16       	cp	r1, r18
    9aa0:	13 06       	cpc	r1, r19
    9aa2:	14 06       	cpc	r1, r20
    9aa4:	55 1f       	adc	r21, r21
    9aa6:	f2 cf       	rjmp	.-28     	; 0x9a8c <__fp_split3+0xe>
    9aa8:	46 95       	lsr	r20
    9aaa:	f1 df       	rcall	.-30     	; 0x9a8e <__fp_splitA>
    9aac:	08 c0       	rjmp	.+16     	; 0x9abe <__fp_splitA+0x30>
    9aae:	16 16       	cp	r1, r22
    9ab0:	17 06       	cpc	r1, r23
    9ab2:	18 06       	cpc	r1, r24
    9ab4:	99 1f       	adc	r25, r25
    9ab6:	f1 cf       	rjmp	.-30     	; 0x9a9a <__fp_splitA+0xc>
    9ab8:	86 95       	lsr	r24
    9aba:	71 05       	cpc	r23, r1
    9abc:	61 05       	cpc	r22, r1
    9abe:	08 94       	sec
    9ac0:	08 95       	ret

00009ac2 <__fp_zero>:
    9ac2:	e8 94       	clt

00009ac4 <__fp_szero>:
    9ac4:	bb 27       	eor	r27, r27
    9ac6:	66 27       	eor	r22, r22
    9ac8:	77 27       	eor	r23, r23
    9aca:	cb 01       	movw	r24, r22
    9acc:	97 f9       	bld	r25, 7
    9ace:	08 95       	ret

00009ad0 <__gesf2>:
    9ad0:	0e 94 f3 4c 	call	0x99e6	; 0x99e6 <__fp_cmp>
    9ad4:	08 f4       	brcc	.+2      	; 0x9ad8 <__gesf2+0x8>
    9ad6:	8f ef       	ldi	r24, 0xFF	; 255
    9ad8:	08 95       	ret

00009ada <__mulsf3>:
    9ada:	0e 94 80 4d 	call	0x9b00	; 0x9b00 <__mulsf3x>
    9ade:	0c 94 2e 4d 	jmp	0x9a5c	; 0x9a5c <__fp_round>
    9ae2:	0e 94 20 4d 	call	0x9a40	; 0x9a40 <__fp_pscA>
    9ae6:	38 f0       	brcs	.+14     	; 0x9af6 <__mulsf3+0x1c>
    9ae8:	0e 94 27 4d 	call	0x9a4e	; 0x9a4e <__fp_pscB>
    9aec:	20 f0       	brcs	.+8      	; 0x9af6 <__mulsf3+0x1c>
    9aee:	95 23       	and	r25, r21
    9af0:	11 f0       	breq	.+4      	; 0x9af6 <__mulsf3+0x1c>
    9af2:	0c 94 17 4d 	jmp	0x9a2e	; 0x9a2e <__fp_inf>
    9af6:	0c 94 1d 4d 	jmp	0x9a3a	; 0x9a3a <__fp_nan>
    9afa:	11 24       	eor	r1, r1
    9afc:	0c 94 62 4d 	jmp	0x9ac4	; 0x9ac4 <__fp_szero>

00009b00 <__mulsf3x>:
    9b00:	0e 94 3f 4d 	call	0x9a7e	; 0x9a7e <__fp_split3>
    9b04:	70 f3       	brcs	.-36     	; 0x9ae2 <__mulsf3+0x8>

00009b06 <__mulsf3_pse>:
    9b06:	95 9f       	mul	r25, r21
    9b08:	c1 f3       	breq	.-16     	; 0x9afa <__mulsf3+0x20>
    9b0a:	95 0f       	add	r25, r21
    9b0c:	50 e0       	ldi	r21, 0x00	; 0
    9b0e:	55 1f       	adc	r21, r21
    9b10:	62 9f       	mul	r22, r18
    9b12:	f0 01       	movw	r30, r0
    9b14:	72 9f       	mul	r23, r18
    9b16:	bb 27       	eor	r27, r27
    9b18:	f0 0d       	add	r31, r0
    9b1a:	b1 1d       	adc	r27, r1
    9b1c:	63 9f       	mul	r22, r19
    9b1e:	aa 27       	eor	r26, r26
    9b20:	f0 0d       	add	r31, r0
    9b22:	b1 1d       	adc	r27, r1
    9b24:	aa 1f       	adc	r26, r26
    9b26:	64 9f       	mul	r22, r20
    9b28:	66 27       	eor	r22, r22
    9b2a:	b0 0d       	add	r27, r0
    9b2c:	a1 1d       	adc	r26, r1
    9b2e:	66 1f       	adc	r22, r22
    9b30:	82 9f       	mul	r24, r18
    9b32:	22 27       	eor	r18, r18
    9b34:	b0 0d       	add	r27, r0
    9b36:	a1 1d       	adc	r26, r1
    9b38:	62 1f       	adc	r22, r18
    9b3a:	73 9f       	mul	r23, r19
    9b3c:	b0 0d       	add	r27, r0
    9b3e:	a1 1d       	adc	r26, r1
    9b40:	62 1f       	adc	r22, r18
    9b42:	83 9f       	mul	r24, r19
    9b44:	a0 0d       	add	r26, r0
    9b46:	61 1d       	adc	r22, r1
    9b48:	22 1f       	adc	r18, r18
    9b4a:	74 9f       	mul	r23, r20
    9b4c:	33 27       	eor	r19, r19
    9b4e:	a0 0d       	add	r26, r0
    9b50:	61 1d       	adc	r22, r1
    9b52:	23 1f       	adc	r18, r19
    9b54:	84 9f       	mul	r24, r20
    9b56:	60 0d       	add	r22, r0
    9b58:	21 1d       	adc	r18, r1
    9b5a:	82 2f       	mov	r24, r18
    9b5c:	76 2f       	mov	r23, r22
    9b5e:	6a 2f       	mov	r22, r26
    9b60:	11 24       	eor	r1, r1
    9b62:	9f 57       	subi	r25, 0x7F	; 127
    9b64:	50 40       	sbci	r21, 0x00	; 0
    9b66:	9a f0       	brmi	.+38     	; 0x9b8e <__mulsf3_pse+0x88>
    9b68:	f1 f0       	breq	.+60     	; 0x9ba6 <__mulsf3_pse+0xa0>
    9b6a:	88 23       	and	r24, r24
    9b6c:	4a f0       	brmi	.+18     	; 0x9b80 <__mulsf3_pse+0x7a>
    9b6e:	ee 0f       	add	r30, r30
    9b70:	ff 1f       	adc	r31, r31
    9b72:	bb 1f       	adc	r27, r27
    9b74:	66 1f       	adc	r22, r22
    9b76:	77 1f       	adc	r23, r23
    9b78:	88 1f       	adc	r24, r24
    9b7a:	91 50       	subi	r25, 0x01	; 1
    9b7c:	50 40       	sbci	r21, 0x00	; 0
    9b7e:	a9 f7       	brne	.-22     	; 0x9b6a <__mulsf3_pse+0x64>
    9b80:	9e 3f       	cpi	r25, 0xFE	; 254
    9b82:	51 05       	cpc	r21, r1
    9b84:	80 f0       	brcs	.+32     	; 0x9ba6 <__mulsf3_pse+0xa0>
    9b86:	0c 94 17 4d 	jmp	0x9a2e	; 0x9a2e <__fp_inf>
    9b8a:	0c 94 62 4d 	jmp	0x9ac4	; 0x9ac4 <__fp_szero>
    9b8e:	5f 3f       	cpi	r21, 0xFF	; 255
    9b90:	e4 f3       	brlt	.-8      	; 0x9b8a <__mulsf3_pse+0x84>
    9b92:	98 3e       	cpi	r25, 0xE8	; 232
    9b94:	d4 f3       	brlt	.-12     	; 0x9b8a <__mulsf3_pse+0x84>
    9b96:	86 95       	lsr	r24
    9b98:	77 95       	ror	r23
    9b9a:	67 95       	ror	r22
    9b9c:	b7 95       	ror	r27
    9b9e:	f7 95       	ror	r31
    9ba0:	e7 95       	ror	r30
    9ba2:	9f 5f       	subi	r25, 0xFF	; 255
    9ba4:	c1 f7       	brne	.-16     	; 0x9b96 <__mulsf3_pse+0x90>
    9ba6:	fe 2b       	or	r31, r30
    9ba8:	88 0f       	add	r24, r24
    9baa:	91 1d       	adc	r25, r1
    9bac:	96 95       	lsr	r25
    9bae:	87 95       	ror	r24
    9bb0:	97 f9       	bld	r25, 7
    9bb2:	08 95       	ret

00009bb4 <__mulsi3>:
    9bb4:	db 01       	movw	r26, r22
    9bb6:	8f 93       	push	r24
    9bb8:	9f 93       	push	r25
    9bba:	0e 94 72 4e 	call	0x9ce4	; 0x9ce4 <__muluhisi3>
    9bbe:	bf 91       	pop	r27
    9bc0:	af 91       	pop	r26
    9bc2:	a2 9f       	mul	r26, r18
    9bc4:	80 0d       	add	r24, r0
    9bc6:	91 1d       	adc	r25, r1
    9bc8:	a3 9f       	mul	r26, r19
    9bca:	90 0d       	add	r25, r0
    9bcc:	b2 9f       	mul	r27, r18
    9bce:	90 0d       	add	r25, r0
    9bd0:	11 24       	eor	r1, r1
    9bd2:	08 95       	ret

00009bd4 <__udivmodhi4>:
    9bd4:	aa 1b       	sub	r26, r26
    9bd6:	bb 1b       	sub	r27, r27
    9bd8:	51 e1       	ldi	r21, 0x11	; 17
    9bda:	07 c0       	rjmp	.+14     	; 0x9bea <__udivmodhi4_ep>

00009bdc <__udivmodhi4_loop>:
    9bdc:	aa 1f       	adc	r26, r26
    9bde:	bb 1f       	adc	r27, r27
    9be0:	a6 17       	cp	r26, r22
    9be2:	b7 07       	cpc	r27, r23
    9be4:	10 f0       	brcs	.+4      	; 0x9bea <__udivmodhi4_ep>
    9be6:	a6 1b       	sub	r26, r22
    9be8:	b7 0b       	sbc	r27, r23

00009bea <__udivmodhi4_ep>:
    9bea:	88 1f       	adc	r24, r24
    9bec:	99 1f       	adc	r25, r25
    9bee:	5a 95       	dec	r21
    9bf0:	a9 f7       	brne	.-22     	; 0x9bdc <__udivmodhi4_loop>
    9bf2:	80 95       	com	r24
    9bf4:	90 95       	com	r25
    9bf6:	bc 01       	movw	r22, r24
    9bf8:	cd 01       	movw	r24, r26
    9bfa:	08 95       	ret

00009bfc <__divmodhi4>:
    9bfc:	97 fb       	bst	r25, 7
    9bfe:	07 2e       	mov	r0, r23
    9c00:	16 f4       	brtc	.+4      	; 0x9c06 <__divmodhi4+0xa>
    9c02:	00 94       	com	r0
    9c04:	07 d0       	rcall	.+14     	; 0x9c14 <__divmodhi4_neg1>
    9c06:	77 fd       	sbrc	r23, 7
    9c08:	09 d0       	rcall	.+18     	; 0x9c1c <__divmodhi4_neg2>
    9c0a:	0e 94 ea 4d 	call	0x9bd4	; 0x9bd4 <__udivmodhi4>
    9c0e:	07 fc       	sbrc	r0, 7
    9c10:	05 d0       	rcall	.+10     	; 0x9c1c <__divmodhi4_neg2>
    9c12:	3e f4       	brtc	.+14     	; 0x9c22 <__divmodhi4_exit>

00009c14 <__divmodhi4_neg1>:
    9c14:	90 95       	com	r25
    9c16:	81 95       	neg	r24
    9c18:	9f 4f       	sbci	r25, 0xFF	; 255
    9c1a:	08 95       	ret

00009c1c <__divmodhi4_neg2>:
    9c1c:	70 95       	com	r23
    9c1e:	61 95       	neg	r22
    9c20:	7f 4f       	sbci	r23, 0xFF	; 255

00009c22 <__divmodhi4_exit>:
    9c22:	08 95       	ret

00009c24 <__udivmodsi4>:
    9c24:	a1 e2       	ldi	r26, 0x21	; 33
    9c26:	1a 2e       	mov	r1, r26
    9c28:	aa 1b       	sub	r26, r26
    9c2a:	bb 1b       	sub	r27, r27
    9c2c:	fd 01       	movw	r30, r26
    9c2e:	0d c0       	rjmp	.+26     	; 0x9c4a <__udivmodsi4_ep>

00009c30 <__udivmodsi4_loop>:
    9c30:	aa 1f       	adc	r26, r26
    9c32:	bb 1f       	adc	r27, r27
    9c34:	ee 1f       	adc	r30, r30
    9c36:	ff 1f       	adc	r31, r31
    9c38:	a2 17       	cp	r26, r18
    9c3a:	b3 07       	cpc	r27, r19
    9c3c:	e4 07       	cpc	r30, r20
    9c3e:	f5 07       	cpc	r31, r21
    9c40:	20 f0       	brcs	.+8      	; 0x9c4a <__udivmodsi4_ep>
    9c42:	a2 1b       	sub	r26, r18
    9c44:	b3 0b       	sbc	r27, r19
    9c46:	e4 0b       	sbc	r30, r20
    9c48:	f5 0b       	sbc	r31, r21

00009c4a <__udivmodsi4_ep>:
    9c4a:	66 1f       	adc	r22, r22
    9c4c:	77 1f       	adc	r23, r23
    9c4e:	88 1f       	adc	r24, r24
    9c50:	99 1f       	adc	r25, r25
    9c52:	1a 94       	dec	r1
    9c54:	69 f7       	brne	.-38     	; 0x9c30 <__udivmodsi4_loop>
    9c56:	60 95       	com	r22
    9c58:	70 95       	com	r23
    9c5a:	80 95       	com	r24
    9c5c:	90 95       	com	r25
    9c5e:	9b 01       	movw	r18, r22
    9c60:	ac 01       	movw	r20, r24
    9c62:	bd 01       	movw	r22, r26
    9c64:	cf 01       	movw	r24, r30
    9c66:	08 95       	ret

00009c68 <__divmodsi4>:
    9c68:	05 2e       	mov	r0, r21
    9c6a:	97 fb       	bst	r25, 7
    9c6c:	1e f4       	brtc	.+6      	; 0x9c74 <__divmodsi4+0xc>
    9c6e:	00 94       	com	r0
    9c70:	0e 94 4b 4e 	call	0x9c96	; 0x9c96 <__negsi2>
    9c74:	57 fd       	sbrc	r21, 7
    9c76:	07 d0       	rcall	.+14     	; 0x9c86 <__divmodsi4_neg2>
    9c78:	0e 94 12 4e 	call	0x9c24	; 0x9c24 <__udivmodsi4>
    9c7c:	07 fc       	sbrc	r0, 7
    9c7e:	03 d0       	rcall	.+6      	; 0x9c86 <__divmodsi4_neg2>
    9c80:	4e f4       	brtc	.+18     	; 0x9c94 <__divmodsi4_exit>
    9c82:	0c 94 4b 4e 	jmp	0x9c96	; 0x9c96 <__negsi2>

00009c86 <__divmodsi4_neg2>:
    9c86:	50 95       	com	r21
    9c88:	40 95       	com	r20
    9c8a:	30 95       	com	r19
    9c8c:	21 95       	neg	r18
    9c8e:	3f 4f       	sbci	r19, 0xFF	; 255
    9c90:	4f 4f       	sbci	r20, 0xFF	; 255
    9c92:	5f 4f       	sbci	r21, 0xFF	; 255

00009c94 <__divmodsi4_exit>:
    9c94:	08 95       	ret

00009c96 <__negsi2>:
    9c96:	90 95       	com	r25
    9c98:	80 95       	com	r24
    9c9a:	70 95       	com	r23
    9c9c:	61 95       	neg	r22
    9c9e:	7f 4f       	sbci	r23, 0xFF	; 255
    9ca0:	8f 4f       	sbci	r24, 0xFF	; 255
    9ca2:	9f 4f       	sbci	r25, 0xFF	; 255
    9ca4:	08 95       	ret

00009ca6 <__tablejump2__>:
    9ca6:	ee 0f       	add	r30, r30
    9ca8:	ff 1f       	adc	r31, r31
    9caa:	00 24       	eor	r0, r0
    9cac:	00 1c       	adc	r0, r0
    9cae:	0b be       	out	0x3b, r0	; 59
    9cb0:	07 90       	elpm	r0, Z+
    9cb2:	f6 91       	elpm	r31, Z
    9cb4:	e0 2d       	mov	r30, r0
    9cb6:	09 94       	ijmp

00009cb8 <__umulhisi3>:
    9cb8:	a2 9f       	mul	r26, r18
    9cba:	b0 01       	movw	r22, r0
    9cbc:	b3 9f       	mul	r27, r19
    9cbe:	c0 01       	movw	r24, r0
    9cc0:	a3 9f       	mul	r26, r19
    9cc2:	70 0d       	add	r23, r0
    9cc4:	81 1d       	adc	r24, r1
    9cc6:	11 24       	eor	r1, r1
    9cc8:	91 1d       	adc	r25, r1
    9cca:	b2 9f       	mul	r27, r18
    9ccc:	70 0d       	add	r23, r0
    9cce:	81 1d       	adc	r24, r1
    9cd0:	11 24       	eor	r1, r1
    9cd2:	91 1d       	adc	r25, r1
    9cd4:	08 95       	ret

00009cd6 <__usmulhisi3>:
    9cd6:	0e 94 5c 4e 	call	0x9cb8	; 0x9cb8 <__umulhisi3>

00009cda <__usmulhisi3_tail>:
    9cda:	b7 ff       	sbrs	r27, 7
    9cdc:	08 95       	ret
    9cde:	82 1b       	sub	r24, r18
    9ce0:	93 0b       	sbc	r25, r19
    9ce2:	08 95       	ret

00009ce4 <__muluhisi3>:
    9ce4:	0e 94 5c 4e 	call	0x9cb8	; 0x9cb8 <__umulhisi3>
    9ce8:	a5 9f       	mul	r26, r21
    9cea:	90 0d       	add	r25, r0
    9cec:	b4 9f       	mul	r27, r20
    9cee:	90 0d       	add	r25, r0
    9cf0:	a4 9f       	mul	r26, r20
    9cf2:	80 0d       	add	r24, r0
    9cf4:	91 1d       	adc	r25, r1
    9cf6:	11 24       	eor	r1, r1
    9cf8:	08 95       	ret

00009cfa <__mulshisi3>:
    9cfa:	b7 ff       	sbrs	r27, 7
    9cfc:	0c 94 72 4e 	jmp	0x9ce4	; 0x9ce4 <__muluhisi3>

00009d00 <__mulohisi3>:
    9d00:	0e 94 72 4e 	call	0x9ce4	; 0x9ce4 <__muluhisi3>
    9d04:	82 1b       	sub	r24, r18
    9d06:	93 0b       	sbc	r25, r19
    9d08:	08 95       	ret

00009d0a <dtostrf>:
    9d0a:	ef 92       	push	r14
    9d0c:	0f 93       	push	r16
    9d0e:	1f 93       	push	r17
    9d10:	cf 93       	push	r28
    9d12:	df 93       	push	r29
    9d14:	e8 01       	movw	r28, r16
    9d16:	34 e0       	ldi	r19, 0x04	; 4
    9d18:	47 fd       	sbrc	r20, 7
    9d1a:	34 e1       	ldi	r19, 0x14	; 20
    9d1c:	04 2e       	mov	r0, r20
    9d1e:	00 0c       	add	r0, r0
    9d20:	55 0b       	sbc	r21, r21
    9d22:	57 ff       	sbrs	r21, 7
    9d24:	03 c0       	rjmp	.+6      	; 0x9d2c <dtostrf+0x22>
    9d26:	51 95       	neg	r21
    9d28:	41 95       	neg	r20
    9d2a:	51 09       	sbc	r21, r1
    9d2c:	e3 2e       	mov	r14, r19
    9d2e:	02 2f       	mov	r16, r18
    9d30:	24 2f       	mov	r18, r20
    9d32:	ae 01       	movw	r20, r28
    9d34:	0e 94 9e 52 	call	0xa53c	; 0xa53c <dtoa_prf>
    9d38:	ce 01       	movw	r24, r28
    9d3a:	df 91       	pop	r29
    9d3c:	cf 91       	pop	r28
    9d3e:	1f 91       	pop	r17
    9d40:	0f 91       	pop	r16
    9d42:	ef 90       	pop	r14
    9d44:	08 95       	ret

00009d46 <malloc>:
    9d46:	0f 93       	push	r16
    9d48:	1f 93       	push	r17
    9d4a:	cf 93       	push	r28
    9d4c:	df 93       	push	r29
    9d4e:	82 30       	cpi	r24, 0x02	; 2
    9d50:	91 05       	cpc	r25, r1
    9d52:	10 f4       	brcc	.+4      	; 0x9d58 <malloc+0x12>
    9d54:	82 e0       	ldi	r24, 0x02	; 2
    9d56:	90 e0       	ldi	r25, 0x00	; 0
    9d58:	e0 91 a0 47 	lds	r30, 0x47A0	; 0x8047a0 <__flp>
    9d5c:	f0 91 a1 47 	lds	r31, 0x47A1	; 0x8047a1 <__flp+0x1>
    9d60:	30 e0       	ldi	r19, 0x00	; 0
    9d62:	20 e0       	ldi	r18, 0x00	; 0
    9d64:	b0 e0       	ldi	r27, 0x00	; 0
    9d66:	a0 e0       	ldi	r26, 0x00	; 0
    9d68:	30 97       	sbiw	r30, 0x00	; 0
    9d6a:	99 f4       	brne	.+38     	; 0x9d92 <malloc+0x4c>
    9d6c:	21 15       	cp	r18, r1
    9d6e:	31 05       	cpc	r19, r1
    9d70:	09 f4       	brne	.+2      	; 0x9d74 <malloc+0x2e>
    9d72:	4a c0       	rjmp	.+148    	; 0x9e08 <malloc+0xc2>
    9d74:	28 1b       	sub	r18, r24
    9d76:	39 0b       	sbc	r19, r25
    9d78:	24 30       	cpi	r18, 0x04	; 4
    9d7a:	31 05       	cpc	r19, r1
    9d7c:	d8 f5       	brcc	.+118    	; 0x9df4 <malloc+0xae>
    9d7e:	8a 81       	ldd	r24, Y+2	; 0x02
    9d80:	9b 81       	ldd	r25, Y+3	; 0x03
    9d82:	61 15       	cp	r22, r1
    9d84:	71 05       	cpc	r23, r1
    9d86:	89 f1       	breq	.+98     	; 0x9dea <malloc+0xa4>
    9d88:	fb 01       	movw	r30, r22
    9d8a:	82 83       	std	Z+2, r24	; 0x02
    9d8c:	93 83       	std	Z+3, r25	; 0x03
    9d8e:	fe 01       	movw	r30, r28
    9d90:	11 c0       	rjmp	.+34     	; 0x9db4 <malloc+0x6e>
    9d92:	40 81       	ld	r20, Z
    9d94:	51 81       	ldd	r21, Z+1	; 0x01
    9d96:	02 81       	ldd	r16, Z+2	; 0x02
    9d98:	13 81       	ldd	r17, Z+3	; 0x03
    9d9a:	48 17       	cp	r20, r24
    9d9c:	59 07       	cpc	r21, r25
    9d9e:	e0 f0       	brcs	.+56     	; 0x9dd8 <malloc+0x92>
    9da0:	48 17       	cp	r20, r24
    9da2:	59 07       	cpc	r21, r25
    9da4:	99 f4       	brne	.+38     	; 0x9dcc <malloc+0x86>
    9da6:	10 97       	sbiw	r26, 0x00	; 0
    9da8:	61 f0       	breq	.+24     	; 0x9dc2 <malloc+0x7c>
    9daa:	12 96       	adiw	r26, 0x02	; 2
    9dac:	0c 93       	st	X, r16
    9dae:	12 97       	sbiw	r26, 0x02	; 2
    9db0:	13 96       	adiw	r26, 0x03	; 3
    9db2:	1c 93       	st	X, r17
    9db4:	32 96       	adiw	r30, 0x02	; 2
    9db6:	cf 01       	movw	r24, r30
    9db8:	df 91       	pop	r29
    9dba:	cf 91       	pop	r28
    9dbc:	1f 91       	pop	r17
    9dbe:	0f 91       	pop	r16
    9dc0:	08 95       	ret
    9dc2:	00 93 a0 47 	sts	0x47A0, r16	; 0x8047a0 <__flp>
    9dc6:	10 93 a1 47 	sts	0x47A1, r17	; 0x8047a1 <__flp+0x1>
    9dca:	f4 cf       	rjmp	.-24     	; 0x9db4 <malloc+0x6e>
    9dcc:	21 15       	cp	r18, r1
    9dce:	31 05       	cpc	r19, r1
    9dd0:	51 f0       	breq	.+20     	; 0x9de6 <malloc+0xa0>
    9dd2:	42 17       	cp	r20, r18
    9dd4:	53 07       	cpc	r21, r19
    9dd6:	38 f0       	brcs	.+14     	; 0x9de6 <malloc+0xa0>
    9dd8:	a9 01       	movw	r20, r18
    9dda:	db 01       	movw	r26, r22
    9ddc:	9a 01       	movw	r18, r20
    9dde:	bd 01       	movw	r22, r26
    9de0:	df 01       	movw	r26, r30
    9de2:	f8 01       	movw	r30, r16
    9de4:	c1 cf       	rjmp	.-126    	; 0x9d68 <malloc+0x22>
    9de6:	ef 01       	movw	r28, r30
    9de8:	f9 cf       	rjmp	.-14     	; 0x9ddc <malloc+0x96>
    9dea:	80 93 a0 47 	sts	0x47A0, r24	; 0x8047a0 <__flp>
    9dee:	90 93 a1 47 	sts	0x47A1, r25	; 0x8047a1 <__flp+0x1>
    9df2:	cd cf       	rjmp	.-102    	; 0x9d8e <malloc+0x48>
    9df4:	fe 01       	movw	r30, r28
    9df6:	e2 0f       	add	r30, r18
    9df8:	f3 1f       	adc	r31, r19
    9dfa:	81 93       	st	Z+, r24
    9dfc:	91 93       	st	Z+, r25
    9dfe:	22 50       	subi	r18, 0x02	; 2
    9e00:	31 09       	sbc	r19, r1
    9e02:	28 83       	st	Y, r18
    9e04:	39 83       	std	Y+1, r19	; 0x01
    9e06:	d7 cf       	rjmp	.-82     	; 0x9db6 <malloc+0x70>
    9e08:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <__brkval>
    9e0c:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <__brkval+0x1>
    9e10:	23 2b       	or	r18, r19
    9e12:	41 f4       	brne	.+16     	; 0x9e24 <malloc+0xde>
    9e14:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    9e18:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    9e1c:	20 93 9e 47 	sts	0x479E, r18	; 0x80479e <__brkval>
    9e20:	30 93 9f 47 	sts	0x479F, r19	; 0x80479f <__brkval+0x1>
    9e24:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    9e28:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    9e2c:	21 15       	cp	r18, r1
    9e2e:	31 05       	cpc	r19, r1
    9e30:	41 f4       	brne	.+16     	; 0x9e42 <malloc+0xfc>
    9e32:	2d b7       	in	r18, 0x3d	; 61
    9e34:	3e b7       	in	r19, 0x3e	; 62
    9e36:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    9e3a:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    9e3e:	24 1b       	sub	r18, r20
    9e40:	35 0b       	sbc	r19, r21
    9e42:	e0 91 9e 47 	lds	r30, 0x479E	; 0x80479e <__brkval>
    9e46:	f0 91 9f 47 	lds	r31, 0x479F	; 0x80479f <__brkval+0x1>
    9e4a:	e2 17       	cp	r30, r18
    9e4c:	f3 07       	cpc	r31, r19
    9e4e:	a0 f4       	brcc	.+40     	; 0x9e78 <malloc+0x132>
    9e50:	2e 1b       	sub	r18, r30
    9e52:	3f 0b       	sbc	r19, r31
    9e54:	28 17       	cp	r18, r24
    9e56:	39 07       	cpc	r19, r25
    9e58:	78 f0       	brcs	.+30     	; 0x9e78 <malloc+0x132>
    9e5a:	ac 01       	movw	r20, r24
    9e5c:	4e 5f       	subi	r20, 0xFE	; 254
    9e5e:	5f 4f       	sbci	r21, 0xFF	; 255
    9e60:	24 17       	cp	r18, r20
    9e62:	35 07       	cpc	r19, r21
    9e64:	48 f0       	brcs	.+18     	; 0x9e78 <malloc+0x132>
    9e66:	4e 0f       	add	r20, r30
    9e68:	5f 1f       	adc	r21, r31
    9e6a:	40 93 9e 47 	sts	0x479E, r20	; 0x80479e <__brkval>
    9e6e:	50 93 9f 47 	sts	0x479F, r21	; 0x80479f <__brkval+0x1>
    9e72:	81 93       	st	Z+, r24
    9e74:	91 93       	st	Z+, r25
    9e76:	9f cf       	rjmp	.-194    	; 0x9db6 <malloc+0x70>
    9e78:	f0 e0       	ldi	r31, 0x00	; 0
    9e7a:	e0 e0       	ldi	r30, 0x00	; 0
    9e7c:	9c cf       	rjmp	.-200    	; 0x9db6 <malloc+0x70>

00009e7e <free>:
    9e7e:	cf 93       	push	r28
    9e80:	df 93       	push	r29
    9e82:	00 97       	sbiw	r24, 0x00	; 0
    9e84:	e9 f0       	breq	.+58     	; 0x9ec0 <free+0x42>
    9e86:	fc 01       	movw	r30, r24
    9e88:	32 97       	sbiw	r30, 0x02	; 2
    9e8a:	12 82       	std	Z+2, r1	; 0x02
    9e8c:	13 82       	std	Z+3, r1	; 0x03
    9e8e:	a0 91 a0 47 	lds	r26, 0x47A0	; 0x8047a0 <__flp>
    9e92:	b0 91 a1 47 	lds	r27, 0x47A1	; 0x8047a1 <__flp+0x1>
    9e96:	ed 01       	movw	r28, r26
    9e98:	30 e0       	ldi	r19, 0x00	; 0
    9e9a:	20 e0       	ldi	r18, 0x00	; 0
    9e9c:	10 97       	sbiw	r26, 0x00	; 0
    9e9e:	a1 f4       	brne	.+40     	; 0x9ec8 <free+0x4a>
    9ea0:	20 81       	ld	r18, Z
    9ea2:	31 81       	ldd	r19, Z+1	; 0x01
    9ea4:	82 0f       	add	r24, r18
    9ea6:	93 1f       	adc	r25, r19
    9ea8:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <__brkval>
    9eac:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <__brkval+0x1>
    9eb0:	28 17       	cp	r18, r24
    9eb2:	39 07       	cpc	r19, r25
    9eb4:	09 f0       	breq	.+2      	; 0x9eb8 <free+0x3a>
    9eb6:	61 c0       	rjmp	.+194    	; 0x9f7a <free+0xfc>
    9eb8:	e0 93 9e 47 	sts	0x479E, r30	; 0x80479e <__brkval>
    9ebc:	f0 93 9f 47 	sts	0x479F, r31	; 0x80479f <__brkval+0x1>
    9ec0:	df 91       	pop	r29
    9ec2:	cf 91       	pop	r28
    9ec4:	08 95       	ret
    9ec6:	ea 01       	movw	r28, r20
    9ec8:	ce 17       	cp	r28, r30
    9eca:	df 07       	cpc	r29, r31
    9ecc:	e8 f5       	brcc	.+122    	; 0x9f48 <free+0xca>
    9ece:	4a 81       	ldd	r20, Y+2	; 0x02
    9ed0:	5b 81       	ldd	r21, Y+3	; 0x03
    9ed2:	9e 01       	movw	r18, r28
    9ed4:	41 15       	cp	r20, r1
    9ed6:	51 05       	cpc	r21, r1
    9ed8:	b1 f7       	brne	.-20     	; 0x9ec6 <free+0x48>
    9eda:	e9 01       	movw	r28, r18
    9edc:	ea 83       	std	Y+2, r30	; 0x02
    9ede:	fb 83       	std	Y+3, r31	; 0x03
    9ee0:	49 91       	ld	r20, Y+
    9ee2:	59 91       	ld	r21, Y+
    9ee4:	c4 0f       	add	r28, r20
    9ee6:	d5 1f       	adc	r29, r21
    9ee8:	ec 17       	cp	r30, r28
    9eea:	fd 07       	cpc	r31, r29
    9eec:	61 f4       	brne	.+24     	; 0x9f06 <free+0x88>
    9eee:	80 81       	ld	r24, Z
    9ef0:	91 81       	ldd	r25, Z+1	; 0x01
    9ef2:	02 96       	adiw	r24, 0x02	; 2
    9ef4:	84 0f       	add	r24, r20
    9ef6:	95 1f       	adc	r25, r21
    9ef8:	e9 01       	movw	r28, r18
    9efa:	88 83       	st	Y, r24
    9efc:	99 83       	std	Y+1, r25	; 0x01
    9efe:	82 81       	ldd	r24, Z+2	; 0x02
    9f00:	93 81       	ldd	r25, Z+3	; 0x03
    9f02:	8a 83       	std	Y+2, r24	; 0x02
    9f04:	9b 83       	std	Y+3, r25	; 0x03
    9f06:	f0 e0       	ldi	r31, 0x00	; 0
    9f08:	e0 e0       	ldi	r30, 0x00	; 0
    9f0a:	12 96       	adiw	r26, 0x02	; 2
    9f0c:	8d 91       	ld	r24, X+
    9f0e:	9c 91       	ld	r25, X
    9f10:	13 97       	sbiw	r26, 0x03	; 3
    9f12:	00 97       	sbiw	r24, 0x00	; 0
    9f14:	b9 f5       	brne	.+110    	; 0x9f84 <free+0x106>
    9f16:	2d 91       	ld	r18, X+
    9f18:	3c 91       	ld	r19, X
    9f1a:	11 97       	sbiw	r26, 0x01	; 1
    9f1c:	cd 01       	movw	r24, r26
    9f1e:	02 96       	adiw	r24, 0x02	; 2
    9f20:	82 0f       	add	r24, r18
    9f22:	93 1f       	adc	r25, r19
    9f24:	20 91 9e 47 	lds	r18, 0x479E	; 0x80479e <__brkval>
    9f28:	30 91 9f 47 	lds	r19, 0x479F	; 0x80479f <__brkval+0x1>
    9f2c:	28 17       	cp	r18, r24
    9f2e:	39 07       	cpc	r19, r25
    9f30:	39 f6       	brne	.-114    	; 0x9ec0 <free+0x42>
    9f32:	30 97       	sbiw	r30, 0x00	; 0
    9f34:	51 f5       	brne	.+84     	; 0x9f8a <free+0x10c>
    9f36:	10 92 a0 47 	sts	0x47A0, r1	; 0x8047a0 <__flp>
    9f3a:	10 92 a1 47 	sts	0x47A1, r1	; 0x8047a1 <__flp+0x1>
    9f3e:	a0 93 9e 47 	sts	0x479E, r26	; 0x80479e <__brkval>
    9f42:	b0 93 9f 47 	sts	0x479F, r27	; 0x80479f <__brkval+0x1>
    9f46:	bc cf       	rjmp	.-136    	; 0x9ec0 <free+0x42>
    9f48:	c2 83       	std	Z+2, r28	; 0x02
    9f4a:	d3 83       	std	Z+3, r29	; 0x03
    9f4c:	40 81       	ld	r20, Z
    9f4e:	51 81       	ldd	r21, Z+1	; 0x01
    9f50:	84 0f       	add	r24, r20
    9f52:	95 1f       	adc	r25, r21
    9f54:	c8 17       	cp	r28, r24
    9f56:	d9 07       	cpc	r29, r25
    9f58:	61 f4       	brne	.+24     	; 0x9f72 <free+0xf4>
    9f5a:	4e 5f       	subi	r20, 0xFE	; 254
    9f5c:	5f 4f       	sbci	r21, 0xFF	; 255
    9f5e:	88 81       	ld	r24, Y
    9f60:	99 81       	ldd	r25, Y+1	; 0x01
    9f62:	48 0f       	add	r20, r24
    9f64:	59 1f       	adc	r21, r25
    9f66:	40 83       	st	Z, r20
    9f68:	51 83       	std	Z+1, r21	; 0x01
    9f6a:	8a 81       	ldd	r24, Y+2	; 0x02
    9f6c:	9b 81       	ldd	r25, Y+3	; 0x03
    9f6e:	82 83       	std	Z+2, r24	; 0x02
    9f70:	93 83       	std	Z+3, r25	; 0x03
    9f72:	21 15       	cp	r18, r1
    9f74:	31 05       	cpc	r19, r1
    9f76:	09 f0       	breq	.+2      	; 0x9f7a <free+0xfc>
    9f78:	b0 cf       	rjmp	.-160    	; 0x9eda <free+0x5c>
    9f7a:	e0 93 a0 47 	sts	0x47A0, r30	; 0x8047a0 <__flp>
    9f7e:	f0 93 a1 47 	sts	0x47A1, r31	; 0x8047a1 <__flp+0x1>
    9f82:	9e cf       	rjmp	.-196    	; 0x9ec0 <free+0x42>
    9f84:	fd 01       	movw	r30, r26
    9f86:	dc 01       	movw	r26, r24
    9f88:	c0 cf       	rjmp	.-128    	; 0x9f0a <free+0x8c>
    9f8a:	12 82       	std	Z+2, r1	; 0x02
    9f8c:	13 82       	std	Z+3, r1	; 0x03
    9f8e:	d7 cf       	rjmp	.-82     	; 0x9f3e <free+0xc0>

00009f90 <atoi>:
    9f90:	fc 01       	movw	r30, r24
    9f92:	88 27       	eor	r24, r24
    9f94:	99 27       	eor	r25, r25
    9f96:	e8 94       	clt
    9f98:	21 91       	ld	r18, Z+
    9f9a:	20 32       	cpi	r18, 0x20	; 32
    9f9c:	e9 f3       	breq	.-6      	; 0x9f98 <atoi+0x8>
    9f9e:	29 30       	cpi	r18, 0x09	; 9
    9fa0:	10 f0       	brcs	.+4      	; 0x9fa6 <atoi+0x16>
    9fa2:	2e 30       	cpi	r18, 0x0E	; 14
    9fa4:	c8 f3       	brcs	.-14     	; 0x9f98 <atoi+0x8>
    9fa6:	2b 32       	cpi	r18, 0x2B	; 43
    9fa8:	41 f0       	breq	.+16     	; 0x9fba <atoi+0x2a>
    9faa:	2d 32       	cpi	r18, 0x2D	; 45
    9fac:	39 f4       	brne	.+14     	; 0x9fbc <atoi+0x2c>
    9fae:	68 94       	set
    9fb0:	04 c0       	rjmp	.+8      	; 0x9fba <atoi+0x2a>
    9fb2:	0e 94 6f 50 	call	0xa0de	; 0xa0de <__mulhi_const_10>
    9fb6:	82 0f       	add	r24, r18
    9fb8:	91 1d       	adc	r25, r1
    9fba:	21 91       	ld	r18, Z+
    9fbc:	20 53       	subi	r18, 0x30	; 48
    9fbe:	2a 30       	cpi	r18, 0x0A	; 10
    9fc0:	c0 f3       	brcs	.-16     	; 0x9fb2 <atoi+0x22>
    9fc2:	1e f4       	brtc	.+6      	; 0x9fca <atoi+0x3a>
    9fc4:	90 95       	com	r25
    9fc6:	81 95       	neg	r24
    9fc8:	9f 4f       	sbci	r25, 0xFF	; 255
    9fca:	08 95       	ret

00009fcc <atol>:
    9fcc:	1f 93       	push	r17
    9fce:	fc 01       	movw	r30, r24
    9fd0:	99 27       	eor	r25, r25
    9fd2:	88 27       	eor	r24, r24
    9fd4:	bc 01       	movw	r22, r24
    9fd6:	e8 94       	clt
    9fd8:	11 91       	ld	r17, Z+
    9fda:	10 32       	cpi	r17, 0x20	; 32
    9fdc:	e9 f3       	breq	.-6      	; 0x9fd8 <atol+0xc>
    9fde:	19 30       	cpi	r17, 0x09	; 9
    9fe0:	10 f0       	brcs	.+4      	; 0x9fe6 <atol+0x1a>
    9fe2:	1e 30       	cpi	r17, 0x0E	; 14
    9fe4:	c8 f3       	brcs	.-14     	; 0x9fd8 <atol+0xc>
    9fe6:	1b 32       	cpi	r17, 0x2B	; 43
    9fe8:	51 f0       	breq	.+20     	; 0x9ffe <atol+0x32>
    9fea:	1d 32       	cpi	r17, 0x2D	; 45
    9fec:	49 f4       	brne	.+18     	; 0xa000 <atol+0x34>
    9fee:	68 94       	set
    9ff0:	06 c0       	rjmp	.+12     	; 0x9ffe <atol+0x32>
    9ff2:	0e 94 5a 50 	call	0xa0b4	; 0xa0b4 <__mulsi_const_10>
    9ff6:	61 0f       	add	r22, r17
    9ff8:	71 1d       	adc	r23, r1
    9ffa:	81 1d       	adc	r24, r1
    9ffc:	91 1d       	adc	r25, r1
    9ffe:	11 91       	ld	r17, Z+
    a000:	10 53       	subi	r17, 0x30	; 48
    a002:	1a 30       	cpi	r17, 0x0A	; 10
    a004:	b0 f3       	brcs	.-20     	; 0x9ff2 <atol+0x26>
    a006:	3e f4       	brtc	.+14     	; 0xa016 <atol+0x4a>
    a008:	90 95       	com	r25
    a00a:	80 95       	com	r24
    a00c:	70 95       	com	r23
    a00e:	61 95       	neg	r22
    a010:	7f 4f       	sbci	r23, 0xFF	; 255
    a012:	8f 4f       	sbci	r24, 0xFF	; 255
    a014:	9f 4f       	sbci	r25, 0xFF	; 255
    a016:	1f 91       	pop	r17
    a018:	08 95       	ret

0000a01a <isspace>:
    a01a:	91 11       	cpse	r25, r1
    a01c:	0c 94 ec 54 	jmp	0xa9d8	; 0xa9d8 <__ctype_isfalse>
    a020:	80 32       	cpi	r24, 0x20	; 32
    a022:	19 f0       	breq	.+6      	; 0xa02a <isspace+0x10>
    a024:	89 50       	subi	r24, 0x09	; 9
    a026:	85 50       	subi	r24, 0x05	; 5
    a028:	c8 f7       	brcc	.-14     	; 0xa01c <isspace+0x2>
    a02a:	08 95       	ret

0000a02c <toupper>:
    a02c:	91 11       	cpse	r25, r1
    a02e:	08 95       	ret
    a030:	81 56       	subi	r24, 0x61	; 97
    a032:	8a 51       	subi	r24, 0x1A	; 26
    a034:	08 f4       	brcc	.+2      	; 0xa038 <toupper+0xc>
    a036:	80 52       	subi	r24, 0x20	; 32
    a038:	85 58       	subi	r24, 0x85	; 133
    a03a:	08 95       	ret

0000a03c <strchr>:
    a03c:	fc 01       	movw	r30, r24
    a03e:	81 91       	ld	r24, Z+
    a040:	86 17       	cp	r24, r22
    a042:	21 f0       	breq	.+8      	; 0xa04c <strchr+0x10>
    a044:	88 23       	and	r24, r24
    a046:	d9 f7       	brne	.-10     	; 0xa03e <strchr+0x2>
    a048:	99 27       	eor	r25, r25
    a04a:	08 95       	ret
    a04c:	31 97       	sbiw	r30, 0x01	; 1
    a04e:	cf 01       	movw	r24, r30
    a050:	08 95       	ret

0000a052 <strcmp>:
    a052:	fb 01       	movw	r30, r22
    a054:	dc 01       	movw	r26, r24
    a056:	8d 91       	ld	r24, X+
    a058:	01 90       	ld	r0, Z+
    a05a:	80 19       	sub	r24, r0
    a05c:	01 10       	cpse	r0, r1
    a05e:	d9 f3       	breq	.-10     	; 0xa056 <strcmp+0x4>
    a060:	99 0b       	sbc	r25, r25
    a062:	08 95       	ret

0000a064 <strlen>:
    a064:	fc 01       	movw	r30, r24
    a066:	01 90       	ld	r0, Z+
    a068:	00 20       	and	r0, r0
    a06a:	e9 f7       	brne	.-6      	; 0xa066 <strlen+0x2>
    a06c:	80 95       	com	r24
    a06e:	90 95       	com	r25
    a070:	8e 0f       	add	r24, r30
    a072:	9f 1f       	adc	r25, r31
    a074:	08 95       	ret

0000a076 <strncat>:
    a076:	fb 01       	movw	r30, r22
    a078:	dc 01       	movw	r26, r24
    a07a:	0d 90       	ld	r0, X+
    a07c:	00 20       	and	r0, r0
    a07e:	e9 f7       	brne	.-6      	; 0xa07a <strncat+0x4>
    a080:	11 97       	sbiw	r26, 0x01	; 1
    a082:	41 50       	subi	r20, 0x01	; 1
    a084:	50 40       	sbci	r21, 0x00	; 0
    a086:	28 f0       	brcs	.+10     	; 0xa092 <strncat+0x1c>
    a088:	01 90       	ld	r0, Z+
    a08a:	00 20       	and	r0, r0
    a08c:	0d 92       	st	X+, r0
    a08e:	c9 f7       	brne	.-14     	; 0xa082 <strncat+0xc>
    a090:	08 95       	ret
    a092:	1c 92       	st	X, r1
    a094:	08 95       	ret

0000a096 <strncpy>:
    a096:	fb 01       	movw	r30, r22
    a098:	dc 01       	movw	r26, r24
    a09a:	41 50       	subi	r20, 0x01	; 1
    a09c:	50 40       	sbci	r21, 0x00	; 0
    a09e:	48 f0       	brcs	.+18     	; 0xa0b2 <strncpy+0x1c>
    a0a0:	01 90       	ld	r0, Z+
    a0a2:	0d 92       	st	X+, r0
    a0a4:	00 20       	and	r0, r0
    a0a6:	c9 f7       	brne	.-14     	; 0xa09a <strncpy+0x4>
    a0a8:	01 c0       	rjmp	.+2      	; 0xa0ac <strncpy+0x16>
    a0aa:	1d 92       	st	X+, r1
    a0ac:	41 50       	subi	r20, 0x01	; 1
    a0ae:	50 40       	sbci	r21, 0x00	; 0
    a0b0:	e0 f7       	brcc	.-8      	; 0xa0aa <strncpy+0x14>
    a0b2:	08 95       	ret

0000a0b4 <__mulsi_const_10>:
    a0b4:	59 2f       	mov	r21, r25
    a0b6:	48 2f       	mov	r20, r24
    a0b8:	37 2f       	mov	r19, r23
    a0ba:	26 2f       	mov	r18, r22
    a0bc:	66 0f       	add	r22, r22
    a0be:	77 1f       	adc	r23, r23
    a0c0:	88 1f       	adc	r24, r24
    a0c2:	99 1f       	adc	r25, r25
    a0c4:	66 0f       	add	r22, r22
    a0c6:	77 1f       	adc	r23, r23
    a0c8:	88 1f       	adc	r24, r24
    a0ca:	99 1f       	adc	r25, r25
    a0cc:	62 0f       	add	r22, r18
    a0ce:	73 1f       	adc	r23, r19
    a0d0:	84 1f       	adc	r24, r20
    a0d2:	95 1f       	adc	r25, r21
    a0d4:	66 0f       	add	r22, r22
    a0d6:	77 1f       	adc	r23, r23
    a0d8:	88 1f       	adc	r24, r24
    a0da:	99 1f       	adc	r25, r25
    a0dc:	08 95       	ret

0000a0de <__mulhi_const_10>:
    a0de:	7a e0       	ldi	r23, 0x0A	; 10
    a0e0:	97 9f       	mul	r25, r23
    a0e2:	90 2d       	mov	r25, r0
    a0e4:	87 9f       	mul	r24, r23
    a0e6:	80 2d       	mov	r24, r0
    a0e8:	91 0d       	add	r25, r1
    a0ea:	11 24       	eor	r1, r1
    a0ec:	08 95       	ret

0000a0ee <sprintf>:
    a0ee:	0f 93       	push	r16
    a0f0:	1f 93       	push	r17
    a0f2:	cf 93       	push	r28
    a0f4:	df 93       	push	r29
    a0f6:	cd b7       	in	r28, 0x3d	; 61
    a0f8:	de b7       	in	r29, 0x3e	; 62
    a0fa:	2e 97       	sbiw	r28, 0x0e	; 14
    a0fc:	cd bf       	out	0x3d, r28	; 61
    a0fe:	de bf       	out	0x3e, r29	; 62
    a100:	0d 89       	ldd	r16, Y+21	; 0x15
    a102:	1e 89       	ldd	r17, Y+22	; 0x16
    a104:	86 e0       	ldi	r24, 0x06	; 6
    a106:	8c 83       	std	Y+4, r24	; 0x04
    a108:	09 83       	std	Y+1, r16	; 0x01
    a10a:	1a 83       	std	Y+2, r17	; 0x02
    a10c:	8f ef       	ldi	r24, 0xFF	; 255
    a10e:	9f e7       	ldi	r25, 0x7F	; 127
    a110:	8d 83       	std	Y+5, r24	; 0x05
    a112:	9e 83       	std	Y+6, r25	; 0x06
    a114:	ae 01       	movw	r20, r28
    a116:	47 5e       	subi	r20, 0xE7	; 231
    a118:	5f 4f       	sbci	r21, 0xFF	; 255
    a11a:	6f 89       	ldd	r22, Y+23	; 0x17
    a11c:	78 8d       	ldd	r23, Y+24	; 0x18
    a11e:	ce 01       	movw	r24, r28
    a120:	01 96       	adiw	r24, 0x01	; 1
    a122:	0e 94 a1 50 	call	0xa142	; 0xa142 <vfprintf>
    a126:	2f 81       	ldd	r18, Y+7	; 0x07
    a128:	38 85       	ldd	r19, Y+8	; 0x08
    a12a:	02 0f       	add	r16, r18
    a12c:	13 1f       	adc	r17, r19
    a12e:	f8 01       	movw	r30, r16
    a130:	10 82       	st	Z, r1
    a132:	2e 96       	adiw	r28, 0x0e	; 14
    a134:	cd bf       	out	0x3d, r28	; 61
    a136:	de bf       	out	0x3e, r29	; 62
    a138:	df 91       	pop	r29
    a13a:	cf 91       	pop	r28
    a13c:	1f 91       	pop	r17
    a13e:	0f 91       	pop	r16
    a140:	08 95       	ret

0000a142 <vfprintf>:
    a142:	2f 92       	push	r2
    a144:	3f 92       	push	r3
    a146:	4f 92       	push	r4
    a148:	5f 92       	push	r5
    a14a:	6f 92       	push	r6
    a14c:	7f 92       	push	r7
    a14e:	8f 92       	push	r8
    a150:	9f 92       	push	r9
    a152:	af 92       	push	r10
    a154:	bf 92       	push	r11
    a156:	cf 92       	push	r12
    a158:	df 92       	push	r13
    a15a:	ef 92       	push	r14
    a15c:	ff 92       	push	r15
    a15e:	0f 93       	push	r16
    a160:	1f 93       	push	r17
    a162:	cf 93       	push	r28
    a164:	df 93       	push	r29
    a166:	cd b7       	in	r28, 0x3d	; 61
    a168:	de b7       	in	r29, 0x3e	; 62
    a16a:	2b 97       	sbiw	r28, 0x0b	; 11
    a16c:	cd bf       	out	0x3d, r28	; 61
    a16e:	de bf       	out	0x3e, r29	; 62
    a170:	7c 01       	movw	r14, r24
    a172:	3b 01       	movw	r6, r22
    a174:	8a 01       	movw	r16, r20
    a176:	fc 01       	movw	r30, r24
    a178:	16 82       	std	Z+6, r1	; 0x06
    a17a:	17 82       	std	Z+7, r1	; 0x07
    a17c:	83 81       	ldd	r24, Z+3	; 0x03
    a17e:	81 ff       	sbrs	r24, 1
    a180:	da c1       	rjmp	.+948    	; 0xa536 <vfprintf+0x3f4>
    a182:	ce 01       	movw	r24, r28
    a184:	01 96       	adiw	r24, 0x01	; 1
    a186:	5c 01       	movw	r10, r24
    a188:	f7 01       	movw	r30, r14
    a18a:	93 81       	ldd	r25, Z+3	; 0x03
    a18c:	f3 01       	movw	r30, r6
    a18e:	93 fd       	sbrc	r25, 3
    a190:	85 91       	lpm	r24, Z+
    a192:	93 ff       	sbrs	r25, 3
    a194:	81 91       	ld	r24, Z+
    a196:	3f 01       	movw	r6, r30
    a198:	88 23       	and	r24, r24
    a19a:	09 f4       	brne	.+2      	; 0xa19e <vfprintf+0x5c>
    a19c:	53 c1       	rjmp	.+678    	; 0xa444 <vfprintf+0x302>
    a19e:	85 32       	cpi	r24, 0x25	; 37
    a1a0:	39 f4       	brne	.+14     	; 0xa1b0 <vfprintf+0x6e>
    a1a2:	93 fd       	sbrc	r25, 3
    a1a4:	85 91       	lpm	r24, Z+
    a1a6:	93 ff       	sbrs	r25, 3
    a1a8:	81 91       	ld	r24, Z+
    a1aa:	3f 01       	movw	r6, r30
    a1ac:	85 32       	cpi	r24, 0x25	; 37
    a1ae:	29 f4       	brne	.+10     	; 0xa1ba <vfprintf+0x78>
    a1b0:	b7 01       	movw	r22, r14
    a1b2:	90 e0       	ldi	r25, 0x00	; 0
    a1b4:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a1b8:	e7 cf       	rjmp	.-50     	; 0xa188 <vfprintf+0x46>
    a1ba:	91 2c       	mov	r9, r1
    a1bc:	21 2c       	mov	r2, r1
    a1be:	31 2c       	mov	r3, r1
    a1c0:	ff e1       	ldi	r31, 0x1F	; 31
    a1c2:	f3 15       	cp	r31, r3
    a1c4:	38 f0       	brcs	.+14     	; 0xa1d4 <vfprintf+0x92>
    a1c6:	8b 32       	cpi	r24, 0x2B	; 43
    a1c8:	11 f1       	breq	.+68     	; 0xa20e <vfprintf+0xcc>
    a1ca:	90 f4       	brcc	.+36     	; 0xa1f0 <vfprintf+0xae>
    a1cc:	80 32       	cpi	r24, 0x20	; 32
    a1ce:	09 f1       	breq	.+66     	; 0xa212 <vfprintf+0xd0>
    a1d0:	83 32       	cpi	r24, 0x23	; 35
    a1d2:	29 f1       	breq	.+74     	; 0xa21e <vfprintf+0xdc>
    a1d4:	37 fc       	sbrc	r3, 7
    a1d6:	3c c0       	rjmp	.+120    	; 0xa250 <vfprintf+0x10e>
    a1d8:	20 ed       	ldi	r18, 0xD0	; 208
    a1da:	28 0f       	add	r18, r24
    a1dc:	2a 30       	cpi	r18, 0x0A	; 10
    a1de:	50 f5       	brcc	.+84     	; 0xa234 <vfprintf+0xf2>
    a1e0:	36 fe       	sbrs	r3, 6
    a1e2:	20 c0       	rjmp	.+64     	; 0xa224 <vfprintf+0xe2>
    a1e4:	8a e0       	ldi	r24, 0x0A	; 10
    a1e6:	98 9e       	mul	r9, r24
    a1e8:	20 0d       	add	r18, r0
    a1ea:	11 24       	eor	r1, r1
    a1ec:	92 2e       	mov	r9, r18
    a1ee:	06 c0       	rjmp	.+12     	; 0xa1fc <vfprintf+0xba>
    a1f0:	8d 32       	cpi	r24, 0x2D	; 45
    a1f2:	91 f0       	breq	.+36     	; 0xa218 <vfprintf+0xd6>
    a1f4:	80 33       	cpi	r24, 0x30	; 48
    a1f6:	71 f7       	brne	.-36     	; 0xa1d4 <vfprintf+0x92>
    a1f8:	68 94       	set
    a1fa:	30 f8       	bld	r3, 0
    a1fc:	f3 01       	movw	r30, r6
    a1fe:	93 fd       	sbrc	r25, 3
    a200:	85 91       	lpm	r24, Z+
    a202:	93 ff       	sbrs	r25, 3
    a204:	81 91       	ld	r24, Z+
    a206:	3f 01       	movw	r6, r30
    a208:	81 11       	cpse	r24, r1
    a20a:	da cf       	rjmp	.-76     	; 0xa1c0 <vfprintf+0x7e>
    a20c:	21 c0       	rjmp	.+66     	; 0xa250 <vfprintf+0x10e>
    a20e:	68 94       	set
    a210:	31 f8       	bld	r3, 1
    a212:	68 94       	set
    a214:	32 f8       	bld	r3, 2
    a216:	f2 cf       	rjmp	.-28     	; 0xa1fc <vfprintf+0xba>
    a218:	68 94       	set
    a21a:	33 f8       	bld	r3, 3
    a21c:	ef cf       	rjmp	.-34     	; 0xa1fc <vfprintf+0xba>
    a21e:	68 94       	set
    a220:	34 f8       	bld	r3, 4
    a222:	ec cf       	rjmp	.-40     	; 0xa1fc <vfprintf+0xba>
    a224:	ea e0       	ldi	r30, 0x0A	; 10
    a226:	2e 9e       	mul	r2, r30
    a228:	20 0d       	add	r18, r0
    a22a:	11 24       	eor	r1, r1
    a22c:	22 2e       	mov	r2, r18
    a22e:	68 94       	set
    a230:	35 f8       	bld	r3, 5
    a232:	e4 cf       	rjmp	.-56     	; 0xa1fc <vfprintf+0xba>
    a234:	8e 32       	cpi	r24, 0x2E	; 46
    a236:	29 f4       	brne	.+10     	; 0xa242 <vfprintf+0x100>
    a238:	36 fc       	sbrc	r3, 6
    a23a:	04 c1       	rjmp	.+520    	; 0xa444 <vfprintf+0x302>
    a23c:	68 94       	set
    a23e:	36 f8       	bld	r3, 6
    a240:	dd cf       	rjmp	.-70     	; 0xa1fc <vfprintf+0xba>
    a242:	8c 36       	cpi	r24, 0x6C	; 108
    a244:	19 f4       	brne	.+6      	; 0xa24c <vfprintf+0x10a>
    a246:	68 94       	set
    a248:	37 f8       	bld	r3, 7
    a24a:	d8 cf       	rjmp	.-80     	; 0xa1fc <vfprintf+0xba>
    a24c:	88 36       	cpi	r24, 0x68	; 104
    a24e:	b1 f2       	breq	.-84     	; 0xa1fc <vfprintf+0xba>
    a250:	98 2f       	mov	r25, r24
    a252:	9f 7d       	andi	r25, 0xDF	; 223
    a254:	95 54       	subi	r25, 0x45	; 69
    a256:	93 30       	cpi	r25, 0x03	; 3
    a258:	e0 f0       	brcs	.+56     	; 0xa292 <vfprintf+0x150>
    a25a:	83 36       	cpi	r24, 0x63	; 99
    a25c:	a1 f1       	breq	.+104    	; 0xa2c6 <vfprintf+0x184>
    a25e:	83 37       	cpi	r24, 0x73	; 115
    a260:	c1 f1       	breq	.+112    	; 0xa2d2 <vfprintf+0x190>
    a262:	83 35       	cpi	r24, 0x53	; 83
    a264:	09 f0       	breq	.+2      	; 0xa268 <vfprintf+0x126>
    a266:	63 c0       	rjmp	.+198    	; 0xa32e <vfprintf+0x1ec>
    a268:	28 01       	movw	r4, r16
    a26a:	f2 e0       	ldi	r31, 0x02	; 2
    a26c:	4f 0e       	add	r4, r31
    a26e:	51 1c       	adc	r5, r1
    a270:	f8 01       	movw	r30, r16
    a272:	c0 80       	ld	r12, Z
    a274:	d1 80       	ldd	r13, Z+1	; 0x01
    a276:	69 2d       	mov	r22, r9
    a278:	70 e0       	ldi	r23, 0x00	; 0
    a27a:	36 fc       	sbrc	r3, 6
    a27c:	02 c0       	rjmp	.+4      	; 0xa282 <vfprintf+0x140>
    a27e:	6f ef       	ldi	r22, 0xFF	; 255
    a280:	7f ef       	ldi	r23, 0xFF	; 255
    a282:	c6 01       	movw	r24, r12
    a284:	0e 94 ef 54 	call	0xa9de	; 0xa9de <strnlen_P>
    a288:	4c 01       	movw	r8, r24
    a28a:	68 94       	set
    a28c:	37 f8       	bld	r3, 7
    a28e:	82 01       	movw	r16, r4
    a290:	0a c0       	rjmp	.+20     	; 0xa2a6 <vfprintf+0x164>
    a292:	0c 5f       	subi	r16, 0xFC	; 252
    a294:	1f 4f       	sbci	r17, 0xFF	; 255
    a296:	ff e3       	ldi	r31, 0x3F	; 63
    a298:	f9 83       	std	Y+1, r31	; 0x01
    a29a:	88 24       	eor	r8, r8
    a29c:	83 94       	inc	r8
    a29e:	91 2c       	mov	r9, r1
    a2a0:	65 01       	movw	r12, r10
    a2a2:	e8 94       	clt
    a2a4:	37 f8       	bld	r3, 7
    a2a6:	33 fe       	sbrs	r3, 3
    a2a8:	2d c0       	rjmp	.+90     	; 0xa304 <vfprintf+0x1c2>
    a2aa:	52 2c       	mov	r5, r2
    a2ac:	81 14       	cp	r8, r1
    a2ae:	91 04       	cpc	r9, r1
    a2b0:	71 f5       	brne	.+92     	; 0xa30e <vfprintf+0x1cc>
    a2b2:	55 20       	and	r5, r5
    a2b4:	09 f4       	brne	.+2      	; 0xa2b8 <vfprintf+0x176>
    a2b6:	68 cf       	rjmp	.-304    	; 0xa188 <vfprintf+0x46>
    a2b8:	b7 01       	movw	r22, r14
    a2ba:	80 e2       	ldi	r24, 0x20	; 32
    a2bc:	90 e0       	ldi	r25, 0x00	; 0
    a2be:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a2c2:	5a 94       	dec	r5
    a2c4:	f6 cf       	rjmp	.-20     	; 0xa2b2 <vfprintf+0x170>
    a2c6:	f8 01       	movw	r30, r16
    a2c8:	80 81       	ld	r24, Z
    a2ca:	89 83       	std	Y+1, r24	; 0x01
    a2cc:	0e 5f       	subi	r16, 0xFE	; 254
    a2ce:	1f 4f       	sbci	r17, 0xFF	; 255
    a2d0:	e4 cf       	rjmp	.-56     	; 0xa29a <vfprintf+0x158>
    a2d2:	28 01       	movw	r4, r16
    a2d4:	f2 e0       	ldi	r31, 0x02	; 2
    a2d6:	4f 0e       	add	r4, r31
    a2d8:	51 1c       	adc	r5, r1
    a2da:	f8 01       	movw	r30, r16
    a2dc:	c0 80       	ld	r12, Z
    a2de:	d1 80       	ldd	r13, Z+1	; 0x01
    a2e0:	69 2d       	mov	r22, r9
    a2e2:	70 e0       	ldi	r23, 0x00	; 0
    a2e4:	36 fc       	sbrc	r3, 6
    a2e6:	02 c0       	rjmp	.+4      	; 0xa2ec <vfprintf+0x1aa>
    a2e8:	6f ef       	ldi	r22, 0xFF	; 255
    a2ea:	7f ef       	ldi	r23, 0xFF	; 255
    a2ec:	c6 01       	movw	r24, r12
    a2ee:	0e 94 01 55 	call	0xaa02	; 0xaa02 <strnlen>
    a2f2:	4c 01       	movw	r8, r24
    a2f4:	82 01       	movw	r16, r4
    a2f6:	d5 cf       	rjmp	.-86     	; 0xa2a2 <vfprintf+0x160>
    a2f8:	b7 01       	movw	r22, r14
    a2fa:	80 e2       	ldi	r24, 0x20	; 32
    a2fc:	90 e0       	ldi	r25, 0x00	; 0
    a2fe:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a302:	2a 94       	dec	r2
    a304:	28 14       	cp	r2, r8
    a306:	19 04       	cpc	r1, r9
    a308:	09 f0       	breq	.+2      	; 0xa30c <vfprintf+0x1ca>
    a30a:	b0 f7       	brcc	.-20     	; 0xa2f8 <vfprintf+0x1b6>
    a30c:	ce cf       	rjmp	.-100    	; 0xa2aa <vfprintf+0x168>
    a30e:	f6 01       	movw	r30, r12
    a310:	37 fc       	sbrc	r3, 7
    a312:	85 91       	lpm	r24, Z+
    a314:	37 fe       	sbrs	r3, 7
    a316:	81 91       	ld	r24, Z+
    a318:	6f 01       	movw	r12, r30
    a31a:	b7 01       	movw	r22, r14
    a31c:	90 e0       	ldi	r25, 0x00	; 0
    a31e:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a322:	51 10       	cpse	r5, r1
    a324:	5a 94       	dec	r5
    a326:	f1 e0       	ldi	r31, 0x01	; 1
    a328:	8f 1a       	sub	r8, r31
    a32a:	91 08       	sbc	r9, r1
    a32c:	bf cf       	rjmp	.-130    	; 0xa2ac <vfprintf+0x16a>
    a32e:	84 36       	cpi	r24, 0x64	; 100
    a330:	19 f0       	breq	.+6      	; 0xa338 <vfprintf+0x1f6>
    a332:	89 36       	cpi	r24, 0x69	; 105
    a334:	09 f0       	breq	.+2      	; 0xa338 <vfprintf+0x1f6>
    a336:	77 c0       	rjmp	.+238    	; 0xa426 <vfprintf+0x2e4>
    a338:	f8 01       	movw	r30, r16
    a33a:	37 fe       	sbrs	r3, 7
    a33c:	6b c0       	rjmp	.+214    	; 0xa414 <vfprintf+0x2d2>
    a33e:	60 81       	ld	r22, Z
    a340:	71 81       	ldd	r23, Z+1	; 0x01
    a342:	82 81       	ldd	r24, Z+2	; 0x02
    a344:	93 81       	ldd	r25, Z+3	; 0x03
    a346:	0c 5f       	subi	r16, 0xFC	; 252
    a348:	1f 4f       	sbci	r17, 0xFF	; 255
    a34a:	f3 2d       	mov	r31, r3
    a34c:	ff 76       	andi	r31, 0x6F	; 111
    a34e:	3f 2e       	mov	r3, r31
    a350:	97 ff       	sbrs	r25, 7
    a352:	09 c0       	rjmp	.+18     	; 0xa366 <vfprintf+0x224>
    a354:	90 95       	com	r25
    a356:	80 95       	com	r24
    a358:	70 95       	com	r23
    a35a:	61 95       	neg	r22
    a35c:	7f 4f       	sbci	r23, 0xFF	; 255
    a35e:	8f 4f       	sbci	r24, 0xFF	; 255
    a360:	9f 4f       	sbci	r25, 0xFF	; 255
    a362:	68 94       	set
    a364:	37 f8       	bld	r3, 7
    a366:	2a e0       	ldi	r18, 0x0A	; 10
    a368:	30 e0       	ldi	r19, 0x00	; 0
    a36a:	a5 01       	movw	r20, r10
    a36c:	0e 94 3c 55 	call	0xaa78	; 0xaa78 <__ultoa_invert>
    a370:	c8 2e       	mov	r12, r24
    a372:	ca 18       	sub	r12, r10
    a374:	8c 2c       	mov	r8, r12
    a376:	43 2c       	mov	r4, r3
    a378:	36 fe       	sbrs	r3, 6
    a37a:	0c c0       	rjmp	.+24     	; 0xa394 <vfprintf+0x252>
    a37c:	e8 94       	clt
    a37e:	40 f8       	bld	r4, 0
    a380:	c9 14       	cp	r12, r9
    a382:	40 f4       	brcc	.+16     	; 0xa394 <vfprintf+0x252>
    a384:	34 fe       	sbrs	r3, 4
    a386:	05 c0       	rjmp	.+10     	; 0xa392 <vfprintf+0x250>
    a388:	32 fc       	sbrc	r3, 2
    a38a:	03 c0       	rjmp	.+6      	; 0xa392 <vfprintf+0x250>
    a38c:	f3 2d       	mov	r31, r3
    a38e:	fe 7e       	andi	r31, 0xEE	; 238
    a390:	4f 2e       	mov	r4, r31
    a392:	89 2c       	mov	r8, r9
    a394:	44 fe       	sbrs	r4, 4
    a396:	a7 c0       	rjmp	.+334    	; 0xa4e6 <vfprintf+0x3a4>
    a398:	fe 01       	movw	r30, r28
    a39a:	ec 0d       	add	r30, r12
    a39c:	f1 1d       	adc	r31, r1
    a39e:	80 81       	ld	r24, Z
    a3a0:	80 33       	cpi	r24, 0x30	; 48
    a3a2:	09 f0       	breq	.+2      	; 0xa3a6 <vfprintf+0x264>
    a3a4:	99 c0       	rjmp	.+306    	; 0xa4d8 <vfprintf+0x396>
    a3a6:	24 2d       	mov	r18, r4
    a3a8:	29 7e       	andi	r18, 0xE9	; 233
    a3aa:	42 2e       	mov	r4, r18
    a3ac:	84 2d       	mov	r24, r4
    a3ae:	88 70       	andi	r24, 0x08	; 8
    a3b0:	58 2e       	mov	r5, r24
    a3b2:	43 fc       	sbrc	r4, 3
    a3b4:	a7 c0       	rjmp	.+334    	; 0xa504 <vfprintf+0x3c2>
    a3b6:	40 fe       	sbrs	r4, 0
    a3b8:	a1 c0       	rjmp	.+322    	; 0xa4fc <vfprintf+0x3ba>
    a3ba:	9c 2c       	mov	r9, r12
    a3bc:	82 14       	cp	r8, r2
    a3be:	18 f4       	brcc	.+6      	; 0xa3c6 <vfprintf+0x284>
    a3c0:	2c 0c       	add	r2, r12
    a3c2:	92 2c       	mov	r9, r2
    a3c4:	98 18       	sub	r9, r8
    a3c6:	44 fe       	sbrs	r4, 4
    a3c8:	a3 c0       	rjmp	.+326    	; 0xa510 <vfprintf+0x3ce>
    a3ca:	b7 01       	movw	r22, r14
    a3cc:	80 e3       	ldi	r24, 0x30	; 48
    a3ce:	90 e0       	ldi	r25, 0x00	; 0
    a3d0:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a3d4:	42 fe       	sbrs	r4, 2
    a3d6:	09 c0       	rjmp	.+18     	; 0xa3ea <vfprintf+0x2a8>
    a3d8:	88 e7       	ldi	r24, 0x78	; 120
    a3da:	90 e0       	ldi	r25, 0x00	; 0
    a3dc:	41 fe       	sbrs	r4, 1
    a3de:	02 c0       	rjmp	.+4      	; 0xa3e4 <vfprintf+0x2a2>
    a3e0:	88 e5       	ldi	r24, 0x58	; 88
    a3e2:	90 e0       	ldi	r25, 0x00	; 0
    a3e4:	b7 01       	movw	r22, r14
    a3e6:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a3ea:	c9 14       	cp	r12, r9
    a3ec:	08 f4       	brcc	.+2      	; 0xa3f0 <vfprintf+0x2ae>
    a3ee:	9c c0       	rjmp	.+312    	; 0xa528 <vfprintf+0x3e6>
    a3f0:	ca 94       	dec	r12
    a3f2:	d1 2c       	mov	r13, r1
    a3f4:	9f ef       	ldi	r25, 0xFF	; 255
    a3f6:	c9 1a       	sub	r12, r25
    a3f8:	d9 0a       	sbc	r13, r25
    a3fa:	ca 0c       	add	r12, r10
    a3fc:	db 1c       	adc	r13, r11
    a3fe:	f6 01       	movw	r30, r12
    a400:	82 91       	ld	r24, -Z
    a402:	6f 01       	movw	r12, r30
    a404:	b7 01       	movw	r22, r14
    a406:	90 e0       	ldi	r25, 0x00	; 0
    a408:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a40c:	ac 14       	cp	r10, r12
    a40e:	bd 04       	cpc	r11, r13
    a410:	b1 f7       	brne	.-20     	; 0xa3fe <vfprintf+0x2bc>
    a412:	4f cf       	rjmp	.-354    	; 0xa2b2 <vfprintf+0x170>
    a414:	60 81       	ld	r22, Z
    a416:	71 81       	ldd	r23, Z+1	; 0x01
    a418:	07 2e       	mov	r0, r23
    a41a:	00 0c       	add	r0, r0
    a41c:	88 0b       	sbc	r24, r24
    a41e:	99 0b       	sbc	r25, r25
    a420:	0e 5f       	subi	r16, 0xFE	; 254
    a422:	1f 4f       	sbci	r17, 0xFF	; 255
    a424:	92 cf       	rjmp	.-220    	; 0xa34a <vfprintf+0x208>
    a426:	d3 2c       	mov	r13, r3
    a428:	e8 94       	clt
    a42a:	d4 f8       	bld	r13, 4
    a42c:	2a e0       	ldi	r18, 0x0A	; 10
    a42e:	30 e0       	ldi	r19, 0x00	; 0
    a430:	85 37       	cpi	r24, 0x75	; 117
    a432:	c9 f1       	breq	.+114    	; 0xa4a6 <vfprintf+0x364>
    a434:	23 2d       	mov	r18, r3
    a436:	29 7f       	andi	r18, 0xF9	; 249
    a438:	d2 2e       	mov	r13, r18
    a43a:	8f 36       	cpi	r24, 0x6F	; 111
    a43c:	91 f1       	breq	.+100    	; 0xa4a2 <vfprintf+0x360>
    a43e:	d8 f4       	brcc	.+54     	; 0xa476 <vfprintf+0x334>
    a440:	88 35       	cpi	r24, 0x58	; 88
    a442:	39 f1       	breq	.+78     	; 0xa492 <vfprintf+0x350>
    a444:	f7 01       	movw	r30, r14
    a446:	86 81       	ldd	r24, Z+6	; 0x06
    a448:	97 81       	ldd	r25, Z+7	; 0x07
    a44a:	2b 96       	adiw	r28, 0x0b	; 11
    a44c:	cd bf       	out	0x3d, r28	; 61
    a44e:	de bf       	out	0x3e, r29	; 62
    a450:	df 91       	pop	r29
    a452:	cf 91       	pop	r28
    a454:	1f 91       	pop	r17
    a456:	0f 91       	pop	r16
    a458:	ff 90       	pop	r15
    a45a:	ef 90       	pop	r14
    a45c:	df 90       	pop	r13
    a45e:	cf 90       	pop	r12
    a460:	bf 90       	pop	r11
    a462:	af 90       	pop	r10
    a464:	9f 90       	pop	r9
    a466:	8f 90       	pop	r8
    a468:	7f 90       	pop	r7
    a46a:	6f 90       	pop	r6
    a46c:	5f 90       	pop	r5
    a46e:	4f 90       	pop	r4
    a470:	3f 90       	pop	r3
    a472:	2f 90       	pop	r2
    a474:	08 95       	ret
    a476:	80 37       	cpi	r24, 0x70	; 112
    a478:	49 f0       	breq	.+18     	; 0xa48c <vfprintf+0x34a>
    a47a:	88 37       	cpi	r24, 0x78	; 120
    a47c:	19 f7       	brne	.-58     	; 0xa444 <vfprintf+0x302>
    a47e:	d4 fe       	sbrs	r13, 4
    a480:	02 c0       	rjmp	.+4      	; 0xa486 <vfprintf+0x344>
    a482:	68 94       	set
    a484:	d2 f8       	bld	r13, 2
    a486:	20 e1       	ldi	r18, 0x10	; 16
    a488:	30 e0       	ldi	r19, 0x00	; 0
    a48a:	0d c0       	rjmp	.+26     	; 0xa4a6 <vfprintf+0x364>
    a48c:	68 94       	set
    a48e:	d4 f8       	bld	r13, 4
    a490:	f6 cf       	rjmp	.-20     	; 0xa47e <vfprintf+0x33c>
    a492:	34 fe       	sbrs	r3, 4
    a494:	03 c0       	rjmp	.+6      	; 0xa49c <vfprintf+0x35a>
    a496:	82 2f       	mov	r24, r18
    a498:	86 60       	ori	r24, 0x06	; 6
    a49a:	d8 2e       	mov	r13, r24
    a49c:	20 e1       	ldi	r18, 0x10	; 16
    a49e:	32 e0       	ldi	r19, 0x02	; 2
    a4a0:	02 c0       	rjmp	.+4      	; 0xa4a6 <vfprintf+0x364>
    a4a2:	28 e0       	ldi	r18, 0x08	; 8
    a4a4:	30 e0       	ldi	r19, 0x00	; 0
    a4a6:	f8 01       	movw	r30, r16
    a4a8:	d7 fe       	sbrs	r13, 7
    a4aa:	0f c0       	rjmp	.+30     	; 0xa4ca <vfprintf+0x388>
    a4ac:	60 81       	ld	r22, Z
    a4ae:	71 81       	ldd	r23, Z+1	; 0x01
    a4b0:	82 81       	ldd	r24, Z+2	; 0x02
    a4b2:	93 81       	ldd	r25, Z+3	; 0x03
    a4b4:	0c 5f       	subi	r16, 0xFC	; 252
    a4b6:	1f 4f       	sbci	r17, 0xFF	; 255
    a4b8:	a5 01       	movw	r20, r10
    a4ba:	0e 94 3c 55 	call	0xaa78	; 0xaa78 <__ultoa_invert>
    a4be:	c8 2e       	mov	r12, r24
    a4c0:	ca 18       	sub	r12, r10
    a4c2:	3d 2c       	mov	r3, r13
    a4c4:	e8 94       	clt
    a4c6:	37 f8       	bld	r3, 7
    a4c8:	55 cf       	rjmp	.-342    	; 0xa374 <vfprintf+0x232>
    a4ca:	60 81       	ld	r22, Z
    a4cc:	71 81       	ldd	r23, Z+1	; 0x01
    a4ce:	90 e0       	ldi	r25, 0x00	; 0
    a4d0:	80 e0       	ldi	r24, 0x00	; 0
    a4d2:	0e 5f       	subi	r16, 0xFE	; 254
    a4d4:	1f 4f       	sbci	r17, 0xFF	; 255
    a4d6:	f0 cf       	rjmp	.-32     	; 0xa4b8 <vfprintf+0x376>
    a4d8:	42 fc       	sbrc	r4, 2
    a4da:	02 c0       	rjmp	.+4      	; 0xa4e0 <vfprintf+0x39e>
    a4dc:	83 94       	inc	r8
    a4de:	66 cf       	rjmp	.-308    	; 0xa3ac <vfprintf+0x26a>
    a4e0:	83 94       	inc	r8
    a4e2:	83 94       	inc	r8
    a4e4:	63 cf       	rjmp	.-314    	; 0xa3ac <vfprintf+0x26a>
    a4e6:	84 2d       	mov	r24, r4
    a4e8:	86 78       	andi	r24, 0x86	; 134
    a4ea:	09 f4       	brne	.+2      	; 0xa4ee <vfprintf+0x3ac>
    a4ec:	5f cf       	rjmp	.-322    	; 0xa3ac <vfprintf+0x26a>
    a4ee:	f6 cf       	rjmp	.-20     	; 0xa4dc <vfprintf+0x39a>
    a4f0:	b7 01       	movw	r22, r14
    a4f2:	80 e2       	ldi	r24, 0x20	; 32
    a4f4:	90 e0       	ldi	r25, 0x00	; 0
    a4f6:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a4fa:	83 94       	inc	r8
    a4fc:	82 14       	cp	r8, r2
    a4fe:	c0 f3       	brcs	.-16     	; 0xa4f0 <vfprintf+0x3ae>
    a500:	51 2c       	mov	r5, r1
    a502:	61 cf       	rjmp	.-318    	; 0xa3c6 <vfprintf+0x284>
    a504:	52 2c       	mov	r5, r2
    a506:	58 18       	sub	r5, r8
    a508:	82 14       	cp	r8, r2
    a50a:	08 f4       	brcc	.+2      	; 0xa50e <vfprintf+0x3cc>
    a50c:	5c cf       	rjmp	.-328    	; 0xa3c6 <vfprintf+0x284>
    a50e:	f8 cf       	rjmp	.-16     	; 0xa500 <vfprintf+0x3be>
    a510:	84 2d       	mov	r24, r4
    a512:	86 78       	andi	r24, 0x86	; 134
    a514:	09 f4       	brne	.+2      	; 0xa518 <vfprintf+0x3d6>
    a516:	69 cf       	rjmp	.-302    	; 0xa3ea <vfprintf+0x2a8>
    a518:	8b e2       	ldi	r24, 0x2B	; 43
    a51a:	41 fe       	sbrs	r4, 1
    a51c:	80 e2       	ldi	r24, 0x20	; 32
    a51e:	47 fc       	sbrc	r4, 7
    a520:	8d e2       	ldi	r24, 0x2D	; 45
    a522:	b7 01       	movw	r22, r14
    a524:	90 e0       	ldi	r25, 0x00	; 0
    a526:	5f cf       	rjmp	.-322    	; 0xa3e6 <vfprintf+0x2a4>
    a528:	b7 01       	movw	r22, r14
    a52a:	80 e3       	ldi	r24, 0x30	; 48
    a52c:	90 e0       	ldi	r25, 0x00	; 0
    a52e:	0e 94 0c 55 	call	0xaa18	; 0xaa18 <fputc>
    a532:	9a 94       	dec	r9
    a534:	5a cf       	rjmp	.-332    	; 0xa3ea <vfprintf+0x2a8>
    a536:	8f ef       	ldi	r24, 0xFF	; 255
    a538:	9f ef       	ldi	r25, 0xFF	; 255
    a53a:	87 cf       	rjmp	.-242    	; 0xa44a <vfprintf+0x308>

0000a53c <dtoa_prf>:
    a53c:	8f 92       	push	r8
    a53e:	9f 92       	push	r9
    a540:	af 92       	push	r10
    a542:	bf 92       	push	r11
    a544:	cf 92       	push	r12
    a546:	df 92       	push	r13
    a548:	ef 92       	push	r14
    a54a:	ff 92       	push	r15
    a54c:	0f 93       	push	r16
    a54e:	1f 93       	push	r17
    a550:	cf 93       	push	r28
    a552:	df 93       	push	r29
    a554:	cd b7       	in	r28, 0x3d	; 61
    a556:	de b7       	in	r29, 0x3e	; 62
    a558:	29 97       	sbiw	r28, 0x09	; 9
    a55a:	cd bf       	out	0x3d, r28	; 61
    a55c:	de bf       	out	0x3e, r29	; 62
    a55e:	6a 01       	movw	r12, r20
    a560:	f2 2e       	mov	r15, r18
    a562:	b0 2e       	mov	r11, r16
    a564:	10 2f       	mov	r17, r16
    a566:	fb e3       	ldi	r31, 0x3B	; 59
    a568:	af 2e       	mov	r10, r31
    a56a:	a0 16       	cp	r10, r16
    a56c:	08 f4       	brcc	.+2      	; 0xa570 <dtoa_prf+0x34>
    a56e:	1b e3       	ldi	r17, 0x3B	; 59
    a570:	1f 5f       	subi	r17, 0xFF	; 255
    a572:	01 2f       	mov	r16, r17
    a574:	27 e0       	ldi	r18, 0x07	; 7
    a576:	ae 01       	movw	r20, r28
    a578:	4f 5f       	subi	r20, 0xFF	; 255
    a57a:	5f 4f       	sbci	r21, 0xFF	; 255
    a57c:	0e 94 14 54 	call	0xa828	; 0xa828 <__ftoa_engine>
    a580:	bc 01       	movw	r22, r24
    a582:	89 81       	ldd	r24, Y+1	; 0x01
    a584:	98 2f       	mov	r25, r24
    a586:	99 70       	andi	r25, 0x09	; 9
    a588:	91 30       	cpi	r25, 0x01	; 1
    a58a:	09 f4       	brne	.+2      	; 0xa58e <dtoa_prf+0x52>
    a58c:	4b c0       	rjmp	.+150    	; 0xa624 <dtoa_prf+0xe8>
    a58e:	9b e2       	ldi	r25, 0x2B	; 43
    a590:	e1 fc       	sbrc	r14, 1
    a592:	04 c0       	rjmp	.+8      	; 0xa59c <dtoa_prf+0x60>
    a594:	9e 2d       	mov	r25, r14
    a596:	91 70       	andi	r25, 0x01	; 1
    a598:	e0 fc       	sbrc	r14, 0
    a59a:	46 c0       	rjmp	.+140    	; 0xa628 <dtoa_prf+0xec>
    a59c:	5e 2d       	mov	r21, r14
    a59e:	50 71       	andi	r21, 0x10	; 16
    a5a0:	e8 2f       	mov	r30, r24
    a5a2:	e8 70       	andi	r30, 0x08	; 8
    a5a4:	83 ff       	sbrs	r24, 3
    a5a6:	52 c0       	rjmp	.+164    	; 0xa64c <dtoa_prf+0x110>
    a5a8:	84 e0       	ldi	r24, 0x04	; 4
    a5aa:	91 11       	cpse	r25, r1
    a5ac:	01 c0       	rjmp	.+2      	; 0xa5b0 <dtoa_prf+0x74>
    a5ae:	83 e0       	ldi	r24, 0x03	; 3
    a5b0:	ef 2d       	mov	r30, r15
    a5b2:	e8 1b       	sub	r30, r24
    a5b4:	8f 15       	cp	r24, r15
    a5b6:	08 f0       	brcs	.+2      	; 0xa5ba <dtoa_prf+0x7e>
    a5b8:	e0 e0       	ldi	r30, 0x00	; 0
    a5ba:	d6 01       	movw	r26, r12
    a5bc:	8e 2f       	mov	r24, r30
    a5be:	20 e2       	ldi	r18, 0x20	; 32
    a5c0:	55 23       	and	r21, r21
    a5c2:	b1 f1       	breq	.+108    	; 0xa630 <dtoa_prf+0xf4>
    a5c4:	99 23       	and	r25, r25
    a5c6:	29 f0       	breq	.+10     	; 0xa5d2 <dtoa_prf+0x96>
    a5c8:	d6 01       	movw	r26, r12
    a5ca:	9c 93       	st	X, r25
    a5cc:	c6 01       	movw	r24, r12
    a5ce:	01 96       	adiw	r24, 0x01	; 1
    a5d0:	6c 01       	movw	r12, r24
    a5d2:	96 01       	movw	r18, r12
    a5d4:	2d 5f       	subi	r18, 0xFD	; 253
    a5d6:	3f 4f       	sbci	r19, 0xFF	; 255
    a5d8:	e2 fe       	sbrs	r14, 2
    a5da:	30 c0       	rjmp	.+96     	; 0xa63c <dtoa_prf+0x100>
    a5dc:	8e e4       	ldi	r24, 0x4E	; 78
    a5de:	d6 01       	movw	r26, r12
    a5e0:	8c 93       	st	X, r24
    a5e2:	91 e4       	ldi	r25, 0x41	; 65
    a5e4:	11 96       	adiw	r26, 0x01	; 1
    a5e6:	9c 93       	st	X, r25
    a5e8:	11 97       	sbiw	r26, 0x01	; 1
    a5ea:	12 96       	adiw	r26, 0x02	; 2
    a5ec:	8c 93       	st	X, r24
    a5ee:	d9 01       	movw	r26, r18
    a5f0:	8e 2f       	mov	r24, r30
    a5f2:	90 e2       	ldi	r25, 0x20	; 32
    a5f4:	81 11       	cpse	r24, r1
    a5f6:	27 c0       	rjmp	.+78     	; 0xa646 <dtoa_prf+0x10a>
    a5f8:	e2 0f       	add	r30, r18
    a5fa:	f3 2f       	mov	r31, r19
    a5fc:	f1 1d       	adc	r31, r1
    a5fe:	10 82       	st	Z, r1
    a600:	8e ef       	ldi	r24, 0xFE	; 254
    a602:	9f ef       	ldi	r25, 0xFF	; 255
    a604:	29 96       	adiw	r28, 0x09	; 9
    a606:	cd bf       	out	0x3d, r28	; 61
    a608:	de bf       	out	0x3e, r29	; 62
    a60a:	df 91       	pop	r29
    a60c:	cf 91       	pop	r28
    a60e:	1f 91       	pop	r17
    a610:	0f 91       	pop	r16
    a612:	ff 90       	pop	r15
    a614:	ef 90       	pop	r14
    a616:	df 90       	pop	r13
    a618:	cf 90       	pop	r12
    a61a:	bf 90       	pop	r11
    a61c:	af 90       	pop	r10
    a61e:	9f 90       	pop	r9
    a620:	8f 90       	pop	r8
    a622:	08 95       	ret
    a624:	9d e2       	ldi	r25, 0x2D	; 45
    a626:	ba cf       	rjmp	.-140    	; 0xa59c <dtoa_prf+0x60>
    a628:	90 e2       	ldi	r25, 0x20	; 32
    a62a:	b8 cf       	rjmp	.-144    	; 0xa59c <dtoa_prf+0x60>
    a62c:	2d 93       	st	X+, r18
    a62e:	81 50       	subi	r24, 0x01	; 1
    a630:	81 11       	cpse	r24, r1
    a632:	fc cf       	rjmp	.-8      	; 0xa62c <dtoa_prf+0xf0>
    a634:	ce 0e       	add	r12, r30
    a636:	d1 1c       	adc	r13, r1
    a638:	e0 e0       	ldi	r30, 0x00	; 0
    a63a:	c4 cf       	rjmp	.-120    	; 0xa5c4 <dtoa_prf+0x88>
    a63c:	8e e6       	ldi	r24, 0x6E	; 110
    a63e:	d6 01       	movw	r26, r12
    a640:	8c 93       	st	X, r24
    a642:	91 e6       	ldi	r25, 0x61	; 97
    a644:	cf cf       	rjmp	.-98     	; 0xa5e4 <dtoa_prf+0xa8>
    a646:	9d 93       	st	X+, r25
    a648:	81 50       	subi	r24, 0x01	; 1
    a64a:	d4 cf       	rjmp	.-88     	; 0xa5f4 <dtoa_prf+0xb8>
    a64c:	48 2f       	mov	r20, r24
    a64e:	44 70       	andi	r20, 0x04	; 4
    a650:	82 ff       	sbrs	r24, 2
    a652:	3d c0       	rjmp	.+122    	; 0xa6ce <dtoa_prf+0x192>
    a654:	84 e0       	ldi	r24, 0x04	; 4
    a656:	91 11       	cpse	r25, r1
    a658:	01 c0       	rjmp	.+2      	; 0xa65c <dtoa_prf+0x120>
    a65a:	83 e0       	ldi	r24, 0x03	; 3
    a65c:	8f 15       	cp	r24, r15
    a65e:	10 f4       	brcc	.+4      	; 0xa664 <dtoa_prf+0x128>
    a660:	ef 2d       	mov	r30, r15
    a662:	e8 1b       	sub	r30, r24
    a664:	d6 01       	movw	r26, r12
    a666:	8e 2f       	mov	r24, r30
    a668:	20 e2       	ldi	r18, 0x20	; 32
    a66a:	55 23       	and	r21, r21
    a66c:	09 f1       	breq	.+66     	; 0xa6b0 <dtoa_prf+0x174>
    a66e:	99 23       	and	r25, r25
    a670:	29 f0       	breq	.+10     	; 0xa67c <dtoa_prf+0x140>
    a672:	d6 01       	movw	r26, r12
    a674:	9c 93       	st	X, r25
    a676:	c6 01       	movw	r24, r12
    a678:	01 96       	adiw	r24, 0x01	; 1
    a67a:	6c 01       	movw	r12, r24
    a67c:	96 01       	movw	r18, r12
    a67e:	2d 5f       	subi	r18, 0xFD	; 253
    a680:	3f 4f       	sbci	r19, 0xFF	; 255
    a682:	e2 fe       	sbrs	r14, 2
    a684:	1b c0       	rjmp	.+54     	; 0xa6bc <dtoa_prf+0x180>
    a686:	89 e4       	ldi	r24, 0x49	; 73
    a688:	d6 01       	movw	r26, r12
    a68a:	8c 93       	st	X, r24
    a68c:	8e e4       	ldi	r24, 0x4E	; 78
    a68e:	11 96       	adiw	r26, 0x01	; 1
    a690:	8c 93       	st	X, r24
    a692:	11 97       	sbiw	r26, 0x01	; 1
    a694:	86 e4       	ldi	r24, 0x46	; 70
    a696:	12 96       	adiw	r26, 0x02	; 2
    a698:	8c 93       	st	X, r24
    a69a:	d9 01       	movw	r26, r18
    a69c:	8e 2f       	mov	r24, r30
    a69e:	90 e2       	ldi	r25, 0x20	; 32
    a6a0:	88 23       	and	r24, r24
    a6a2:	09 f4       	brne	.+2      	; 0xa6a6 <dtoa_prf+0x16a>
    a6a4:	a9 cf       	rjmp	.-174    	; 0xa5f8 <dtoa_prf+0xbc>
    a6a6:	9d 93       	st	X+, r25
    a6a8:	81 50       	subi	r24, 0x01	; 1
    a6aa:	fa cf       	rjmp	.-12     	; 0xa6a0 <dtoa_prf+0x164>
    a6ac:	2d 93       	st	X+, r18
    a6ae:	81 50       	subi	r24, 0x01	; 1
    a6b0:	81 11       	cpse	r24, r1
    a6b2:	fc cf       	rjmp	.-8      	; 0xa6ac <dtoa_prf+0x170>
    a6b4:	ce 0e       	add	r12, r30
    a6b6:	d1 1c       	adc	r13, r1
    a6b8:	e0 e0       	ldi	r30, 0x00	; 0
    a6ba:	d9 cf       	rjmp	.-78     	; 0xa66e <dtoa_prf+0x132>
    a6bc:	89 e6       	ldi	r24, 0x69	; 105
    a6be:	d6 01       	movw	r26, r12
    a6c0:	8c 93       	st	X, r24
    a6c2:	8e e6       	ldi	r24, 0x6E	; 110
    a6c4:	11 96       	adiw	r26, 0x01	; 1
    a6c6:	8c 93       	st	X, r24
    a6c8:	11 97       	sbiw	r26, 0x01	; 1
    a6ca:	86 e6       	ldi	r24, 0x66	; 102
    a6cc:	e4 cf       	rjmp	.-56     	; 0xa696 <dtoa_prf+0x15a>
    a6ce:	9b 01       	movw	r18, r22
    a6d0:	77 ff       	sbrs	r23, 7
    a6d2:	02 c0       	rjmp	.+4      	; 0xa6d8 <dtoa_prf+0x19c>
    a6d4:	30 e0       	ldi	r19, 0x00	; 0
    a6d6:	20 e0       	ldi	r18, 0x00	; 0
    a6d8:	a1 e0       	ldi	r26, 0x01	; 1
    a6da:	b0 e0       	ldi	r27, 0x00	; 0
    a6dc:	91 11       	cpse	r25, r1
    a6de:	02 c0       	rjmp	.+4      	; 0xa6e4 <dtoa_prf+0x1a8>
    a6e0:	b0 e0       	ldi	r27, 0x00	; 0
    a6e2:	a0 e0       	ldi	r26, 0x00	; 0
    a6e4:	f9 01       	movw	r30, r18
    a6e6:	31 96       	adiw	r30, 0x01	; 1
    a6e8:	ae 0f       	add	r26, r30
    a6ea:	bf 1f       	adc	r27, r31
    a6ec:	8b 2c       	mov	r8, r11
    a6ee:	91 2c       	mov	r9, r1
    a6f0:	bb 20       	and	r11, r11
    a6f2:	09 f4       	brne	.+2      	; 0xa6f6 <dtoa_prf+0x1ba>
    a6f4:	61 c0       	rjmp	.+194    	; 0xa7b8 <dtoa_prf+0x27c>
    a6f6:	54 01       	movw	r10, r8
    a6f8:	ef ef       	ldi	r30, 0xFF	; 255
    a6fa:	ae 1a       	sub	r10, r30
    a6fc:	be 0a       	sbc	r11, r30
    a6fe:	aa 0d       	add	r26, r10
    a700:	bb 1d       	adc	r27, r11
    a702:	fa 16       	cp	r15, r26
    a704:	1b 06       	cpc	r1, r27
    a706:	19 f0       	breq	.+6      	; 0xa70e <dtoa_prf+0x1d2>
    a708:	14 f0       	brlt	.+4      	; 0xa70e <dtoa_prf+0x1d2>
    a70a:	4f 2d       	mov	r20, r15
    a70c:	4a 1b       	sub	r20, r26
    a70e:	51 11       	cpse	r21, r1
    a710:	88 c0       	rjmp	.+272    	; 0xa822 <dtoa_prf+0x2e6>
    a712:	e3 fc       	sbrc	r14, 3
    a714:	59 c0       	rjmp	.+178    	; 0xa7c8 <dtoa_prf+0x28c>
    a716:	76 01       	movw	r14, r12
    a718:	a4 2f       	mov	r26, r20
    a71a:	b0 e2       	ldi	r27, 0x20	; 32
    a71c:	a1 11       	cpse	r26, r1
    a71e:	4f c0       	rjmp	.+158    	; 0xa7be <dtoa_prf+0x282>
    a720:	c4 0e       	add	r12, r20
    a722:	d1 1c       	adc	r13, r1
    a724:	99 23       	and	r25, r25
    a726:	09 f4       	brne	.+2      	; 0xa72a <dtoa_prf+0x1ee>
    a728:	5b c0       	rjmp	.+182    	; 0xa7e0 <dtoa_prf+0x2a4>
    a72a:	40 e0       	ldi	r20, 0x00	; 0
    a72c:	d6 01       	movw	r26, r12
    a72e:	11 96       	adiw	r26, 0x01	; 1
    a730:	f6 01       	movw	r30, r12
    a732:	90 83       	st	Z, r25
    a734:	6d 01       	movw	r12, r26
    a736:	55 23       	and	r21, r21
    a738:	09 f4       	brne	.+2      	; 0xa73c <dtoa_prf+0x200>
    a73a:	48 c0       	rjmp	.+144    	; 0xa7cc <dtoa_prf+0x290>
    a73c:	01 2f       	mov	r16, r17
    a73e:	06 0f       	add	r16, r22
    a740:	9a 81       	ldd	r25, Y+2	; 0x02
    a742:	58 2f       	mov	r21, r24
    a744:	50 71       	andi	r21, 0x10	; 16
    a746:	84 ff       	sbrs	r24, 4
    a748:	03 c0       	rjmp	.+6      	; 0xa750 <dtoa_prf+0x214>
    a74a:	91 33       	cpi	r25, 0x31	; 49
    a74c:	09 f4       	brne	.+2      	; 0xa750 <dtoa_prf+0x214>
    a74e:	01 50       	subi	r16, 0x01	; 1
    a750:	10 16       	cp	r1, r16
    a752:	0c f0       	brlt	.+2      	; 0xa756 <dtoa_prf+0x21a>
    a754:	47 c0       	rjmp	.+142    	; 0xa7e4 <dtoa_prf+0x2a8>
    a756:	09 30       	cpi	r16, 0x09	; 9
    a758:	08 f0       	brcs	.+2      	; 0xa75c <dtoa_prf+0x220>
    a75a:	08 e0       	ldi	r16, 0x08	; 8
    a75c:	ee e2       	ldi	r30, 0x2E	; 46
    a75e:	fe 2e       	mov	r15, r30
    a760:	5b 01       	movw	r10, r22
    a762:	a0 1a       	sub	r10, r16
    a764:	b1 08       	sbc	r11, r1
    a766:	85 01       	movw	r16, r10
    a768:	91 94       	neg	r9
    a76a:	81 94       	neg	r8
    a76c:	91 08       	sbc	r9, r1
    a76e:	2f 3f       	cpi	r18, 0xFF	; 255
    a770:	32 07       	cpc	r19, r18
    a772:	29 f4       	brne	.+10     	; 0xa77e <dtoa_prf+0x242>
    a774:	d6 01       	movw	r26, r12
    a776:	fc 92       	st	X, r15
    a778:	f6 01       	movw	r30, r12
    a77a:	31 96       	adiw	r30, 0x01	; 1
    a77c:	6f 01       	movw	r12, r30
    a77e:	62 17       	cp	r22, r18
    a780:	73 07       	cpc	r23, r19
    a782:	94 f1       	brlt	.+100    	; 0xa7e8 <dtoa_prf+0x2ac>
    a784:	02 17       	cp	r16, r18
    a786:	13 07       	cpc	r17, r19
    a788:	7c f5       	brge	.+94     	; 0xa7e8 <dtoa_prf+0x2ac>
    a78a:	db 01       	movw	r26, r22
    a78c:	a2 1b       	sub	r26, r18
    a78e:	b3 0b       	sbc	r27, r19
    a790:	aa 24       	eor	r10, r10
    a792:	a3 94       	inc	r10
    a794:	b1 2c       	mov	r11, r1
    a796:	ac 0e       	add	r10, r28
    a798:	bd 1e       	adc	r11, r29
    a79a:	aa 0d       	add	r26, r10
    a79c:	bb 1d       	adc	r27, r11
    a79e:	11 96       	adiw	r26, 0x01	; 1
    a7a0:	8c 91       	ld	r24, X
    a7a2:	21 50       	subi	r18, 0x01	; 1
    a7a4:	31 09       	sbc	r19, r1
    a7a6:	d6 01       	movw	r26, r12
    a7a8:	11 96       	adiw	r26, 0x01	; 1
    a7aa:	28 15       	cp	r18, r8
    a7ac:	39 05       	cpc	r19, r9
    a7ae:	f4 f0       	brlt	.+60     	; 0xa7ec <dtoa_prf+0x2b0>
    a7b0:	f6 01       	movw	r30, r12
    a7b2:	80 83       	st	Z, r24
    a7b4:	6d 01       	movw	r12, r26
    a7b6:	db cf       	rjmp	.-74     	; 0xa76e <dtoa_prf+0x232>
    a7b8:	b1 2c       	mov	r11, r1
    a7ba:	a1 2c       	mov	r10, r1
    a7bc:	a0 cf       	rjmp	.-192    	; 0xa6fe <dtoa_prf+0x1c2>
    a7be:	f7 01       	movw	r30, r14
    a7c0:	b1 93       	st	Z+, r27
    a7c2:	7f 01       	movw	r14, r30
    a7c4:	a1 50       	subi	r26, 0x01	; 1
    a7c6:	aa cf       	rjmp	.-172    	; 0xa71c <dtoa_prf+0x1e0>
    a7c8:	91 11       	cpse	r25, r1
    a7ca:	b0 cf       	rjmp	.-160    	; 0xa72c <dtoa_prf+0x1f0>
    a7cc:	d6 01       	movw	r26, r12
    a7ce:	94 2f       	mov	r25, r20
    a7d0:	50 e3       	ldi	r21, 0x30	; 48
    a7d2:	02 c0       	rjmp	.+4      	; 0xa7d8 <dtoa_prf+0x29c>
    a7d4:	5d 93       	st	X+, r21
    a7d6:	91 50       	subi	r25, 0x01	; 1
    a7d8:	91 11       	cpse	r25, r1
    a7da:	fc cf       	rjmp	.-8      	; 0xa7d4 <dtoa_prf+0x298>
    a7dc:	c4 0e       	add	r12, r20
    a7de:	d1 1c       	adc	r13, r1
    a7e0:	40 e0       	ldi	r20, 0x00	; 0
    a7e2:	ac cf       	rjmp	.-168    	; 0xa73c <dtoa_prf+0x200>
    a7e4:	01 e0       	ldi	r16, 0x01	; 1
    a7e6:	ba cf       	rjmp	.-140    	; 0xa75c <dtoa_prf+0x220>
    a7e8:	80 e3       	ldi	r24, 0x30	; 48
    a7ea:	db cf       	rjmp	.-74     	; 0xa7a2 <dtoa_prf+0x266>
    a7ec:	62 17       	cp	r22, r18
    a7ee:	73 07       	cpc	r23, r19
    a7f0:	31 f4       	brne	.+12     	; 0xa7fe <dtoa_prf+0x2c2>
    a7f2:	96 33       	cpi	r25, 0x36	; 54
    a7f4:	88 f4       	brcc	.+34     	; 0xa818 <dtoa_prf+0x2dc>
    a7f6:	95 33       	cpi	r25, 0x35	; 53
    a7f8:	11 f4       	brne	.+4      	; 0xa7fe <dtoa_prf+0x2c2>
    a7fa:	55 23       	and	r21, r21
    a7fc:	69 f0       	breq	.+26     	; 0xa818 <dtoa_prf+0x2dc>
    a7fe:	f6 01       	movw	r30, r12
    a800:	80 83       	st	Z, r24
    a802:	fd 01       	movw	r30, r26
    a804:	84 2f       	mov	r24, r20
    a806:	90 e2       	ldi	r25, 0x20	; 32
    a808:	81 11       	cpse	r24, r1
    a80a:	08 c0       	rjmp	.+16     	; 0xa81c <dtoa_prf+0x2e0>
    a80c:	a4 0f       	add	r26, r20
    a80e:	b1 1d       	adc	r27, r1
    a810:	1c 92       	st	X, r1
    a812:	90 e0       	ldi	r25, 0x00	; 0
    a814:	80 e0       	ldi	r24, 0x00	; 0
    a816:	f6 ce       	rjmp	.-532    	; 0xa604 <dtoa_prf+0xc8>
    a818:	81 e3       	ldi	r24, 0x31	; 49
    a81a:	f1 cf       	rjmp	.-30     	; 0xa7fe <dtoa_prf+0x2c2>
    a81c:	91 93       	st	Z+, r25
    a81e:	81 50       	subi	r24, 0x01	; 1
    a820:	f3 cf       	rjmp	.-26     	; 0xa808 <dtoa_prf+0x2cc>
    a822:	91 11       	cpse	r25, r1
    a824:	83 cf       	rjmp	.-250    	; 0xa72c <dtoa_prf+0x1f0>
    a826:	8a cf       	rjmp	.-236    	; 0xa73c <dtoa_prf+0x200>

0000a828 <__ftoa_engine>:
    a828:	28 30       	cpi	r18, 0x08	; 8
    a82a:	08 f0       	brcs	.+2      	; 0xa82e <__ftoa_engine+0x6>
    a82c:	27 e0       	ldi	r18, 0x07	; 7
    a82e:	33 27       	eor	r19, r19
    a830:	da 01       	movw	r26, r20
    a832:	99 0f       	add	r25, r25
    a834:	31 1d       	adc	r19, r1
    a836:	87 fd       	sbrc	r24, 7
    a838:	91 60       	ori	r25, 0x01	; 1
    a83a:	00 96       	adiw	r24, 0x00	; 0
    a83c:	61 05       	cpc	r22, r1
    a83e:	71 05       	cpc	r23, r1
    a840:	39 f4       	brne	.+14     	; 0xa850 <__ftoa_engine+0x28>
    a842:	32 60       	ori	r19, 0x02	; 2
    a844:	2e 5f       	subi	r18, 0xFE	; 254
    a846:	3d 93       	st	X+, r19
    a848:	30 e3       	ldi	r19, 0x30	; 48
    a84a:	2a 95       	dec	r18
    a84c:	e1 f7       	brne	.-8      	; 0xa846 <__ftoa_engine+0x1e>
    a84e:	08 95       	ret
    a850:	9f 3f       	cpi	r25, 0xFF	; 255
    a852:	30 f0       	brcs	.+12     	; 0xa860 <__ftoa_engine+0x38>
    a854:	80 38       	cpi	r24, 0x80	; 128
    a856:	71 05       	cpc	r23, r1
    a858:	61 05       	cpc	r22, r1
    a85a:	09 f0       	breq	.+2      	; 0xa85e <__ftoa_engine+0x36>
    a85c:	3c 5f       	subi	r19, 0xFC	; 252
    a85e:	3c 5f       	subi	r19, 0xFC	; 252
    a860:	3d 93       	st	X+, r19
    a862:	91 30       	cpi	r25, 0x01	; 1
    a864:	08 f0       	brcs	.+2      	; 0xa868 <__ftoa_engine+0x40>
    a866:	80 68       	ori	r24, 0x80	; 128
    a868:	91 1d       	adc	r25, r1
    a86a:	df 93       	push	r29
    a86c:	cf 93       	push	r28
    a86e:	1f 93       	push	r17
    a870:	0f 93       	push	r16
    a872:	ff 92       	push	r15
    a874:	ef 92       	push	r14
    a876:	19 2f       	mov	r17, r25
    a878:	98 7f       	andi	r25, 0xF8	; 248
    a87a:	96 95       	lsr	r25
    a87c:	e9 2f       	mov	r30, r25
    a87e:	96 95       	lsr	r25
    a880:	96 95       	lsr	r25
    a882:	e9 0f       	add	r30, r25
    a884:	ff 27       	eor	r31, r31
    a886:	ee 5b       	subi	r30, 0xBE	; 190
    a888:	fe 4f       	sbci	r31, 0xFE	; 254
    a88a:	99 27       	eor	r25, r25
    a88c:	33 27       	eor	r19, r19
    a88e:	ee 24       	eor	r14, r14
    a890:	ff 24       	eor	r15, r15
    a892:	a7 01       	movw	r20, r14
    a894:	e7 01       	movw	r28, r14
    a896:	05 90       	lpm	r0, Z+
    a898:	08 94       	sec
    a89a:	07 94       	ror	r0
    a89c:	28 f4       	brcc	.+10     	; 0xa8a8 <__ftoa_engine+0x80>
    a89e:	36 0f       	add	r19, r22
    a8a0:	e7 1e       	adc	r14, r23
    a8a2:	f8 1e       	adc	r15, r24
    a8a4:	49 1f       	adc	r20, r25
    a8a6:	51 1d       	adc	r21, r1
    a8a8:	66 0f       	add	r22, r22
    a8aa:	77 1f       	adc	r23, r23
    a8ac:	88 1f       	adc	r24, r24
    a8ae:	99 1f       	adc	r25, r25
    a8b0:	06 94       	lsr	r0
    a8b2:	a1 f7       	brne	.-24     	; 0xa89c <__ftoa_engine+0x74>
    a8b4:	05 90       	lpm	r0, Z+
    a8b6:	07 94       	ror	r0
    a8b8:	28 f4       	brcc	.+10     	; 0xa8c4 <__ftoa_engine+0x9c>
    a8ba:	e7 0e       	add	r14, r23
    a8bc:	f8 1e       	adc	r15, r24
    a8be:	49 1f       	adc	r20, r25
    a8c0:	56 1f       	adc	r21, r22
    a8c2:	c1 1d       	adc	r28, r1
    a8c4:	77 0f       	add	r23, r23
    a8c6:	88 1f       	adc	r24, r24
    a8c8:	99 1f       	adc	r25, r25
    a8ca:	66 1f       	adc	r22, r22
    a8cc:	06 94       	lsr	r0
    a8ce:	a1 f7       	brne	.-24     	; 0xa8b8 <__ftoa_engine+0x90>
    a8d0:	05 90       	lpm	r0, Z+
    a8d2:	07 94       	ror	r0
    a8d4:	28 f4       	brcc	.+10     	; 0xa8e0 <__ftoa_engine+0xb8>
    a8d6:	f8 0e       	add	r15, r24
    a8d8:	49 1f       	adc	r20, r25
    a8da:	56 1f       	adc	r21, r22
    a8dc:	c7 1f       	adc	r28, r23
    a8de:	d1 1d       	adc	r29, r1
    a8e0:	88 0f       	add	r24, r24
    a8e2:	99 1f       	adc	r25, r25
    a8e4:	66 1f       	adc	r22, r22
    a8e6:	77 1f       	adc	r23, r23
    a8e8:	06 94       	lsr	r0
    a8ea:	a1 f7       	brne	.-24     	; 0xa8d4 <__ftoa_engine+0xac>
    a8ec:	05 90       	lpm	r0, Z+
    a8ee:	07 94       	ror	r0
    a8f0:	20 f4       	brcc	.+8      	; 0xa8fa <__ftoa_engine+0xd2>
    a8f2:	49 0f       	add	r20, r25
    a8f4:	56 1f       	adc	r21, r22
    a8f6:	c7 1f       	adc	r28, r23
    a8f8:	d8 1f       	adc	r29, r24
    a8fa:	99 0f       	add	r25, r25
    a8fc:	66 1f       	adc	r22, r22
    a8fe:	77 1f       	adc	r23, r23
    a900:	88 1f       	adc	r24, r24
    a902:	06 94       	lsr	r0
    a904:	a9 f7       	brne	.-22     	; 0xa8f0 <__ftoa_engine+0xc8>
    a906:	84 91       	lpm	r24, Z
    a908:	10 95       	com	r17
    a90a:	17 70       	andi	r17, 0x07	; 7
    a90c:	41 f0       	breq	.+16     	; 0xa91e <__ftoa_engine+0xf6>
    a90e:	d6 95       	lsr	r29
    a910:	c7 95       	ror	r28
    a912:	57 95       	ror	r21
    a914:	47 95       	ror	r20
    a916:	f7 94       	ror	r15
    a918:	e7 94       	ror	r14
    a91a:	1a 95       	dec	r17
    a91c:	c1 f7       	brne	.-16     	; 0xa90e <__ftoa_engine+0xe6>
    a91e:	e8 ee       	ldi	r30, 0xE8	; 232
    a920:	f0 e0       	ldi	r31, 0x00	; 0
    a922:	68 94       	set
    a924:	15 90       	lpm	r1, Z+
    a926:	15 91       	lpm	r17, Z+
    a928:	35 91       	lpm	r19, Z+
    a92a:	65 91       	lpm	r22, Z+
    a92c:	95 91       	lpm	r25, Z+
    a92e:	05 90       	lpm	r0, Z+
    a930:	7f e2       	ldi	r23, 0x2F	; 47
    a932:	73 95       	inc	r23
    a934:	e1 18       	sub	r14, r1
    a936:	f1 0a       	sbc	r15, r17
    a938:	43 0b       	sbc	r20, r19
    a93a:	56 0b       	sbc	r21, r22
    a93c:	c9 0b       	sbc	r28, r25
    a93e:	d0 09       	sbc	r29, r0
    a940:	c0 f7       	brcc	.-16     	; 0xa932 <__ftoa_engine+0x10a>
    a942:	e1 0c       	add	r14, r1
    a944:	f1 1e       	adc	r15, r17
    a946:	43 1f       	adc	r20, r19
    a948:	56 1f       	adc	r21, r22
    a94a:	c9 1f       	adc	r28, r25
    a94c:	d0 1d       	adc	r29, r0
    a94e:	7e f4       	brtc	.+30     	; 0xa96e <__ftoa_engine+0x146>
    a950:	70 33       	cpi	r23, 0x30	; 48
    a952:	11 f4       	brne	.+4      	; 0xa958 <__ftoa_engine+0x130>
    a954:	8a 95       	dec	r24
    a956:	e6 cf       	rjmp	.-52     	; 0xa924 <__ftoa_engine+0xfc>
    a958:	e8 94       	clt
    a95a:	01 50       	subi	r16, 0x01	; 1
    a95c:	30 f0       	brcs	.+12     	; 0xa96a <__ftoa_engine+0x142>
    a95e:	08 0f       	add	r16, r24
    a960:	0a f4       	brpl	.+2      	; 0xa964 <__ftoa_engine+0x13c>
    a962:	00 27       	eor	r16, r16
    a964:	02 17       	cp	r16, r18
    a966:	08 f4       	brcc	.+2      	; 0xa96a <__ftoa_engine+0x142>
    a968:	20 2f       	mov	r18, r16
    a96a:	23 95       	inc	r18
    a96c:	02 2f       	mov	r16, r18
    a96e:	7a 33       	cpi	r23, 0x3A	; 58
    a970:	28 f0       	brcs	.+10     	; 0xa97c <__ftoa_engine+0x154>
    a972:	79 e3       	ldi	r23, 0x39	; 57
    a974:	7d 93       	st	X+, r23
    a976:	2a 95       	dec	r18
    a978:	e9 f7       	brne	.-6      	; 0xa974 <__ftoa_engine+0x14c>
    a97a:	10 c0       	rjmp	.+32     	; 0xa99c <__ftoa_engine+0x174>
    a97c:	7d 93       	st	X+, r23
    a97e:	2a 95       	dec	r18
    a980:	89 f6       	brne	.-94     	; 0xa924 <__ftoa_engine+0xfc>
    a982:	06 94       	lsr	r0
    a984:	97 95       	ror	r25
    a986:	67 95       	ror	r22
    a988:	37 95       	ror	r19
    a98a:	17 95       	ror	r17
    a98c:	17 94       	ror	r1
    a98e:	e1 18       	sub	r14, r1
    a990:	f1 0a       	sbc	r15, r17
    a992:	43 0b       	sbc	r20, r19
    a994:	56 0b       	sbc	r21, r22
    a996:	c9 0b       	sbc	r28, r25
    a998:	d0 09       	sbc	r29, r0
    a99a:	98 f0       	brcs	.+38     	; 0xa9c2 <__ftoa_engine+0x19a>
    a99c:	23 95       	inc	r18
    a99e:	7e 91       	ld	r23, -X
    a9a0:	73 95       	inc	r23
    a9a2:	7a 33       	cpi	r23, 0x3A	; 58
    a9a4:	08 f0       	brcs	.+2      	; 0xa9a8 <__ftoa_engine+0x180>
    a9a6:	70 e3       	ldi	r23, 0x30	; 48
    a9a8:	7c 93       	st	X, r23
    a9aa:	20 13       	cpse	r18, r16
    a9ac:	b8 f7       	brcc	.-18     	; 0xa99c <__ftoa_engine+0x174>
    a9ae:	7e 91       	ld	r23, -X
    a9b0:	70 61       	ori	r23, 0x10	; 16
    a9b2:	7d 93       	st	X+, r23
    a9b4:	30 f0       	brcs	.+12     	; 0xa9c2 <__ftoa_engine+0x19a>
    a9b6:	83 95       	inc	r24
    a9b8:	71 e3       	ldi	r23, 0x31	; 49
    a9ba:	7d 93       	st	X+, r23
    a9bc:	70 e3       	ldi	r23, 0x30	; 48
    a9be:	2a 95       	dec	r18
    a9c0:	e1 f7       	brne	.-8      	; 0xa9ba <__ftoa_engine+0x192>
    a9c2:	11 24       	eor	r1, r1
    a9c4:	ef 90       	pop	r14
    a9c6:	ff 90       	pop	r15
    a9c8:	0f 91       	pop	r16
    a9ca:	1f 91       	pop	r17
    a9cc:	cf 91       	pop	r28
    a9ce:	df 91       	pop	r29
    a9d0:	99 27       	eor	r25, r25
    a9d2:	87 fd       	sbrc	r24, 7
    a9d4:	90 95       	com	r25
    a9d6:	08 95       	ret

0000a9d8 <__ctype_isfalse>:
    a9d8:	99 27       	eor	r25, r25
    a9da:	88 27       	eor	r24, r24

0000a9dc <__ctype_istrue>:
    a9dc:	08 95       	ret

0000a9de <strnlen_P>:
    a9de:	fc 01       	movw	r30, r24
    a9e0:	05 90       	lpm	r0, Z+
    a9e2:	61 50       	subi	r22, 0x01	; 1
    a9e4:	70 40       	sbci	r23, 0x00	; 0
    a9e6:	01 10       	cpse	r0, r1
    a9e8:	d8 f7       	brcc	.-10     	; 0xa9e0 <strnlen_P+0x2>
    a9ea:	80 95       	com	r24
    a9ec:	90 95       	com	r25
    a9ee:	8e 0f       	add	r24, r30
    a9f0:	9f 1f       	adc	r25, r31
    a9f2:	08 95       	ret

0000a9f4 <strcpy>:
    a9f4:	fb 01       	movw	r30, r22
    a9f6:	dc 01       	movw	r26, r24
    a9f8:	01 90       	ld	r0, Z+
    a9fa:	0d 92       	st	X+, r0
    a9fc:	00 20       	and	r0, r0
    a9fe:	e1 f7       	brne	.-8      	; 0xa9f8 <strcpy+0x4>
    aa00:	08 95       	ret

0000aa02 <strnlen>:
    aa02:	fc 01       	movw	r30, r24
    aa04:	61 50       	subi	r22, 0x01	; 1
    aa06:	70 40       	sbci	r23, 0x00	; 0
    aa08:	01 90       	ld	r0, Z+
    aa0a:	01 10       	cpse	r0, r1
    aa0c:	d8 f7       	brcc	.-10     	; 0xaa04 <strnlen+0x2>
    aa0e:	80 95       	com	r24
    aa10:	90 95       	com	r25
    aa12:	8e 0f       	add	r24, r30
    aa14:	9f 1f       	adc	r25, r31
    aa16:	08 95       	ret

0000aa18 <fputc>:
    aa18:	0f 93       	push	r16
    aa1a:	1f 93       	push	r17
    aa1c:	cf 93       	push	r28
    aa1e:	df 93       	push	r29
    aa20:	18 2f       	mov	r17, r24
    aa22:	09 2f       	mov	r16, r25
    aa24:	eb 01       	movw	r28, r22
    aa26:	8b 81       	ldd	r24, Y+3	; 0x03
    aa28:	81 fd       	sbrc	r24, 1
    aa2a:	09 c0       	rjmp	.+18     	; 0xaa3e <fputc+0x26>
    aa2c:	1f ef       	ldi	r17, 0xFF	; 255
    aa2e:	0f ef       	ldi	r16, 0xFF	; 255
    aa30:	81 2f       	mov	r24, r17
    aa32:	90 2f       	mov	r25, r16
    aa34:	df 91       	pop	r29
    aa36:	cf 91       	pop	r28
    aa38:	1f 91       	pop	r17
    aa3a:	0f 91       	pop	r16
    aa3c:	08 95       	ret
    aa3e:	82 ff       	sbrs	r24, 2
    aa40:	14 c0       	rjmp	.+40     	; 0xaa6a <fputc+0x52>
    aa42:	2e 81       	ldd	r18, Y+6	; 0x06
    aa44:	3f 81       	ldd	r19, Y+7	; 0x07
    aa46:	8c 81       	ldd	r24, Y+4	; 0x04
    aa48:	9d 81       	ldd	r25, Y+5	; 0x05
    aa4a:	28 17       	cp	r18, r24
    aa4c:	39 07       	cpc	r19, r25
    aa4e:	3c f4       	brge	.+14     	; 0xaa5e <fputc+0x46>
    aa50:	e8 81       	ld	r30, Y
    aa52:	f9 81       	ldd	r31, Y+1	; 0x01
    aa54:	cf 01       	movw	r24, r30
    aa56:	01 96       	adiw	r24, 0x01	; 1
    aa58:	88 83       	st	Y, r24
    aa5a:	99 83       	std	Y+1, r25	; 0x01
    aa5c:	10 83       	st	Z, r17
    aa5e:	8e 81       	ldd	r24, Y+6	; 0x06
    aa60:	9f 81       	ldd	r25, Y+7	; 0x07
    aa62:	01 96       	adiw	r24, 0x01	; 1
    aa64:	8e 83       	std	Y+6, r24	; 0x06
    aa66:	9f 83       	std	Y+7, r25	; 0x07
    aa68:	e3 cf       	rjmp	.-58     	; 0xaa30 <fputc+0x18>
    aa6a:	e8 85       	ldd	r30, Y+8	; 0x08
    aa6c:	f9 85       	ldd	r31, Y+9	; 0x09
    aa6e:	81 2f       	mov	r24, r17
    aa70:	09 95       	icall
    aa72:	89 2b       	or	r24, r25
    aa74:	a1 f3       	breq	.-24     	; 0xaa5e <fputc+0x46>
    aa76:	da cf       	rjmp	.-76     	; 0xaa2c <fputc+0x14>

0000aa78 <__ultoa_invert>:
    aa78:	fa 01       	movw	r30, r20
    aa7a:	aa 27       	eor	r26, r26
    aa7c:	28 30       	cpi	r18, 0x08	; 8
    aa7e:	51 f1       	breq	.+84     	; 0xaad4 <__ultoa_invert+0x5c>
    aa80:	20 31       	cpi	r18, 0x10	; 16
    aa82:	81 f1       	breq	.+96     	; 0xaae4 <__ultoa_invert+0x6c>
    aa84:	e8 94       	clt
    aa86:	6f 93       	push	r22
    aa88:	6e 7f       	andi	r22, 0xFE	; 254
    aa8a:	6e 5f       	subi	r22, 0xFE	; 254
    aa8c:	7f 4f       	sbci	r23, 0xFF	; 255
    aa8e:	8f 4f       	sbci	r24, 0xFF	; 255
    aa90:	9f 4f       	sbci	r25, 0xFF	; 255
    aa92:	af 4f       	sbci	r26, 0xFF	; 255
    aa94:	b1 e0       	ldi	r27, 0x01	; 1
    aa96:	3e d0       	rcall	.+124    	; 0xab14 <__ultoa_invert+0x9c>
    aa98:	b4 e0       	ldi	r27, 0x04	; 4
    aa9a:	3c d0       	rcall	.+120    	; 0xab14 <__ultoa_invert+0x9c>
    aa9c:	67 0f       	add	r22, r23
    aa9e:	78 1f       	adc	r23, r24
    aaa0:	89 1f       	adc	r24, r25
    aaa2:	9a 1f       	adc	r25, r26
    aaa4:	a1 1d       	adc	r26, r1
    aaa6:	68 0f       	add	r22, r24
    aaa8:	79 1f       	adc	r23, r25
    aaaa:	8a 1f       	adc	r24, r26
    aaac:	91 1d       	adc	r25, r1
    aaae:	a1 1d       	adc	r26, r1
    aab0:	6a 0f       	add	r22, r26
    aab2:	71 1d       	adc	r23, r1
    aab4:	81 1d       	adc	r24, r1
    aab6:	91 1d       	adc	r25, r1
    aab8:	a1 1d       	adc	r26, r1
    aaba:	20 d0       	rcall	.+64     	; 0xaafc <__ultoa_invert+0x84>
    aabc:	09 f4       	brne	.+2      	; 0xaac0 <__ultoa_invert+0x48>
    aabe:	68 94       	set
    aac0:	3f 91       	pop	r19
    aac2:	2a e0       	ldi	r18, 0x0A	; 10
    aac4:	26 9f       	mul	r18, r22
    aac6:	11 24       	eor	r1, r1
    aac8:	30 19       	sub	r19, r0
    aaca:	30 5d       	subi	r19, 0xD0	; 208
    aacc:	31 93       	st	Z+, r19
    aace:	de f6       	brtc	.-74     	; 0xaa86 <__ultoa_invert+0xe>
    aad0:	cf 01       	movw	r24, r30
    aad2:	08 95       	ret
    aad4:	46 2f       	mov	r20, r22
    aad6:	47 70       	andi	r20, 0x07	; 7
    aad8:	40 5d       	subi	r20, 0xD0	; 208
    aada:	41 93       	st	Z+, r20
    aadc:	b3 e0       	ldi	r27, 0x03	; 3
    aade:	0f d0       	rcall	.+30     	; 0xaafe <__ultoa_invert+0x86>
    aae0:	c9 f7       	brne	.-14     	; 0xaad4 <__ultoa_invert+0x5c>
    aae2:	f6 cf       	rjmp	.-20     	; 0xaad0 <__ultoa_invert+0x58>
    aae4:	46 2f       	mov	r20, r22
    aae6:	4f 70       	andi	r20, 0x0F	; 15
    aae8:	40 5d       	subi	r20, 0xD0	; 208
    aaea:	4a 33       	cpi	r20, 0x3A	; 58
    aaec:	18 f0       	brcs	.+6      	; 0xaaf4 <__ultoa_invert+0x7c>
    aaee:	49 5d       	subi	r20, 0xD9	; 217
    aaf0:	31 fd       	sbrc	r19, 1
    aaf2:	40 52       	subi	r20, 0x20	; 32
    aaf4:	41 93       	st	Z+, r20
    aaf6:	02 d0       	rcall	.+4      	; 0xaafc <__ultoa_invert+0x84>
    aaf8:	a9 f7       	brne	.-22     	; 0xaae4 <__ultoa_invert+0x6c>
    aafa:	ea cf       	rjmp	.-44     	; 0xaad0 <__ultoa_invert+0x58>
    aafc:	b4 e0       	ldi	r27, 0x04	; 4
    aafe:	a6 95       	lsr	r26
    ab00:	97 95       	ror	r25
    ab02:	87 95       	ror	r24
    ab04:	77 95       	ror	r23
    ab06:	67 95       	ror	r22
    ab08:	ba 95       	dec	r27
    ab0a:	c9 f7       	brne	.-14     	; 0xaafe <__ultoa_invert+0x86>
    ab0c:	00 97       	sbiw	r24, 0x00	; 0
    ab0e:	61 05       	cpc	r22, r1
    ab10:	71 05       	cpc	r23, r1
    ab12:	08 95       	ret
    ab14:	9b 01       	movw	r18, r22
    ab16:	ac 01       	movw	r20, r24
    ab18:	0a 2e       	mov	r0, r26
    ab1a:	06 94       	lsr	r0
    ab1c:	57 95       	ror	r21
    ab1e:	47 95       	ror	r20
    ab20:	37 95       	ror	r19
    ab22:	27 95       	ror	r18
    ab24:	ba 95       	dec	r27
    ab26:	c9 f7       	brne	.-14     	; 0xab1a <__ultoa_invert+0xa2>
    ab28:	62 0f       	add	r22, r18
    ab2a:	73 1f       	adc	r23, r19
    ab2c:	84 1f       	adc	r24, r20
    ab2e:	95 1f       	adc	r25, r21
    ab30:	a0 1d       	adc	r26, r0
    ab32:	08 95       	ret

0000ab34 <eeprom_read_byte>:
    ab34:	03 d0       	rcall	.+6      	; 0xab3c <eeprom_mapen>
    ab36:	80 81       	ld	r24, Z
    ab38:	99 27       	eor	r25, r25
    ab3a:	08 95       	ret

0000ab3c <eeprom_mapen>:
    ab3c:	fc 01       	movw	r30, r24
    ab3e:	e0 50       	subi	r30, 0x00	; 0
    ab40:	fc 4e       	sbci	r31, 0xEC	; 236
    ab42:	08 95       	ret

0000ab44 <eeprom_read_dword>:
    ab44:	0e 94 9e 55 	call	0xab3c	; 0xab3c <eeprom_mapen>
    ab48:	60 81       	ld	r22, Z
    ab4a:	71 81       	ldd	r23, Z+1	; 0x01
    ab4c:	82 81       	ldd	r24, Z+2	; 0x02
    ab4e:	93 81       	ldd	r25, Z+3	; 0x03
    ab50:	08 95       	ret

0000ab52 <eeprom_read_word>:
    ab52:	0e 94 9e 55 	call	0xab3c	; 0xab3c <eeprom_mapen>
    ab56:	80 81       	ld	r24, Z
    ab58:	91 81       	ldd	r25, Z+1	; 0x01
    ab5a:	08 95       	ret

0000ab5c <__divmodqi4>:
    ab5c:	87 fb       	bst	r24, 7
    ab5e:	08 2e       	mov	r0, r24
    ab60:	06 26       	eor	r0, r22
    ab62:	87 fd       	sbrc	r24, 7
    ab64:	81 95       	neg	r24
    ab66:	67 fd       	sbrc	r22, 7
    ab68:	61 95       	neg	r22
    ab6a:	0e 94 c3 55 	call	0xab86	; 0xab86 <__udivmodqi4>
    ab6e:	0e f4       	brtc	.+2      	; 0xab72 <__divmodqi4_1>
    ab70:	91 95       	neg	r25

0000ab72 <__divmodqi4_1>:
    ab72:	07 fc       	sbrc	r0, 7
    ab74:	81 95       	neg	r24

0000ab76 <__divmodqi4_exit>:
    ab76:	08 95       	ret

0000ab78 <__xload_1>:
    ab78:	57 fd       	sbrc	r21, 7
    ab7a:	03 c0       	rjmp	.+6      	; 0xab82 <__xload_1+0xa>
    ab7c:	5b bf       	out	0x3b, r21	; 59
    ab7e:	67 91       	elpm	r22, Z+
    ab80:	08 95       	ret
    ab82:	60 81       	ld	r22, Z
    ab84:	08 95       	ret

0000ab86 <__udivmodqi4>:
    ab86:	99 1b       	sub	r25, r25
    ab88:	79 e0       	ldi	r23, 0x09	; 9
    ab8a:	04 c0       	rjmp	.+8      	; 0xab94 <__udivmodqi4_ep>

0000ab8c <__udivmodqi4_loop>:
    ab8c:	99 1f       	adc	r25, r25
    ab8e:	96 17       	cp	r25, r22
    ab90:	08 f0       	brcs	.+2      	; 0xab94 <__udivmodqi4_ep>
    ab92:	96 1b       	sub	r25, r22

0000ab94 <__udivmodqi4_ep>:
    ab94:	88 1f       	adc	r24, r24
    ab96:	7a 95       	dec	r23
    ab98:	c9 f7       	brne	.-14     	; 0xab8c <__udivmodqi4_loop>
    ab9a:	80 95       	com	r24
    ab9c:	08 95       	ret

0000ab9e <__do_global_dtors>:
    ab9e:	11 e0       	ldi	r17, 0x01	; 1
    aba0:	c9 e5       	ldi	r28, 0x59	; 89
    aba2:	d1 e0       	ldi	r29, 0x01	; 1
    aba4:	04 c0       	rjmp	.+8      	; 0xabae <__do_global_dtors+0x10>
    aba6:	fe 01       	movw	r30, r28
    aba8:	0e 94 53 4e 	call	0x9ca6	; 0x9ca6 <__tablejump2__>
    abac:	21 96       	adiw	r28, 0x01	; 1
    abae:	cb 35       	cpi	r28, 0x5B	; 91
    abb0:	d1 07       	cpc	r29, r17
    abb2:	c9 f7       	brne	.-14     	; 0xaba6 <__do_global_dtors+0x8>
    abb4:	f8 94       	cli

0000abb6 <__stop_program>:
    abb6:	ff cf       	rjmp	.-2      	; 0xabb6 <__stop_program>
